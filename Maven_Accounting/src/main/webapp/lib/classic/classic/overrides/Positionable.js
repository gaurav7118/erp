Ext.define("Ext.overrides.util.Positionable",{override:"Ext.util.Positionable",anchorTo:function(G,E,B,A,I,J){var F=this,H=!Ext.isEmpty(I),C=function(){F.alignTo(G,E,B,A);Ext.callback(J,F)},D=F.getAnchor();F.removeAnchor();Ext.apply(D,{fn:C,scroll:H});Ext.on("resize",C,null);if(H){Ext.getWin().on("scroll",C,null,{buffer:!isNaN(I)?I:50})}C();return F},getAnchor:function(){var B=this.el,C,A;if(!B.dom){return }C=B.getData();A=C._anchor;if(!A){A=C._anchor={}}return A},removeAnchor:function(){var A=this.getAnchor();if(A&&A.fn){Ext.un("resize",A.fn);if(A.scroll){Ext.getWin().on("scroll",A.fn)}delete A.fn}return this},setBox:function(C,A){var B=this;if(C.isRegion){C={x:C.left,y:C.top,width:C.right-C.left,height:C.bottom-C.top}}if(A){B.constrainBox(C);B.animate(Ext.applyIf({to:C,listeners:{afteranimate:Ext.Function.bind(B.afterSetPosition,B,[C.x,C.y])}},A))}else{B.callParent([C])}return B}})