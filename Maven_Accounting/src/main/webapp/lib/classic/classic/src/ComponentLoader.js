Ext.define("Ext.ComponentLoader",{extend:"Ext.ElementLoader",statics:{Renderer:{Data:function(A,B,D){var E=true;try{A.getTarget().update(Ext.decode(B.responseText))}catch(C){E=false}return E},Component:function(A,C,F){var G=true,E=A.getTarget(),B=[];if(!E.isContainer){Ext.raise({target:E,msg:"Components can only be loaded into a container"})}try{B=Ext.decode(C.responseText)}catch(D){G=false}if(G){E.suspendLayouts();if(F.removeAll){E.removeAll()}E.add(B);E.resumeLayouts(true)}return G}}},target:null,loadOnRender:false,loadMask:false,renderer:"html",setTarget:function(B){var A=this;if(Ext.isString(B)){B=Ext.getCmp(B)}if(A.target&&A.target!==B){A.abort()}A.target=B;if(B&&A.loadOnRender){if(B.rendered){A.doLoadOnRender()}else{A.mon(B,"render",A.doLoadOnRender,A)}}},doLoadOnRender:function(){var A=this.loadOnRender;this.load(Ext.isObject(A)?A:null)},removeMask:function(){this.target.setLoading(false)},addMask:function(A){this.target.setLoading(A)},setOptions:function(B,A){B.removeAll=Ext.isDefined(A.removeAll)?A.removeAll:this.removeAll;B.rendererScope=A.rendererScope||this.rendererScope||this.target},getRenderer:function(B){if(Ext.isFunction(B)){return B}var A=this.statics().Renderer;switch(B){case"component":return A.Component;case"data":return A.Data;default:return Ext.ElementLoader.Renderer.Html}}})