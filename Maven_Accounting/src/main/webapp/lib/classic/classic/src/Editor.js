Ext.define("Ext.Editor",{extend:"Ext.container.Container",xtype:"editor",requires:["Ext.layout.container.Editor"],layout:"editor",allowBlur:true,revertInvalid:true,value:"",alignment:"c-c?",offsets:[0,0],shadow:"frame",constrain:false,swallowKeys:true,completeOnEnter:true,cancelOnEsc:true,updateEl:false,focusOnToFront:false,baseCls:Ext.baseCSSPrefix+"editor",editing:false,preventDefaultAlign:true,specialKeyDelay:1,initComponent:function(){var A=this,B=A.field=Ext.ComponentManager.create(A.field||{},"textfield");B.msgTarget=B.msgTarget||"qtip";A.mon(B,{scope:A,specialkey:A.onSpecialKey});if(B.grow){A.mon(B,"autosize",A.onFieldAutosize,A,{delay:1})}A.floating={constrain:A.constrain};A.items=B;A.callParent(arguments)},onAdded:function(A){this.ownerCmp=A},onFieldAutosize:function(){this.updateLayout()},afterRender:function(B,A){var C=this,E=C.field,D=E.inputEl;C.callParent(arguments);if(D){D.dom.name="";if(C.swallowKeys){D.swallowEvent(["keypress","keydown"])}}},onSpecialKey:function(G,F){var E=this,C=F.getKey(),A=E.completeOnEnter&&C===F.ENTER,D=E.cancelOnEsc&&C===F.ESC,B=E.specialKeyTask;if(A||D){F.stopEvent();if(!B){E.specialKeyTask=B=new Ext.util.DelayedTask()}B.delay(E.specialKeyDelay,A?E.completeEdit:E.cancelEdit,E);if(E.specialKeyDelay===0){B.cancel();if(A){E.completeEdit()}else{E.cancelEdit()}}}E.fireEvent("specialkey",E,G,F)},startEdit:function(C,E,A){var D=this,F=D.field,H,B,G;D.completeEdit();D.boundEl=Ext.get(C);H=D.boundEl.dom;E=Ext.isDefined(E)?E:Ext.String.trim(H.textContent||H.innerText||H.innerHTML);if(D.fireEvent("beforestartedit",D,D.boundEl,E)!==false){Ext.suspendLayouts();if(!D.rendered){B=D.ownerCt;G=D.renderTo||(B&&B.getEl())||Ext.getBody();Ext.fly(G).position();D.renderTo=G}D.startValue=E;D.show();D.realign(true);F.suspendEvents();F.setValue(E);F.resetOriginalValue();F.resumeEvents();if(A!==false){F.focus(F.selectOnFocus?true:[Number.MAX_VALUE])}if(F.autoSize){F.autoSize()}Ext.resumeLayouts(true);D.toggleBoundEl(false);D.editing=true}},realign:function(A){var B=this;if(A===true){B.updateLayout()}B.alignTo(B.boundEl,B.alignment,B.offsets)},completeEdit:function(A){var C=this,E=C.field,B=C.startValue,D;if(!C.editing){return }if(E.assertValue){E.assertValue()}D=C.getValue();if(!E.isValid()){if(C.revertInvalid!==false){C.cancelEdit(A)}return }if(C.ignoreNoChange&&!E.didValueChange(D,B)){C.onEditComplete(A);return }if(C.fireEvent("beforecomplete",C,D,B)!==false){D=C.getValue();if(C.updateEl&&C.boundEl){C.boundEl.setHtml(D)}C.onEditComplete(A);C.fireEvent("complete",C,D,B)}},onShow:function(){var A=this;A.callParent(arguments);A.fireEvent("startedit",A,A.boundEl,A.startValue)},cancelEdit:function(A){var C=this,B=C.startValue,E=C.field,D;if(C.editing){if(E){D=C.editedValue=C.getValue();E.suspendEvents();C.setValue(B);E.resumeEvents()}C.onEditComplete(A);C.fireEvent("canceledit",C,D,B);delete C.editedValue}},onEditComplete:function(A){this.editing=false;if(A!==true){this.hide();this.toggleBoundEl(true)}},onFocusLeave:function(B){var A=this;if(A.allowBlur===true&&A.editing){A.completeEdit()}A.callParent([B])},onHide:function(){var A=this,B=A.field;if(A.editing){A.completeEdit()}else{if(B.collapse){B.collapse()}}A.callParent(arguments)},getValue:function(){return this.field.getValue()},setValue:function(A){this.field.setValue(A)},toggleBoundEl:function(A){if(this.hideEl!==false){this.boundEl.setVisible(A)}},beforeDestroy:function(){var B=this,A=B.specialKeyTask;if(A){A.cancel()}B.specialKeyTask=B.field=B.boundEl=Ext.destroy(B.field);B.callParent(arguments)}})