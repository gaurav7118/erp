Ext.define("Ext.ProgressBar",{extend:"Ext.Component",xtype:"progressbar",mixins:["Ext.ProgressBase"],requires:["Ext.Template","Ext.CompositeElement","Ext.TaskManager","Ext.layout.component.ProgressBar"],uses:["Ext.fx.Anim"],baseCls:Ext.baseCSSPrefix+"progress",animate:false,text:"",waitTimer:null,childEls:["bar"],defaultBindProperty:"value",renderTpl:['<tpl if="internalText">','<div class="{baseCls}-text {baseCls}-text-back">{text}</div>',"</tpl>",'<div id="{id}-bar" data-ref="bar" class="{baseCls}-bar {baseCls}-bar-{ui}" role="presentation" style="width:{percentage}%">','<tpl if="internalText">','<div class="{baseCls}-text">',"<div>{text}</div>","</div>","</tpl>","</div>"],componentLayout:"progressbar",ariaRole:"progressbar",initRenderData:function(){var A=this,B=A.value||0;return Ext.apply(A.callParent(),{internalText:!A.hasOwnProperty("textEl"),text:A.text||"&#160;",percentage:B*100})},onRender:function(){var A=this;A.callParent(arguments);if(A.textEl){A.textEl=Ext.get(A.textEl);A.updateText(A.text)}else{A.textEl=A.el.select("."+A.baseCls+"-text")}},updateValue:function(A){this.updateProgress(A,Math.round(A*100)+"%")},updateProgress:function(E,F,A){E=E||0;var D=this,B=D.value,C=D.getTextTpl();D.value=E||(E=0);if(F!=null){D.updateText(F)}else{if(C){D.updateText(C.apply({value:E,percent:E*100}))}}if(D.rendered&&!D.destroyed){if(A===true||(A!==false&&D.animate)){D.bar.stopAnimation();D.bar.animate(Ext.apply({from:{width:(B*100)+"%"},to:{width:(E*100)+"%"}},D.animate))}else{D.bar.setStyle("width",(E*100)+"%")}}D.fireEvent("update",D,E,F);return D},updateText:function(B){var A=this;A.text=B;if(A.rendered){A.textEl.setHtml(A.text)}return A},applyText:function(A){this.updateText(A)},getText:function(){return this.text},wait:function(C){var B=this,A;if(!B.waitTimer){A=B;C=C||{};B.updateText(C.text);B.waitTimer=Ext.TaskManager.start({run:function(D){var E=C.increment||10;D-=1;B.updateProgress(((((D+E)%E)+1)*(100/E))*0.01,null,C.animate)},interval:C.interval||1000,duration:C.duration,onStop:function(){if(C.fn){C.fn.apply(C.scope||B)}B.reset()},scope:A})}return B},isWaiting:function(){return this.waitTimer!==null},reset:function(A){var B=this;B.updateProgress(0);B.clearTimer();if(A===true){B.hide()}return B},clearTimer:function(){var A=this;if(A.waitTimer){A.waitTimer.onStop=null;Ext.TaskManager.stop(A.waitTimer);A.waitTimer=null}},onDestroy:function(){var B=this,A=B.bar;B.clearTimer();if(B.rendered){if(B.textEl.isComposite){B.textEl.clear()}Ext.destroyMembers(B,"textEl","progressBar");if(A&&B.animate){A.stopAnimation()}}B.callParent()}})