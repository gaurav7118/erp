Ext.define("Ext.button.Cycle",{alias:"widget.cycle",extend:"Ext.button.Split",alternateClassName:"Ext.CycleButton",getButtonText:function(B){var A=this,C="";if(B&&A.showText===true){if(A.prependText){C+=A.prependText}C+=B.text;return C}return A.text},setActiveItem:function(F,A){var E=this,B=E.changeHandler,D=E.forceIcon,C=E.forceGlyph;E.settingActive=true;if(!Ext.isObject(F)){F=E.menu.getComponent(F)}if(F){E.setText(E.getButtonText(F));E.setIconCls(D?D:F.iconCls);E.setGlyph(C?C:F.glyph);E.activeItem=F;if(!F.checked){F.setChecked(true,false)}if(!A){if(B){Ext.callback(B,E.scope,[E,F],0,E)}E.fireEvent("change",E,F)}}E.settingActive=false},getActiveItem:function(){return this.activeItem},initComponent:function(){if(Ext.enableAriaButtons&&!Ext.slicer){Ext.log.warn("Using Cycle buttons is not recommended in accessible applications, because their behavior conflicts with accessibility best practices. See WAI-ARIA 1.0 Authoring guide: http://www.w3.org/TR/wai-aria-practices/#menubutton")}var F=this,E=0,B,C,A,D;B=(F.menu.items||[]).concat(F.items||[]);F.menu=Ext.applyIf({cls:Ext.baseCSSPrefix+"cycle-menu",items:[]},F.menu);A=B.length;for(C=0;C<A;C++){D=B[C];D=Ext.applyIf({group:F.id,itemIndex:C,checkHandler:F.checkHandler,scope:F,checked:D.checked||false},D);F.menu.items.push(D);if(D.checked){E=C}}F.itemCount=F.menu.items.length;F.callParent(arguments);F.on("click",F.toggleSelected,F);F.setActiveItem(E,true)},checkHandler:function(A,B){if(B&&!this.settingActive){this.setActiveItem(A)}},toggleSelected:function(){var C=this,A=C.menu,B;B=C.activeItem.next(":not([disabled])")||A.items.getAt(0);B.setChecked(true)}})