Ext.define("Ext.form.field.Display",{extend:"Ext.form.field.Base",alias:"widget.displayfield",requires:["Ext.util.Format","Ext.XTemplate"],alternateClassName:["Ext.form.DisplayField","Ext.form.Display"],fieldSubTpl:['<div id="{id}" data-ref="inputEl" tabindex="-1" role="textbox" aria-readonly="true"',' aria-labelledby="{cmpId}-labelEl" {inputAttrTpl}','<tpl if="fieldStyle"> style="{fieldStyle}"</tpl>',' class="{fieldCls} {fieldCls}-{ui}">{value}</div>',{compiled:true,disableFormats:true}],ariaRole:undefined,focusable:false,readOnly:true,fieldCls:Ext.baseCSSPrefix+"form-display-field",fieldBodyCls:Ext.baseCSSPrefix+"form-display-field-body",htmlEncode:false,noWrap:false,validateOnChange:false,initEvents:Ext.emptyFn,submitValue:false,getValue:function(){return this.value},valueToRaw:function(A){if(A||A===0||A===false){return A}else{return""}},isDirty:function(){return false},isValid:Ext.returnTrue,validate:Ext.returnTrue,getRawValue:function(){return this.rawValue},setRawValue:function(B){var A=this;B=Ext.valueFrom(B,"");A.rawValue=B;if(A.rendered){A.inputEl.dom.innerHTML=A.getDisplayValue();A.updateLayout()}return B},getDisplayValue:function(){var A=this,B=this.getRawValue(),C;if(A.renderer){C=A.renderer.call(A.scope||A,B,A)}else{C=A.htmlEncode?Ext.util.Format.htmlEncode(B):B}return C},getSubTplData:function(B){var A=this.callParent(arguments);A.value=this.getDisplayValue();return A}})