Ext.define("Ext.fx.Manager",{singleton:true,requires:["Ext.util.MixedCollection","Ext.util.TaskRunner","Ext.fx.target.Element","Ext.fx.target.ElementCSS","Ext.fx.target.CompositeElement","Ext.fx.target.CompositeElementCSS","Ext.fx.target.Sprite","Ext.fx.target.CompositeSprite","Ext.fx.target.Component"],mixins:{queue:"Ext.fx.Queue"},constructor:function(){var A=this;A.items=new Ext.util.MixedCollection();A.targetArr={};A.mixins.queue.constructor.call(A);A.taskRunner=new Ext.util.TaskRunner()},interval:16,forceJS:true,createTarget:function(D){var B=this,C=!B.forceJS&&Ext.supports.Transitions,A;B.useCSS3=C;if(D){if(D.tagName||Ext.isString(D)||D.isFly){D=Ext.get(D);A=new Ext.fx.target["Element"+(C?"CSS":"")](D)}else{if(D.dom){A=new Ext.fx.target["Element"+(C?"CSS":"")](D)}else{if(D.isComposite){A=new Ext.fx.target["CompositeElement"+(C?"CSS":"")](D)}else{if(D.isSprite){A=new Ext.fx.target.Sprite(D)}else{if(D.isCompositeSprite){A=new Ext.fx.target.CompositeSprite(D)}else{if(D.isComponent){A=new Ext.fx.target.Component(D)}else{if(D.isAnimTarget){return D}else{return null}}}}}}}B.targets.add(A);return A}else{return null}},addAnim:function(D){var C=this,B=C.items,A=C.task;B.add(D.id,D);if(!A&&B.length){A=C.task={run:C.runner,interval:C.interval,scope:C};C.taskRunner.start(A)}},removeAnim:function(D){var C=this,B=C.items,A=C.task;B.removeAtKey(D.id);if(A&&!B.length){C.taskRunner.stop(A);delete C.task}},runner:function(){var D=this,B=D.items.getRange(),C=0,A=B.length,E;D.targetArr={};D.timestamp=new Date();for(;C<A;C++){E=B[C];if(E.isReady()){D.startAnim(E)}}for(C=0;C<A;C++){E=B[C];if(E.isRunning()){D.runAnim(E)}}D.applyPendingAttrs();D.targetArr=null},startAnim:function(A){A.start(this.timestamp)},runAnim:function(E,A){if(!E){return }var D=this,G=D.useCSS3&&E.target.type==="element",B=D.timestamp-E.startTime,C=(B>=E.duration),F,H;if(A){B=E.duration;C=true}F=this.collectTargetData(E,B,G,C);if(G){E.target.setAttr(F.anims[E.id].attributes,true);D.collectTargetData(E,E.duration,G,C);E.paused=true;F=E.target.target;if(E.target.isComposite){F=E.target.target.last()}H={};H[Ext.supports.CSS3TransitionEnd]=E.lastFrame;H.scope=E;H.single=true;F.on(H)}return F},jumpToEnd:function(C){var B=this,D,A;if(!B.targetArr){B.targetArr={};A=true}D=B.runAnim(C,true);B.applyAnimAttrs(D,D.anims[C.id]);if(A){B.targetArr=null}},collectTargetData:function(C,A,E,F){var B=C.target.getId(),D=this.targetArr[B];if(!D){D=this.targetArr[B]={id:B,el:C.target,anims:{}}}D.anims[C.id]={id:C.id,anim:C,elapsed:A,isLastFrame:F,attributes:[{duration:C.duration,easing:(E&&C.reverse)?C.easingFn.reverse().toCSS3():C.easing,attrs:C.runAnim(A)}]};return D},applyAnimAttrs:function(C,A){var B=A.anim;if(A.attributes&&B.isRunning()){C.el.setAttr(A.attributes,false,A.isLastFrame);if(A.isLastFrame){B.lastFrame()}}},applyPendingAttrs:function(){var E=this.targetArr,F,C,B,D,A;for(C in E){if(E.hasOwnProperty(C)){F=E[C];for(A in F.anims){if(F.anims.hasOwnProperty(A)){B=F.anims[A];D=B.anim;if(B.attributes&&D.isRunning()){F.el.setAttr(B.attributes,false,B.isLastFrame);if(B.isLastFrame){D.lastFrame()}}}}}}}})