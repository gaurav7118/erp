Ext.define("Ext.grid.CellContext",{isCellContext:true,constructor:function(A){this.view=A},setPosition:function(C,A){var B=this;if(arguments.length===1){if(C.length){A=C[0];C=C[1]}else{if(C.isCellContext){return B.setAll(C.view,C.rowIdx,C.colIdx,C.record,C.columnHeader)}else{if(C.view){B.view=C.view}A=C.column;C=C.row}}}B.setRow(C);B.setColumn(A);return B},setAll:function(B,C,D,A,F){var E=this;E.view=B;E.rowIdx=C;E.colIdx=D;E.record=A;E.column=F;return E},setRow:function(C){var A=this,B=A.view.dataSource;if(C!==undefined){if(typeof C==="number"){A.rowIdx=Math.max(Math.min(C,B.getCount()-1),0);A.record=B.getAt(C)}else{if(C.isModel){A.record=C;A.rowIdx=B.indexOf(C)}else{if(C.tagName||C.isElement){A.record=A.view.getRecord(C);A.rowIdx=B.indexOf(A.record)}}}}return A},setColumn:function(A){var C=this,B=C.view.getVisibleColumnManager();if(A!==undefined){if(typeof A==="number"){C.colIdx=A;C.column=B.getHeaderAtIndex(A)}else{if(A.isHeader){C.column=A;C.colIdx=B.indexOf(A)}}}return C},getCell:function(A){return this.view.getCellByPosition(this,A)},getRow:function(B){var A=this.view.getRow(this.record);return B?A:Ext.get(A)},getNode:function(B){var A=this.view.getNode(this.record);return B?A:Ext.get(A)},isEqual:function(A){return(A&&A.isCellContext&&A.record===this.record&&A.column===this.column)},clone:function(){var B=this,A=new B.self(B.view);A.rowIdx=B.rowIdx;A.colIdx=B.colIdx;A.record=B.record;A.column=B.column;return A},privates:{isFirstColumn:function(){var A=this.getCell(true);if(A){return !A.previousSibling}},isLastColumn:function(){var A=this.getCell(true);if(A){return !A.nextSibling}},getLastColumnIndex:function(){var A=this.getRow(true);if(A){return A.lastChild.cellIndex}return -1},navigate:function(C){var B=this,A=B.view.getVisibleColumnManager().getColumns();switch(C){case -1:do{if(!B.colIdx){B.colIdx=A.length-1}else{B.colIdx--}B.setColumn(B.colIdx)}while(!B.getCell(true));break;case 1:do{if(B.colIdx>=A.length){B.colIdx=0}else{B.colIdx++}B.setColumn(B.colIdx)}while(!B.getCell(true));break}}},statics:{compare:function(B,A){return B.rowIdx-A.rowIdx||B.colIdx-A.colIdx}}})