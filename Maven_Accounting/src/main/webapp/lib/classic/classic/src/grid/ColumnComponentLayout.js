Ext.define("Ext.grid.ColumnComponentLayout",{extend:"Ext.layout.component.Auto",alias:"layout.columncomponent",type:"columncomponent",setWidthInDom:true,_paddingReset:{paddingTop:"",paddingBottom:""},columnAutoCls:Ext.baseCSSPrefix+"column-header-text-container-auto",beginLayout:function(A){this.callParent(arguments);A.titleContext=A.getEl("titleEl")},beginLayoutCycle:function(C){var B=this,A=B.owner,D=C.widthModel.shrinkWrap;B.callParent(arguments);if(D){A.el.setWidth("")}A.textContainerEl[D&&!A.isGroupHeader?"addCls":"removeCls"](B.columnAutoCls);A.titleEl.setStyle(B._paddingReset)},publishInnerHeight:function(D,C){var B=this,A=B.owner,E;if(A.getRootHeaderCt().hiddenHeaders){D.setProp("innerHeight",0);return }if(!D.hasRawContent){if(A.headerWrap&&!D.hasDomProp("width")){B.done=false;return }E=C-D.getBorderInfo().height;D.setProp("innerHeight",E-A.titleEl.getHeight(),false)}},measureContentHeight:function(A){return A.el.dom.offsetHeight},publishInnerWidth:function(A,B){if(!A.hasRawContent){A.setProp("innerWidth",B-A.getBorderInfo().width,false)}},calculateOwnerHeightFromContentHeight:function(D,C){var B=this.callParent(arguments),A=this.owner;if(!D.hasRawContent){if(!A.headerWrap||D.hasDomProp("width")){return C+A.titleEl.getHeight()+D.getBorderInfo().height}return null}return B},calculateOwnerWidthFromContentWidth:function(F,B){var A=this.owner,E=F.getPaddingInfo().width,D=this.getTriggerOffset(A,F),C;if(A.isGroupHeader){C=B}else{C=Math.max(B,A.textEl.getWidth()+F.titleContext.getPaddingInfo().width)}return C+E+D},getTriggerOffset:function(A,C){var B=0;if(C.widthModel.shrinkWrap&&!A.menuDisabled){if(A.query(">:not([hidden])").length===0){B=A.getTriggerElWidth()}}return B}})