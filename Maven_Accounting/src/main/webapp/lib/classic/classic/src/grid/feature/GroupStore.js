Ext.define("Ext.grid.feature.GroupStore",{extend:"Ext.util.Observable",isStore:true,defaultViewSize:100,isFeatureStore:true,badGrouperKey:"[object Object]",constructor:function(C,A){var B=this;B.callParent();B.groupingFeature=C;B.bindStore(A);if(!C.grid.isLocked){B.bindViewStoreListeners()}},bindStore:function(A){var B=this;if(!A||B.store!==A){Ext.destroy(B.storeListeners);B.store=null}if(A){B.storeListeners=A.on({groupchange:B.onGroupChange,remove:B.onRemove,add:B.onAdd,idchanged:B.onIdChanged,update:B.onUpdate,refresh:B.onRefresh,clear:B.onClear,scope:B,destroyable:true});B.store=A;B.processStore(A)}},bindViewStoreListeners:function(){var A=this.groupingFeature.view,B=A.getStoreListeners();B.scope=A;this.on(B)},processStore:function(F){var V=this,M=V.groupingFeature,Q=M.startCollapsed,X=V.data,A=Ext.Array,D=A.indexOf,W=A.splice,S=F.getGroups(),E=S?S.length:0,U=F.getGroupField(),I=S&&A.unique(Ext.Object.getValues(S.itemGroupKeys)),C=false,T=M.getCache(),R,B,O,P,H,G,K,N,Y,L,J;M.invalidateCache();B=M.getCache();if(T.map){B.map=T.map}if(X){X.clear()}else{X=V.data=new Ext.util.Collection({rootProperty:"data",extraKeys:{byInternalId:{property:"internalId",rootProperty:""}}})}if(F.getCount()){M.startCollapsed=false;if(E>0){J=F.getModel();for(O=0;O<E;O++){G=S.getAt(O);Y=G.getGroupKey();if(V.badGrouperKey===Y&&(H=M.getGrouper(U))){M.startCollapsed=Q;F.group(H);return }R=B[Y]=T[Y]||M.getMetaGroup(Y);W(I,D(I,Y),1);C=R.isCollapsed=Q||R.isCollapsed;if(C){L={};L[U]=Y;R.placeholder=N=new J(L);N.isNonData=N.isCollapsedPlaceholder=true;N.group=G;X.add(N)}else{X.insert(V.data.length,G.items)}}if(I.length){for(O=0,P=I.length;O<P;O++){K=I[O];B[K]=T[K]}}T=null}else{X.add(F.getRange())}}},isCollapsed:function(A){return this.groupingFeature.getCache()[A].isCollapsed},isLoading:function(){return false},getData:function(){return this.data},getCount:function(){return this.data.getCount()},getTotalCount:function(){return this.data.getCount()},rangeCached:function(B,A){return A<this.getCount()},getRange:function(D,B,C){var A=this.data.getRange(D,Ext.isNumber(B)?B+1:B);if(C&&C.callback){C.callback.call(C.scope||this,A,D,B,C)}return A},getAt:function(A){return this.data.getAt(A)},getById:function(A){return this.store.getById(A)},getByInternalId:function(A){return this.store.getByInternalId(A)||this.data.byInternalId.get(A)},expandGroup:function(F){var D=this,E=D.groupingFeature,B,G,C,A;if(typeof F==="string"){F=E.getGroup(F)}if(F){A=F.items;B=E.getMetaGroup(F);G=B.placeholder}if(A.length&&(C=D.data.indexOf(G))!==-1){B.isCollapsed=false;D.isExpandingOrCollapsing=1;D.data.removeAt(C);D.data.insert(C,F.items);D.fireEvent("replace",D,C,[G],F.items);D.fireEvent("groupexpand",D,F);D.isExpandingOrCollapsing=0}},collapseGroup:function(F){var D=this,E=D.groupingFeature,C,G,A,B;if(typeof F==="string"){F=E.getGroup(F)}if(F){B=F.items}if(B&&(A=B.length)&&(C=D.data.indexOf(B[0]))!==-1){E.getMetaGroup(F).isCollapsed=true;D.isExpandingOrCollapsing=2;D.data.removeAt(C,A);D.data.insert(C,G=D.getGroupPlaceholder(F));D.fireEvent("replace",D,C,B,[G]);D.fireEvent("groupcollapse",D,F);D.isExpandingOrCollapsing=0}},getGroupPlaceholder:function(E){var B=this.groupingFeature.getMetaGroup(E);if(!B.placeholder){var A=this.store,G=A.getModel(),D={},C=E.getGroupKey(),F;D[A.getGroupField()]=C;F=B.placeholder=new G(D);F.isNonData=F.isCollapsedPlaceholder=true;F.groupKey=C}return B.placeholder},indexOf:function(A){var B=-1;if(!A.isCollapsedPlaceholder){B=this.data.indexOf(A)}return B},contains:function(A){return this.indexOf(A)>-1},indexOfPlaceholder:function(A){return this.data.indexOf(A)},indexOfId:function(A){return this.data.indexOfKey(A)},indexOfTotal:function(A){return this.store.indexOf(A)},onAdd:function(A){var B=this;B.processStore(B.store);B.fireEvent("refresh",B);return false},onClear:function(B,A,D){var C=this;C.processStore(C.store);C.fireEvent("clear",C)},onIdChanged:function(A,D,C,B){this.data.updateKey(D,C)},onRefresh:function(){this.processStore(this.store);this.fireEvent("refresh",this)},onRemove:function(){var A=this;A.processStore(A.store);A.fireEvent("refresh",A);return false},onUpdate:function(J,F,C,E){var I=this,A=I.groupingFeature,K,D,H,B,G;if(J.isGrouped()){K=F.group=A.getGroup(F);if(K){D=A.getMetaGroup(F);if(E&&Ext.Array.contains(E,A.getGroupField())){return I.onRefresh(I.store)}if(D.isCollapsed){I.fireEvent("update",I,D.placeholder)}else{Ext.suspendLayouts();I.fireEvent("update",I,F,C,E);G=K.items;H=G[0];B=G[G.length-1];if(H!==F){H.group=K;I.fireEvent("update",I,H,"edit",E);delete H.group}if(B!==F&&B!==H&&A.showSummaryRow){B.group=K;I.fireEvent("update",I,B,"edit",E);delete B.group}Ext.resumeLayouts(true)}}delete F.group}else{I.fireEvent("update",I,F,C,E)}},onGroupChange:function(B,A){if(!A){this.processStore(B)}this.fireEvent("groupchange",B,A)},destroy:function(){var A=this;A.bindStore(null);Ext.destroyMembers(A,"data","groupingFeature");A.callParent()}})