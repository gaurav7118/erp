Ext.define("Ext.grid.filters.Filters",{extend:"Ext.plugin.Abstract",requires:["Ext.grid.filters.filter.*"],mixins:["Ext.util.StoreHolder"],alias:"plugin.gridfilters",pluginId:"gridfilters",defaultFilterTypes:{"boolean":"boolean","int":"number",date:"date",number:"number"},filterCls:Ext.baseCSSPrefix+"grid-filters-filtered-column",menuFilterText:"Filters",showMenu:true,stateId:undefined,init:function(B){var C=this,A,D;Ext.Assert.falsey(C.grid);C.grid=B;B.filters=C;if(C.grid.normalGrid){C.isLocked=true}B.clearFilters=C.clearFilters.bind(C);A=B.store;D=B.headerCt;D.on({scope:C,add:C.onAdd,menucreate:C.onMenuCreate});B.on({scope:C,destroy:C.onGridDestroy,reconfigure:C.onReconfigure});C.bindStore(A);if(B.stateful){A.statefulFilters=true}C.initColumns()},initColumns:function(){var E=this.grid,B=E.getStore(),D=E.columnManager.getColumns(),A=D.length,C,G,F,H;for(C=0;C<A;C++){G=D[C];F=G.filter;if(F&&!F.isGridFilter){if(!H){H=B.getFilters();H.beginUpdate()}this.createColumnFilter(G)}}if(H){H.endUpdate()}},createColumnFilter:function(E){var F=this,A=E.filter,D={column:E,grid:F.grid,owner:F},G,B,C;if(Ext.isString(A)){D.type=A}else{Ext.apply(D,A)}if(!D.type){B=F.store.getModel();G=B&&B.getField(E.dataIndex);C=G&&G.type;D.type=(C&&F.defaultFilterTypes[C])||E.defaultFilterType||"string"}E.filter=Ext.Factory.gridFilter(D)},onAdd:function(D,C,A){var B=C.filter;if(B&&!B.isGridFilter){this.createColumnFilter(C)}},onMenuCreate:function(B,A){A.on({beforeshow:this.onMenuBeforeShow,scope:this})},onMenuBeforeShow:function(F){var E=this,C,B,D,A;if(E.showMenu){if(!E.filterMenuItem){E.filterMenuItem={}}D=F.up("tablepanel");A=D.id;C=E.filterMenuItem[A];if(!C||C.destroyed){C=E.createMenuItem(F,A)}E.activeFilterMenuItem=C;B=E.getMenuFilter(D.headerCt);if(B){B.showMenu(C)}C.setVisible(!!B);E.sep.setVisible(!!B)}},createMenuItem:function(D,A){var C=this,B;C.sep=D.add("-");B=D.add({checked:false,itemId:"filters",text:C.menuFilterText,listeners:{scope:C,checkchange:C.onCheckChange}});return(C.filterMenuItem[A]=B)},onGridDestroy:function(){var C=this,A=C.filterMenuItem,B;C.bindStore(null);C.sep=Ext.destroy(C.sep);for(B in A){A[B].destroy()}C.grid=null},onUnbindStore:function(A){A.getFilters().un("remove",this.onFilterRemove,this)},onBindStore:function(A,B,C){this.local=!A.getRemoteFilter();A.getFilters().on("remove",this.onFilterRemove,this)},onFilterRemove:function(H,F){var B=F.items.length,A=this.grid.columnManager,C,E,G,D;for(C=0;C<B;C++){E=F.items[C];G=A.getHeaderByDataIndex(E.getProperty());if(G){D=G.filter;if(!D||!D.menu||E.getId().indexOf(D.getBaseIdPrefix())===-1){continue}if(!D.preventFilterRemoval){D.onFilterRemove(E.getOperator())}}}},getMenuFilter:function(A){return A.getMenu().activeHeader.filter},onCheckChange:function(C,D){var B=this.isLocked?C.up("tablepanel"):this.grid,A=this.getMenuFilter(B.headerCt);A.setActive(D)},getHeaders:function(){return this.grid.view.headerCt.columnManager.getColumns()},isStateful:function(){return this.grid.stateful},addFilter:function(C){var H=this,A=H.grid,J=H.store,D=false,K=true,I,E,F,G,B,L;if(!Ext.isArray(C)){C=[C]}for(F=0,G=C.length;F<G;F++){B=C[F];I=B.dataIndex;E=A.columnManager.getHeaderByDataIndex(I);if(E){D=true;if(B.value){K=false}L=E.filter;if(L&&L.isGridFilter){L.deactivate();L.destroy();if(H.activeFilterMenuItem){H.activeFilterMenuItem.menu=null}}E.filter=B}}if(D){J.suppressNextFilter=K;H.initColumns();J.suppressNextFilter=false}},addFilters:function(A){if(A){this.addFilter(A)}},clearFilters:function(){var E=this.grid,D=E.columnManager.getColumns(),B=E.store,G,F,C,A,H;for(C=0,A=D.length;C<A;C++){G=D[C];F=G.filter;if(F&&F.isGridFilter){if(!H){H=B.getFilters();H.beginUpdate()}F.setActive(false)}}if(H){H.endUpdate()}},onReconfigure:function(E,A,D,F){var C=this.filterMenuItem,B;for(B in C){C[B].setMenu(null)}if(A&&F!==A){this.bindStore(A)}}})