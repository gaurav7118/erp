Ext.define("Ext.grid.filters.filter.Base",{mixins:["Ext.mixin.Factoryable"],factoryConfig:{type:"grid.filter"},$configPrefixed:false,$configStrict:false,config:{itemDefaults:null,menuDefaults:{xtype:"menu"},updateBuffer:500},active:false,type:"string",dataIndex:null,menu:null,isGridFilter:true,defaultRoot:"data",filterIdPrefix:Ext.baseCSSPrefix+"gridfilter",constructor:function(A){var C=this,B;C.initConfig(A);B=C.column;B.on("destroy",C.destroy,C);C.dataIndex=C.dataIndex||B.dataIndex;C.task=new Ext.util.DelayedTask(C.setValue,C)},destroy:function(){this.grid=this.menu=Ext.destroy(this.menu);this.callParent()},addStoreFilter:function(A){this.getGridStore().getFilters().add(A)},createFilter:function(A,B){return new Ext.util.Filter(this.getFilterConfig(A,B))},getFilterConfig:function(A,B){A.id=this.getBaseIdPrefix();if(!A.property){A.property=this.dataIndex}if(!A.root){A.root=this.defaultRoot}if(B){A.id+="-"+B}return A},createMenu:function(){this.menu=Ext.widget(this.getMenuConfig())},getActiveState:function(A,B){var C=A.active;return(C!==undefined)?C:B!==undefined},getBaseIdPrefix:function(){return this.filterIdPrefix+"-"+this.dataIndex},getMenuConfig:function(){return Ext.apply({},this.getMenuDefaults())},getGridStore:function(){return this.grid.getStore()},getStoreFilter:function(A){var B=this.getBaseIdPrefix();if(A){B+="-"+A}return this.getGridStore().getFilters().get(B)},onValueChange:function(D,C){var B=this,A=B.updateBuffer;if(!D.isFormField){Ext.raise("`field` should be a form field instance.")}if(D.isValid()){if(C.getKey()===C.RETURN){B.menu.hide();return }if(A){B.task.delay(A,null,null,[B.getValue(D)])}else{B.setValue(B.getValue(D))}}},preprocess:Ext.emptyFn,removeStoreFilter:function(A){this.getGridStore().getFilters().remove(A)},getValue:Ext.emptyFn,setActive:function(C){var B=this,A=B.owner.activeFilterMenuItem,D;if(B.active!==C){B.active=C;B.preventDefault=true;D=B.getGridStore().getFilters();D.beginUpdate();if(C){B.activate()}else{B.deactivate()}D.endUpdate();B.preventDefault=false;if(A&&A.activeFilter===B){A.setChecked(C)}B.setColumnActive(C)}},setColumnActive:function(A){this.column[A?"addCls":"removeCls"](this.owner.filterCls)},showMenu:function(A){var B=this;if(!B.menu){B.createMenu()}A.activeFilter=B;A.setMenu(B.menu,false);A.setChecked(B.active);A.setDisabled(B.disabled===true);B.activate(true)},updateStoreFilter:function(){this.getGridStore().getFilters().notify("endupdate")}})