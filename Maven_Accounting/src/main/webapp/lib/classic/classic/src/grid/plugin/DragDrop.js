Ext.define("Ext.grid.plugin.DragDrop",{extend:"Ext.plugin.Abstract",alias:"plugin.gridviewdragdrop",uses:["Ext.view.DragZone","Ext.grid.ViewDropZone"],dragText:"{0} selected row{1}",ddGroup:"GridDD",enableDrop:true,enableDrag:true,containerScroll:false,init:function(A){Ext.applyIf(A,{copy:this.copy,allowCopy:this.allowCopy});A.on("render",this.onViewRender,this,{single:true})},destroy:function(){var A=this;A.dragZone=A.dropZone=Ext.destroy(A.dragZone,A.dropZone);A.callParent()},enable:function(){var A=this;if(A.dragZone){A.dragZone.unlock()}if(A.dropZone){A.dropZone.unlock()}A.callParent()},disable:function(){var A=this;if(A.dragZone){A.dragZone.lock()}if(A.dropZone){A.dropZone.lock()}A.callParent()},onViewRender:function(A){var B=this,C=A.ownerCt.ownerGrid||A.ownerCt,D;C.relayEvents(A,["beforedrop","drop"]);if(B.enableDrag){if(B.containerScroll){D=A.getEl()}B.dragZone=new Ext.view.DragZone(Ext.apply({view:A,ddGroup:B.dragGroup||B.ddGroup,dragText:B.dragText,containerScroll:B.containerScroll,scrollEl:D},B.dragZone))}if(B.enableDrop){B.dropZone=new Ext.grid.ViewDropZone(Ext.apply({view:A,ddGroup:B.dropGroup||B.ddGroup},B.dropZone))}}})