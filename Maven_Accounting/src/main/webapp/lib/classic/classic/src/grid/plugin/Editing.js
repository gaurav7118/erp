Ext.define("Ext.grid.plugin.Editing",{extend:"Ext.plugin.Abstract",alias:"editing.editing",requires:["Ext.grid.column.Column","Ext.util.KeyNav","Ext.form.field.Base","Ext.view.Table"],mixins:["Ext.mixin.Observable"],clicksToEdit:2,triggerEvent:undefined,relayedEvents:["beforeedit","edit","validateedit","canceledit"],defaultFieldUI:"default",defaultFieldXType:"textfield",editStyle:"",constructor:function(A){var B=this;B.callParent([A]);B.mixins.observable.constructor.call(B);B.on("edit",function(C,D){B.fireEvent("afteredit",C,D)})},init:function(A){var B=this,C=A.ownerLockable;B.grid=A;B.view=A.view;B.initEvents();if(A.rendered){B.setup()}else{B.mon(A,{beforereconfigure:B.onBeforeReconfigure,reconfigure:B.onReconfigure,scope:B,beforerender:{fn:B.onBeforeRender,single:true,scope:B}})}A.editorEventRelayers=A.relayEvents(B,B.relayedEvents);if(C){C.editorEventRelayers=C.relayEvents(B,B.relayedEvents)}A.isEditable=true;A.editingPlugin=A.view.editingPlugin=B},onBeforeReconfigure:function(){this.reconfiguring=true},onReconfigure:function(){this.setup();delete this.reconfiguring},onBeforeRender:function(){this.setup()},setup:function(){this.initFieldAccessors(this.grid.getTopLevelColumnManager().getColumns())},destroy:function(){var B=this,A=B.grid;Ext.destroy(B.keyNav);B.clearListeners();if(A){if(A.ownerLockable){Ext.destroy(A.ownerLockable.editorEventRelayers);A.ownerLockable.editorEventRelayers=null}Ext.destroy(A.editorEventRelayers);A.editorEventRelayers=null;A.editingPlugin=A.view.editingPlugin=B.grid=B.view=B.editor=B.keyNav=null}B.callParent()},getEditStyle:function(){return this.editStyle},initFieldAccessors:function(C){if(C.isGroupHeader){C=C.getGridColumns()}else{if(!Ext.isArray(C)){C=[C]}}var F=this,H,G=C.length,B=function(I,J){return F.getColumnField(this,J)},A=function(){return F.hasColumnField(this)},E=function(I){F.setColumnField(this,I)},D;for(H=0;H<G;H++){D=C[H];if(!D.getEditor){D.getEditor=B}if(!D.hasEditor){D.hasEditor=A}if(!D.setEditor){D.setEditor=E}}},removeFieldAccessors:function(A){if(A.isGroupHeader){A=A.getGridColumns()}else{if(!Ext.isArray(A)){A=[A]}}var D,C=A.length,B;for(D=0;D<C;D++){B=A[D];B.getEditor=B.hasEditor=B.setEditor=B.field=B.editor=null}},getColumnField:function(C,A){var B=this,D=C.field;if(!(D&&D.isFormField)){D=C.field=B.createColumnField(C,A)}if(D&&D.ui==="default"&&!D.hasOwnProperty("ui")){D.ui=B.defaultFieldUI}return D},hasColumnField:function(A){return !!(A.field&&A.field.isComponent)},setColumnField:function(A,B){A.field=B;A.field=this.createColumnField(A)},createColumnField:function(C,A){var D=C.field,B;if(!D&&C.editor){D=C.editor;C.editor=null}if(!D&&A){D=A}if(D){B=C.dataIndex;if(D.isComponent){D.column=C}else{if(Ext.isString(D)){D={name:B,xtype:D,column:C}}else{D=Ext.apply({name:B,column:C},D)}D=Ext.ComponentManager.create(D,this.defaultFieldXType)}D.dataIndex=B;D.isEditorComponent=true;C.field=D}return D},initEvents:function(){var A=this;A.initEditTriggers();A.initCancelTriggers()},initCancelTriggers:Ext.emptyFn,initEditTriggers:function(){var B=this,A=B.view;if(B.triggerEvent==="cellfocus"){B.mon(A,"cellfocus",B.onCellFocus,B)}else{if(B.triggerEvent==="rowfocus"){B.mon(A,"rowfocus",B.onRowFocus,B)}else{if(A.getSelectionModel().isCellModel){A.onCellFocus=B.beforeViewCellFocus.bind(B)}B.mon(A,B.triggerEvent||("cell"+(B.clicksToEdit===1?"click":"dblclick")),B.onCellClick,B)}}B.initAddRemoveHeaderEvents();B.view.getNavigationModel().addKeyBindings({esc:B.onEscKey,scope:B})},beforeViewCellFocus:function(A){if(this.view.selModel.keyNavigation||!this.editing||!this.isCellEditable||!this.isCellEditable(A.row,A.columnHeader)){this.view.focusCell.apply(this.view,arguments)}},onRowFocus:function(A,C,B){this.startEdit(C,0)},onCellFocus:function(C,B,A){this.startEdit(A.row,A.column)},onCellClick:function(H,I,C,E,J,A,G){var D=H.expanderSelector,B=H.ownerCt.getColumnManager().getHeaderAtIndex(C),F=B.getEditor(E);if(this.shouldStartEdit(F)&&(!D||!G.getTarget(D))){H.ownerGrid.setActionableMode(true,G.position)}},initAddRemoveHeaderEvents:function(){var A=this,B=A.grid.headerCt;A.mon(B,{scope:A,add:A.onColumnAdd,columnmove:A.onColumnMove,beforedestroy:A.beforeGridHeaderDestroy})},onColumnAdd:function(A,B){this.initFieldAccessors(B)},onColumnMove:Ext.emptyFn,onEscKey:function(B){if(this.editing){var A=Ext.getCmp(B.getTarget().getAttribute("componentId"));if(!(A&&A.isPickerField&&A.isExpanded)){return this.cancelEdit()}}},beforeEdit:Ext.emptyFn,shouldStartEdit:function(A){return !!A},getEditingContext:function(E,C){var G=this,A=G.grid,F=A.visibleColumnManager,H,I,B,D,K,J=G.grid.lockable?G.grid:G.view;if(!J.componentLayoutCounter){J.on({boxready:Ext.Function.bind(G.startEdit,G,[E,C]),single:true});return }if(G.disabled||G.grid.collapsed||!G.grid.view.isVisible(true)){return }if(Ext.isNumber(C)){C=F.getHeaderAtIndex(C)}if(!C){return }if(C.hidden){C=C.next(":not([hidden])")||C.prev(":not([hidden])")}H=C.getView();A=H.ownerCt;A.ensureVisible(E,{column:C});I=H.getRow(E);if(!I){return }D=H.getVisibleColumnManager().indexOf(C);if(Ext.isNumber(E)){B=E;E=H.getRecord(I)}else{B=H.indexOf(I)}if(!E){return }K=new Ext.grid.CellContext(H).setAll(H,B,D,E,C);K.grid=A;K.store=H.dataSource;K.field=C.dataIndex;K.value=K.originalValue=E.get(C.dataIndex);K.row=I;K.node=H.getNode(E);K.cell=H.getCellByPosition(K,true);return K},cancelEdit:function(){var A=this;A.editing=false;A.fireEvent("canceledit",A,A.context)},completeEdit:function(){var A=this;if(A.editing&&A.validateEdit()){A.fireEvent("edit",A,A.context)}A.context=null;A.editing=false},validateEdit:function(A){var B=this;return B.fireEvent("validateedit",B,A)!==false&&!A.cancel}})