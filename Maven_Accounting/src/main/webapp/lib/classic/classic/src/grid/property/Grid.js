Ext.define("Ext.grid.property.Grid",{extend:"Ext.grid.Panel",alias:"widget.propertygrid",alternateClassName:"Ext.grid.PropertyGrid",uses:["Ext.grid.plugin.CellEditing","Ext.grid.property.Store","Ext.grid.property.HeaderContainer","Ext.XTemplate","Ext.grid.CellEditor","Ext.form.field.Date","Ext.form.field.Text","Ext.form.field.Number","Ext.form.field.ComboBox"],valueField:"value",nameField:"name",inferTypes:true,enableColumnMove:false,columnLines:true,stripeRows:false,trackMouseOver:false,clicksToEdit:1,enableHdMenu:false,gridCls:Ext.baseCSSPrefix+"property-grid",initComponent:function(){var A=this;A.source=A.source||{};A.addCls(A.gridCls);A.plugins=A.plugins||[];A.plugins.push(new Ext.grid.plugin.CellEditing({clicksToEdit:A.clicksToEdit,startEdit:function(B,C){return this.self.prototype.startEdit.call(this,B,A.valueColumn)}}));A.selModel={type:"cellmodel",onCellSelect:function(B){B.column=A.valueColumn;B.colIdx=A.valueColumn.getVisibleIndex();return this.self.prototype.onCellSelect.call(this,B)}};A.sourceConfig=Ext.apply({},A.sourceConfig);if(!A.store){A.propStore=A.store=new Ext.grid.property.Store(A,A.source)}A.configure(A.sourceConfig);if(A.sortableColumns){A.store.sort("name","ASC")}A.columns=new Ext.grid.property.HeaderContainer(A,A.store);A.callParent();A.getView().walkCells=this.walkCells;A.editors={"date":new Ext.grid.CellEditor({field:new Ext.form.field.Date({selectOnFocus:true})}),"string":new Ext.grid.CellEditor({field:new Ext.form.field.Text({selectOnFocus:true})}),"number":new Ext.grid.CellEditor({field:new Ext.form.field.Number({selectOnFocus:true})}),"boolean":new Ext.grid.CellEditor({field:new Ext.form.field.ComboBox({editable:false,store:[[true,A.headerCt.trueText],[false,A.headerCt.falseText]]})})};A.store.on("update",A.onUpdate,A)},configure:function(B){var G=this,I=G.store,D=0,E=G.store.getCount(),J=G.nameField,K=G.valueField,A,H,C,F;G.configureLegacy(B);if(G.inferTypes){for(;D<E;++D){C=I.getAt(D);A=C.get(J);if(!G.getConfigProp(A,"type")){H=C.get(K);if(Ext.isDate(H)){F="date"}else{if(Ext.isNumber(H)){F="number"}else{if(Ext.isBoolean(H)){F="boolean"}else{F="string"}}}G.setConfigProp(A,"type",F)}}}},getConfigProp:function(E,D,A){var C=this.sourceConfig[E],B;if(C){B=C[D]}return B||A},setConfigProp:function(E,B,C){var A=this.sourceConfig,D=A[E];if(!D){D=A[E]={__copied:true}}else{if(!D.__copied){D=Ext.apply({__copied:true},D);A[E]=D}}D[B]=C;return C},configureLegacy:function(A){var B=this;B.copyLegacyObject(A,B.customRenderers,"renderer");B.copyLegacyObject(A,B.customEditors,"editor");B.copyLegacyObject(A,B.propertyNames,"displayName");if(B.customRenderers||B.customEditors||B.propertyNames){if(Ext.global.console&&Ext.global.console.warn){Ext.global.console.warn(this.$className,'customRenderers, customEditors & propertyNames have been consolidated into a new config, see "sourceConfig". These configurations will be deprecated.')}}},copyLegacyObject:function(A,D,C){var B;for(B in D){if(D.hasOwnProperty(B)){if(!A[B]){A[B]={}}A[B][C]=D[B]}}},onUpdate:function(D,A,C){var F=this,B,E;if(F.rendered&&C===Ext.data.Model.EDIT){B=A.get(F.valueField);E=A.modified.value;if(F.fireEvent("beforepropertychange",F.source,A.getId(),B,E)!==false){if(F.source){F.source[A.getId()]=B}A.commit();F.fireEvent("propertychange",F.source,A.getId(),B,E)}else{A.reject()}}},walkCells:function(H,G,F,E,A,C){var D=this,B=D.ownerCt.valueColumn;if(G==="left"){G="up"}else{if(G==="right"){G="down"}}H=Ext.view.Table.prototype.walkCells.call(D,H,G,F,E,A,C);H.column=B;H.colIdx=B.getVisibleIndex();return H},getCellEditor:function(D,B){var G=this,C=D.get(G.nameField),A=D.get(G.valueField),E=G.getConfigProp(C,"editor"),H=G.getConfigProp(C,"type"),F=G.editors,I;if(E){if(!(E instanceof Ext.grid.CellEditor)){if(!(E instanceof Ext.form.field.Base)){E=Ext.ComponentManager.create(E,"textfield")}E=G.setConfigProp(C,"editor",new Ext.grid.CellEditor({field:E}))}}else{if(H){switch(H){case"date":E=F.date;break;case"number":E=F.number;break;case"boolean":E=G.editors["boolean"];break;default:E=F.string}}else{if(Ext.isDate(A)){E=F.date}else{if(Ext.isNumber(A)){E=F.number}else{if(Ext.isBoolean(A)){E=F["boolean"]}else{E=F.string}}}}}I=E.field;if(I&&I.ui==="default"&&!I.hasOwnProperty("ui")){I.ui=G.editingPlugin.defaultFieldUI}E.editorId=C;E.field.column=G.valueColumn;return E},beforeDestroy:function(){var A=this;A.callParent();A.destroyEditors(A.editors);A.destroyEditors(A.customEditors);delete A.source},destroyEditors:function(B){for(var A in B){if(B.hasOwnProperty(A)){Ext.destroy(B[A])}}},setSource:function(B,C){var A=this;A.source=B;if(C!==undefined){A.sourceConfig=Ext.apply({},C);A.configure(A.sourceConfig)}A.propStore.setSource(B)},getSource:function(){return this.propStore.getSource()},getProperty:function(A){return this.propStore.getProperty(A)},setProperty:function(C,B,A){this.propStore.setValue(C,B,A)},removeProperty:function(A){this.propStore.remove(A)}})