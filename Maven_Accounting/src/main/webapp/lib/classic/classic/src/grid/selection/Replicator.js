Ext.define("Ext.grid.selection.Replicator",{extend:"Ext.plugin.Abstract",alias:"plugin.selectionreplicator",init:function(A){this.gridListeners=A.on({beforeselectionextend:this.onBeforeSelectionExtend,scope:this,destroyable:true})},onBeforeSelectionExtend:function(C,B,D){var A=this.columns=[];B.eachColumn(function(E){A.push(E)});return this.replicateSelection(C,B,D)},replicateSelection:function(D,O,J){if(J.columns||O.isColumns){return }var V=this,B=V.columns,M,S,F,C,G,W,T,U,H,E,A,P,R=O.getFirstRowIndex(),Q=O.getLastRowIndex(),I=Q-R+1,N=[],L,K;M=B.length,H=B[0].getView().dataSource;if(I===1){C=V.getColumnValues(O.view.dataSource.getAt(R))}else{C=new Array(M);if(J.rows<0){N=[H.getAt(R+1),H.getAt(R)]}else{N=[H.getAt(Q-1),H.getAt(Q)]}N[0]=V.getColumnValues(N[0]);N[1]=V.getColumnValues(N[1]);for(S=0;S<M;S++){L=N[1][S];K=N[0][S];if(!isNaN(L)&&!isNaN(K)){C[S]=Number(L)-Number(K)}}}if(J.rows<0){G=J.end.rowIdx;W=J.start.rowIdx-1;U=-1}else{G=J.start.rowIdx;W=J.end.rowIdx+1;U=1}if(I===1){for(T=G;T!==W;T+=U){E=H.getAt(T);for(S=0;S<M;S++){F=B[S];if(F.dataIndex){E.set(F.dataIndex,C[S])}}}}else{for(T=G;T!==W;T+=U){E=H.getAt(T);A=V.getColumnValues(H.getAt(T-U));for(S=0;S<M;S++){F=B[S];if(F.dataIndex){P=A[S];if(!isNaN(P)){E.set(F.dataIndex,Ext.coerce(Number(P)+C[S],P))}}}}}},getColumnValues:function(C){var E=this.columns,B=E.length,D,F,A=new Array(E.length);for(D=0;D<B;D++){F=E[D];if(F.dataIndex){A[D]=C.get(F.dataIndex)}}return A},destroy:function(){this.gridListeners=Ext.destroy(this.gridListeners);this.callParent()}})