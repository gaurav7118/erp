Ext.define("Ext.layout.container.boxOverflow.None",{alternateClassName:"Ext.layout.boxOverflow.None",alias:["box.overflow.none","box.overflow.None"],mixins:["Ext.mixin.Factoryable"],factoryConfig:{defaultType:"none"},isBoxOverflowHandler:true,$configPrefixed:false,$configStrict:false,constructor:function(A){this.initConfig(A)},handleOverflow:Ext.emptyFn,clearOverflow:Ext.emptyFn,beginLayout:Ext.emptyFn,beginLayoutCycle:Ext.emptyFn,calculate:function(B){var A=this,C=B.state.boxPlan,D;if(C&&C.tooNarrow){D=A.handleOverflow(B);if(D){if(D.reservedSpace){A.layout.publishInnerCtSize(B,D.reservedSpace)}}}else{A.clearOverflow()}},completeLayout:Ext.emptyFn,finishedLayout:function(D){var C=this,A=C.layout.owner,B,E;if(A.hasListeners.overflowchange){B=A.query(">[hidden]");E=B.length;if(E!==C.lastHiddenCount){A.fireEvent("overflowchange",C.lastHiddenCount,E,B);C.lastHiddenCount=E}}},onRemove:Ext.emptyFn,getItem:function(A){return this.layout.owner.getComponent(A)},getOwnerType:function(A){var B;if(A.isToolbar){B="toolbar"}else{if(A.isTabBar){B="tab-bar"}else{if(A.isMenu){B="menu"}else{if(A.isBreadcrumb){B="breadcrumb"}else{B=A.getXType()}}}}return B},getPrefixConfig:Ext.emptyFn,getSuffixConfig:Ext.emptyFn,getOverflowCls:function(){return""},setVertical:function(){var B=this,A=B.layout,C=A.innerCt;C.removeCls(B.getOverflowCls(A.oppositeDirection));C.addCls(B.getOverflowCls(A.direction))}})