Ext.define("Ext.menu.Manager",{singleton:true,alternateClassName:"Ext.menu.MenuMgr",uses:["Ext.menu.Menu"],groups:{},visible:[],constructor:function(){var A=this;A.onShow=function(){delete A.onShow;Ext.on("mousedown",A.checkActiveMenus,A);return A.onShow.apply(A,arguments)}},checkActiveMenus:function(D){var F=this.visible,A=F.length,B,E,C=Ext.Component.fromElement(D.target);if(A){F=F.slice();for(B=0;B<A;++B){E=F[B];if(!(E.owns(D)||(C&&C.isMenuCheckItem&&C.menu===E))){E.hide()}}}},onShow:function(A){if(A.floating){Ext.Array.include(this.visible,A)}},onHide:function(A){if(A.floating){Ext.Array.remove(this.visible,A)}},hideAll:function(){var D=this.visible,B=D.length,A=false,C;if(B){D=D.slice();for(C=0;C<B;C++){D[C].hide();A=true}}return A},get:function(C,B){var A;if(typeof C==="string"){A=Ext.getCmp(C);if(A instanceof Ext.menu.Menu){C=A}}else{if(Ext.isArray(C)){B=Ext.apply({items:C},B);C=new Ext.menu.Menu(B)}else{if(!C.isComponent){B=Ext.apply({},C,B);C=Ext.ComponentManager.create(B,"menu")}}}return C},registerCheckable:function(C){var A=this.groups,B=C.group;if(B){if(!A[B]){A[B]=[]}A[B].push(C)}},unregisterCheckable:function(C){var A=this.groups,B=C.group;if(B){Ext.Array.remove(A[B],C)}},onCheckChange:function(D,F){var A=this.groups,C=D.group,B=0,H,E,G;if(C&&F){H=A[C];E=H.length;for(;B<E;B++){G=H[B];if(G!==D){G.setChecked(false)}}}}})