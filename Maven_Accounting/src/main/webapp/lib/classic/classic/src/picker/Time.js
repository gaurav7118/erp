Ext.define("Ext.picker.Time",{extend:"Ext.view.BoundList",alias:"widget.timepicker",requires:["Ext.data.Store","Ext.Date"],config:{store:true},statics:{createStore:function(G,C){var B=Ext.Date,D=B.clearTime,F=this.prototype.initDate,H=[],E=D(new Date(F[0],F[1],F[2])),A=B.add(D(new Date(F[0],F[1],F[2])),"mi",(24*60)-1);while(E<=A){H.push({disp:B.dateFormat(E,G),date:E});E=B.add(E,"mi",C)}return new Ext.data.Store({model:Ext.picker.Time.prototype.modelType,data:H})}},increment:15,format:"g:i A",displayField:"disp",initDate:[2008,0,1],componentCls:Ext.baseCSSPrefix+"timepicker",loadMask:false,initComponent:function(){var C=this,A=Ext.Date,B=A.clearTime,D=C.initDate;C.absMin=B(new Date(D[0],D[1],D[2]));C.absMax=A.add(B(new Date(D[0],D[1],D[2])),"mi",(24*60)-1);C.updateList();C.callParent()},setStore:function(A){this.store=(A===true)?Ext.picker.Time.createStore(this.format,this.increment):A},setMinValue:function(A){this.minValue=A;this.updateList()},setMaxValue:function(A){this.maxValue=A;this.updateList()},normalizeDate:function(A){var B=this.initDate;A.setFullYear(B[0],B[1],B[2]);return A},updateList:function(){var E=this,B=E.normalizeDate(E.minValue||E.absMin),A=E.normalizeDate(E.maxValue||E.absMax),D=E.getStore().getFilters(),C=E.rangeFilter;D.beginUpdate();if(C){D.remove(C)}C=E.rangeFilter=new Ext.util.Filter({filterFn:function(F){var G=F.get("date");return G>=B&&G<=A}});D.add(C);D.endUpdate()}},function(){this.prototype.modelType=Ext.define(null,{extend:"Ext.data.Model",fields:["disp","date"]})})