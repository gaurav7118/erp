Ext.define("Ext.rtl.resizer.SplitterTracker",{override:"Ext.resizer.SplitterTracker",getVertPrevConstrainLeft:function(A){return(!this.splitter.getInherited().rtl!==!Ext.rootInheritedState.rtl)?((A.prevCmp.maxWidth?A.prevBox.right-A.prevCmp.maxWidth:A.nextBox.x+(A.nextCmp.minWidth||A.defaultMin))-A.splitWidth):this.callParent(arguments)},getVertPrevConstrainRight:function(A){return(!this.splitter.getInherited().rtl!==!Ext.rootInheritedState.rtl)?A.prevBox.right-(A.prevCmp.minWidth||A.defaultMin):this.callParent(arguments)},getVertNextConstrainLeft:function(A){return(!this.splitter.getInherited().rtl!==!Ext.rootInheritedState.rtl)?A.nextBox.x+(A.nextCmp.minWidth||A.defaultMin):this.callParent(arguments)},getVertNextConstrainRight:function(A){return(!this.splitter.getInherited().rtl!==!Ext.rootInheritedState.rtl)?((A.nextCmp.maxWidth?A.nextBox.x+A.nextCmp.maxWidth:A.prevBox.right-(A.prevBox.minWidth||A.defaultMin))+A.splitWidth):this.callParent(arguments)},getResizeOffset:function(){var A=this.getOffset("dragTarget");if(!this.splitter.getInherited().rtl!==!Ext.rootInheritedState.rtl){A[0]=-A[0]}return A}})