Ext.define("Ext.selection.DataViewModel",{extend:"Ext.selection.Model",alias:"selection.dataviewmodel",requires:["Ext.util.KeyNav"],deselectOnContainerClick:true,bindComponent:function(A){var C=this,B;if(C.view!==A){if(C.view){C.navigationModel=null;Ext.destroy(C.viewListeners,C.navigationListeners)}C.view=A;if(A){B=C.getViewListeners();B.scope=C;B.destroyable=true;C.navigationModel=A.getNavigationModel();C.viewListeners=A.on(B);C.navigationListeners=C.navigationModel.on({navigate:C.onNavigate,scope:C,destroyable:true})}}},getViewListeners:function(){var A=this,B={};B[A.view.triggerCtEvent]=A.onContainerClick;return B},onUpdate:function(B){var A=this.view;if(A&&this.isSelected(B)){A.onItemSelect(B)}},onContainerClick:function(){if(this.deselectOnContainerClick){this.deselectAll()}},onSelectChange:function(B,F,E,H){var G=this,A=G.view,D=F?"select":"deselect",C=G.store.indexOf(B);if((E||G.fireEvent("before"+D,G,B,C))!==false&&H()!==false){if(A){if(F){A.onItemSelect(B)}else{A.onItemDeselect(B)}}if(!E){G.fireEvent(D,G,B,C)}}},destroy:function(){this.bindComponent();Ext.destroy(this.keyNav);this.callParent()}})