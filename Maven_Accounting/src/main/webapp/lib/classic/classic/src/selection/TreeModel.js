Ext.define("Ext.selection.TreeModel",{extend:"Ext.selection.RowModel",alias:"selection.treemodel",selectOnExpanderClick:false,constructor:function(A){var B=this;B.callParent([A]);if(B.pruneRemoved){B.pruneRemoved=false;B.pruneRemovedNodes=true}},getStoreListeners:function(){var B=this,A=B.callParent();A.noderemove=B.onNodeRemove;return A},onNodeRemove:function(C,D,A){if(!A){var B=[];this.gatherSelected(D,B);if(B.length){this.deselect(B)}}},pruneRemovedOnRefresh:function(){return this.pruneRemovedNodes},vetoSelection:function(D){var C=this.view,B=this.selectOnExpanderClick,A=!B&&D.type==="click"&&D.getTarget(C.expanderSelector||(C.lockingPartner&&C.lockingPartner.expanderSelector));return A||this.callParent([D])},privates:{gatherSelected:function(D,C){var E=D.childNodes,B,A,F;if(this.selected.containsKey(D.id)){C.push(D)}if(E){for(B=0,A=E.length;B<A;++B){F=E[B];this.gatherSelected(F,C)}}}}})