Ext.define("Ext.slider.Thumb",{requires:["Ext.dd.DragTracker","Ext.util.Format"],overCls:Ext.baseCSSPrefix+"slider-thumb-over",constructor:function(A){var B=this;Ext.apply(B,A||{},{cls:Ext.baseCSSPrefix+"slider-thumb",constrain:false});B.callParent([A])},render:function(){var A=this;A.el=A.slider.innerEl.insertFirst(A.getElConfig());A.onRender()},onRender:function(){if(this.disabled){this.disable()}this.initEvents()},getElConfig:function(){var C=this,B=C.slider,A={};A[B.vertical?"bottom":B.horizontalProp]=B.calculateThumbPosition(B.normalizeValue(C.value))+"%";return{style:A,id:this.id,cls:this.cls,role:"presentation"}},move:function(I,B){var F=this,C=F.el,A=F.slider,D=A.vertical?"bottom":A.horizontalProp,G,H,E;I+="%";if(!B){C.dom.style[D]=I}else{G={};G[D]=I;if(!Ext.supports.GetPositionPercentage){H={};H[D]=C.dom.style[D]}E={target:C,duration:350,from:H,to:G,scope:F,callback:F.onAnimComplete};if(B!==true){Ext.apply(E,B)}F.anim=new Ext.fx.Anim(E)}},onAnimComplete:function(){this.anim=null},enable:function(){var A=this.el;this.disabled=false;if(A){A.removeCls(this.slider.disabledCls)}},disable:function(){var A=this.el;this.disabled=true;if(A){A.addCls(this.slider.disabledCls)}},initEvents:function(){var A=this;A.tracker=new Ext.dd.DragTracker({el:A.el,onBeforeStart:A.onBeforeDragStart.bind(A),onStart:A.onDragStart.bind(A),onDrag:A.onDrag.bind(A),onEnd:A.onDragEnd.bind(A),tolerance:3,autoStart:300});A.el.hover(A.addOverCls,A.removeOverCls,A)},addOverCls:function(){var A=this;if(!A.disabled){A.el.addCls(A.overCls)}},removeOverCls:function(){this.el.removeCls(this.overCls)},onBeforeDragStart:function(D){var C=this,B=C.el,A=C.tracker.getXY(),E=C.pointerOffset=B.getXY();if(C.disabled){return false}else{E[0]+=Math.floor(B.getWidth()/2)-A[0];E[1]+=Math.floor(B.getHeight()/2)-A[1];C.slider.promoteThumb(C);return true}},onDragStart:function(C){var B=this,A=B.slider;A.onDragStart(B,C);B.el.addCls(Ext.baseCSSPrefix+"slider-thumb-drag");B.dragging=B.slider.dragging=true;B.dragStartValue=B.value;A.fireEvent("dragstart",A,C,B)},onDrag:function(F){var D=this,C=D.slider,B=D.index,E=D.getValueFromTracker(),A,G;if(E!==undefined){if(D.constrain){A=C.thumbs[B+1];G=C.thumbs[B-1];if(G!==undefined&&E<=G.value){E=G.value}if(A!==undefined&&E>=A.value){E=A.value}}C.setValue(B,E,false);C.fireEvent("drag",C,F,D)}},getValueFromTracker:function(){var B=this.slider,A=this.tracker.getXY(),C;A[0]+=this.pointerOffset[0];A[1]+=this.pointerOffset[1];C=B.getTrackpoint(A);if(C!==undefined){return B.reversePixelValue(C)}},onDragEnd:function(D){var B=this,A=B.slider,C=B.value;A.onDragEnd(B,D);B.el.removeCls(Ext.baseCSSPrefix+"slider-thumb-drag");B.dragging=A.dragging=false;A.fireEvent("dragend",A,D);if(B.dragStartValue!==C){A.fireEvent("changecomplete",A,C,B)}},destroy:function(){var A=this,B=this.anim;if(B){B.end()}A.el=A.tracker=A.anim=Ext.destroy(A.el,A.tracker);A.callParent()}})