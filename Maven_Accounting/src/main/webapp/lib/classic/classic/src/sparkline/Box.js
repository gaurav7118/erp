Ext.define("Ext.sparkline.Box",{extend:"Ext.sparkline.Base",alias:"widget.sparklinebox",config:{raw:false,boxLineColor:"#000",boxFillColor:"#cdf",whiskerColor:"#000",outlierLineColor:"#333",outlierFillColor:"#fff",medianColor:"#f00",showOutliers:true,outlierIQR:1.5,spotRadius:1.5,target:null,targetColor:"#4a2",chartRangeMin:null,chartRangeMax:null,tipTpl:new Ext.XTemplate("{field:this.fields}: {value}",{fields:function(B){var A={lq:"Lower Quartile",med:"Median",uq:"Upper Quartile",lo:"Left Outlier",ro:"Right Outlier",lw:"Left Whisker",rw:"Right Whisker"};return A[B]}}),tooltipFormatFieldlistKey:"field"},quartile:function(A,C){var B;if(C===2){B=Math.floor(A.length/2);return A.length%2?A[B]:(A[B-1]+A[B])/2}else{if(A.length%2){B=(A.length*C+C)/4;return B%1?(A[Math.floor(B)]+A[Math.floor(B)-1])/2:A[B-1]}else{B=(A.length*C+2)/4;return B%1?(A[Math.floor(B)]+A[Math.floor(B)-1])/2:A[B-1]}}},applyValues:function(A){A=Ext.Array.map(Ext.Array.from(A),Number);this.disabled=!(A&&A.length);return A},getRegion:function(){return 1},getRegionFields:function(){var A=[{field:"lq",value:this.quartiles[0]},{field:"med",value:this.quartiles[1]},{field:"uq",value:this.quartiles[2]}];if(this.loutlier!==undefined){A.push({field:"lo",value:this.loutlier})}if(this.routlier!==undefined){A.push({field:"ro",value:this.routlier})}if(this.lwhisker!==undefined){A.push({field:"lw",value:this.lwhisker})}if(this.rwhisker!==undefined){A.push({field:"rw",value:this.rwhisker})}return A},renderHighlight:Ext.emptyFn,renderGraph:function(){var c=this,J=c.canvas,G=c.values,M=G.length,b=c.getWidth(),E=c.getHeight(),O=c.getChartRangeMin(),R=c.getChartRangeMax(),V=O==null?Math.min.apply(Math,G):O,a=R==null?Math.max.apply(Math,G):R,X=0,U,Z,H,Q,P,N,B,K,Y,W,F,d=c.getSpotRadius(),A=c.getOutlierLineColor(),I=c.getOutlierFillColor(),T=c.getShowOutliers(),S=c.getOutlierIQR(),D=c.getLineColor(),C=c.getWhiskerColor(),L=c.getTargetColor();if(!c.callParent()){return }if(c.raw){if(T&&G.length>5){Z=G[0];U=G[1];Q=G[2];P=G[3];N=G[4];B=G[5];K=G[6]}else{U=G[0];Q=G[1];P=G[2];N=G[3];B=G[4]}}else{G.sort(function(f,e){return f-e});Q=c.quartile(G,1);P=c.quartile(G,2);N=c.quartile(G,3);H=N-Q;if(T){U=B=null;for(Y=0;Y<M;Y++){if(U==null&&G[Y]>Q-(H*S)){U=G[Y]}if(G[Y]<N+(H*S)){B=G[Y]}}Z=G[0];K=G[M-1]}else{U=G[0];B=G[M-1]}}c.quartiles=[Q,P,N];c.lwhisker=U;c.rwhisker=B;c.loutlier=Z;c.routlier=K;F=b/(a-V+1);if(T){X=Math.ceil(d);b-=2*Math.ceil(d);F=b/(a-V+1);if(Z<U){J.drawCircle((Z-V)*F+X,E/2,d,A,I).append()}if(K>B){J.drawCircle((K-V)*F+X,E/2,d,A,I).append()}}J.drawRect(Math.round((Q-V)*F+X),Math.round(E*0.1),Math.round((N-Q)*F),Math.round(E*0.8),c.getBoxLineColor(),c.getBoxFillColor()).append();J.drawLine(Math.round((U-V)*F+X),Math.round(E/2),Math.round((Q-V)*F+X),Math.round(E/2),D).append();J.drawLine(Math.round((U-V)*F+X),Math.round(E/4),Math.round((U-V)*F+X),Math.round(E-E/4),C).append();J.drawLine(Math.round((B-V)*F+X),Math.round(E/2),Math.round((N-V)*F+X),Math.round(E/2),D).append();J.drawLine(Math.round((B-V)*F+X),Math.round(E/4),Math.round((B-V)*F+X),Math.round(E-E/4),C).append();J.drawLine(Math.round((P-V)*F+X),Math.round(E*0.1),Math.round((P-V)*F+X),Math.round(E*0.9),c.getMedianColor()).append();if(c.target){W=Math.ceil(c.spotRadius);J.drawLine(Math.round((c.target-V)*F+X),Math.round((E/2)-W),Math.round((c.target-V)*F+X),Math.round((E/2)+W),L).append();J.drawLine(Math.round((c.target-V)*F+X-W),Math.round(E/2),Math.round((c.target-V)*F+X+W),Math.round(E/2),L).append()}if(c.currentPageXY&&c.el.getRegion().contains(c.currentPageXY)){c.currentRegion=null;c.updateDisplay()}J.render()}})