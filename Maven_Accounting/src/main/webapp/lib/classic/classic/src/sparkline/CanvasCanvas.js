Ext.define("Ext.sparkline.CanvasCanvas",{extend:"Ext.sparkline.CanvasBase",statics:{contextOverrides:(function(){var A=window.devicePixelRatio||1;return{moveTo:function(B,C){this.$moveTo(B*A,C*A)},lineTo:function(B,C){this.$lineTo(B*A,C*A)},arc:function(C,G,B,F,D,E){this.$arc(C*A,G*A,B*A,F,D,E)},clearRect:function(C,E,D,B){this.$clearRect(C*A,E*A,D*A,B*A)}}})()},setWidth:function(A){this.callParent(arguments);this.owner.element.dom.width=A*(window.devicePixelRatio||1)},setHeight:function(A){this.callParent(arguments);this.owner.element.dom.height=A*(window.devicePixelRatio||1)},onOwnerUpdate:function(){var A=this;A.el=A.owner.element;A.interact=!A.owner.initialConfig.disableInteraction;A.shapes={};A.shapeseq=[];A.currentTargetShapeId=A.lastShapeId=null},_getContext:function(D,F,A){var C=this.el.dom.getContext("2d"),E=Ext.sparkline.CanvasCanvas.contextOverrides,B;if(!this.context){for(B in E){C["$"+B]=C[B]}Ext.apply(C,E);this.context=C}if(D!=null){C.strokeStyle=D}C.lineWidth=A||1;if(F!=null){C.fillStyle=F}return C},reset:function(){var A=this._getContext();A.clearRect(0,0,this.pixelWidth,this.pixelHeight);this.shapes={};this.shapeseq=[];this.currentTargetShapeId=this.lastShapeId=null},_drawShape:function(G,F,E,H,A){var C=this._getContext(E,H,A),B,D;C.beginPath();C.moveTo(F[0][0]+0.5,F[0][1]+0.5);for(B=1,D=F.length;B<D;B++){C.lineTo(F[B][0]+0.5,F[B][1]+0.5)}if(E!=null){C.stroke()}if(H!=null){C.fill()}if(this.targetX!=null&&this.targetY!=null&&C.isPointInPath(this.targetX,this.targetY)){this.currentTargetShapeId=G}},_drawCircle:function(F,C,H,B,E,G,A){var D=this._getContext(E,G,A);D.beginPath();D.arc(C,H,B,0,2*Math.PI,false);if(this.targetX!=null&&this.targetY!=null&&D.isPointInPath(this.targetX,this.targetY)){this.currentTargetShapeId=F}if(E!==undefined){D.stroke()}if(G!==undefined){D.fill()}},_drawPieSlice:function(E,I,G,D,F,C,H,B){var A=this._getContext(H,B);A.beginPath();A.moveTo(I,G);A.arc(I,G,D,F,C,false);A.lineTo(I,G);A.closePath();if(H!=null){A.stroke()}if(B){A.fill()}if(this.targetX!==undefined&&this.targetY!==undefined&&A.isPointInPath(this.targetX,this.targetY)){this.currentTargetShapeId=E}},_drawRect:function(E,B,G,C,A,D,F){return this._drawShape(E,[[B,G],[B+C,G],[B+C,G+A],[B,G+A],[B,G]],D,F)},appendShape:function(A){this.shapes[A.id]=A;this.shapeseq.push(A.id);this.lastShapeId=A.id;return A.id},replaceWithShape:function(C,A){var D=this.shapeseq,B;this.shapes[A.id]=A;for(B=D.length;B--;){if(D[B]==C){D[B]=A.id}}delete this.shapes[C]},replaceWithShapes:function(C,B){var G=this.shapeseq,E={},A,D,F;for(D=C.length;D--;){E[C[D]]=true}for(D=G.length;D--;){A=G[D];if(E[A]){G.splice(D,1);delete this.shapes[A];F=D}}for(D=B.length;D--;){G.splice(F,0,B[D].id);this.shapes[B[D].id]=B[D]}},insertAfterShape:function(C,A){var D=this.shapeseq,B;for(B=D.length;B--;){if(D[B]===C){D.splice(B+1,0,A.id);this.shapes[A.id]=A;return }}},removeShapeId:function(B){var C=this.shapeseq,A;for(A=C.length;A--;){if(C[A]===B){C.splice(A,1);break}}delete this.shapes[B]},getShapeAt:function(A,B){this.targetX=A;this.targetY=B;this.render();return this.currentTargetShapeId},render:function(){var G=this.shapeseq,A=this.shapes,E=G.length,D=this._getContext(),F,B,C;D.clearRect(0,0,this.pixelWidth,this.pixelHeight);for(C=0;C<E;C++){F=G[C];B=A[F];this["_draw"+B.type].apply(this,B.args)}if(!this.interact){this.shapes={};this.shapeseq=[]}}})