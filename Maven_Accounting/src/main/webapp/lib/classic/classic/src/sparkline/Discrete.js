Ext.define("Ext.sparkline.Discrete",{extend:"Ext.sparkline.BarBase",alias:"widget.sparklinediscrete",config:{lineHeight:"auto",thresholdColor:null,thresholdValue:0,chartRangeMax:null,chartRangeMin:null,chartRangeClip:false,tipTpl:new Ext.XTemplate("{prefix}{value}{suffix}")},applyValues:function(A){A=Ext.Array.map(Ext.Array.from(A),Number);this.disabled=!(A&&A.length);return A},onUpdate:function(){var C=this,B=C.values,A=C.getChartRangeMin(),D=C.getChartRangeMax(),E=C.getChartRangeClip();C.callParent(arguments);C.regionShapes={};C.min=Math.min.apply(Math,B);C.max=Math.max.apply(Math,B);C.range=C.max-C.min;C.width=C.getWidth();C.interval=Math.floor(C.width/B.length);C.itemWidth=C.width/B.length;if(A!=null&&(E||A<C.min)){C.min=A}if(D!=null&&(E||D>C.max)){C.max=D}if(C.canvas){if(C.getLineHeight()==="auto"){C.setLineHeight(Math.round(C.getHeight()*0.3))}}},getRegion:function(A,B){return Math.floor(A/this.itemWidth)},getRegionFields:function(A){return{isNull:this.values[A]===undefined,value:this.values[A],offset:A}},renderRegion:function(J,E){var L=this,Q=L.values,G=L.min,M=L.max,I=L.range,C=L.interval,B=L.canvas,H=L.getHeight(),P=L.getLineHeight(),K=H-P,A,D,F,O,N=L.getThresholdColor();D=Ext.Number.constrain(Q[J],G,M);O=J*C;A=Math.round(K-K*((D-G)/I));F=(N&&D<L.getThresholdValue())?N:L.getLineColor();if(E){F=L.calcHighlightColor(F)}B.drawLine(O,A,O,A+P,F).append()}})