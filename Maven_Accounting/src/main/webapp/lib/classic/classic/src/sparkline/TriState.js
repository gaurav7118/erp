Ext.define("Ext.sparkline.TriState",{extend:"Ext.sparkline.BarBase",requires:["Ext.sparkline.RangeMap"],alias:"widget.sparklinetristate",config:{barWidth:4,barSpacing:1,posBarColor:"#6f6",negBarColor:"#f44",zeroBarColor:"#999",colorMap:{},tipTpl:new Ext.XTemplate("&#9679; {value:this.states}",{states:function(A){var B=Number(A);if(B===-1){return"Loss"}if(B===0){return"Draw"}if(B===1){return"Win"}return A}})},applyColorMap:function(A){var B=this;if(Ext.isArray(A)){B.colorMapByIndex=A;B.colorMapByValue=null}else{B.colorMapByIndex=null;B.colorMapByValue=A;if(B.colorMapByValue&&B.colorMapByValue.get==null){B.colorMapByValue=new Ext.sparkline.RangeMap(A)}}return A},applyValues:function(A){A=Ext.Array.map(Ext.Array.from(A),Number);this.disabled=!(A&&A.length);return A},onUpdate:function(){this.totalBarWidth=this.getBarWidth()+this.getBarSpacing()},getBarWidth:function(){var A=this.values;return this._barWidth||(this.getWidth()-(A.length-1)*this.getBarSpacing())/A.length},getRegion:function(A,B){return Math.floor(A/this.totalBarWidth)},getRegionFields:function(A){return{isNull:this.values[A]==null,value:this.values[A],color:this.calcColor(this.values[A],A),offset:A}},calcColor:function(F,G){var E=this,B=E.values,H=E.colorMapByIndex,D=E.colorMapByValue,A,C;if(D&&(C=D.get(F))){A=C}else{if(H&&H.length>G){A=H[G]}else{if(B[G]<0){A=E.getNegBarColor()}else{if(B[G]>0){A=E.getPosBarColor()}else{A=E.getZeroBarColor()}}}}return A},renderRegion:function(E,B){var G=this,J=G.values,A=G.canvas,D,K,F,I,H,C;D=A.pixelHeight;F=Math.round(D/2);I=E*G.totalBarWidth;if(J[E]<0){H=F;K=F-1}else{if(J[E]>0){H=0;K=F-1}else{H=F-1;K=2}}C=G.calcColor(J[E],E);if(C==null){return }if(B){C=G.calcHighlightColor(C)}A.drawRect(I,H,G.getBarWidth()-1,K-1,C,C).append()}})