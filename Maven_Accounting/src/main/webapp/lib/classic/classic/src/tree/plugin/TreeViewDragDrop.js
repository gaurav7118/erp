Ext.define("Ext.tree.plugin.TreeViewDragDrop",{extend:"Ext.plugin.Abstract",alias:"plugin.treeviewdragdrop",uses:["Ext.tree.ViewDragZone","Ext.tree.ViewDropZone"],dragText:"{0} selected node{1}",allowParentInserts:false,allowContainerDrops:false,appendOnly:false,ddGroup:"TreeDD",containerScroll:false,expandDelay:1000,enableDrop:true,enableDrag:true,nodeHighlightColor:"c3daf9",nodeHighlightOnDrop:Ext.enableFx,displayField:"text",init:function(A){Ext.applyIf(A,{copy:this.copy,allowCopy:this.allowCopy});A.on("render",this.onViewRender,this,{single:true})},destroy:function(){var A=this;A.dragZone=A.dropZone=Ext.destroy(A.dragZone,A.dropZone);A.callParent()},onViewRender:function(A){var B=this,C=A.ownerCt.ownerGrid||A.ownerCt,D;C.relayEvents(A,["beforedrop","drop"]);if(B.enableDrag){if(B.containerScroll){D=A.getEl()}B.dragZone=new Ext.tree.ViewDragZone(Ext.apply({view:A,ddGroup:B.dragGroup||B.ddGroup,dragText:B.dragText,displayField:B.displayField,repairHighlightColor:B.nodeHighlightColor,repairHighlight:B.nodeHighlightOnRepair,scrollEl:D},B.dragZone))}if(B.enableDrop){B.dropZone=new Ext.tree.ViewDropZone(Ext.apply({view:A,ddGroup:B.dropGroup||B.ddGroup,allowContainerDrops:B.allowContainerDrops,appendOnly:B.appendOnly,allowParentInserts:B.allowParentInserts,expandDelay:B.expandDelay,dropHighlightColor:B.nodeHighlightColor,dropHighlight:B.nodeHighlightOnDrop,sortOnDrop:B.sortOnDrop,containerScroll:B.containerScroll},B.dropZone))}}},function(){var A=this.prototype;A.nodeHighlightOnDrop=A.nodeHighlightOnRepair=Ext.enableFx})