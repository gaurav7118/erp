Ext.define("Ext.util.ElementContainer",{mixinId:"elementCt",config:{childEls:{$value:{},cached:true,lazy:true,merge:function(F,A,E,D){var C=A?Ext.Object.chain(A):{},B,G;if(F instanceof Array){for(B=F.length;B--;){G=F[B];if(!D||!(G in C)){if(typeof G==="string"){C[G]={name:G,itemId:G}}else{C[G.name]=G}}}}else{if(F){if(F.constructor===Object){for(B in F){if(!D||!(B in C)){G=F[B];if(G===true){C[B]={itemId:B}}else{if(typeof G==="string"){C[B]={itemId:G}}else{C[B]=G;if(!("itemId" in G)){G.itemId=B}}}C[B].name=B}}}else{if(!D||!(F in C)){C[F]={name:F,itemId:F}}}}}return C}}},destroy:function(){var C=this,B=C.getChildEls(),D,A;for(A in B){D=C[A];if(D){if(D.destroy){D.component=null;D.destroy()}C[A]=null}}},privates:{addChildEl:function(A){var C=this,B=C.getChildEls();if(!C.hasOwnProperty("childEls")){C.childEls=B=Ext.Object.chain(B)}if(typeof A==="string"){A={name:A,itemId:A}}B[A.name]=A},afterClassMixedIn:function(C){var B=C.prototype,A=B.childEls;if(A){delete B.childEls;C.getConfigurator().add({childEls:A})}},attachChildEls:function(D,C){var H=this,I=H.getChildEls(),G=C||H,M=G.id+"-",L=!G.frame,N,A,K,F,E,J,B;for(N in I){K=I[N];if(L&&K.frame){continue}E=K.select;if(E){J=D.select(E,true)}else{if(!(E=K.selectNode)){if(!(B=K.id)){B=M+K.itemId;J=Ext.cache[B]}else{J=Ext.cache[B]||D.getById(B)}}else{J=D.selectNode(E,false)}}if(J){if(J.isElement){J.component=G}else{if(J.isComposite&&!J.isLite){A=J.elements;for(F=A.length;F--;){A[F].component=G}}}}H[N]=J||null}}}})