Ext.define("Ext.util.FocusTrap",{extend:"Ext.Mixin",mixinConfig:{id:"focustrap",after:{afterRender:"initTabGuards",addTool:"initTabGuards",add:"initTabGuards",remove:"initTabGuards",addDocked:"initTabGuards",removeDocked:"initTabGuards",onShow:"initTabGuards",afterHide:"initTabGuards"}},config:{tabGuard:true,tabGuardTpl:'<div id="{id}-{tabGuardEl}" data-ref="{tabGuardEl}" role="button" data-tabguardposition="{tabGuard}" aria-busy="true" style="height:0"class="'+Ext.baseCSSPrefix+'hidden-clip"></div>',tabGuardIndex:0},tabGuardPositionAttribute:"data-tabguardposition",privates:{initTabGuards:function(){var E=this,C=E.tabGuardPositionAttribute,D=E.tabGuardBeforeEl,F=E.tabGuardAfterEl,A=E.tabGuardIndex,B;if(!E.rendered||!E.tabGuard){return }B=E.el.findTabbableElements({skipSelf:true});if(B[0]&&B[0].hasAttribute(C)){B.shift()}if(B.length&&B[B.length-1].hasAttribute(C)){B.pop()}if(B.length){D.dom.setAttribute("tabIndex",A);D.on("focusenter",E.onTabGuardFocusEnter,E);F.dom.setAttribute("tabIndex",A);F.on("focusenter",E.onTabGuardFocusEnter,E)}else{D.dom.removeAttribute("tabIndex");D.un("focusenter",E.onTabGuardFocusEnter,E);F.dom.removeAttribute("tabIndex");F.un("focusenter",E.onTabGuardFocusEnter,E)}},onTabGuardFocusEnter:function(E,F){var G=this,B=G.el,H=G.tabGuardPositionAttribute,D=F.getAttribute(H),I=E.relatedTarget,A,C,J;if(!I.hasAttribute(H)&&I!==B.dom&&B.contains(I)){C=D==="before"?false:true}else{C=D==="before"?true:false}A=B.findTabbableElements({skipSelf:true});A.shift();A.pop();J=C?A[0]:A[A.length-1];if(J){J.focus()}}}})