Ext.define("Ext.util.Memento",(function(){function D(H,G,I,F){H[F?F+I:I]=G[I]}function C(G,F,H){delete G[H]}function E(J,I,K,H){var F=H?H+K:K,G=J[F];if(G||J.hasOwnProperty(F)){A(I,K,G)}}function A(G,H,F){if(Ext.isDefined(F)){G[H]=F}else{delete G[H]}}function B(G,L,K,H,I){if(L){if(Ext.isArray(H)){var J,F=H.length;for(J=0;J<F;J++){G(L,K,H[J],I)}}else{G(L,K,H,I)}}}return{data:null,target:null,constructor:function(G,F){this.data={};if(G){this.target=G;if(F){this.capture(F)}}},capture:function(F,I,H){var G=this;B(D,G.data||(G.data={}),I||G.target,F,H)},remove:function(F){B(C,this.data,null,F)},restore:function(G,F,I,H){B(E,this.data,I||this.target,G,H);if(F!==false){this.remove(G)}},restoreAll:function(F,J){var H=this,G=J||this.target,I=H.data,K;F=F!==false;for(K in I){if(I.hasOwnProperty(K)){A(G,K,I[K]);if(F){delete I[K]}}}}}}()))