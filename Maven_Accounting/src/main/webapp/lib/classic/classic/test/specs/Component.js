describe("Ext.Component",function(){var C=Ext.Component,E=C.prototype,B="data-componentid",F;function A(G,H){F=new Ext.Component(G||{});if(H){F.el.dom.setAttribute(B,F.id)}return F}function D(){var H=[],G;for(G=0;G<100;G++){H.push("RIP Lucy the cat")}return H.join(" ")}beforeEach(function(){spyOn(Ext.Logger,"warn")});afterEach(function(){if(F){F.destroy()}F=null});describe("configuration",function(){it("should have a hideMode",function(){expect(E.hideMode).toEqual("display")});it("should have no bubbleEvents",function(){expect(E.bubbleEvents).toBeUndefined()});it("should have a renderTpl",function(){expect(E.renderTpl).toBeDefined()})});describe("ids",function(){it("should generate an id if one isn't specified",function(){A();expect(F.id).toBeDefined()});it("should use an id if one is specified",function(){A({id:"foo"});expect(F.id).toEqual("foo")});it("should return the itemId if one exists",function(){A({itemId:"a"});expect(F.getItemId()).toEqual("a")});it("should fall back on the id if no itemId is specified",function(){A({id:"foo"});expect(F.getItemId()).toEqual("foo")});it("should give the itemId precedence",function(){A({id:"foo",itemId:"bar"});expect(F.getItemId()).toEqual("bar")});it("should throw error if the Component has an invalid id",function(){function G(H){expect(function(){new Ext.Component({id:H})}).toThrow('Invalid component "id": "'+H+'"')}G(".abcdef");G("0a...");G("12345");G(".abc-def");G("<12345/>");G("1<>234.567")})});describe("registering with ComponentManager",function(){it("should register itself upon creation",function(){A({id:"foo"});expect(Ext.ComponentManager.get("foo")).toEqual(F)});it("should unregister on destroy",function(){A({id:"foo"});F.destroy();expect(Ext.ComponentManager.get("foo")).toBeUndefined()})});describe("setHtml/setData",function(){var G=Ext.define(null,{extend:"Ext.data.Model",fields:["name"]});describe("during construction",function(){it("should add the html",function(){A({renderTo:Ext.getBody(),html:"Foo"});expect(F.getEl().dom.innerHTML).toBe("Foo")});it("should add the data according to the template",function(){A({renderTo:Ext.getBody(),tpl:"{x}/{y}",data:{x:1,y:2}});expect(F.getEl().dom.innerHTML).toBe("1/2")});it("should add data from a record",function(){var H=new G({name:"recName"});A({renderTo:Ext.getBody(),tpl:"{name}",data:H});expect(F.getEl().dom.innerHTML).toBe("recName")});it("should retain the data on the object",function(){A({renderTo:Ext.getBody(),tpl:"{x}/{y}",data:{x:1,y:2}});expect(F.getData()).toEqual({x:1,y:2})});it("should retain record data",function(){var H=new G({id:1,name:"recName"});A({renderTo:Ext.getBody(),tpl:"{name}",data:H});expect(F.getData()).toEqual({id:1,name:"recName"})})});describe("before rendering",function(){it("should add the html",function(){A();F.setHtml("Foo");F.render(Ext.getBody());expect(F.getEl().dom.innerHTML).toBe("Foo")});it("should add the data according to the template",function(){A({tpl:"{x}/{y}"});F.setData({x:1,y:2});F.render(Ext.getBody());expect(F.getEl().dom.innerHTML).toBe("1/2")});it("should add data from a record",function(){var H=new G({name:"recName"});A({tpl:"{name}"});F.setData(H);F.render(Ext.getBody());expect(F.getEl().dom.innerHTML).toBe("recName")})});describe("after rendering",function(){it("should add the html",function(){A({renderTo:Ext.getBody()});F.setHtml("Foo");expect(F.getEl().dom.innerHTML).toBe("Foo")});it("should add the data according to the template",function(){A({renderTo:Ext.getBody(),tpl:"{x}/{y}"});F.setData({x:1,y:2});expect(F.getEl().dom.innerHTML).toBe("1/2")});it("should add data from a record",function(){var H=new G({name:"recName"});A({renderTo:Ext.getBody(),tpl:"{name}"});F.setData(H);expect(F.getEl().dom.innerHTML).toBe("recName")})})});describe("view controllers",function(){var G;beforeEach(function(){spyOn(Ext.log,"warn");G=Ext.define("spec.TestController",{extend:"Ext.app.ViewController",alias:"controller.test",someFn:function(){}})});afterEach(function(){Ext.undefine("spec.TestController");G=null;Ext.Factory.controller.instance.clearCache()});describe("initializing",function(){it("should accept an alias string",function(){A({controller:"test"});var H=F.getController();expect(H instanceof spec.TestController).toBe(true);expect(H.getView()).toBe(F)});it("should accept a controller config",function(){A({controller:{type:"test"}});var H=F.getController();expect(H instanceof spec.TestController).toBe(true);expect(H.getView()).toBe(F)});it("should accept a controller instance",function(){var H=new spec.TestController();A({controller:H});expect(F.getController()).toBe(H);expect(H.getView()).toBe(F)});it("should be able to pass null",function(){A({controller:null});expect(F.getController()).toBeNull()})});it("should destroy the controller when destroying the component",function(){A({controller:"test"});var H=F.getController();spyOn(H,"destroy");F.destroy();expect(H.destroy).toHaveBeenCalled()});describe("lookupController",function(){describe("skipThis: false",function(){it("should return null when there is no controller attached to the view",function(){A();expect(F.lookupController(false)).toBeNull()});it("should return null when there is no controller in the hierarchy",function(){var H=new Ext.container.Container({items:{xtype:"component"}});expect(H.items.first().lookupController(false)).toBeNull();H.destroy()});it("should return the controller attached to the component when it is at the root",function(){var H=new spec.TestController();A({controller:H});expect(F.lookupController(false)).toBe(H)});it("should return the controller attached to the component when it is in a hierarchy",function(){var H=new spec.TestController();var I=new Ext.container.Container({items:{xtype:"component",controller:H}});expect(I.items.first().lookupController(false)).toBe(H);I.destroy()});it("should return a controller above it in the hierarchy",function(){var H=new spec.TestController();var I=new Ext.container.Container({controller:H,items:{xtype:"component"}});expect(I.items.first().lookupController(false)).toBe(H);I.destroy()});it("should return the closest controller in the hierarchy",function(){var J=new spec.TestController(),I=new spec.TestController();var H=new Ext.container.Container({controller:J,items:{xtype:"container",controller:I,items:{xtype:"component",itemId:"x"}}});expect(H.down("#x").lookupController(false)).toBe(I);H.destroy()})});describe("skipThis: true",function(){it("should return null when there is no controller attached to the view",function(){A();expect(F.lookupController(true)).toBeNull()});it("should return null when there is no controller in the hierarchy",function(){var H=new Ext.container.Container({items:{xtype:"component"}});expect(H.items.first().lookupController(true)).toBeNull();H.destroy()});it("should not return the controller attached to the component when it is at the root",function(){var H=new spec.TestController();A({controller:H});expect(F.lookupController(true)).toBeNull()});it("should not return the controller attached to the component when it is in a hierarchy and no controllers exist above it",function(){var H=new spec.TestController();var I=new Ext.container.Container({items:{xtype:"component",controller:H}});expect(I.items.first().lookupController(true)).toBeNull();I.destroy()});it("should return a controller above it in the hierarchy",function(){var H=new spec.TestController();var I=new Ext.container.Container({controller:H,items:{xtype:"component"}});expect(I.items.first().lookupController(true)).toBe(H);I.destroy()});it("should return the closest controller in the hierarchy",function(){var J=new spec.TestController(),I=new spec.TestController();var H=new Ext.container.Container({controller:J,items:{xtype:"container",controller:I,items:{xtype:"component",itemId:"x"}}});expect(H.down("#x").lookupController(true)).toBe(I);H.destroy()})});it("should default to skipThis: false",function(){var H=new spec.TestController();A({controller:H});expect(F.lookupController()).toBe(H)})})});describe("viewmodel",function(){var H,G,I;beforeEach(function(){I=false;Ext.define("spec.ViewModel",{extend:"Ext.app.ViewModel",alias:"viewmodel.test",constructor:function(){this.callParent(arguments);G.push(this.getId());I=true}});G=[]});afterEach(function(){Ext.undefine("spec.ViewModel");Ext.Factory.viewModel.instance.clearCache();G=null;I=false});it("should accept a string alias",function(){A({viewModel:"test"});expect(F.getViewModel() instanceof spec.ViewModel).toBe(true)});it("should accept an object config",function(){A({viewModel:{type:"test"}});expect(F.getViewModel() instanceof spec.ViewModel).toBe(true)});it("should accept an object instance",function(){var J=new spec.ViewModel();A({viewModel:J});expect(F.getViewModel()).toBe(J)});it("should not create the instance while constructing the component",function(){A({viewModel:{type:"test"}});expect(I).toBe(false)});it("should not create an instance during render",function(){A({renderTo:Ext.getBody(),viewModel:{type:"test"}});expect(I).toBe(false)});it("should not create an instance while constructing with binds",function(){A({bind:"{html}",viewModel:{type:"test"}});expect(I).toBe(false)});it("should create an instance while rendering with binds",function(){A({renderTo:Ext.getBody(),bind:"{html}",viewModel:{type:"test"}});expect(I).toBe(true)});it("should create an instance when getViewModel is called",function(){A({viewModel:{type:"test"}});F.getViewModel();expect(I).toBe(true)});it("should create an instance when lookupViewModel is called",function(){A({viewModel:{type:"test"}});F.lookupViewModel();expect(I).toBe(true)});describe("calling initViewController",function(){var J=Ext.define(null,{extend:"Ext.app.ViewController"});it("should call initViewController when creating an instance during rendering",function(){var K=new J();A({controller:K,viewModel:{type:"test"},bind:"{foo}"});spyOn(K,"initViewModel");F.render(Ext.getBody());expect(K.initViewModel).toHaveBeenCalledWith(F.getViewModel())});it("should call initViewController when creating view a direct call to getViewModel",function(){var K=new J();A({controller:K,viewModel:{type:"test"},bind:"{foo}"});spyOn(K,"initViewModel");F.getViewModel();expect(K.initViewModel).toHaveBeenCalledWith(F.getViewModel())})});describe("hierarchy",function(){var L,J;function M(N){return{type:"test",id:N}}function K(N){L=new Ext.container.Container({viewModel:M("top"),items:{xtype:"container",viewModel:M("middle"),items:{xtype:"component",viewModel:M("bottom"),bind:N||null}}});J=L.items.first();F=J.items.first()}afterEach(function(){L.destroy();L=J=null});it("should not initialize any view models",function(){K();expect(I).toBe(false)});it("should initialize viewmodels top down",function(){K();F.getViewModel();expect(G).toEqual(["top","middle","bottom"])});it("should only initialize view models as needed when calling getViewModel",function(){K();L.getViewModel();expect(G).toEqual(["top"]);J.getViewModel();expect(G).toEqual(["top","middle"]);F.getViewModel();expect(G).toEqual(["top","middle","bottom"])});it("should only initialize view models as needed when calling lookupViewModel",function(){K();L.lookupViewModel();expect(G).toEqual(["top"]);J.lookupViewModel();expect(G).toEqual(["top","middle"]);F.lookupViewModel();expect(G).toEqual(["top","middle","bottom"])});it("should not create the instance when calling getInherited and skipping ourselves",function(){K();F.lookupViewModel(true);expect(G).toEqual(["top","middle"])});it("should automatically create the hierarchy during render with a bind",function(){K("{html}");L.render(Ext.getBody());expect(G).toEqual(["top","middle","bottom"])})});describe("session",function(){it("should attach the view model to the session",function(){var J=new Ext.data.Session();A({session:J,viewModel:{}});expect(F.getViewModel().getSession()).toBe(J)});it("should attach the view model to a session higher up in the hierarchy",function(){var K=new Ext.data.Session();var J=new Ext.container.Container({session:K,items:{xtype:"component",viewModel:true}});expect(J.items.first().getViewModel().getSession()).toBe(K);J.destroy()});it("should use an attached session at the same level instead of a higher one",function(){var L=new Ext.data.Session(),K=new Ext.data.Session();var J=new Ext.container.Container({session:L,items:{xtype:"component",session:K,viewModel:{}}});expect(J.items.first().getViewModel().getSession()).toBe(K);J.destroy()})})});describe("session",function(){it("should not have a session by default",function(){A();expect(F.getSession()).toBeNull()});it("should use a passed session",function(){var G=new Ext.data.Session();A({session:G});expect(F.getSession()).toBe(G)});it("should create a session when session: true is specified",function(){A({session:true});expect(F.getSession().isSession).toBe(true)});it("should destroy the session when the component is destroyed",function(){var H=new Ext.data.Session(),G=spyOn(H,"destroy").andCallThrough();A({session:H});F.destroy();expect(G).toHaveBeenCalled()});it("should not destroy the session with autoDestroy: false",function(){var H=new Ext.data.Session({autoDestroy:false});var G=spyOn(H,"destroy").andCallThrough();A({session:H});F.destroy();expect(G).not.toHaveBeenCalled();H.destroy()});describe("hierarchy",function(){it("should use a parent session",function(){var H=new Ext.data.Session();var G=new Ext.container.Container({session:H,items:{xtype:"component"}});expect(G.items.first().lookupSession()).toBe(H);G.destroy()});it("should spawn a session from the parent if specifying session: true",function(){var H=new Ext.data.Session();var G=new Ext.container.Container({session:H,items:{xtype:"component",session:true}});var I=G.items.first().getSession();expect(I.getParent()).toBe(H);G.destroy()})})});describe("bind",function(){describe("defaultBindProperty",function(){it("should bind with a string",function(){A({renderTo:Ext.getBody(),viewModel:{data:{theHtml:"foo"}},bind:"{theHtml}"});F.getViewModel().notify();expect(F.getEl().dom.innerHTML).toBe("foo")});it("should throw an exception if we have no default bind",function(){expect(function(){A({defaultBindProperty:"",viewModel:{data:{theHtml:"foo"}},bind:"{theHtml}"});F.getBind()}).toThrow()})});it("should be able to bind to multiple properties",function(){A({renderTo:Ext.getBody(),viewModel:{data:{width:200,height:200}},bind:{width:"{width}",height:"{height}"}});F.getViewModel().notify();expect(F.getWidth()).toBe(200);expect(F.getHeight()).toBe(200)});describe("twoWayBindable",function(){var H,G;beforeEach(function(){H=Ext.define(null,{extend:"Ext.Component",config:{customA:1,customB:null,customC:undefined,customD:"foo"},twoWayBindable:["customB","customC","customD"]})});afterEach(function(){G=H=null});function I(J){F=new H(Ext.apply({renderTo:Ext.getBody()},J));G=F.getViewModel()}it("should not be twoWayBindable by default",function(){I({viewModel:{data:{a:1}},bind:{customA:"{a}"}});G.notify();F.setCustomA("Foo");expect(G.get("a")).toBe(1)});it("should not cause an error if a twoWayBindable is not bound",function(){expect(function(){I({viewModel:{},bind:{}})}).not.toThrow()});describe("when the binding has not fired",function(){it("should not publish when the value is undefined",function(){I({viewModel:{data:{c:100}},bind:{customC:"{c}"}});expect(G.get("c")).toBe(100);G.notify();expect(F.getCustomC()).toBe(100)});it("should not publish when the value is null",function(){I({viewModel:{data:{b:200}},bind:{customB:"{b}"}});expect(G.get("b")).toBe(200);G.notify();expect(F.getCustomB()).toBe(200)});it("should not publish when the value is equal to the class default",function(){I({viewModel:{data:{d:"bar"}},bind:{customD:"{d}"}});expect(G.get("d")).toBe("bar");G.notify();expect(F.getCustomD()).toBe("bar")});it("should not publish when the value is equal to the instance config value",function(){I({customD:"baz",viewModel:{data:{d:"bar"}},bind:{customD:"{d}"}});expect(G.get("d")).toBe("bar");G.notify();expect(F.getCustomD()).toBe("bar")});it("should publish any other value",function(){I({viewModel:{data:{d:"bar"}},bind:{customD:"{d}"}});F.setCustomD("new");expect(G.get("d")).toBe("new")})});describe("when the binding has fired",function(){it("should publish undefined",function(){I({viewModel:{b:"x"},bind:{customB:"{b}"}});G.notify();F.setCustomB(undefined);expect(G.get("b")).toBeNull()});it("should publish null",function(){I({viewModel:{b:"x"},bind:{customB:"{b}"}});G.notify();F.setCustomB(null);expect(G.get("b")).toBeNull()});it("should publish the class default",function(){I({viewModel:{data:{d:"bar"}},bind:{customD:"{d}"}});G.notify();F.setCustomD("foo");expect(G.get("d")).toBe("foo")});it("should publish the instance config value",function(){I({customD:"baz",viewModel:{data:{d:"bar"}},bind:{customD:"{d}"}});G.notify();F.setCustomD("baz");expect(G.get("d")).toBe("baz")})})})});describe("listener scope resolution",function(){var N,T,R,P,I,S,O,H,L,M,G;function K(U){I=Ext.define(null,Ext.apply({extend:"Ext.Container",onFoo:N.parent},U))}function Q(U){O=Ext.define(null,Ext.apply({extend:"Ext.Container",onFoo:N.grandparent},U))}function J(W){var X={component:P,controller:P.getController(),parent:S,parentController:S&&S.getController(),grandparent:H,grandparentController:H&&H.getController()},U,V;for(U in N){V=N[U];if(U===W){expect(V).toHaveBeenCalled();expect(V.mostRecentCall.object).toBe(X[U])}else{expect(V).not.toHaveBeenCalled()}}}beforeEach(function(){N={component:jasmine.createSpy(),controller:jasmine.createSpy(),parent:jasmine.createSpy(),parentController:jasmine.createSpy(),grandparent:jasmine.createSpy(),grandparentController:jasmine.createSpy()};L=Ext.define(null,{extend:"Ext.app.ViewController",onFoo:N.controller});M=Ext.define(null,{extend:"Ext.app.ViewController",onFoo:N.parentController});G=Ext.define(null,{extend:"Ext.app.ViewController",onFoo:N.grandparentController})});afterEach(function(){if(P){P.destroy()}if(S){S.destroy()}if(H){H.destroy()}});describe("listener declared on class body",function(){function U(V){R=Ext.define(null,Ext.merge({extend:"Ext.Component",listeners:{foo:"onFoo"},onFoo:N.component},V))}it("should resolve to the component with unspecified scope",function(){U();P=new R();P.fireEvent("foo");J("component")});it("should fail with scope:'controller'",function(){U({listeners:{scope:"controller"}});P=new R();expect(function(){P.fireEvent("foo")}).toThrow()});it("should resolve to the component with scope:'this'",function(){U({listeners:{scope:"this"}});P=new R();P.fireEvent("foo");J("component")});describe("with view controller",function(){it("should resolve to the view controller with unspecified scope",function(){U({controller:new L()});P=new R();P.fireEvent("foo");J("controller")});it("should resolve to the view controller with scope:'controller'",function(){U({controller:new L(),listeners:{scope:"controller"}});P=new R();P.fireEvent("foo");J("controller")});it("should resolve to the component with scope:'this'",function(){U({controller:new L(),listeners:{scope:"this"}});P=new R();P.fireEvent("foo");J("component")})});describe("with defaultListenerScope",function(){it("should resolve to the component with unspecified scope",function(){U({defaultListenerScope:true});P=new R();P.fireEvent("foo");J("component")});it("should fail with scope:'controller'",function(){U({defaultListenerScope:true,listeners:{scope:"controller"}});P=new R();expect(function(){P.fireEvent("foo")}).toThrow()});it("should resolve to the component with scope:'this'",function(){U({defaultListenerScope:true,listeners:{scope:"this"}});P=new R();P.fireEvent("foo");J("component")})});describe("with view controller and defaultListenerScope",function(){it("should resolve to the component with unspecified scope",function(){U({controller:new L(),defaultListenerScope:true});P=new R();P.fireEvent("foo");J("component")});it("should resolve to the view controller with scope:'controller'",function(){U({controller:new L(),defaultListenerScope:true,listeners:{scope:"controller"}});P=new R();P.fireEvent("foo");J("controller")});it("should resolve to the component with scope:'this'",function(){U({controller:new L(),defaultListenerScope:true,listeners:{scope:"this"}});P=new R();P.fireEvent("foo");J("component")})});describe("with defaultListenerScope on parent",function(){beforeEach(function(){K({defaultListenerScope:true})});it("should resolve to the parent with unspecified scope",function(){U();P=new R();S=new I({items:P});P.fireEvent("foo");J("parent")});it("should fail with scope:'controller'",function(){U({listeners:{scope:"controller"}});P=new R();S=new I({items:P});expect(function(){P.fireEvent("foo")}).toThrow()});it("should resolve to the component with scope:'this'",function(){U({listeners:{scope:"this"}});P=new R();S=new I({items:P});P.fireEvent("foo");J("component")})});describe("with view controller on parent",function(){beforeEach(function(){K({controller:new M()})});it("should resolve to the parent view controller with unspecified scope",function(){U();P=new R();S=new I({items:P});P.fireEvent("foo");J("parentController")});it("should resolve to the parent view controller with scope:'controller'",function(){U({listeners:{scope:"controller"}});P=new R();S=new I({items:P});P.fireEvent("foo");J("parentController")});it("should resolve to the component with scope:'this'",function(){U({listeners:{scope:"this"}});P=new R();S=new I({items:P});P.fireEvent("foo");J("component")})});describe("with view controller and defaultListenerScope on parent",function(){beforeEach(function(){K({controller:new M(),defaultListenerScope:true})});it("should resolve to the parent with unspecified scope",function(){U();P=new R();S=new I({items:P});P.fireEvent("foo");J("parent")});it("should resolve to the parent view controller with scope:'controller'",function(){U({listeners:{scope:"controller"}});P=new R();S=new I({items:P});P.fireEvent("foo");J("parentController")});it("should resolve to the component with scope:'this'",function(){U({listeners:{scope:"this"}});P=new R();S=new I({items:P});P.fireEvent("foo");J("component")})});describe("with defaultListenerScope on grandparent",function(){beforeEach(function(){Q({defaultListenerScope:true})});it("should resolve to the grandparent with unspecified scope",function(){U();P=new R();H=new O({items:{items:P}});P.fireEvent("foo");J("grandparent")});it("should fail with scope:'controller'",function(){U({listeners:{scope:"controller"}});P=new R();H=new O({items:{items:P}});expect(function(){P.fireEvent("foo")}).toThrow()});it("should resolve to the component with scope:'this'",function(){U({listeners:{scope:"this"}});P=new R();H=new O({items:{items:P}});P.fireEvent("foo");J("component")})});describe("with view controller on grandparent",function(){beforeEach(function(){Q({controller:new G()})});it("should resolve to the grandparent view controller with unspecified scope",function(){U();P=new R();H=new O({items:{items:P}});P.fireEvent("foo");J("grandparentController")});it("should resolve to the grandparent view controller with scope:'controller'",function(){U({listeners:{scope:"controller"}});P=new R();H=new O({items:{items:P}});P.fireEvent("foo");J("grandparentController")});it("should resolve to the component with scope:'this'",function(){U({listeners:{scope:"this"}});P=new R();H=new O({items:{items:P}});P.fireEvent("foo");J("component")})});describe("with view controller and defaultListenerScope on grandparent",function(){beforeEach(function(){Q({controller:new G(),defaultListenerScope:true})});it("should resolve to the grandparent with unspecified scope",function(){U();P=new R();H=new O({items:{items:P}});P.fireEvent("foo");J("grandparent")});it("should resolve to the grandparent view controller with scope:'controller'",function(){U({listeners:{scope:"controller"}});P=new R();H=new O({items:{items:P}});P.fireEvent("foo");J("grandparentController")});it("should resolve to the component with scope:'this'",function(){U({listeners:{scope:"this"}});P=new R();H=new O({items:{items:P}});P.fireEvent("foo");J("component")})});describe("with view controller on child and view controller on parent",function(){beforeEach(function(){K({controller:new M()})});it("should resolve to the child view controller with unspecified scope",function(){U({controller:new L()});P=new R();S=new I({items:P});P.fireEvent("foo");J("controller")});it("should resolve to the child view controller with scope:'controller'",function(){U({controller:new L(),listeners:{scope:"controller"}});P=new R();S=new I({items:P});P.fireEvent("foo");J("controller")});it("should resolve to the component with scope:'this'",function(){U({controller:new L(),listeners:{scope:"this"}});P=new R();S=new I({items:P});P.fireEvent("foo");J("component")})});describe("with view controller on child and view controller on grandparent",function(){beforeEach(function(){Q({controller:new G()})});it("should resolve to the child view controller with unspecified scope",function(){U({controller:new L()});P=new R();H=new O({items:{items:P}});P.fireEvent("foo");J("controller")});it("should resolve to the child view controller with scope:'controller'",function(){U({controller:new L(),listeners:{scope:"controller"}});P=new R();H=new O({items:{items:P}});P.fireEvent("foo");J("controller")});it("should resolve to the component with scope:'this'",function(){U({controller:new L(),listeners:{scope:"this"}});P=new R();H=new O({items:{items:P}});P.fireEvent("foo");J("component")})});describe("with view controller on child and defaultListenerScope on parent",function(){beforeEach(function(){K({defaultListenerScope:true})});it("should resolve to the child view controller with unspecified scope",function(){U({controller:new L()});P=new R();S=new I({items:P});P.fireEvent("foo");J("controller")});it("should resolve to the child view controller with scope:'controller'",function(){U({controller:new L(),listeners:{scope:"controller"}});P=new R();S=new I({items:P});P.fireEvent("foo");J("controller")});it("should resolve to the component with scope:'this'",function(){U({controller:new L(),listeners:{scope:"this"}});P=new R();S=new I({items:P});P.fireEvent("foo");J("component")})});describe("with view controller on parent and defaultListenerScope on child",function(){beforeEach(function(){K({controller:new M()})});it("should resolve to the component with unspecified scope",function(){U({defaultListenerScope:true});P=new R();S=new I({items:P});P.fireEvent("foo");J("component")});it("should resolve to the parent view controller with scope:'controller'",function(){U({defaultListenerScope:true,listeners:{scope:"controller"}});P=new R();S=new I({items:P});P.fireEvent("foo");J("parentController")});it("should resolve to the component with scope:'this'",function(){U({defaultListenerScope:true,listeners:{scope:"this"}});P=new R();S=new I({items:P});P.fireEvent("foo");J("component")})});describe("with view controller on child and defaultListenerScope on grandparent",function(){beforeEach(function(){Q({defaultListenerScope:true})});it("should resolve to the child view controller with unspecified scope",function(){U({controller:new L()});P=new R();H=new O({items:{items:P}});P.fireEvent("foo");J("controller")});it("should resolve to the child view controller with scope:'controller'",function(){U({controller:new L(),listeners:{scope:"controller"}});P=new R();H=new O({items:{items:P}});P.fireEvent("foo");J("controller")});it("should resolve to the component with scope:'this'",function(){U({controller:new L(),listeners:{scope:"this"}});P=new R();H=new O({items:{items:P}});P.fireEvent("foo");J("component")})});describe("with view controller on grandparent and defaultListenerScope on child",function(){beforeEach(function(){Q({controller:new G()})});it("should resolve to the component with unspecified scope",function(){U({defaultListenerScope:true});P=new R();H=new O({items:{items:P}});P.fireEvent("foo");J("component")});it("should resolve to the grandparent view controller with scope:'controller'",function(){U({defaultListenerScope:true,listeners:{scope:"controller"}});P=new R();H=new O({items:{items:P}});P.fireEvent("foo");J("grandparentController")});it("should resolve to the component with scope:'this'",function(){U({defaultListenerScope:true,listeners:{scope:"this"}});P=new R();H=new O({items:{items:P}});P.fireEvent("foo");J("component")})});describe("with scope declared on inner object",function(){it("should resolve to controller with unspecified outer scope",function(){U({defaultListenerScope:true,controller:new L(),listeners:{foo:{fn:"onFoo",scope:"controller"}}});P=new R();P.fireEvent("foo");J("controller")});it("should resolve to controller with outer scope of controller",function(){U({defaultListenerScope:true,controller:new L(),listeners:{scope:"controller",foo:{fn:"onFoo",scope:"controller"}}});P=new R();P.fireEvent("foo");J("controller")})});describe("with handler declared as a function reference",function(){var W,V;function X(Y){R=Ext.define(null,Ext.merge({extend:"Ext.Component",listeners:{foo:W}},Y))}beforeEach(function(){W=jasmine.createSpy();W.andCallFake(function(){V=this})});afterEach(function(){V=null});it("should use the component as the default scope",function(){X();P=new R();P.fireEvent("foo");expect(W).toHaveBeenCalled();expect(W.mostRecentCall.object).toBe(P)});it("should use an arbitrary object as the scope",function(){var Y={};X({listeners:{scope:Y}});P=new R();P.fireEvent("foo");expect(V).toBe(V)});it("should use the component with scope:'this'",function(){X({listeners:{scope:"this"}});P=new R();P.fireEvent("foo");expect(V).toBe(P)});it("should fail with scope:'controller'",function(){X({listeners:{scope:"controller"}});P=new R();expect(function(){P.fireEvent("foo")}).toThrow()});it("should use the component with scope:'this' specified on an inner object",function(){X({listeners:{foo:{fn:W,scope:"this"}}});P=new R();P.fireEvent("foo");expect(V).toBe(P)});it("should fail with scope:'controller' specified on an inner object",function(){X({listeners:{foo:{fn:W,scope:"controller"}}});P=new R();expect(function(){P.fireEvent("foo")}).toThrow()});describe("with view controller",function(){it("should resolve to the component with unspecified scope",function(){X({controller:new L()});P=new R();P.fireEvent("foo");expect(V).toBe(P)});it("should resolve to the view controller with scope:'controller'",function(){X({controller:new L(),listeners:{scope:"controller"}});P=new R();P.fireEvent("foo");expect(V).toBe(P.getController())});it("should resolve to the component with scope:'this'",function(){X({controller:new L(),listeners:{scope:"this"}});P=new R();P.fireEvent("foo");expect(V).toBe(P)})});describe("with defaultListenerScope",function(){it("should resolve to the component with unspecified scope",function(){X({defaultListenerScope:true});P=new R();P.fireEvent("foo");expect(V).toBe(P)});it("should fail with scope:'controller'",function(){X({defaultListenerScope:true,listeners:{scope:"controller"}});P=new R();expect(function(){P.fireEvent("foo")}).toThrow()});it("should resolve to the component with scope:'this'",function(){X({defaultListenerScope:true,listeners:{scope:"this"}});P=new R();P.fireEvent("foo");expect(V).toBe(P)})});describe("with view controller and defaultListenerScope",function(){it("should resolve to the component with unspecified scope",function(){X({controller:new L(),defaultListenerScope:true});P=new R();P.fireEvent("foo");expect(V).toBe(P)});it("should resolve to the view controller with scope:'controller'",function(){X({controller:new L(),defaultListenerScope:true,listeners:{scope:"controller"}});P=new R();P.fireEvent("foo");expect(V).toBe(P.getController())});it("should resolve to the component with scope:'this'",function(){X({controller:new L(),defaultListenerScope:true,listeners:{scope:"this"}});P=new R();P.fireEvent("foo");expect(V).toBe(P)})});describe("with defaultListenerScope on parent",function(){beforeEach(function(){K({defaultListenerScope:true})});it("should resolve to the component with unspecified scope",function(){X();P=new R();S=new I({items:P});P.fireEvent("foo");expect(V).toBe(P)});it("should fail with scope:'controller'",function(){X({listeners:{scope:"controller"}});P=new R();S=new I({items:P});expect(function(){P.fireEvent("foo")}).toThrow()});it("should resolve to the component with scope:'this'",function(){X({listeners:{scope:"this"}});P=new R();S=new I({items:P});P.fireEvent("foo");expect(V).toBe(P)})});describe("with view controller on parent",function(){beforeEach(function(){K({controller:new M()})});it("should resolve to the component with unspecified scope",function(){X();P=new R();S=new I({items:P});P.fireEvent("foo");expect(V).toBe(P)});it("should resolve to the parent view controller with scope:'controller'",function(){X({listeners:{scope:"controller"}});P=new R();S=new I({items:P});P.fireEvent("foo");expect(V).toBe(S.getController())});it("should resolve to the component with scope:'this'",function(){X({listeners:{scope:"this"}});P=new R();S=new I({items:P});P.fireEvent("foo");expect(V).toBe(P)})})})});describe("listener declared on instance config",function(){function U(V){R=Ext.define(null,Ext.merge({extend:"Ext.Component",onFoo:N.component},V))}it("should resolve to the component with unspecified scope",function(){U();P=new R({listeners:{foo:"onFoo"}});P.fireEvent("foo");J("component")});it("should fail with scope:'controller'",function(){U();P=new R({listeners:{foo:"onFoo",scope:"controller"}});expect(function(){P.fireEvent("foo")}).toThrow()});it("should resolve to the component with scope:'this'",function(){U();P=new R({listeners:{foo:"onFoo",scope:"this"}});P.fireEvent("foo");J("component")});describe("with view controller",function(){beforeEach(function(){U({controller:new L()})});it("should resolve to the component with unspecified scope",function(){P=new R({listeners:{foo:"onFoo"}});P.fireEvent("foo");J("component")});it("should fail with scope:'controller'",function(){P=new R({listeners:{foo:"onFoo",scope:"controller"}});expect(function(){P.fireEvent("foo")}).toThrow()});it("should resolve to the component with scope:'this'",function(){P=new R({listeners:{foo:"onFoo",scope:"this"}});P.fireEvent("foo");J("component")})});describe("with defaultListenerScope",function(){beforeEach(function(){U({defaultListenerScope:true})});it("should resolve to fail with unspecified scope",function(){P=new R({listeners:{foo:"onFoo"}});P.fireEvent("foo");J("component")});it("should fail with scope:'controller'",function(){P=new R({listeners:{foo:"onFoo",scope:"controller"}});expect(function(){P.fireEvent("foo")}).toThrow()});it("should resolve to the component with scope:'this'",function(){P=new R({listeners:{foo:"onFoo",scope:"this"}});P.fireEvent("foo");J("component")})});describe("with view controller and defaultListenerScope",function(){beforeEach(function(){U({controller:new L(),defaultListenerScope:true})});it("should resolve to the component with unspecified scope",function(){P=new R({listeners:{foo:"onFoo"}});P.fireEvent("foo");J("component")});it("should fail with scope:'controller'",function(){P=new R({listeners:{foo:"onFoo",scope:"controller"}});expect(function(){P.fireEvent("foo")}).toThrow()});it("should resolve to the component with scope:'this'",function(){P=new R({listeners:{foo:"onFoo",scope:"this"}});P.fireEvent("foo");J("component")})});describe("with defaultListenerScope on parent",function(){beforeEach(function(){K({defaultListenerScope:true});U()});it("should resolve to the parent with unspecified scope",function(){P=new R({listeners:{foo:"onFoo"}});S=new I({items:P});P.fireEvent("foo");J("parent")});it("should fail with scope:'controller'",function(){P=new R({listeners:{foo:"onFoo",scope:"controller"}});S=new I({items:P});expect(function(){P.fireEvent("foo")}).toThrow()});it("should resolve to the component with scope:'this'",function(){P=new R({listeners:{foo:"onFoo",scope:"this"}});S=new I({items:P});P.fireEvent("foo");J("component")})});describe("with view controller on parent",function(){beforeEach(function(){K({controller:new M()});U()});it("should resolve to the parent view controller with unspecified scope",function(){P=new R({listeners:{foo:"onFoo"}});S=new I({items:P});P.fireEvent("foo");J("parentController")});it("should resolve to the parent view controller with scope:'controller'",function(){P=new R({listeners:{foo:"onFoo",scope:"controller"}});S=new I({items:P});P.fireEvent("foo");J("parentController")});it("should resolve to the component with scope:'this'",function(){P=new R({listeners:{foo:"onFoo",scope:"this"}});S=new I({items:P});P.fireEvent("foo");J("component")})});describe("with view controller and defaultListenerScope on parent",function(){beforeEach(function(){K({controller:new M(),defaultListenerScope:true});U()});it("should resolve to the parent with unspecified scope",function(){P=new R({listeners:{foo:"onFoo"}});S=new I({items:P});P.fireEvent("foo");J("parent")});it("should resolve to the parent view controller with scope:'controller'",function(){P=new R({listeners:{foo:"onFoo",scope:"controller"}});S=new I({items:P});P.fireEvent("foo");J("parentController")});it("should resolve to the component with scope:'this'",function(){P=new R({listeners:{foo:"onFoo",scope:"this"}});S=new I({items:P});P.fireEvent("foo");J("component")})});describe("with defaultListenerScope on grandparent",function(){beforeEach(function(){Q({defaultListenerScope:true});U()});it("should resolve to the grandparent with unspecified scope",function(){P=new R({listeners:{foo:"onFoo"}});H=new O({items:{items:P}});P.fireEvent("foo");J("grandparent")});it("should fail with scope:'controller'",function(){P=new R({listeners:{foo:"onFoo",scope:"controller"}});H=new O({items:{items:P}});expect(function(){P.fireEvent("foo")}).toThrow()});it("should resolve to the component with scope:'this'",function(){P=new R({listeners:{foo:"onFoo",scope:"this"}});H=new O({items:{items:P}});P.fireEvent("foo");J("component")})});describe("with view controller on grandparent",function(){beforeEach(function(){Q({controller:new G()});U()});it("should resolve to the grandparent view controller with unspecified scope",function(){P=new R({listeners:{foo:"onFoo"}});H=new O({items:{items:P}});P.fireEvent("foo");J("grandparentController")});it("should resolve to the grandparent view controller with scope:'controller'",function(){P=new R({listeners:{foo:"onFoo",scope:"controller"}});H=new O({items:{items:P}});P.fireEvent("foo");J("grandparentController")});it("should resolve to the component with scope:'this'",function(){P=new R({listeners:{foo:"onFoo",scope:"this"}});H=new O({items:{items:P}});P.fireEvent("foo");J("component")})});describe("with view controller and defaultListenerScope on grandparent",function(){beforeEach(function(){Q({controller:new G(),defaultListenerScope:true});U()});it("should resolve to the grandparent with unspecified scope",function(){P=new R({listeners:{foo:"onFoo"}});H=new O({items:{items:P}});P.fireEvent("foo");J("grandparent")});it("should resolve to the grandparent view controller with scope:'controller'",function(){P=new R({listeners:{foo:"onFoo",scope:"controller"}});H=new O({items:{items:P}});P.fireEvent("foo");J("grandparentController")});it("should resolve to the component with scope:'this'",function(){P=new R({listeners:{foo:"onFoo",scope:"this"}});H=new O({items:{items:P}});P.fireEvent("foo");J("component")})});describe("with view controller on child and view controller on parent",function(){beforeEach(function(){K({controller:new M()});U({controller:new L()})});it("should resolve to the parent view controller with unspecified scope",function(){P=new R({listeners:{foo:"onFoo"}});S=new I({items:P});P.fireEvent("foo");J("parentController")});it("should resolve to the parent view controller with scope:'controller'",function(){P=new R({listeners:{foo:"onFoo",scope:"controller"}});S=new I({items:P});P.fireEvent("foo");J("parentController")});it("should resolve to the component with scope:'this'",function(){P=new R({listeners:{foo:"onFoo",scope:"this"}});S=new I({items:P});P.fireEvent("foo");J("component")})});describe("with view controller on child and view controller on grandparent",function(){beforeEach(function(){Q({controller:new G()});U({controller:new L()})});it("should resolve to the grandparent view controller with unspecified scope",function(){P=new R({listeners:{foo:"onFoo"}});H=new O({items:{items:P}});P.fireEvent("foo");J("grandparentController")});it("should resolve to the grandparent view controller with scope:'controller'",function(){P=new R({listeners:{foo:"onFoo",scope:"controller"}});H=new O({items:{items:P}});P.fireEvent("foo");J("grandparentController")});it("should resolve to the component with scope:'this'",function(){P=new R({listeners:{foo:"onFoo",scope:"this"}});H=new O({items:{items:P}});P.fireEvent("foo");J("component")})});describe("with view controller on child and defaultListenerScope on parent",function(){beforeEach(function(){K({defaultListenerScope:true});U({controller:new L()})});it("should resolve to the parent with unspecified scope",function(){P=new R({listeners:{foo:"onFoo"}});S=new I({items:P});P.fireEvent("foo");J("parent")});it("should fail with scope:'controller'",function(){P=new R({listeners:{foo:"onFoo",scope:"controller"}});S=new I({items:P});expect(function(){P.fireEvent("foo")}).toThrow()});it("should resolve to the component with scope:'this'",function(){P=new R({listeners:{foo:"onFoo",scope:"this"}});S=new I({items:P});P.fireEvent("foo");J("component")})});describe("with view controller on parent and defaultListenerScope on child",function(){beforeEach(function(){K({controller:new M()});U({defaultListenerScope:true})});it("should resolve to the parent view controller with unspecified scope",function(){P=new R({listeners:{foo:"onFoo"}});S=new I({items:P});P.fireEvent("foo");J("parentController")});it("should resolve to the parent view controller with scope:'controller'",function(){P=new R({listeners:{foo:"onFoo",scope:"controller"}});S=new I({items:P});P.fireEvent("foo");J("parentController")});it("should resolve to the component with scope:'this'",function(){P=new R({listeners:{foo:"onFoo",scope:"this"}});S=new I({items:P});P.fireEvent("foo");J("component")})});describe("with view controller on child and defaultListenerScope on grandparent",function(){beforeEach(function(){Q({defaultListenerScope:true});U({controller:new L()})});it("should resolve to the grandparent with unspecified scope",function(){P=new R({listeners:{foo:"onFoo"}});H=new O({items:{items:P}});P.fireEvent("foo");J("grandparent")});it("should fail with scope:'controller'",function(){P=new R({listeners:{foo:"onFoo",scope:"controller"}});H=new O({items:{items:P}});expect(function(){P.fireEvent("foo")}).toThrow()});it("should resolve to the component with scope:'this'",function(){P=new R({listeners:{foo:"onFoo",scope:"this"}});H=new O({items:{items:P}});P.fireEvent("foo");J("component")})});describe("with view controller on grandparent and defaultListenerScope on child",function(){beforeEach(function(){Q({controller:new G()});U({defaultListenerScope:true})});it("should resolve to the grandparent view controller with unspecified scope",function(){P=new R({listeners:{foo:"onFoo"}});H=new O({items:{items:P}});P.fireEvent("foo");J("grandparentController")});it("should resolve to the grandparent view controller with scope:'controller'",function(){P=new R({listeners:{foo:"onFoo",scope:"controller"}});H=new O({items:{items:P}});P.fireEvent("foo");J("grandparentController")});it("should resolve to the component with scope:'this'",function(){P=new R({listeners:{foo:"onFoo",scope:"this"}});H=new O({items:{items:P}});P.fireEvent("foo");J("component")})});describe("with handler declared as a function reference",function(){var W,V;function X(Y){R=Ext.define(null,Ext.merge({extend:"Ext.Component"},Y))}beforeEach(function(){W=jasmine.createSpy();W.andCallFake(function(){V=this})});afterEach(function(){V=null});it("should use the component as the default scope",function(){X();P=new R({listeners:{foo:W}});P.fireEvent("foo");expect(V).toBe(P)});it("should use an arbitrary object as the scope",function(){X();var Y={};P=new R({listeners:{foo:W,scope:Y}});P.fireEvent("foo");expect(Y).toBe(Y)});it("should use the component with scope:'this'",function(){X();P=new R({listeners:{foo:W,scope:"this"}});P.fireEvent("foo");expect(V).toBe(P)});it("should fail with scope:'controller'",function(){X();P=new R({listeners:{foo:W,scope:"controller"}});expect(function(){P.fireEvent("foo")}).toThrow()});it("should use the component with scope:'this' specified on an inner object",function(){X();P=new R({listeners:{foo:{fn:W,scope:"this"}}});P.fireEvent("foo");expect(V).toBe(P)});it("should fail with scope:'controller' specified on an inner object",function(){X();P=new R({listeners:{foo:{fn:W,scope:"controller"}}});expect(function(){P.fireEvent("foo")}).toThrow()});describe("with view controller",function(){beforeEach(function(){X({controller:new L()})});it("should resolve to the component with unspecified scope",function(){P=new R({listeners:{foo:W}});P.fireEvent("foo");expect(V).toBe(P)});it("should fail with scope:'controller'",function(){P=new R({listeners:{foo:W,scope:"controller"}});expect(function(){P.fireEvent("foo")}).toThrow()});it("should resolve to the component with scope:'this'",function(){P=new R({listeners:{foo:W,scope:"this"}});P.fireEvent("foo");expect(V).toBe(P)})});describe("with defaultListenerScope",function(){beforeEach(function(){X({defaultListenerScope:true})});it("should resolve to the component with unspecified scope",function(){P=new R({listeners:{foo:W}});P.fireEvent("foo");expect(V).toBe(P)});it("should fail with scope:'controller'",function(){P=new R({listeners:{foo:W,scope:"controller"}});expect(function(){P.fireEvent("foo")}).toThrow()});it("should resolve to the component with scope:'this'",function(){P=new R({listeners:{foo:W,scope:"this"}});P.fireEvent("foo");expect(V).toBe(P)})});describe("with defaultListenerScope on parent",function(){beforeEach(function(){K({defaultListenerScope:true});X()});it("should resolve to the component with unspecified scope",function(){P=new R({listeners:{foo:W}});S=new I({items:P});P.fireEvent("foo");expect(V).toBe(P)});it("should fail with scope:'controller'",function(){P=new R({listeners:{foo:W,scope:"controller"}});S=new I({items:P});expect(function(){P.fireEvent("foo")}).toThrow()});it("should resolve to the component with scope:'this'",function(){P=new R({listeners:{foo:W,scope:"this"}});S=new I({items:P});P.fireEvent("foo");expect(V).toBe(P)})});describe("with view controller on parent",function(){beforeEach(function(){K({controller:new M()});X()});it("should resolve to the component with unspecified scope",function(){P=new R({listeners:{foo:W}});S=new I({items:P});P.fireEvent("foo");expect(V).toBe(P)});it("should resolve to the parent view controller with scope:'controller'",function(){P=new R({listeners:{foo:W,scope:"controller"}});S=new I({items:P});P.fireEvent("foo");expect(V).toBe(S.getController())});it("should resolve to the component with scope:'this'",function(){P=new R({listeners:{foo:W,scope:"this"}});S=new I({items:P});P.fireEvent("foo");expect(V).toBe(P)})})})})});describe("suspend/resume layouts",function(){beforeEach(function(){A({renderTo:Ext.getBody()})});function H(){F.suspendLayouts()}function I(){F.resumeLayouts()}function G(J){expect(F.isLayoutSuspended()).toBe(J)}it("should not be suspended by default",function(){G(false)});it("should suspend layouts when suspend is called",function(){H();G(true)});it("should not suspend when resume is called",function(){H();I();G(false)});it("should be suspended after calling suspend more times than resume",function(){H();H();H();I();I();G(true)});it("should not be suspended after calling resume more times than suspend",function(){spyOn(Ext.log,"warn");H();H();I();I();I();G(false)});it("should not run a layout while suspended",function(){var J=jasmine.createSpy();F.on("resize",J);F.suspendLayouts();F.setSize(200,200);expect(J).not.toHaveBeenCalled()});it("should keep any layout pending if resume is called without the flush param",function(){var J=jasmine.createSpy();F.on("resize",J);F.suspendLayouts();F.setSize(200,200);F.resumeLayouts();expect(J).not.toHaveBeenCalled();F.updateLayout();expect(F.el.getWidth()).toBe(200);expect(F.el.getHeight()).toBe(200)});it("should run the layout straight away when resuming layouts with flush",function(){var J=jasmine.createSpy();F.on("resize",J);F.suspendLayouts();F.setSize(200,200);F.resumeLayouts(true);expect(J.callCount).toBe(1)});it("should layout correctly when the sizeModel is altered during a suspend and the component is pending",function(){F.destroy();A({floating:true,autoShow:true});var J=F.componentLayoutCounter;F.suspendLayouts();F.setWidth(200);F.setHeight(200);F.resumeLayouts(true);expect(F.componentLayoutCounter).toBe(J+1);expect(F.getWidth()).toBe(200);expect(F.getHeight()).toBe(200);J=F.componentLayoutCounter;F.suspendLayouts();F.setHtml('<div style="width: 50px; height: 30px;"></div>');F.shrinkWrap=true;F.setWidth(null);F.setHeight(null);F.resumeLayouts(true);expect(F.componentLayoutCounter).toBe(J+1);expect(F.getWidth()).toBe(50);expect(F.getHeight()).toBe(30)});it("should update the size model correctly while suspended as state changes",function(){var N=Ext.layout.SizeModel.sizeModels,L,K;var M=new Ext.container.Container({renderTo:Ext.getBody(),layout:"fit",width:300});function J(P,Q,O){var R=P.getSizeModel();expect(R.width).toBe(Q);expect(R.height).toBe(O)}L=F.componentLayoutCounter;K=M.componentLayoutCounter;Ext.suspendLayouts();J(M,N.configured,N.shrinkWrap);J(F,N.natural,N.shrinkWrap);M.setWidth(600);F.setWidth(400);J(M,N.configured,N.shrinkWrap);J(F,N.configured,N.shrinkWrap);M.add(F);J(M,N.configured,N.shrinkWrap);J(F,N.calculated,N.shrinkWrap);F.setHeight(100);J(M,N.configured,N.shrinkWrap);J(F,N.calculated,N.configured);M.setHeight(200);J(M,N.configured,N.configured);J(F,N.calculated,N.calculated);Ext.resumeLayouts(true);expect(F.componentLayoutCounter).toBe(L+1);expect(M.componentLayoutCounter).toBe(K+1);M.destroy()})});describe("layouts",function(){var G;function H(I){A(Ext.apply({renderTo:Ext.getBody()},I));G=F.componentLayoutCounter}afterEach(function(){G=0});describe("when setting dimensions",function(){describe("setWidth",function(){describe("with a configured width",function(){beforeEach(function(){H({width:200})});it("should trigger a layout when setting a different width",function(){F.setWidth(300);expect(F.componentLayoutCounter).toBe(G+1)});it("should trigger a layout when clearing the width",function(){F.setWidth(null);expect(F.componentLayoutCounter).toBe(G+1)});it("should not trigger a layout when setting the same width",function(){F.setWidth(200);expect(F.componentLayoutCounter).toBe(G)});it("should not trigger a layout when passing undefined",function(){F.setWidth(undefined);expect(F.componentLayoutCounter).toBe(G)})});describe("without a configured width",function(){beforeEach(function(){H()});it("should trigger a layout when setting a width",function(){F.setWidth(300);expect(F.componentLayoutCounter).toBe(G+1)});it("should not trigger a layout when clearing the width",function(){F.setWidth(null);expect(F.componentLayoutCounter).toBe(G)});it("should not trigger a layout when passing undefined",function(){F.setWidth(undefined);expect(F.componentLayoutCounter).toBe(G)})})});describe("setHeight",function(){describe("with a configured height",function(){beforeEach(function(){H({height:200})});it("should trigger a layout when setting a different height",function(){F.setHeight(300);expect(F.componentLayoutCounter).toBe(G+1)});it("should trigger a layout when clearing the height",function(){F.setHeight(null);expect(F.componentLayoutCounter).toBe(G+1)});it("should not trigger a layout when setting the same height",function(){F.setHeight(200);expect(F.componentLayoutCounter).toBe(G)});it("should not trigger a layout when passing undefined",function(){F.setHeight(undefined);expect(F.componentLayoutCounter).toBe(G)})});describe("without a configured height",function(){beforeEach(function(){H()});it("should trigger a layout when setting a height",function(){F.setHeight(300);expect(F.componentLayoutCounter).toBe(G+1)});it("should not trigger a layout when clearing the height",function(){F.setHeight(null);expect(F.componentLayoutCounter).toBe(G)});it("should not trigger a layout when passing undefined",function(){F.setHeight(undefined);expect(F.componentLayoutCounter).toBe(G)})})});describe("setSize",function(){function I(J,K,L){Ext.each(J,function(M,N){Ext.each(K,function(P,O){var Q=L[N][O];it("should"+(!Q?" not ":"")+" layout when "+M.name+" width and "+P.name+" height",function(){F.setSize(M.value,P.value);expect(F.componentLayoutCounter).toBe(G+Q)})})})}describe("with a configured width and configured height",function(){beforeEach(function(){H({width:200,height:200})});I([{name:"setting the same",value:200},{name:"setting a different",value:300},{name:"clearing the",value:null},{name:"leaving the",value:undefined}],[{name:"setting the same",value:200},{name:"setting a different",value:300},{name:"clearing the",value:null},{name:"leaving the",value:undefined}],[[0,1,1,0],[1,1,1,1],[1,1,1,1],[0,1,1,0]])});describe("with a configured width and without a configured height",function(){beforeEach(function(){H({width:200})});I([{name:"setting the same",value:200},{name:"setting a different",value:300},{name:"clearing",value:null},{name:"leaving the",value:undefined}],[{name:"setting a",value:300},{name:"leaving the"}],[[1,0],[1,1],[1,1],[1,0]])});describe("without a configured width and with a configured height",function(){beforeEach(function(){H({height:200})});I([{name:"setting a",value:300},{name:"leaving the"}],[{name:"setting the same",value:200},{name:"setting a different",value:300},{name:"clearing",value:null},{name:"leaving the",value:undefined}],[[1,1,1,1],[0,1,1,0]])});describe("without a configured width and without a configured height",function(){beforeEach(function(){H()});I([{name:"setting a",value:300},{name:"leaving the"}],[{name:"setting a",value:300},{name:"leaving the"}],[[1,1],[1,0]])})})})});describe("xtypes",function(){it("should work with a string",function(){A();expect(F.isXType("component")).toBe(true)});it("should not match incorrectly",function(){A();expect(F.isXType("panel")).toBe(false)});it("should match subclasses by default",function(){var G=new Ext.container.Container();expect(G.isXType("component")).toBe(true);G.destroy()});it("should match exactly if shallow is true",function(){var G=new Ext.container.Container();expect(G.isXType("component",true)).toBe(false);G.destroy()})});describe("render",function(){it("should veto its render",function(){var G=new Ext.Component({renderTo:document.body,listeners:{beforerender:function(){return false}}});expect(G.rendered).toBe(false);G.destroy()});describe("with an existing element",function(){var G;afterEach(function(){G=Ext.destroy(G)});it("should be able to render",function(){var H=Ext.getBody().createChild();A({el:H,renderTo:Ext.getBody()});expect(F.getEl()).toBe(H)});it("should be able to render a panel with component in a fit layout",function(){var H=Ext.getBody(),J=H.createChild();G=new Ext.panel.Panel({el:J,layout:"fit",items:{xtype:"component",width:200,height:200}});G.render();expect(G.el).toBe(J);expect(G.el.component).toBe(G);expect(G.body.component).toBe(G);var I=G.body.el.dom;expect(I.parentNode).toBe(G.el.dom);var K=G.items.getAt(0);expect(K.el.dom.parentNode).toBe(I);expect(K.el.component).toBe(K)});it("should be able to render a panel in panel using fit layout",function(){var H=Ext.getBody(),L=H.createChild(),K=H.createChild();G=new Ext.panel.Panel({el:L,layout:"fit",items:{xtype:"panel",layout:"fit",el:K,width:200,height:200,items:[{xtype:"component"}]}});G.render();expect(G.el).toBe(L);expect(G.el.component).toBe(G);expect(G.body.component).toBe(G);var J=G.body.el.dom;expect(J.parentNode).toBe(G.el.dom);var I=G.items.getAt(0);var N=I.body.el.dom;expect(I.el.dom.parentNode).toBe(J);expect(N.parentNode).toBe(I.el.dom);var M=I.items.getAt(0);expect(M.el.dom.parentNode).toBe(N);expect(M.el.component).toBe(M)});it("should be able to render a panel with component in an anchor layout",function(){var H=Ext.getBody(),J=H.createChild();G=new Ext.panel.Panel({el:J,layout:"anchor",items:{xtype:"component",width:200,height:200}});G.render();expect(G.el).toBe(J);expect(G.el.component).toBe(G);expect(G.body.component).toBe(G);var I=G.body.el.dom;expect(I.parentNode).toBe(G.el.dom);var M=G.layout.outerCt;expect(M.component).toBe(G);expect(M.dom.parentNode).toBe(I);var L=G.layout.innerCt;expect(L.component).toBe(G);expect(L.dom.parentNode).toBe(M.dom);var K=G.items.getAt(0);expect(K.el.dom.parentNode).toBe(L.dom);expect(K.el.component).toBe(K)});it("should be able to render a panel with component in an hbox layout",function(){var H=Ext.getBody(),J=H.createChild();G=new Ext.panel.Panel({el:J,layout:"hbox",items:{xtype:"component",width:200,height:200}});G.render();expect(G.el).toBe(J);expect(G.el.component).toBe(G);expect(G.body.component).toBe(G);var I=G.body.el.dom;expect(I.parentNode).toBe(G.el.dom);var L=G.layout.innerCt;expect(L.component).toBe(G);expect(L.dom.parentNode).toBe(I);var M=G.layout.targetEl;expect(M.component).toBe(G);expect(M.dom.parentNode).toBe(L.dom);var K=G.items.getAt(0);expect(K.el.dom.parentNode).toBe(M.dom);expect(K.el.component).toBe(K)});it("should be able to render a panel with component in a vbox layout",function(){var H=Ext.getBody(),J=H.createChild();G=new Ext.panel.Panel({el:J,layout:"vbox",items:{xtype:"component",width:200,height:200}});G.render();expect(G.el).toBe(J);expect(G.el.component).toBe(G);expect(G.body.component).toBe(G);var I=G.body.el.dom;expect(I.parentNode).toBe(G.el.dom);var L=G.layout.innerCt;expect(L.component).toBe(G);expect(L.dom.parentNode).toBe(I);var M=G.layout.targetEl;expect(M.component).toBe(G);expect(M.dom.parentNode).toBe(L.dom);var K=G.items.getAt(0);expect(K.el.dom.parentNode).toBe(M.dom);expect(K.el.component).toBe(K)})})});describe("enable/disable",function(){var G,H;var I=Ext.define(null,{extend:"Ext.Component",onDisableCount:0,onEnableCount:0,unmaskCount:0,maskCount:0,onDisable:function(){++this.onDisableCount;this.callParent(arguments)},onEnable:function(){++this.onEnableCount;this.callParent(arguments)},unmask:function(){++this.unmaskCount;this.callParent(arguments)},mask:function(){++this.maskCount;this.callParent(arguments)}});beforeEach(function(){G=jasmine.createSpy();H=jasmine.createSpy()});afterEach(function(){G=H=null});function J(K){K=Ext.apply({listeners:{enable:G,disable:H}},K);F=new I(K)}describe("configuration",function(){describe("default",function(){it("should be enabled",function(){J();expect(F.isDisabled()).toBe(false);expect(F.disabled).toBe(false)});describe("events/template methods",function(){it("should not fire the enable event",function(){J();expect(G).not.toHaveBeenCalled()});it("should not call onEnable before or after rendered",function(){J();expect(F.onEnableCount).toBe(0);F.render(Ext.getBody());expect(F.onEnableCount).toBe(0)})});describe("disabledCls",function(){it("should not have the disabledCls after render",function(){J({renderTo:Ext.getBody()});expect(F.getEl().hasCls(F.disabledCls)).toBe(false)})})});describe("disabled: true",function(){it("should be disabled",function(){J({disabled:true});expect(F.isDisabled()).toBe(true);expect(F.disabled).toBe(true)});describe("events/template methods",function(){it("should not fire the disable event",function(){J({disabled:true});expect(H).not.toHaveBeenCalled()});it("should call onDisable when rendered",function(){J({disabled:true});expect(F.onDisableCount).toBe(0);F.render(Ext.getBody());expect(F.onDisableCount).toBe(1)})});describe("disabledCls",function(){it("should have the disabledCls after render",function(){J({renderTo:Ext.getBody(),disabled:true});expect(F.getEl().hasCls(F.disabledCls)).toBe(true)})})})});describe("methods",function(){describe("enable",function(){describe("before render",function(){describe("return type",function(){describe("when disabled",function(){it("should return the component",function(){J({disabled:true});expect(F.enable()).toBe(F)})});describe("when enabled",function(){it("should return the component",function(){J();expect(F.enable()).toBe(F)})})});describe("events/template methods",function(){describe("when disabled",function(){it("should fire the enable event",function(){J({disabled:true});F.enable();expect(G.callCount).toBe(1);expect(G.mostRecentCall.args[0]).toBe(F)});it("should not fire the enable event when passing silent: true",function(){J({disabled:true});F.enable(true);expect(G).not.toHaveBeenCalled()});it("should not call onEnable",function(){J({disabled:true});F.enable();expect(F.onEnableCount).toBe(0)});it("should not call onEnable after rendering",function(){J({disabled:true});F.enable();F.render(Ext.getBody());expect(F.onEnableCount).toBe(0)})});describe("when enabled",function(){it("should not fire the enable event",function(){J();F.enable();expect(G).not.toHaveBeenCalled()});it("should not call onEnable",function(){J();F.enable();expect(F.onEnableCount).toBe(0)});it("should not call onEnable after rendering",function(){J();F.enable();F.render(Ext.getBody());expect(F.onEnableCount).toBe(0)})})});describe("disabledCls",function(){it("should not have the disabledCls after render",function(){J({disabled:true});F.enable();F.render(Ext.getBody());expect(F.getEl().hasCls(F.disabledCls)).toBe(false)})})});describe("after render",function(){describe("return type",function(){describe("when disabled",function(){it("should return the component",function(){J({renderTo:Ext.getBody(),disabled:true});expect(F.enable()).toBe(F)})});describe("when enabled",function(){it("should return the component",function(){J({renderTo:Ext.getBody()});expect(F.enable()).toBe(F)})})});describe("events/template methods",function(){describe("when disabled",function(){it("should fire the enable event",function(){J({renderTo:Ext.getBody(),disabled:true});F.enable();expect(G.callCount).toBe(1);expect(G.mostRecentCall.args[0]).toBe(F)});it("should not fire the enable event when passing silent: true",function(){J({renderTo:Ext.getBody(),disabled:true});F.enable(true);expect(G).not.toHaveBeenCalled()});it("should call onEnable",function(){J({renderTo:Ext.getBody(),disabled:true});expect(F.onEnableCount).toBe(0);F.enable();expect(F.onEnableCount).toBe(1)})});describe("when enabled",function(){it("should not fire the enable event",function(){J({renderTo:Ext.getBody()});F.enable();expect(G).not.toHaveBeenCalled()});it("should not call onEnable",function(){J();F.enable();expect(F.onEnableCount).toBe(0)})})});describe("disabledCls",function(){it("should not have the disabledCls",function(){J({renderTo:Ext.getBody(),disabled:true});F.enable();expect(F.getEl().hasCls(F.disabledCls)).toBe(false)})})})});describe("disable",function(){describe("before render",function(){describe("return type",function(){describe("when enabled",function(){it("should return the component",function(){J();expect(F.disable()).toBe(F)})});describe("when disabled",function(){it("should return the component",function(){J({disabled:true});expect(F.disable()).toBe(F)})})});describe("events/template methods",function(){describe("when enabled",function(){it("should fire the disable event",function(){J();F.disable();expect(H.callCount).toBe(1);expect(H.mostRecentCall.args[0]).toBe(F)});it("should not fire the disable event when passing silent: true",function(){J();F.disable(true);expect(H).not.toHaveBeenCalled()});it("should not call onDisable",function(){J();F.disable();expect(F.onDisableCount).toBe(0)});it("should call onDisable after rendering",function(){J();F.disable();expect(F.onDisableCount).toBe(0);F.render(Ext.getBody());expect(F.onDisableCount).toBe(1)})});describe("when disabled",function(){it("should not fire the enable event",function(){J({disabled:true});F.disable();expect(H).not.toHaveBeenCalled()});it("should not call onDisable",function(){J({disabled:true});F.disable();expect(F.onDisableCount).toBe(0)});it("should call onDisable after rendering",function(){J({disabled:true});F.disable();expect(F.onDisableCount).toBe(0);F.render(Ext.getBody());expect(F.onDisableCount).toBe(1)})})});describe("disabledCls",function(){it("should have the disabledCls after render",function(){J();F.disable();F.render(Ext.getBody());expect(F.getEl().hasCls(F.disabledCls)).toBe(true)})})});describe("after render",function(){describe("return type",function(){describe("when enabled",function(){it("should return the component",function(){J({renderTo:Ext.getBody()});expect(F.disable()).toBe(F)})});describe("when disabled",function(){it("should return the component",function(){J({renderTo:Ext.getBody(),disabled:true});expect(F.disable()).toBe(F)})})});describe("events/template methods",function(){describe("when disabled",function(){it("should not fire the disable event",function(){J({renderTo:Ext.getBody(),disabled:true});F.disable();expect(H).not.toHaveBeenCalled()});it("should not call onDisable",function(){J();F.disable();expect(F.onDisableCount).toBe(0)})});describe("when enabled",function(){it("should fire the disable event",function(){J({renderTo:Ext.getBody()});F.disable();expect(H.callCount).toBe(1);expect(H.mostRecentCall.args[0]).toBe(F)});it("should not fire the disable event when passing silent: true",function(){J({renderTo:Ext.getBody()});F.disable(true);expect(H).not.toHaveBeenCalled()});it("should call onDisable",function(){J({renderTo:Ext.getBody()});expect(F.onDisableCount).toBe(0);F.disable();expect(F.onDisableCount).toBe(1)})})});describe("disabledCls",function(){it("should have the disabledCls",function(){J({renderTo:Ext.getBody()});F.disable();expect(F.getEl().hasCls(F.disabledCls)).toBe(true)})})})});describe("setDisabled",function(){describe("before render",function(){it("should call the disabled method when a truthy value is passed",function(){J();var K=spyOn(F,"disable");F.setDisabled(true);expect(K).toHaveBeenCalled()});it("should call the enable method when a falsy value is passed",function(){J();var K=spyOn(F,"enable");F.setDisabled(false);expect(K).toHaveBeenCalled()})});describe("after render",function(){it("should call the disabled method when a truthy value is passed",function(){J({renderTo:Ext.getBody()});var K=spyOn(F,"disable");F.setDisabled(true);expect(K).toHaveBeenCalled()});it("should call the enable method when a falsy value is passed",function(){J({renderTo:Ext.getBody()});var K=spyOn(F,"enable");F.setDisabled(false);expect(K).toHaveBeenCalled()})})})});describe("masking",function(){describe("with maskOnDisable: false",function(){describe("configured",function(){it("should not mask",function(){J({renderTo:Ext.getBody(),disabled:true,maskOnDisable:false});expect(F.maskCount).toBe(0)})});describe("before render",function(){it("should not mask when rendered",function(){J({maskOnDisable:false});F.disable();F.render(Ext.getBody());expect(F.maskCount).toBe(0)})});describe("after render",function(){it("should not mask when rendered",function(){J({renderTo:Ext.getBody(),maskOnDisable:false});F.disable();expect(F.maskCount).toBe(0)})})});describe("with maskOnDisable: true",function(){describe("disable",function(){describe("configured",function(){it("should mask",function(){J({renderTo:Ext.getBody(),disabled:true,maskOnDisable:true});expect(F.maskCount).toBe(1)})});describe("before render",function(){it("should mask when rendered",function(){J({maskOnDisable:true});F.disable();F.render(Ext.getBody());expect(F.maskCount).toBe(1)})});describe("after render",function(){it("should mask",function(){J({renderTo:Ext.getBody(),maskOnDisable:true});F.disable();expect(F.maskCount).toBe(1)})})});describe("enable",function(){describe("before render",function(){it("should not mask when rendered",function(){J({maskOnDisable:true,disabled:true});F.enable();F.render(Ext.getBody());expect(F.maskCount).toBe(0)})});describe("after render",function(){it("should clear the mask",function(){J({renderTo:Ext.getBody(),maskOnDisable:true,disabled:true});F.enable();expect(F.unmaskCount).toBe(1)})})})})});(Ext.isIE?xdescribe:describe)("disabling the dom element",function(){var K;afterEach(function(){K=null});Ext.each(["button","input","select","textarea","fieldset"],function(L){it("should disable "+L,function(){A({autoEl:{tag:L},maskOnDisable:true,renderTo:Ext.getBody()});K=F.el.dom;F.disable();expect(K.nodeName.toLowerCase()).toBe(L);expect(K.disabled).toBe(true)})});Ext.each(["div","table","p"],function(L){it("should not disable "+L,function(){A({autoEl:{tag:L},maskOnDisable:true,renderTo:Ext.getBody()});K=F.el.dom;F.disable();expect(K.nodeName.toLowerCase()).toBe(L);expect(K.disabled).toBeFalsy()})})});(Ext.isIE?xdescribe:describe)("masking a disabled comp",function(){Ext.each(["button","fieldset","div","p"],function(K){it("should mask "+K,function(){A({autoEl:{tag:K},renderTo:Ext.getBody()});spyOn(F,"mask");F.disable();expect(F.mask).toHaveBeenCalled()})});Ext.each(["input","select","textarea","option","optgroup","table"],function(K){it("should not mask "+K,function(){A({autoEl:{tag:K},renderTo:Ext.getBody()});spyOn(F,"mask");F.disable();expect(F.mask).not.toHaveBeenCalled()})})})});describe("component lookup by element",function(){describe("focusable components",function(){beforeEach(function(){A({renderTo:Ext.getBody(),autoEl:"button",childEls:["divEl","spanEl"],focusable:true,renderTpl:['<div id="{id}-divEl" data-ref="divEl">','<span id="{id}-spanEl" data-ref="spanEl">foo bar</span>',"</div>"],getFocusEl:function(){return this.el}})});it("should add "+B+" attribute to the focusable element",function(){var G=F.getFocusEl().getAttribute(B);expect(G).toBe(F.id)});it("should be able to look Component up by "+B+" attribute",function(){var G=Ext.Component.fromElement(F.getFocusEl());expect(G).toEqual(F)});it("should be able to look Component up by its inner element",function(){var G=Ext.Component.fromElement(F.spanEl);expect(G).toEqual(F)});it("should return null if no Component is found",function(){var G=Ext.Component.fromElement(Ext.getBody());expect(G).toBe(null)})});describe("non-focusable components",function(){beforeEach(function(){A({renderTo:Ext.getBody(),childEls:["divEl"],renderTpl:['<div id="{id}-divEl" data-ref="divEl">',"foo bar","</div>"]})});it("should not add "+B+" attribute to Component's elements",function(){var G=F.el.down("["+B+"]");expect(G).toEqual(null)});it("should be able to look Component up by its main element",function(){var G=Ext.Component.fromElement(F.el);expect(G).toEqual(F)});it("should be able to look Component up by its inner elements",function(){var G=Ext.Component.fromElement(F.divEl);expect(G).toEqual(F)})})});describe("focusenter/focusleave",function(){var S,V,Z,R,I,X,J,Y,L,Q,G,P,M,U,W,T,O,H,N,K;beforeEach(function(){F=new Ext.container.Container({renderTo:document.body,items:[{itemId:"inner-1",xtype:"container",items:{itemId:"inner-11",xtype:"container",items:{itemId:"textfield-1",xtype:"textfield"}}},{itemId:"inner-2",xtype:"container",items:{itemId:"inner-21",xtype:"container",items:{itemId:"textfield-2",xtype:"textfield"}}}]});S=F.child("#inner-1");V=S.child("#inner-11");Z=V.child("#textfield-1");R=F.child("#inner-2");I=R.child("#inner-21");X=I.child("#textfield-2");J=spyOn(F,"onFocusEnter").andCallThrough();Y=spyOn(F,"onFocusLeave").andCallThrough();L=spyOn(S,"onFocusEnter").andCallThrough();Q=spyOn(V,"onFocusEnter").andCallThrough();G=spyOn(Z,"onFocusEnter").andCallThrough();P=spyOn(S,"onFocusLeave").andCallThrough();M=spyOn(V,"onFocusLeave").andCallThrough();U=spyOn(Z,"onFocusLeave").andCallThrough();W=spyOn(R,"onFocusEnter").andCallThrough();T=spyOn(I,"onFocusEnter").andCallThrough();O=spyOn(X,"onFocusEnter").andCallThrough();H=spyOn(R,"onFocusLeave").andCallThrough();N=spyOn(I,"onFocusLeave").andCallThrough();K=spyOn(X,"onFocusLeave").andCallThrough()});it("should fire focusEnter on the whole tree into which focus enters, and focusleave on the whole tree from which focus leaves",function(){expect(F.containsFocus).toBeFalsy();expect(S.containsFocus).toBeFalsy();expect(V.containsFocus).toBeFalsy();expect(Z.containsFocus).toBeFalsy();expect(R.containsFocus).toBeFalsy();expect(I.containsFocus).toBeFalsy();expect(X.containsFocus).toBeFalsy();Z.focus();waitsFor(function(){return F.containsFocus});runs(function(){expect(J.callCount).toBe(1);expect(L.callCount).toBe(1);expect(Q.callCount).toBe(1);expect(G.callCount).toBe(1);expect(W.callCount).toBe(0);expect(T.callCount).toBe(0);expect(O.callCount).toBe(0);expect(S.containsFocus).toBe(true);expect(V.containsFocus).toBe(true);expect(Z.containsFocus).toBe(true);expect(R.containsFocus).toBeFalsy();expect(I.containsFocus).toBeFalsy();expect(X.containsFocus).toBeFalsy();X.focus()});waitsFor(function(){return R.containsFocus});runs(function(){expect(J.callCount).toBe(1);expect(L.callCount).toBe(1);expect(Q.callCount).toBe(1);expect(G.callCount).toBe(1);expect(Y.callCount).toBe(0);expect(P.callCount).toBe(1);expect(Q.callCount).toBe(1);expect(U.callCount).toBe(1);expect(W.callCount).toBe(1);expect(T.callCount).toBe(1);expect(O.callCount).toBe(1);expect(F.containsFocus).toBe(true);expect(R.containsFocus).toBe(true);expect(I.containsFocus).toBe(true);expect(X.containsFocus).toBe(true);expect(S.containsFocus).toBe(false);expect(V.containsFocus).toBe(false);expect(Z.containsFocus).toBe(false)})})});describe("visibility",function(){});describe("rendering",function(){it("should set the rendered property  when it's rendered",function(){A();expect(F.rendered).toBeFalsy();F.render(Ext.getBody());expect(F.rendered).toBeTruthy()});describe("cancelling render",function(){it("should not create an element if we veto beforerender and do not provide an el",function(){A({id:"testComp"});F.on("beforerender",function(){return false});F.render(Ext.getBody());expect(Ext.get("testComp")).toBeNull()});it("should not move the element if we veto beforerender and we do provide an el",function(){var H=Ext.getBody().createChild({id:"a"});var G=Ext.getBody().createChild({id:"b"});A({el:H});F.on("beforerender",function(){return false});F.render(G);expect(H.parent()).not.toBe(G);expect(H.parent().dom).toBe(Ext.getBody().dom);H.remove();G.remove()})});describe("renderTpl",function(){it("should not use any renderTpl by default",function(){A({renderTo:Ext.getBody()});expect(F.el.dom.firstChild).toBeNull()});it("should take a renderTpl",function(){A({renderTo:Ext.getBody(),renderTpl:"<div><span>a</span></div>"});expect(F.el.dom).hasHTML("<div><span>a</span></div>")})});describe("rendering to the dom",function(){it("should use the renderTo option",function(){var G=Ext.getBody().createChild();A({renderTo:G});expect(G.dom.getElementsByTagName("div")[0]).toEqual(F.el.dom);G.remove()});it("should not render if not explicitly told to",function(){var G=document.body.getElementsByTagName("div").length;A();expect(document.body.getElementsByTagName("div").length).toEqual(G)});it("should render to a specific element",function(){var G=Ext.getBody().createChild();A();F.render(G);expect(G.dom.getElementsByTagName("div")[0]).toEqual(F.el.dom);G.remove()})});describe("content",function(){describe("initialization",function(){it("should accept an html string",function(){A({html:"foo",renderTo:Ext.getBody()});expect(F.el.dom).hasHTML("foo")});it("should accept a markup config for html",function(){A({html:{tag:"span",html:"foo"},renderTo:document.body});expect(F.el.dom).hasHTML("<span>foo</span>")});it("should accept a contentEl",function(){var G=Ext.getBody().createChild({tag:"div",html:"foo"});A({contentEl:G,renderTo:document.body});expect(F.el.dom.firstChild).hasHTML("foo")});describe("tpl",function(){it("should accept a raw template",function(){A({renderTo:Ext.getBody(),tpl:"{first} - {last}",data:{first:"John",last:"Foo"}});expect(F.el.dom).hasHTML("John - Foo")});it("should take a template instance",function(){A({tpl:new Ext.XTemplate("{0} - {1}"),data:[3,7],renderTo:Ext.getBody()});expect(F.el.dom).hasHTML("3 - 7")})})});describe("before render",function(){it("should be able to change the html before render",function(){A();F.update("foo");F.render(Ext.getBody());expect(F.el.dom).hasHTML("foo")});it("should be able to update the markup when not rendered",function(){A();F.update({tag:"span",html:"bar"});F.render(Ext.getBody());expect(F.el.dom).hasHTML("<span>bar</span>")});it("should be able to change the data when not rendered",function(){A({tpl:"{a} - {b}"});F.update({a:"foo",b:"bar"});F.render(Ext.getBody());expect(F.el.dom).hasHTML("foo - bar")})});describe("after render",function(){it("should change the html after being rendered",function(){A({renderTo:Ext.getBody(),html:"foo"});expect(F.el.dom).hasHTML("foo");F.update("bar");expect(F.el.dom).hasHTML("bar")});it("should change markup if an html config is provided",function(){A({renderTo:Ext.getBody(),html:{tag:"span",html:"1"}});expect(F.el.dom).hasHTML("<span>1</span>");F.update({tag:"div",html:"2"});expect(F.el.dom).hasHTML("<div>2</div>")});it("should update tpl data",function(){A({renderTo:Ext.getBody(),tpl:"{a} - {b}",data:{a:"v1",b:"v2"}});expect(F.el.dom).hasHTML("v1 - v2");F.update({a:"v3",b:"v4"});expect(F.el.dom).hasHTML("v3 - v4")});it("should use the correct writeMode",function(){A({renderTo:Ext.getBody(),tpl:"{a} - {b}",tplWriteMode:"append",data:{a:"v1",b:"v2"}});expect(F.el.dom).hasHTML("v1 - v2");F.update({a:"v3",b:"v4"});expect(F.el.dom).hasHTML("v1 - v2v3 - v4")})})});describe("afterrender event",function(){var G,H;beforeEach(function(){G={handler:function(){}};H=spyOn(G,"handler")});it('should fire "afterrender" after render',function(){expect(H.callCount).toEqual(0);A({listeners:{afterrender:G.handler},renderTo:Ext.getBody()});expect(H.callCount).toEqual(1)})})});describe("addCls/removeCls",function(){it("should be able to add class when not rendered",function(){A();F.addCls("foo");F.render(Ext.getBody());expect(F.el.hasCls("foo")).toBe(true)});it("should add the class if the item is rendered",function(){A({renderTo:Ext.getBody()});F.addCls("foo");expect(F.el.hasCls("foo")).toBe(true)});it("should be able to remove class when not rendered",function(){A({additionalCls:["foo"]});F.removeCls("foo");F.render(Ext.getBody());expect(F.el.hasCls("foo")).toBe(false)});it("should remove the class if the item is rendered",function(){A({renderTo:Ext.getBody(),additionalCls:["foo"]});F.removeCls("foo");expect(F.el.hasCls("foo")).toBe(false)})});describe("styling",function(){it("should apply the cls to the element",function(){A({renderTo:Ext.getBody(),cls:"foo"});expect(F.el.hasCls("foo")).toBe(true)});it("should add the baseCls to the element",function(){A({renderTo:Ext.getBody()});expect(F.el.hasCls(F.baseCls)).toBe(true)});describe("style",function(){it("should accept a style string",function(){A({renderTo:Ext.getBody(),style:"background-color: red;"});expect(F.el.dom.style.backgroundColor).toMatch("^(red|#ff0000)$")});it("should accept a style config",function(){A({renderTo:Ext.getBody(),style:{color:"red"}});expect(F.el.dom.style.color).toMatch("^(red|#ff0000)$")})});describe("padding",function(){it("should accept a single number",function(){A({renderTo:Ext.getBody(),padding:5});var G=F.el.dom.style;expect(G.paddingTop).toEqual("5px");expect(G.paddingRight).toEqual("5px");expect(G.paddingBottom).toEqual("5px");expect(G.paddingLeft).toEqual("5px")});it("should accept a css style string",function(){A({renderTo:Ext.getBody(),padding:"1 2 3 4"});var G=F.el.dom.style;expect(G.paddingTop).toEqual("1px");expect(G.paddingRight).toEqual("2px");expect(G.paddingBottom).toEqual("3px");expect(G.paddingLeft).toEqual("4px")})});describe("margin",function(){it("should accept a single number",function(){A({renderTo:Ext.getBody(),margin:1});var G=F.el.dom.style;expect(G.marginTop).toEqual("1px");expect(G.marginRight).toEqual("1px");expect(G.marginBottom).toEqual("1px");expect(G.marginLeft).toEqual("1px")});it("should accept a css style string",function(){A({renderTo:Ext.getBody(),margin:"4 5 6 7"});var G=F.el.dom.style;expect(G.marginTop).toEqual("4px");expect(G.marginRight).toEqual("5px");expect(G.marginBottom).toEqual("6px");expect(G.marginLeft).toEqual("7px")})})});describe("plugins",function(){var G;beforeEach(function(){G=Ext.define("MyPlugin",{alias:"plugin.myplug",constructor:function(H){this.marked=(H||{}).marked},init:function(H){H.marked=this.marked||true}})});afterEach(function(){Ext.undefine("MyPlugin")});it("should accept a single plugin",function(){var H=new G();spyOn(H,"init");A({plugins:H});expect(H.init).toHaveBeenCalledWith(F)});it("should accept an array of plugins",function(){var J=new G(),I=new G(),H=new G();spyOn(J,"init");spyOn(I,"init");spyOn(H,"init");A({plugins:[J,I,H]});expect(J.init).toHaveBeenCalledWith(F);expect(I.init).toHaveBeenCalledWith(F);expect(H.init).toHaveBeenCalledWith(F)});it("should be able to create string plugins",function(){A({plugins:"myplug"});expect(F.marked).toBeTruthy()});it("should be able to create config object plugins",function(){A({plugins:{ptype:"myplug",marked:"foo"}});expect(F.marked).toBe("foo")});describe("adding dynamically",function(){it("should be able to add if there are no existing plugins",function(){var I=new G(),H=new G();spyOn(H,"init");A({plugins:[I]});F.addPlugin(H);expect(H.init).toHaveBeenCalled()});it("should be able to add if there are existing plugins",function(){var H=new G();spyOn(H,"init");A();F.addPlugin(H);expect(H.init).toHaveBeenCalled()})});it("should not break on getPlugin when there are no plugins",function(){A();var H=F.getPlugin("foo");expect(H).toBe(null)});it("should be able to add a plugin")});describe("previousSibling",function(){var G;beforeEach(function(){A();G=new Ext.container.Container()});afterEach(function(){G.destroy()});it("should return null if it is not in a container",function(){expect(F.previousSibling()).toBeNull()});it("should return null if it is the only item in the container",function(){G.add(F);expect(F.previousSibling()).toBeNull()});it("should return null if it is the first item in the container",function(){G.add([F,{},{},{},{}]);expect(F.previousSibling()).toBeNull()});it("should return the closest previous sibling",function(){var H=new Ext.Component();G.add([{},{},{},H,F,{}]);expect(F.previousSibling()).toBe(H)});it("should return null if no previous items match the selector",function(){G.add([{},{},{},{},F]);expect(F.previousSibling("*[aProp=1]")).toBeNull()});it("should return an item matching the selector",function(){var H=new Ext.Component({aProp:1});G.add([{},H,{},{},{},F]);expect(F.previousSibling("*[aProp=1]")).toBe(H)});it("should return the first item matching the selector",function(){var H=new Ext.Component({aProp:1});G.add([{},{aProp:1},H,{},{},F]);expect(F.previousSibling("*[aProp=1]")).toBe(H)})});describe("previousNode",function(){var H,G;beforeEach(function(){A();H=new Ext.container.Container();G=new Ext.container.Container()});afterEach(function(){H.destroy();G.destroy();H=G=null});describe("without selectors",function(){it("should return null if it is not in a container",function(){expect(F.previousNode()).toBeNull()});it("should return the owner container if there are no siblings",function(){H.add(F);expect(F.previousNode()).toBe(H)});it("should return the previous sibling if it exists",function(){var I=new Ext.Component();H.add(I,F);expect(F.previousNode()).toBe(I)});it("should be able to select itself if includeSelf is passed",function(){H.add(F);expect(F.previousNode(null,true)).toBe(F)})});describe("with selectors",function(){describe("flat",function(){it("should return null if no component matches the selector",function(){H.add(F);expect(F.previousNode("foo")).toBeNull()});it("should return the previous sibling if it matches the selector",function(){var I=new Ext.Component({type:"foo"});H.add(I,F);expect(F.previousNode("[type=foo]")).toBe(I)});it("should return any previous sibling that matches the selector",function(){var I=new Ext.Component({type:"foo"});H.add(I,{},{},{},F);expect(F.previousNode("[type=foo]")).toBe(I)});it("should return the closest previous sibling that matches the selector",function(){var I=new Ext.Component({type:"foo"});H.add({},{type:"foo"},I,{},F);expect(F.previousNode("[type=foo]")).toBe(I)});it("should return the container if the container matches the selector and no siblings do",function(){H.add({},{},{},F);H.type="foo";expect(F.previousNode("[type=foo]")).toBe(H)})});describe("nested",function(){it("should give precedence to children",function(){var I=new Ext.Component({type:"foo"});G.add(I);H.add({xtype:"component",type:"foo"},G,F);expect(F.previousNode("[type=foo]")).toBe(I)});it("should match the deepest, last child",function(){var I=new Ext.Component({type:"foo"});G.add({xtype:"component"},{xtype:"component",type:"foo"},{xtype:"component"},{xtype:"container",items:[{xtype:"component"},{xtype:"container",items:[{xtype:"component"},I,{xtype:"component"}]}]});H.add(G,F);expect(F.previousNode("[type=foo]")).toBe(I)});it("should match any sibling if children don't match",function(){var I=new Ext.Component({type:"foo"});G.add({xtype:"component"},{xtype:"component"},{xtype:"component"},{xtype:"container",items:[{xtype:"component"},{xtype:"container",items:[{xtype:"component"},{xtype:"component"},{xtype:"component"}]}]});H.add(I,G,F);expect(F.previousNode("[type=foo]")).toBe(I)})})})});describe("nextSibling",function(){var G;beforeEach(function(){A();G=new Ext.container.Container()});afterEach(function(){G.destroy()});it("should return null if it is not in a container",function(){expect(F.nextSibling()).toBeNull()});it("should return null if it is the only item in the container",function(){G.add(F);expect(F.nextSibling()).toBeNull()});it("should return null if it is the last item in the container",function(){G.add([{},{},{},{},F]);expect(F.nextSibling()).toBeNull()});it("should return the closest next sibling",function(){var H=new Ext.Component();G.add([{},{},{},F,H,{}]);expect(F.nextSibling()).toBe(H)});it("should return null if no next items match the selector",function(){G.add([F,{},{},{},{}]);expect(F.nextSibling("*[aProp=1]")).toBeNull()});it("should return an item matching the selector",function(){var H=new Ext.Component({aProp:1});G.add([F,{},{},H,{}]);expect(F.nextSibling("*[aProp=1]")).toBe(H)});it("should return the first item matching the selector",function(){var H=new Ext.Component({aProp:1});G.add([F,{},H,{aProp:1},{},{}]);expect(F.nextSibling("*[aProp=1]")).toBe(H)})});describe("nextNode",function(){var H,G;beforeEach(function(){A();H=new Ext.container.Container();G=new Ext.container.Container()});afterEach(function(){H.destroy();G.destroy();H=G=null});describe("without selectors",function(){it("should return null if it is not in a container",function(){expect(F.nextNode()).toBeNull()});it("should return the nextNode of the owner container if there are no siblings",function(){var I=new Ext.Component();G.add(F);H.add(G,I);expect(F.nextNode()).toBe(I)});it("should return the next sibling if it exists",function(){var I=new Ext.Component();H.add(F,I);expect(F.nextNode()).toBe(I)});it("should be able to select itself if includeSelf is passed",function(){H.add(F);expect(F.nextNode(null,true)).toBe(F)})});describe("with selectors",function(){describe("flat",function(){it("should return null if no component matches the selector",function(){H.add(F);expect(F.nextNode("foo")).toBeNull()});it("should return the next sibling if it matches the selector",function(){var I=new Ext.Component({type:"foo"});H.add(F,I);expect(F.nextNode("[type=foo]")).toBe(I)});it("should return any next sibling that matches the selector",function(){var I=new Ext.Component({type:"foo"});H.add(F,{},{},{},I);expect(F.nextNode("[type=foo]")).toBe(I)});it("should return the closest next sibling that matches the selector",function(){var I=new Ext.Component({type:"foo"});H.add(F,{},I,{},{type:"foo"},{});expect(F.nextNode("[type=foo]")).toBe(I)});it("should return the owner container nextNode if the nextNode matches the selector and no siblings do",function(){var I=new Ext.Component({type:"foo"});G.add(F,{},{},{});H.add(G,I);expect(F.nextNode("[type=foo]")).toBe(I)})});describe("nested",function(){it("should give precedence to children",function(){var I=new Ext.Component({type:"foo"});G.add(I);H.add(F,G,{xtype:"component",type:"foo"});expect(F.nextNode("[type=foo]")).toBe(I)});it("should match the least deep, first child",function(){var I=new Ext.Component({type:"foo"});G.add({xtype:"component"},I,{xtype:"component"},{xtype:"container",items:[{xtype:"component"},{xtype:"container",items:[{xtype:"component"},{xtype:"component",type:"foo"},{xtype:"component"}]}]});H.add(F,G);expect(F.nextNode("[type=foo]")).toBe(I)});it("should match any sibling if children don't match",function(){var I=new Ext.Component({type:"foo"});G.add({xtype:"component"},{xtype:"component"},{xtype:"component"},{xtype:"container",items:[{xtype:"component"},{xtype:"container",items:[{xtype:"component"},{xtype:"component"},{xtype:"component"}]}]});H.add(F,G,I);expect(F.nextNode("[type=foo]")).toBe(I)})})})});describe("rendering cycle",function(){var H,G;beforeEach(function(){H=function(M,L,K){var J={},I={};J[M+"render"]=L;I[M+"render"]=K;G=new Ext.container.Container({defaultType:"component",items:[{id:"a",listeners:J},{id:"b",cls:"clsB"},{id:"c",cls:"clsC"},{id:"d",listeners:I}]})}});afterEach(function(){H=null;Ext.destroy(G);G=null});it("should be able to add a class in beforerender using the API",function(){H("before",function(I){I.next().addCls("foo")},function(I){I.prev().addCls("bar")});G.render(Ext.getBody());expect(Ext.getCmp("b").el.hasCls("foo")).toBe(true);expect(Ext.getCmp("c").el.hasCls("bar")).toBe(true)});it("should be able to add a class in beforerender using this.cls",function(){H("before",function(I){I.next().cls+=" foo"},function(I){});G.render(Ext.getBody());expect(Ext.getCmp("b").el.hasCls("foo")).toBe(true)});it("should be able to check if a class exists in beforerender",function(){var J,I;H("before",function(K){J=K.next().hasCls("clsB")},function(K){I=K.prev().hasCls("clsC")});G.render(Ext.getBody());expect(J).toBe(true);expect(I).toBe(true)});it("should be able to remove a class in beforerender",function(){H("before",function(I){I.next().removeCls("clsB")},function(I){I.prev().removeCls("clsC")});G.render(Ext.getBody());expect(Ext.getCmp("b").el.hasCls("clsB")).toBe(false);expect(Ext.getCmp("c").el.hasCls("clsC")).toBe(false)});it("should be able to add a class in aftererender",function(){H("after",function(I){I.next().addCls("foo")},function(I){I.prev().addCls("bar")});G.render(Ext.getBody());expect(Ext.getCmp("b").el.hasCls("foo")).toBe(true);expect(Ext.getCmp("c").el.hasCls("bar")).toBe(true)});it("should be able to check if a class exists in afterrender",function(){var J,I;H("before",function(K){J=K.next().hasCls("clsB")},function(K){I=K.prev().hasCls("clsC")});G.render(Ext.getBody());expect(J).toBe(true);expect(I).toBe(true)});it("should be able to remove a class in afterrender",function(){H("after",function(I){I.next().removeCls("clsB")},function(I){I.prev().removeCls("clsC")});G.render(Ext.getBody());expect(Ext.getCmp("b").el.hasCls("clsB")).toBe(false);expect(Ext.getCmp("c").el.hasCls("clsC")).toBe(false)})});describe("destruction",function(){it("should be destroyed if not rendered",function(){A();expect(F.destroyed).toBe(false);F.destroy();expect(F.destroyed).toBe(true)});it("should be destroyed if rendered",function(){A({renderTo:Ext.getBody()});expect(F.destroyed).toBe(false);expect(Ext.get(F.id).dom.id).toBe(F.id);F.destroy();expect(F.destroyed).toBe(true);expect(Ext.get(F.id)).toBe(null)});it("should be destroyed and child els removed if childEls defined",function(){F=Ext.createWidget("button",{renderTo:Ext.getBody()});expect(F.destroyed).toBe(false);expect(Ext.get(F.id).dom.id).toBe(F.id);var G=F.btnEl.id;expect(Ext.get(G).dom.id).toBe(G);F.destroy();expect(F.destroyed).toBe(true);expect(F.btnEl).toBe(null);expect(Ext.get(F.id)).toBeNull();expect(Ext.get(G)).toBeNull()});it("should be destroyed and child els removed if renderSelectors defined",function(){F=Ext.createWidget("button",{renderTo:Ext.getBody(),renderSelectors:{btnSelector:".x-btn-button",btnSelector2:".x-btn-button"}});expect(F.destroyed).toBe(false);expect(Ext.get(F.id).dom.id).toBe(F.id);var G=F.btnSelector.id;expect(Ext.get(G).dom.id).toBe(G);F.destroy();expect(F.destroyed).toBe(true);expect(F.btnSelector).not.toBeDefined();expect(Ext.get(F.id)).toBeNull();expect(Ext.get(G)).toBeNull()});it("should be destroyed when a childEl and a renderSelector have duplicate names",function(){F=Ext.createWidget("button",{renderTo:Ext.getBody(),renderSelectors:{btnEl:".x-btn-button"}});expect(F.destroyed).toBe(false);expect(Ext.get(F.id).dom.id).toBe(F.id);var G=F.btnEl.id;expect(Ext.get(G).dom.id).toBe(G);F.destroy();expect(F.destroyed).toBe(true);expect(F.btnEl).toBeNull();expect(Ext.get(F.id)).toBeNull();expect(Ext.get(G)).toBeNull()});describe("before render",function(){it("should remove itself from a container",function(){A({itemId:"foo"});var G=new Ext.container.Container({items:F});var H=jasmine.createSpy();G.on("remove",H);expect(G.down("#foo")).toBe(F);F.destroy();expect(H).toHaveBeenCalled();expect(H.mostRecentCall.args[0]).toBe(G);expect(H.mostRecentCall.args[1]).toBe(F);expect(G.down("#foo")).toBeNull();G.destroy()});it("should remove itself from a container when floating",function(){A({itemId:"foo",floating:true});var G=new Ext.container.Container({items:F});var H=jasmine.createSpy();G.on("remove",H);expect(G.down("#foo")).toBe(F);F.destroy();expect(H).toHaveBeenCalled();expect(H.mostRecentCall.args[0]).toBe(G);expect(H.mostRecentCall.args[1]).toBe(F);expect(G.down("#foo")).toBeNull();G.destroy()})});describe("after render",function(){it("should remove itself from a container",function(){A({itemId:"foo"});var G=new Ext.container.Container({renderTo:Ext.getBody(),items:F});F.show();var H=jasmine.createSpy();G.on("remove",H);expect(G.down("#foo")).toBe(F);F.destroy();expect(H).toHaveBeenCalled();expect(H.mostRecentCall.args[0]).toBe(G);expect(H.mostRecentCall.args[1]).toBe(F);expect(G.down("#foo")).toBeNull();G.destroy()});it("should remove itself from a container when floating",function(){A({itemId:"foo",floating:true});var G=new Ext.container.Container({renderTo:Ext.getBody(),items:F});F.show();var H=jasmine.createSpy();G.on("remove",H);expect(G.down("#foo")).toBe(F);F.destroy();expect(H).toHaveBeenCalled();expect(H.mostRecentCall.args[0]).toBe(G);expect(H.mostRecentCall.args[1]).toBe(F);expect(G.down("#foo")).toBeNull();G.destroy()})})});describe("afterRender",function(){var G;describe("when pageX/pageY is set",function(){describe("call setPagePosition",function(){it("pageX",function(){A({pageX:10});G=spyOn(F,"setPagePosition");F.render(Ext.getBody());expect(G).wasCalledWith(10,undefined)});it("pageY",function(){A({pageY:10});G=spyOn(F,"setPagePosition");F.render(Ext.getBody());expect(G).wasCalledWith(undefined,10)})})});describe("resizable",function(){it("should call initResizable",function(){A({resizable:true});G=spyOn(F,"initResizable");F.render(Ext.getBody());expect(G).wasCalled()})});describe("draggable",function(){it("should call initDraggable",function(){A({draggable:true});G=spyOn(F,"initDraggable");F.render(Ext.getBody());expect(G).wasCalled()})});describe("setAutoScroll",function(){describe("if autoScroll is not defined",function(){it("should not call setAutoScroll",function(){A();G=spyOn(F,"getOverflowStyle").andCallThrough();F.render(Ext.getBody());expect(G).toHaveBeenCalled()})});describe("if autoScroll is  defined",function(){it("should  call setAutoScroll",function(){A({autoScroll:false});G=spyOn(F,"getOverflowStyle").andCallThrough();F.render(Ext.getBody());expect(G).toHaveBeenCalled()})})})});describe("scrollable",function(){describe("initial configuration",function(){it("should not create a scroller by default",function(){A({renderTo:document.body});expect(F.getScrollable()).toBe(null)});it("should not create a scroller if scrollable is false",function(){A({renderTo:document.body,scrollable:false});expect(F.getScrollable()).toBe(false)});it("should configure a default scroller if scrollable is true",function(){A({renderTo:document.body,scrollable:true});expect(F.getScrollable() instanceof Ext.scroll.Scroller).toBe(true);expect(F.getScrollable().getX()).toBe(true);expect(F.getScrollable().getY()).toBe(true)});it("should configure a default scroller if scrollable is 'both'",function(){A({renderTo:document.body,scrollable:"both"});expect(F.getScrollable() instanceof Ext.scroll.Scroller).toBe(true);expect(F.getScrollable().getX()).toBe(true);expect(F.getScrollable().getY()).toBe(true)});it("should configure a vertical scroller if scrollable is 'y'",function(){A({renderTo:document.body,scrollable:"y"});expect(F.getScrollable() instanceof Ext.scroll.Scroller).toBe(true);expect(F.getScrollable().getX()).toBe(false);expect(F.getScrollable().getY()).toBe(true)});it("should configure a vertical scroller if scrollable is 'vertical'",function(){A({renderTo:document.body,scrollable:"vertical"});expect(F.getScrollable() instanceof Ext.scroll.Scroller).toBe(true);expect(F.getScrollable().getX()).toBe(false);expect(F.getScrollable().getY()).toBe(true)});it("should configure a horizontal scrollbar if scrollable is 'x'",function(){A({renderTo:document.body,scrollable:"x"});expect(F.getScrollable() instanceof Ext.scroll.Scroller).toBe(true);expect(F.getScrollable().getX()).toBe(true);expect(F.getScrollable().getY()).toBe(false)});it("should configure a horizontal scrollbar if scrollable is 'horizontal'",function(){A({renderTo:document.body,scrollable:"horizontal"});expect(F.getScrollable() instanceof Ext.scroll.Scroller).toBe(true);expect(F.getScrollable().getX()).toBe(true);expect(F.getScrollable().getY()).toBe(false)});it("should configure a non user-scrollable scroller if x and y are both false",function(){A({renderTo:document.body,scrollable:{x:false,y:false}});expect(F.getScrollable() instanceof Ext.scroll.Scroller).toBe(true);expect(F.getScrollable().getX()).toBe(false);expect(F.getScrollable().getY()).toBe(false)});it("should pass along a scroller config object to the Scroller constructor",function(){A({renderTo:document.body,scrollable:{x:true,y:false}});expect(F.getScrollable() instanceof Ext.scroll.Scroller).toBe(true);expect(F.getScrollable().getX()).toBe(true);expect(F.getScrollable().getY()).toBe(false)});it("should thow an error if configured with an invalid string",function(){expect(function(){A({renderTo:document.body,id:"foo",scrollable:"bar"})}).toThrow("'bar' is not a valid value for 'scrollable'")})});describe("reconfiguring the scroller",function(){it("should reconfigure the existing scroller if there is one",function(){var G;A({renderTo:document.body,scrollable:true});G=F.getScrollable();F.setScrollable({x:false,y:true});expect(F.getScrollable()).toBe(G);expect(F.getScrollable().getX()).toBe(false);expect(F.getScrollable().getY()).toBe(true)});it("should create a new scroller if one does not already exist",function(){A({renderTo:document.body});F.setScrollable(true);expect(F.getScrollable() instanceof Ext.scroll.Scroller).toBe(true);expect(F.getScrollable().getX()).toBe(true);expect(F.getScrollable().getY()).toBe(true)});it("should be able to clear the old scroller",function(){A({renderTo:document.body,width:300,height:300,scrollable:true});var G=F.getScrollable();F.setScrollable(false);expect(F.getScrollable()).toBeNull();expect(G.destroyed).toBe(true)})});describe("scroll position",function(){it("should preserve vertical scroll position when toggling hide/show",function(){A({renderTo:document.body,height:100,width:100,scrollable:true,html:D()});F.el.dom.scrollTop=1000;F.hide();F.show();expect(F.el.dom.scrollTop).toBe(1000)});describe("in a container",function(){var H,G;beforeEach(function(){A({width:500,height:500,html:D(),scrollable:true});H=Ext.widget({xtype:"container",renderTo:document.body,height:200,width:200,items:F,scrollable:true});G=H.scrollable});afterEach(function(){H=G=Ext.destroy(H)});it("should preserve vertical scroll position when toggling hide/show",function(){var I;H.add({width:100,height:100,html:D(),scrollable:true});I=H.items.getAt(1).scrollable;I.scrollTo(0,150);H.hide();H.show();expect(I.getPosition()).toEqual({x:0,y:150})});describe("scroll position of container",function(){it("should preserve vertical scroll position when toggling hide/show",function(){G.scrollTo(0,150);H.hide();H.show();expect(G.getPosition()).toEqual({x:0,y:150})});it("should preserve horizontal scroll position when toggling hide/show",function(){G.scrollTo(300,0);H.hide();H.show();expect(G.getPosition()).toEqual({x:300,y:0})});it("should preserve both scroll positions when toggling hide/show",function(){G.scrollTo(300,150);H.hide();H.show();expect(G.getPosition()).toEqual({x:300,y:150})})})})})});describe("autoScroll",function(){describe("initial configuration",function(){it("should configure a scroller if autoScroll is true",function(){A({renderTo:document.body,autoScroll:true});expect(F.getScrollable() instanceof Ext.scroll.Scroller).toBe(true);expect(F.getScrollable().getX()).toBe(true);expect(F.getScrollable().getY()).toBe(true)});it("should not configure a scroller if autoScroll is false",function(){A({renderTo:document.body,autoScroll:false});expect(F.getScrollable()).toBe(null)});it("should not override a scrollable config (autoScroll: true)",function(){A({renderTo:document.body,autoScroll:true,scrollable:false});expect(F.getScrollable()).toBe(false)});it("should not override a scrollable config (autoScroll: false)",function(){A({renderTo:document.body,autoScroll:false,scrollable:true});expect(F.getScrollable() instanceof Ext.scroll.Scroller).toBe(true);expect(F.getScrollable().getX()).toBe(true);expect(F.getScrollable().getY()).toBe(true)})});describe("setAutoScroll",function(){it("should set scrollable with autoScroll:true",function(){A({renderTo:document.body});spyOn(F,"setScrollable").andCallThrough();F.setAutoScroll(true);expect(F.setScrollable).toHaveBeenCalledWith(true)});it("should set scrollable with autoScroll:false",function(){A({renderTo:document.body});spyOn(F,"setScrollable").andCallThrough();F.setAutoScroll(false);expect(F.setScrollable).toHaveBeenCalledWith(false)})})});describe("overflowX and overflowY",function(){describe("initial configuration",function(){it("should set overflowX:true",function(){A({renderTo:document.body,overflowX:true});expect(F.getScrollable() instanceof Ext.scroll.Scroller).toBe(true);expect(F.getScrollable().getX()).toBe(true);expect(F.getScrollable().getY()).toBe(false)});it("should set overflowX:'auto'",function(){A({renderTo:document.body,overflowX:"auto"});expect(F.getScrollable() instanceof Ext.scroll.Scroller).toBe(true);expect(F.getScrollable().getX()).toBe("auto");expect(F.getScrollable().getY()).toBe(false)});it("should set overflowX:'scroll'",function(){A({renderTo:document.body,overflowX:"scroll"});expect(F.getScrollable() instanceof Ext.scroll.Scroller).toBe(true);expect(F.getScrollable().getX()).toBe("scroll");expect(F.getScrollable().getY()).toBe(false)});it("should set overflowX:'hidden'",function(){A({renderTo:document.body,overflowX:"hidden"});expect(F.getScrollable() instanceof Ext.scroll.Scroller).toBe(true);expect(F.getScrollable().getX()).toBe(false);expect(F.getScrollable().getY()).toBe(false)});it("should set overflowY:true",function(){A({renderTo:document.body,overflowY:true});expect(F.getScrollable() instanceof Ext.scroll.Scroller).toBe(true);expect(F.getScrollable().getX()).toBe(false);expect(F.getScrollable().getY()).toBe(true)});it("should set overflowY:'auto'",function(){A({renderTo:document.body,overflowY:"auto"});expect(F.getScrollable() instanceof Ext.scroll.Scroller).toBe(true);expect(F.getScrollable().getX()).toBe(false);expect(F.getScrollable().getY()).toBe("auto")});it("should set overflowY:'scroll'",function(){A({renderTo:document.body,overflowY:"scroll"});expect(F.getScrollable() instanceof Ext.scroll.Scroller).toBe(true);expect(F.getScrollable().getX()).toBe(false);expect(F.getScrollable().getY()).toBe("scroll")});it("should set overflowY:'hidden'",function(){A({renderTo:document.body,overflowY:"hidden"});expect(F.getScrollable() instanceof Ext.scroll.Scroller).toBe(true);expect(F.getScrollable().getX()).toBe(false);expect(F.getScrollable().getY()).toBe(false)})});describe("setOverflowXY",function(){it("should set overflowX:true",function(){A({renderTo:document.body});F.setOverflowXY(true);expect(F.getScrollable() instanceof Ext.scroll.Scroller).toBe(true);expect(F.getScrollable().getX()).toBe(true);expect(F.getScrollable().getY()).toBe(false)});it("should set overflowX:'auto'",function(){A({renderTo:document.body});F.setOverflowXY("auto");expect(F.getScrollable() instanceof Ext.scroll.Scroller).toBe(true);expect(F.getScrollable().getX()).toBe("auto");expect(F.getScrollable().getY()).toBe(false)});it("should set overflowX:'scroll'",function(){A({renderTo:document.body});F.setOverflowXY("scroll");expect(F.getScrollable() instanceof Ext.scroll.Scroller).toBe(true);expect(F.getScrollable().getX()).toBe("scroll");expect(F.getScrollable().getY()).toBe(false)});it("should set overflowX:'hidden'",function(){A({renderTo:document.body});F.setOverflowXY("hidden");expect(F.getScrollable() instanceof Ext.scroll.Scroller).toBe(true);expect(F.getScrollable().getX()).toBe(false);expect(F.getScrollable().getY()).toBe(false)});it("should set overflowY:true",function(){A({renderTo:document.body});F.setOverflowXY(undefined,true);expect(F.getScrollable() instanceof Ext.scroll.Scroller).toBe(true);expect(F.getScrollable().getX()).toBe(false);expect(F.getScrollable().getY()).toBe(true)});it("should set overflowY:'auto'",function(){A({renderTo:document.body});F.setOverflowXY(undefined,"auto");expect(F.getScrollable() instanceof Ext.scroll.Scroller).toBe(true);expect(F.getScrollable().getX()).toBe(false);expect(F.getScrollable().getY()).toBe("auto")});it("should set overflowY:'scroll'",function(){A({renderTo:document.body});F.setOverflowXY(undefined,"scroll");expect(F.getScrollable() instanceof Ext.scroll.Scroller).toBe(true);expect(F.getScrollable().getX()).toBe(false);expect(F.getScrollable().getY()).toBe("scroll")});it("should set overflowY:'hidden'",function(){A({renderTo:document.body});F.setOverflowXY(undefined,"hidden");expect(F.getScrollable() instanceof Ext.scroll.Scroller).toBe(true);expect(F.getScrollable().getX()).toBe(false);expect(F.getScrollable().getY()).toBe(false)})})});(Ext.supports.Touch?xdescribe:describe)("scroll template methods",function(){var I,G,H;beforeEach(function(){I=jasmine.createSpy();G=jasmine.createSpy();H=jasmine.createSpy();A({renderTo:document.body,height:100,width:100,scrollable:true,html:'<div style="height:200px;width:300px"></div>',xhooks:{onScrollStart:I,onScrollMove:G,onScrollEnd:H}})});it("should call onScrollStart when scrolling begins",function(){F.scrollTo(10,20);waitsFor(function(){return I.callCount===1},"startSpy to fire",1000);runs(function(){expect(I.mostRecentCall.args).toEqual([10,20]);F.scrollTo(20,30)});waitsFor(function(){return G.callCount===2},"moveSpy to fire",1000);runs(function(){expect(I.callCount).toBe(1)})});it("should call onScrollMove during scrolling",function(){F.scrollTo(10,20);waitsFor(function(){return G.callCount===1},"moveSpy to fire the first time",1000);runs(function(){expect(G.mostRecentCall.args).toEqual([10,20]);F.scrollTo(20,30)});waitsFor(function(){return G.callCount===2},"moveSpy to fire the second time",1000);runs(function(){expect(G.mostRecentCall.args).toEqual([20,30])})});it("should call onScrollEnd when scrolling ends",function(){F.scrollTo(10,20);waitsFor(function(){return G.callCount===1},"moveSpy to fire",1000);runs(function(){F.scrollTo(20,30)});waitsFor(function(){return H.callCount===1},"endSpy to fire",1000);runs(function(){expect(H.mostRecentCall.args).toEqual([20,30])})})});describe("initResizer",function(){beforeEach(function(){A({renderTo:Ext.getBody()})});it("should create this.resizer",function(){expect(F.resizer).not.toBeDefined();F.initResizable();expect(F.resizer).toBeDefined()})});xdescribe("initDraggable",function(){});describe("setPosition",function(){beforeEach(function(){A({renderTo:Ext.getBody()})});describe("when arguments",function(){it("should set x",function(){F.setPosition(10,0);expect(F.x).toEqual(10)});it("should set y",function(){F.setPosition(0,10);expect(F.y).toEqual(10)})});describe("when array",function(){it("should set x",function(){F.setPosition([10,0]);expect(F.x).toEqual(10)});it("should set y",function(){F.setPosition([0,10]);expect(F.y).toEqual(10)})});describe("when rendered",function(){it("should call adjustPosition",function(){var G=spyOn(F,"adjustPosition").andCallThrough();F.setPosition(10,0);expect(G).wasCalled()});it("should call onPosition",function(){var G=spyOn(F,"onPosition");F.setPosition(10,0);expect(G).wasCalled()});it("should fire the move event",function(){var G=false;F.on({move:function(){G=true}});F.setPosition(10,0);expect(G).toBeTruthy()})})});describe("showAt",function(){beforeEach(function(){A({renderTo:Ext.getBody()})});it("should call setPagePosition",function(){var G=spyOn(F,"setPagePosition");F.showAt(10,0,true);expect(G).wasCalledWith(10,0,true)});it("should call show",function(){var G=spyOn(F,"show");F.showAt(10,0);expect(G).wasCalled()})});describe("setPagePosition",function(){beforeEach(function(){A({renderTo:Ext.getBody()})});describe("when arguments",function(){it("should set x",function(){F.setPagePosition(10,0);expect(F.pageX).toEqual(10)});it("should set y",function(){F.setPagePosition(0,10);expect(F.pageY).toEqual(10)})});describe("when array",function(){it("should set x",function(){F.setPagePosition([10,0]);expect(F.pageX).toEqual(10)});it("should set y",function(){F.setPagePosition([0,10]);expect(F.pageY).toEqual(10)})});it("should set the element's X",function(){F.el.dom.style.position="absolute";F.setPagePosition(10,0);expect(F.el.getX()).toEqual(10)});it("should set the element's Y",function(){F.el.dom.style.position="absolute";F.setPagePosition(0,10);expect(F.el.getY()).toEqual(10)})});describe("Component traversal",function(){var M=Ext.ComponentQuery,O,L,K,J,I,H,N,G;beforeEach(function(){G=new Ext.Panel({layout:"card",items:N=new Ext.form.FieldSet({id:"fieldset-1",items:[L=new Ext.form.field.Number({name:"tab1-field1"}),K=new Ext.form.field.Date({name:"tab1-field2"}),J=new Ext.form.field.Text({name:"tab1-field3"}),I=new Ext.container.Container({items:[H=new Ext.form.field.Text({name:"baz"})]})]})})});afterEach(function(){G.destroy();G=N=L=K=J=I=H=null});describe("Component.prev()",function(){it("Should select f2",function(){O=J.prev();expect(O).toEqual(K)})});describe("Component.prev('selector')",function(){it("Should select f1",function(){O=J.prev("numberfield");expect(O).toEqual(L)})});describe("Component.prev() on first child",function(){it("Should select null",function(){O=L.prev();expect(O).toBeNull()})});describe("Component.next()",function(){it("Should select f2",function(){O=L.next();expect(O).toEqual(K)})});describe("Component.next('selector')",function(){it("Should select f3",function(){O=L.next("textfield(true)");expect(O).toEqual(J)})});describe("Component.next() on last child",function(){it("Should select null",function(){O=I.next();expect(O).toBeNull()})});describe("Component.up()",function(){it("Should select fieldset",function(){O=J.up();expect(O).toEqual(N)})});describe("Component.up searches for a string",function(){describe("Component.up('selector')",function(){it("Should select panel",function(){O=J.up("panel");expect(O).toEqual(G)})});describe("Component.up() on outermost container",function(){it("Should select undefined",function(){O=G.up();expect(O).toBeUndefined()})});describe("Component.up('selector') on xtype which does not occur",function(){it("Should select undefined",function(){O=J.up("gridpanel");expect(O).toBeUndefined()})});describe("Component.up(':pseudo-class')",function(){beforeEach(function(){M.pseudos.cardLayout=function(R){var P=[],T,S=0,Q=R.length;for(;S<Q;S++){if((T=R[S]).getLayout() instanceof Ext.layout.CardLayout){P.push(T)}}return P}});afterEach(function(){delete M.pseudos.cardLayout});it("Should select the panel",function(){O=J.up(":cardLayout");expect(O).toEqual(G)})})});describe("Component.up searches for a Component",function(){it("should not find children",function(){expect(G.up(L)).toBe(undefined)});it("should not find siblings",function(){expect(J.up(K)).toBe(undefined)});it("should find ancestors at any level",function(){expect(J.up(G)).toBe(G);expect(H.up(I)).toBe(I);expect(H.up(G)).toBe(G)})})});describe("getPosition of static Component",function(){it("should report the element position of a component rendered to the body",function(){F=Ext.create("Ext.Component",{floating:true,x:10,y:10,renderTo:document.body});expect(F.getPosition()).toEqual([10,10]);expect(F.getPosition(true)).toEqual([10,10])});xit("should report the element position when not local, and the container-relative position when local",function(){F=Ext.create("Ext.container.Container",{margin:10,renderTo:document.body,items:{xtype:"window",id:"getPositionTestWindow",x:10,y:10,width:100,height:100}});Ext.getCmp("getPositionTestWindow").show();expect(Ext.getCmp("getPositionTestWindow").getPosition()).toEqual([20,20]);expect(Ext.getCmp("getPositionTestWindow").getPosition(true)).toEqual([10,10])})});describe("floaters with %age size",function(){it("should use the natural width of the window to calculate the header's width",function(){document.body.style.height="100%";var G=Ext.getBody(),H=Math.floor(G.getWidth()/2),I=Math.floor(Ext.dom.Element.getViewportHeight()/2);H=[H,H+(Ext.isIE9m?10:1)];I=[I,I+1];F=Ext.create("Ext.panel.Panel",{floating:{shadow:false},title:"test",width:"50%",height:"50%",x:0,y:0});F.show();expect(F).toHaveLayout({el:{w:H,h:I},dockedItems:{0:{el:{w:H}}}});document.body.style.height=""});it("should use the natural height of the window to calculate the header's height",function(){document.body.style.height="100%";var G=Ext.getBody(),H=Math.floor(G.getWidth()/2),I=Math.floor(Ext.dom.Element.getViewportHeight()/2);H=[H,H+(Ext.isIE9m?10:1)];I=[I,I+1];F=Ext.create("Ext.panel.Panel",{floating:{shadow:false},title:"test",headerPosition:"left",width:"50%",height:"50%",x:0,y:0});F.show();expect(F).toHaveLayout({el:{w:H,h:I},dockedItems:{0:{el:{h:I}}}});document.body.style.height=""})});describe("scrollFlags",function(){it("should set default flags",function(){A({renderTo:Ext.getBody()});expect(F.scrollFlags).toEqual({overflowX:"",overflowY:"",x:false,y:false,both:false})});it("should set flags with scrollable: true",function(){A({scrollable:true,renderTo:Ext.getBody()});expect(F.scrollFlags).toEqual({overflowX:"auto",overflowY:"auto",x:true,y:true,both:true})});it("should set flags with scrollable: false",function(){A({scrollable:false,renderTo:Ext.getBody()});expect(F.scrollFlags).toEqual({overflowX:"",overflowY:"",x:false,y:false,both:false})});it("should set flags with scrollable: { x: false, y: false }",function(){A({scrollable:{x:false,y:false},renderTo:Ext.getBody()});expect(F.scrollFlags).toEqual({overflowX:"hidden",overflowY:"hidden",x:false,y:false,both:false})});it("should set flags with horizontal auto-scrolling",function(){A({scrollable:"x",renderTo:Ext.getBody()});expect(F.scrollFlags).toEqual({overflowX:"auto",overflowY:"hidden",x:true,y:false,both:false})});it("should set flags with horizontal scroll",function(){A({scrollable:{x:"scroll",y:false},renderTo:Ext.getBody()});expect(F.scrollFlags).toEqual({overflowX:"scroll",overflowY:"hidden",x:true,y:false,both:false})});it("should set flags with vertical auto-scrolling",function(){A({scrollable:"y",renderTo:Ext.getBody()});expect(F.scrollFlags).toEqual({overflowX:"hidden",overflowY:"auto",x:false,y:true,both:false})});it("should set flags with vertical scroll",function(){A({scrollable:{x:false,y:"scroll"},renderTo:Ext.getBody()});expect(F.scrollFlags).toEqual({overflowX:"hidden",overflowY:"scroll",x:false,y:true,both:false})});function G(I,H,K,J){it("should set flags with overflowX: "+I+" & overflowY: "+H,function(){A({scrollable:{x:I,y:H},renderTo:Ext.getBody()});expect(F.scrollFlags).toEqual({overflowX:K,overflowY:J,x:true,y:true,both:true})})}G(true,true,"auto","auto");G("auto",true,"auto","auto");G("scroll",true,"scroll","auto");G(true,"auto","auto","auto");G("auto","auto","auto","auto");G("scroll","auto","scroll","auto");G(true,"scroll","auto","scroll");G("auto","scroll","auto","scroll");G("scroll","scroll","scroll","scroll")});describe("initStyles",function(){function G(H){describe("root classes"+(H?" - with Ext.scopeCss == true":""),function(){if(H){beforeEach(function(){Ext.scopeCss=true});afterEach(function(){Ext.scopeCss=undefined})}it("should apply root classes to root level components",function(){var I=Ext.widget({xtype:"container",renderTo:document.body,items:[{id:"child",xtype:"container",items:{id:"grandchild",xtype:"component"}}]}),K=Ext.getCmp("child"),J=Ext.getCmp("grandchild");if(H){expect(I.el).toHaveCls(Ext.baseCSSPrefix+"body");expect(K.el).not.toHaveCls(Ext.baseCSSPrefix+"body");expect(J.el).not.toHaveCls(Ext.baseCSSPrefix+"body")}expect(I.el).toHaveCls(Ext.baseCSSPrefix+"border-box");expect(K.el).not.toHaveCls(Ext.baseCSSPrefix+"border-box");expect(J.el).not.toHaveCls(Ext.baseCSSPrefix+"border-box");I.destroy()});it("should apply root classes to floaters, but not to their descendants",function(){var J=Ext.widget({xtype:"container",floating:{shadow:false},items:[{id:"child",xtype:"container",items:{id:"grandchild",xtype:"component"}}]}),L=Ext.getCmp("child"),K=Ext.getCmp("grandchild"),I=Ext.widget({xtype:"container",renderTo:document.body,items:[J]});J.show();if(H){expect(J.el).toHaveCls(Ext.baseCSSPrefix+"body");expect(L.el).not.toHaveCls(Ext.baseCSSPrefix+"body");expect(K.el).not.toHaveCls(Ext.baseCSSPrefix+"body")}expect(J.el).toHaveCls(Ext.baseCSSPrefix+"border-box");expect(L.el).not.toHaveCls(Ext.baseCSSPrefix+"border-box");expect(K.el).not.toHaveCls(Ext.baseCSSPrefix+"border-box");I.destroy()})})}G();G(true)});describe("Updating with raw HTML",function(){it("should not cause a layout if no dimensions are shrinkwrapped",function(){var H=new Ext.container.Container({items:{height:100,width:100,xtype:"component"},renderTo:document.body}),G=H.child("component");G.update("foo");expect(G.componentLayoutCounter).toBe(1);H.destroy()})});describe("mask()/unmask() methods",function(){beforeEach(function(){A({height:100,width:100,renderTo:document.body,style:"background-color:red"})});it("should render the mask into the Component el by default",function(){F.mask();expect(F.el.dom.childNodes.length).toBe(1);expect(F.el.dom.firstChild.className).toBe(Ext.baseCSSPrefix+"mask "+Ext.baseCSSPrefix+"border-box");expect(Ext.fly(F.el.dom.firstChild).getBox()).toEqual(F.el.getBox())});it("should render the mask into the Component el if getMaskTarget has been overridden to return null",function(){F.getMaskTarget=function(){return null};F.mask();expect(F.el.dom.childNodes.length).toBe(1);expect(F.el.dom.firstChild.className).toBe(Ext.baseCSSPrefix+"mask "+Ext.baseCSSPrefix+"border-box");expect(Ext.fly(F.el.dom.firstChild).getBox()).toEqual(F.el.getBox())});it("should remove the mask on unmask()",function(){F.mask();expect(F.el.dom.childNodes.length).toBe(1);F.unmask();expect(F.el.dom.childNodes.length).toBe(0)});describe("tabbable elements",function(){beforeEach(function(){if(F){Ext.destroy(F)}A({height:100,width:100,renderTo:document.body,style:"background-color:magenta",focusable:true,autoEl:{tag:"div",tabIndex:0},renderTpl:["<input />","<div>","<textarea>foo</textarea>","</div>"]});F.mask()});describe("masking",function(){it("should remove itself from tab order",function(){expect(F.el.isTabbable()).toBeFalsy()});it("should remove its children from tab order",function(){var G=F.el.findTabbableElements({skipSelf:true});expect(G.length).toBe(0)})});describe("unmasking",function(){beforeEach(function(){F.unmask()});it("should restore itself in tab order",function(){expect(F.el.isTabbable()).toBeTruthy()});it("should restore its children tabbable state",function(){var G=F.el.findTabbableElements({skipSelf:true});expect(G.length).toBe(2)})})});describe("masked hierarchy state",function(){it("should be undefined before masking",function(){expect(F.getInherited().masked).not.toBeDefined()});it("should be true when masked",function(){F.mask();expect(F.getInherited().masked).toBe(true)});it("should be undefined again after masking",function(){F.mask();F.unmask();expect(F.getInherited().masked).not.toBeDefined()})});describe("isMasked",function(){var G;beforeEach(function(){if(F){Ext.destroy(F)}G=new Ext.container.Container({renderTo:document.body,height:100,width:100,items:[{xtype:"component",height:100,width:100,style:"background-color: green"}]});F=G.down()});afterEach(function(){if(G){Ext.destroy(G)}G=null});it("should return false when component is not masked",function(){expect(F.isMasked()).toBeFalsy()});it("should return false when parent is masked but !hierarchy",function(){G.mask();expect(F.isMasked()).toBeFalsy()});it("should return true when component is masked",function(){F.mask();expect(F.isMasked()).toBeTruthy()});it("should return true when parent is masked && hierarchy",function(){G.mask();expect(F.isMasked(true)).toBeTruthy()});it("should return false again when parent is unmasked",function(){G.mask();G.unmask();expect(F.isMasked(true)).toBeFalsy()})})});describe("setLoading() method",function(){describe("mask target === main el",function(){beforeEach(function(){A({height:100,width:100,renderTo:document.body,style:"background-color:red",maskElement:"el"});F.setLoading(true)});it("should render the LoadMask into the Component",function(){expect(F.el.dom.childNodes.length).toBe(1)});it("should set "+Ext.baseCSSPrefix+"mask class on the mask",function(){var G=Ext.get(F.el.dom.firstChild);expect(G.hasCls(Ext.baseCSSPrefix+"mask")).toBe(true)});it("should size the mask to target el",function(){expect(Ext.fly(F.el.dom.firstChild).getBox()).toEqual(F.el.getBox())});it("should move the mask with the Component",function(){F.setXY([100,100]);expect(Ext.fly(F.el.dom.firstChild).getBox()).toEqual(F.el.getBox())})});describe("Default mask target (document body)",function(){var H,G;beforeEach(function(){body=document.body;H=body.children.length;A({height:100,width:100,renderTo:document.body,style:"background-color:red"});F.setLoading(true);G=body.children[H+1]});it("should render LoadMask",function(){expect(body.childNodes.length).toBe(H+2)});it("should set "+Ext.baseCSSPrefix+"mask class on the mask el",function(){var I=Ext.get(G);expect(I.hasCls(Ext.baseCSSPrefix+"mask")).toBe(true)});it("should size the mask to the target component",function(){expect(Ext.fly(G).getBox()).toEqual(F.el.getBox())});it("should unmask document.body on destroy",function(){F.destroy();expect(body.childNodes.length).toBe(H);F=null})});describe("isMasked",function(){var G;beforeEach(function(){G=new Ext.container.Container({renderTo:document.body,height:100,width:100,items:[{xtype:"component",height:100,width:100,style:"background-color: red"}]});F=G.down()});afterEach(function(){if(G){Ext.destroy(G)}G=F=null});it("should return false when component is not masked",function(){expect(F.isMasked()).toBeFalsy()});it("should return false when parent is masked but !hierarchy",function(){G.setLoading(true);expect(F.isMasked()).toBeFalsy()});it("should return true when component is masked",function(){F.setLoading(true);expect(F.isMasked()).toBeTruthy()});it("should return true when parent is masked && hierarchy",function(){G.setLoading(true);expect(F.isMasked(true)).toBeTruthy()});it("should return false again when parent is unmasked",function(){G.setLoading(true);G.setLoading(false);expect(F.isMasked(true)).toBeFalsy()})});describe("tabbable elements",function(){beforeEach(function(){if(F){Ext.destroy(F)}A({height:100,width:100,renderTo:document.body,style:"background-color:magenta",focusable:true,autoEl:{tag:"div",tabIndex:0},renderTpl:["<input />","<div>","<textarea>foo</textarea>","</div>"],getFocusEl:function(){return this.el}})});it("should be tabbable initially (sanity check)",function(){expect(F.el.isTabbable()).toBeTruthy()});describe("masking",function(){beforeEach(function(){F.setLoading(true)});it("should remove itself from tab order",function(){expect(F.el.isTabbable()).toBeFalsy()});it("should remove its children from tab order",function(){var G=F.el.findTabbableElements({skipSelf:true});expect(G.length).toBe(0)})});describe("unmasking",function(){beforeEach(function(){F.setLoading(true);F.setLoading(false)});it("should restore itself in tab order",function(){expect(F.el.isTabbable()).toBeTruthy()});it("should restore its children tabbable state",function(){var G=F.el.findTabbableElements({skipSelf:true});expect(G.length).toBe(2)})})});describe("function args",function(){var H,G;beforeEach(function(){H=new Ext.Component({height:100,width:100,renderTo:Ext.getBody()});G=H.loadMask=new Ext.LoadMask({target:H});spyOn(G,"show").andCallThrough()});afterEach(function(){Ext.destroy(H,G);H=G=null});describe("load mask message",function(){describe("no message string is passed",function(){it("should render with a default loading message if no arguments are passed",function(){H.setLoading();expect(G.msgTextEl.dom.innerHTML).toBe(G.msg)});it("should render with a default loading message if first arg is not a string",function(){H.setLoading(true);expect(G.msgTextEl.dom.innerHTML).toBe(G.msg)});it("should render with a default loading message if config does not have a msg property",function(){H.setLoading({target:H});expect(G.msgTextEl.dom.innerHTML).toBe(G.msg)})});describe("message string is passed",function(){it("should render with the passed message string",function(){H.setLoading("Lulz");expect(G.msgTextEl.dom.innerHTML).toBe("Lulz")});it("should render with the passed message string in the config object",function(){H.setLoading({msg:"Rupert!"});expect(G.msgTextEl.dom.innerHTML).toBe("Rupert!")})})});describe("first argument is false",function(){it("should not render the load mask if false",function(){H.setLoading(false);expect(G.show).not.toHaveBeenCalled()})});describe("first argument is truthy or no arguments are passed",function(){it("should render the load mask if no arguments are passed",function(){H.setLoading();expect(G.show).toHaveBeenCalled()});it("should render the load mask if true",function(){H.setLoading(true);expect(G.show).toHaveBeenCalled()});it("should render the load mask if a zero-length string",function(){H.setLoading("");expect(G.show).toHaveBeenCalled()});it("should render the load mask if a non-zero-length string",function(){H.setLoading("Motley");expect(G.show).toHaveBeenCalled()});it("should render the load mask if a config object",function(){H.setLoading({target:H});expect(G.show).toHaveBeenCalled()})})})});describe("size constraints",function(){it("should constrain if width is greater than maxWidth",function(){A({renderTo:document.body,width:300,maxWidth:200});expect(F.getWidth()).toBe(200)});it("should not constrain if width is less than maxWidth",function(){A({renderTo:document.body,width:200,maxWidth:300});expect(F.getWidth()).toBe(200)});it("should constrain if width is less than minWidth",function(){A({renderTo:document.body,width:200,minWidth:300});expect(F.getWidth()).toBe(300)});it("should not constrain if width is greater than minWidth",function(){A({renderTo:document.body,width:300,minWidth:200});expect(F.getWidth()).toBe(300)});it("should constrain if height is greater than maxHeight",function(){A({renderTo:document.body,height:300,maxHeight:200});expect(F.getHeight()).toBe(200)});it("should not constrain if height is less than maxHeight",function(){A({renderTo:document.body,height:200,maxHeight:300});expect(F.getHeight()).toBe(200)});it("should constrain if height is less than minHeight",function(){A({renderTo:document.body,height:200,minHeight:300});expect(F.getHeight()).toBe(300)});it("should not constrain if height is greater than minHeight",function(){A({renderTo:document.body,height:300,minHeight:200});expect(F.getHeight()).toBe(300)});describe("after initial render",function(){it("should constrain if width is greater than maxWidth",function(){A({renderTo:document.body,width:300});F.setMaxWidth(200);expect(F.getWidth()).toBe(200)});it("should not constrain if width is less than maxWidth",function(){A({renderTo:document.body,width:200});F.setMaxWidth(300);expect(F.getWidth()).toBe(200)});it("should constrain if width is less than minWidth",function(){A({renderTo:document.body,width:200});F.setMinWidth(300);expect(F.getWidth()).toBe(300)});it("should not constrain if width is greater than minWidth",function(){A({renderTo:document.body,width:300});F.setMinWidth(200);expect(F.getWidth()).toBe(300)});it("should constrain if height is greater than maxHeight",function(){A({renderTo:document.body,height:300});F.setMaxHeight(200);expect(F.getHeight()).toBe(200)});it("should not constrain if height is less than maxHeight",function(){A({renderTo:document.body,height:200});F.setMaxHeight(300);expect(F.getHeight()).toBe(200)});it("should constrain if height is less than minHeight",function(){A({renderTo:document.body,height:200});F.setMinHeight(300);expect(F.getHeight()).toBe(300)});it("should not constrain if height is greater than minHeight",function(){A({renderTo:document.body,height:300});F.setMinHeight(200);expect(F.getHeight()).toBe(300)})})});describe("liquidLayout",function(){it("should set minWidth as an inline style",function(){A({renderTo:document.body,liquidLayout:true,minWidth:50});expect(F.el.isStyle("min-width","50px")).toBe(true)});it("should set maxWidth as an inline style",function(){A({renderTo:document.body,liquidLayout:true,maxWidth:50});expect(F.el.isStyle("max-width","50px")).toBe(true)});it("should set minHeight as an inline style",function(){A({renderTo:document.body,liquidLayout:true,minHeight:50});expect(F.el.isStyle("min-height","50px")).toBe(true)});it("should set maxHeight as an inline style",function(){A({renderTo:document.body,liquidLayout:true,maxHeight:50});expect(F.el.isStyle("max-height","50px")).toBe(true)});describe("before render",function(){it("should set minWidth as an inline style",function(){A({liquidLayout:true});F.setMinWidth(50);F.render(Ext.getBody());expect(F.el.isStyle("min-width","50px")).toBe(true)});it("should set maxWidth as an inline style",function(){A({liquidLayout:true});F.setMaxWidth(50);F.render(Ext.getBody());expect(F.el.isStyle("max-width","50px")).toBe(true)});it("should set minHeight as an inline style",function(){A({liquidLayout:true});F.setMinHeight(50);F.render(Ext.getBody());expect(F.el.isStyle("min-height","50px")).toBe(true)});it("should set maxHeight as an inline style",function(){A({liquidLayout:true});F.setMaxHeight(50);F.render(Ext.getBody());expect(F.el.isStyle("max-height","50px")).toBe(true)});it("should remove minWidth",function(){A({liquidLayout:true,minWidth:50});F.setMinWidth(null);F.render(Ext.getBody());expect(F.el.dom.style.minWidth).toBe("")});it("should remove maxWidth",function(){A({liquidLayout:true,maxWidth:50});F.setMaxWidth(null);F.render(Ext.getBody());expect(F.el.dom.style.maxWidth).toBe("")});it("should remove minHeight",function(){A({liquidLayout:true,minHeight:50});F.setMinHeight(null);F.render(Ext.getBody());expect(F.el.dom.style.minHeight).toBe("")});it("should remove maxHeight",function(){A({liquidLayout:true,maxHeight:50});F.setMaxHeight(null);F.render(Ext.getBody());expect(F.el.dom.style.maxHeight).toBe("")})});describe("after initial render",function(){it("should set minWidth as an inline style",function(){A({renderTo:document.body,liquidLayout:true});F.setMinWidth(50);expect(F.el.isStyle("min-width","50px")).toBe(true)});it("should set maxWidth as an inline style",function(){A({renderTo:document.body,liquidLayout:true});F.setMaxWidth(50);expect(F.el.isStyle("max-width","50px")).toBe(true)});it("should set minHeight as an inline style",function(){A({renderTo:document.body,liquidLayout:true});F.setMinHeight(50);expect(F.el.isStyle("min-height","50px")).toBe(true)});it("should set maxHeight as an inline style",function(){A({renderTo:document.body,liquidLayout:true});F.setMaxHeight(50);expect(F.el.isStyle("max-height","50px")).toBe(true)});it("should remove minWidth",function(){A({renderTo:document.body,liquidLayout:true,minWidth:50});F.setMinWidth(null);expect(F.el.dom.style.minWidth).toBe("")});it("should remove maxWidth",function(){A({renderTo:document.body,liquidLayout:true,maxWidth:50});F.setMaxWidth(null);expect(F.el.dom.style.maxWidth).toBe("")});it("should remove minHeight",function(){A({renderTo:document.body,liquidLayout:true,minHeight:50});F.setMinHeight(null);expect(F.el.dom.style.minHeight).toBe("")});it("should remove maxHeight",function(){A({renderTo:document.body,liquidLayout:true,maxHeight:50});F.setMaxHeight(null);expect(F.el.dom.style.maxHeight).toBe("")})})});describe("listeners",function(){var L,J,K,I,O,N,M,G,H;beforeEach(function(){M=jasmine.createSpy();G=jasmine.createSpy();H=jasmine.createSpy();L=Ext.define(null,{extend:"Ext.Component",renderTo:document.body,childEls:["childEl"],renderTpl:'<div id="{id}-childEl" data-ref="childEl"></div>'});J=Ext.define(null,{extend:"Ext.util.Observable"});K=new L();I=K.bar=new J();O=K.on({element:"el",click:M,destroyable:true});N=K.on({childEl:{click:G},bar:{baz:H},destroyable:true})});afterEach(function(){K.destroy()});it("should add an element listener",function(){jasmine.fireMouseEvent(K.getEl(),"click");expect(M.callCount).toBe(1)});it("should add an element listener defined using element name as a property of the options object",function(){jasmine.fireMouseEvent(K.childEl,"click");expect(G.callCount).toBe(1)});it("should add a listener to an arbitrary observable as a property of the options object",function(){I.fireEvent("baz");expect(H.callCount).toBe(1)});it("should remove an element listener",function(){K.el.un({click:M});jasmine.fireMouseEvent(K.getEl(),"click");expect(M.callCount).toBe(0)});xdescribe("removal using a destroyer",function(){it("should remove an element listener",function(){O.destroy();jasmine.fireMouseEvent(K.getEl(),"click");expect(M.callCount).toBe(0)});it("should remove an element listener defined using element name as a property of the options object",function(){N.destroy();jasmine.fireMouseEvent(K.childEl,"click");expect(G.callCount).toBe(0)});it("should remove a listener from an arbitrary observable as a property of the options object",function(){N.destroy();I.fireEvent("baz");expect(H.callCount).toBe(0)})});(Ext.isIE9m?xdescribe:describe)("element event options",function(){it("should add capture and non-delegated element listeners",function(){var P=[];K.on({element:"el",mousedown:function(){P.push("p")}});K.on({element:"el",mousedown:function(){P.push("pc")},capture:true});K.on({element:"el",mousedown:function(){P.push("pd")},delegated:false});K.on({element:"el",mousedown:function(){P.push("pdc")},delegated:false,capture:true});K.on({element:"childEl",mousedown:function(){P.push("c")}});K.on({element:"childEl",mousedown:function(){P.push("cc")},capture:true});K.on({element:"childEl",mousedown:function(){P.push("cdc")},delegated:false,capture:true});K.on({element:"childEl",mousedown:function(){P.push("cd")},delegated:false});jasmine.fireMouseEvent(K.childEl,"mousedown");expect(P).toEqual(["pdc","cdc","cd","pd","pc","cc","c","p"])});it("should allow element options to be used as event names",function(){var U=jasmine.createSpy(),T=jasmine.createSpy(),S=jasmine.createSpy(),R=jasmine.createSpy(),P=jasmine.createSpy(),Q=jasmine.createSpy();F=new Ext.Component();F.on({translate:U,capture:T,delegated:S,stopEvent:R,preventDefault:P,stopPropagation:Q});F.fireEvent("translate");F.fireEvent("capture");F.fireEvent("delegated");F.fireEvent("stopEvent");F.fireEvent("preventDefault");F.fireEvent("stopPropagation");expect(U).toHaveBeenCalled();expect(T).toHaveBeenCalled();expect(S).toHaveBeenCalled();expect(R).toHaveBeenCalled();expect(P).toHaveBeenCalled();expect(Q).toHaveBeenCalled()})});describe("the delegate event option",function(){var R,Q,P;beforeEach(function(){R=jasmine.createSpy().andCallFake(function(S){P.push(S.id)});P=[];Q=Ext.create({xtype:"container",id:"parentContainer",items:[{xtype:"button",cls:"btn",id:"foo"},{xtype:"container",cls:"cont",id:"bar",items:[{xtype:"button",cls:"btn",id:"myBtn"},{xtype:"component",cls:"comp",id:"myCmp"},{xtype:"textfield",cls:"field",id:"myField"}]},{xtype:"textfield",cls:"field",id:"baz"},{xtype:"widget",cls:"widget",id:"myWidget"}]})});afterEach(function(){Q.destroy()});it("should listen on direct children by xtype",function(){Q.on({render:R,delegate:"> button"});Q.render(document.body);expect(P).toEqual(["foo"])});it("should listen on descendants by xtype",function(){Q.on({render:R,delegate:"button"});Q.render(document.body);expect(P).toEqual(["foo","myBtn"])});it("should listen on a direct child by id",function(){Q.on({render:R,delegate:"> #baz"});Q.render(document.body);expect(P).toEqual(["baz"])});it("should listen on a descendant by id",function(){Q.on({render:R,delegate:"#myCmp"});Q.render(document.body);expect(P).toEqual(["myCmp"])});it("should listen on direct children by attribute value",function(){Q.on({render:R,delegate:'> [cls="field"]'});Q.render(document.body);expect(P).toEqual(["baz"])});it("should listen on a descendant by attribute value",function(){Q.on({render:R,delegate:'[cls="field"]'});Q.render(document.body);expect(P).toEqual(["myField","baz"])});it("should listen on descendant widgets",function(){Q.on({fubar:R,delegate:"widget"});Ext.getCmp("myWidget").fireEvent("fubar");expect(R.callCount).toBe(1);Ext.getCmp("myCmp").fireEvent("fubar");expect(R.callCount).toBe(1)});it("should increment Ext.Component class-level hasListeners",function(){expect(Ext.Component.hasListeners.derp).toBeFalsy();Q.on({derp:R,delegate:"merp"});expect(Ext.Component.hasListeners.derp).toBe(1)});it("should call delegate listeners in bottom up hierarchy order",function(){function S(T){P.push(this.id+" "+T.id)}Q.on({render:S,delegate:"#myCmp"});Q.items.getAt(1).on({render:S,delegate:"#myCmp"});Q.render(document.body);expect(P).toEqual(["bar myCmp","parentContainer myCmp"])});describe("removal",function(){it("should remove a delegated listener",function(){var S=jasmine.createSpy(),T=Ext.getCmp("myCmp");Q.on({derp:S,delegate:"#myCmp"});T.fireEvent("derp");expect(S.callCount).toBe(1);Q.un("derp",S);T.fireEvent("derp");expect(S.callCount).toBe(1)});it("should remove all delegated listeners using clearListeners",function(){var S=jasmine.createSpy(),U=jasmine.createSpy(),T=Ext.getCmp("myCmp");Q.on({derp:S,merp:U,delegate:"#myCmp"});T.fireEvent("derp");T.fireEvent("merp");expect(S.callCount).toBe(1);expect(U.callCount).toBe(1);Q.clearListeners();T.fireEvent("derp");T.fireEvent("merp");expect(S.callCount).toBe(1);expect(U.callCount).toBe(1)});it("should decrement class-level hasListeners",function(){Q.on({derp:R,delegate:"merp"});expect(Ext.Component.hasListeners.derp).toBe(1);Q.un("derp",R);expect(Ext.Component.hasListeners.derp).toBeFalsy()});it("should decrement class-level hasListeners when clearListeners is called",function(){var S=jasmine.createSpy(),T=jasmine.createSpy();Q.on({derp:S,merp:T,delegate:"#myCmp"});Q.items.getAt(1).on({derp:S,merp:T,delegate:"#myCmp"});expect(Ext.Component.hasListeners.derp).toBe(2);expect(Ext.Component.hasListeners.merp).toBe(2);Q.clearListeners();expect(Ext.Component.hasListeners.derp).toBe(1);expect(Ext.Component.hasListeners.merp).toBe(1)});it("should remove a delegated listener using destroyable",function(){var T=jasmine.createSpy(),U=Ext.getCmp("myCmp"),S=Q.on({derp:T,delegate:"#myCmp",destroyable:true});U.fireEvent("derp",U);expect(T.callCount).toBe(1);S.destroy();U.fireEvent("derp");expect(T.callCount).toBe(1)})});describe("with other event options",function(){it("should attach a delegate listener with the scope option",function(){var S={};Q.on({render:R,delegate:"#baz",scope:S});Q.render(document.body);expect(R.mostRecentCall.object).toBe(S)});it("should attach a delegate listener with the delay option",function(){Q.on({render:R,delegate:"#baz",delay:20});var S=Ext.now();Q.render(document.body);expect(R).not.toHaveBeenCalled();waitsFor(function(){return R.wasCalled});runs(function(){var T=Ext.now()-S;expect(T>=20).toBe(true)})});it("should attach a delegate listener with the single option",function(){Q.on({foo:R,delegate:"#baz",single:true});expect(R.callCount).toBe(0);Ext.getCmp("baz").fireEvent("foo");expect(R.callCount).toBe(1);Ext.getCmp("baz").fireEvent("foo");expect(R.callCount).toBe(1)});it("should attach a delegate listener with the buffer option",function(){Q.on({foo:R,delegate:"#baz",buffer:20});expect(R.callCount).toBe(0);Ext.getCmp("baz").fireEvent("foo");Ext.getCmp("baz").fireEvent("foo");waitsFor(function(){return R.wasCalled});runs(function(){expect(R.callCount).toBe(1)})});it("should attach a delegate listener with the args option",function(){var S={foo:R,delegate:"#baz",args:["a","b"]};Q.on(S);Ext.getCmp("baz").fireEvent("foo","c");expect(R.mostRecentCall.args).toEqual(["a","b","c",S])});it("should attach delegate listeners with the priority option",function(){var S=[];Q.on({foo:function(){S.push(5)},delegate:"#baz",priority:5});Q.on({foo:function(){S.push(1)},delegate:"#baz",priority:1});Q.on({foo:function(){S.push(10)},delegate:"#baz",priority:10});Ext.getCmp("baz").fireEvent("foo");expect(S).toEqual([10,5,1])});it("should attach delegate listeners with the order option",function(){var S=[];Q.on({foo:function(){S.push("current")},delegate:"#baz",order:"current"});Q.on({foo:function(){S.push("before")},delegate:"#baz",order:"before"});Q.on({foo:function(){S.push("after")},delegate:"#baz",order:"after"});Ext.getCmp("baz").fireEvent("foo");expect(S).toEqual(["before","current","after"])});it("should throw an error with the target option",function(){expect(function(){Q.on({foo:R,delegate:"bar",target:Ext.getCmp("baz")})}).toThrow("Cannot add 'foo' listener to component: 'parentContainer' - 'delegate' and 'target' event options are incompatible.")});it("should attach an element listener with the delegate option",function(){Q.on({click:R,element:"el",delegate:".comp"});Q.render(document.body);jasmine.fireMouseEvent(Ext.get("myBtn"),"click");expect(R).not.toHaveBeenCalled();jasmine.fireMouseEvent(Ext.get("myCmp"),"click");expect(R).toHaveBeenCalled()})})})});describe("hideMode",function(){it("should default to 'display'",function(){A({renderTo:document.body});expect(F.hideMode).toBe("display");expect(F.getEl().getVisibilityMode()).toBe(Ext.Element.DISPLAY)});it("should set a visibility mode of 'DISPLAY' on the element",function(){A({renderTo:document.body,hideMode:"display"});expect(F.getEl().getVisibilityMode()).toBe(Ext.Element.DISPLAY)});it("should set a visibility mode of 'VISIBILITY' on the element",function(){A({renderTo:document.body,hideMode:"visibility"});expect(F.getEl().getVisibilityMode()).toBe(Ext.Element.VISIBILITY)});it("should set a visibility mode of 'OFFSETS' on the element",function(){A({renderTo:document.body,hideMode:"offsets"});expect(F.getEl().getVisibilityMode()).toBe(Ext.Element.OFFSETS)})});describe("fromElement",function(){var G;beforeEach(function(){G=document.createElement("span")});afterEach(function(){G=null});it("should return null when a component cannot be found",function(){A({el:G,renderTo:document.body});expect(C.fromElement(G)).toBe(null)});it("should return the owner component when found",function(){A({autoEl:{tag:"blockquote",html:"A good idea is a good idea forever."},renderTo:document.body});expect(C.fromElement(F.el.dom)).toBe(F)});describe("when the el is configured",function(){it("should work",function(){A({el:G,renderTo:document.body},true);expect(C.fromElement(G)).toBe(F)});it("should find the component when the el is the document.body",function(){A({plugins:"viewport"});expect(C.fromElement(document.body)).toBe(F)})})});describe("ARIA attributes",function(){function G(I,J){jasmine.expectAriaAttr(F,I,J)}function H(I){jasmine.expectNoAriaAttr(F,I)}describe("static roles",function(){function I(J){describe(J,function(){beforeEach(function(){A({ariaRole:J,renderTo:Ext.getBody()})});describe("aria-hidden",function(){it("should not be present after render",function(){H("aria-hidden")});it("should not be present after hiding",function(){F.hide();H("aria-hidden")});it("should not be present after showing",function(){F.hide();F.show();H("aria-hidden")})});describe("aria-disabled",function(){it("should not be present after render",function(){H("aria-disabled")});it("should not be present after disabling",function(){F.disable();H("aria-disabled")});it("should not be present after enabling",function(){F.disable();F.enable();H("aria-disabled")})})})}I(undefined);I("presentation");I("document")});describe("widget roles",function(){beforeEach(function(){A({ariaRole:"widget",renderTo:Ext.getBody()})});describe("aria-hidden",function(){it("should be false after render",function(){G("aria-hidden","false")});it("should be true after hiding",function(){F.hide();G("aria-hidden","true")});it("should be false again after showing",function(){F.hide();F.show();G("aria-hidden","false")})});describe("aria-disabled",function(){it("should be false after render",function(){G("aria-disabled","false")});it("should be true after disabling",function(){F.disable();G("aria-disabled","true")});it("should be false again after enabling",function(){F.disable();F.enable();G("aria-disabled","false")})})})})})