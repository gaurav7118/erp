describe("Ext.app.domain.Component",function(){var A,B;beforeEach(function(){A=new Ext.panel.Panel({renderTo:Ext.getBody(),width:100,height:100});B=new Ext.app.Controller({id:"foo"})});afterEach(function(){Ext.destroy(A)});it("should ignore case on event names",function(){var C=jasmine.createSpy("foo handler");B.control({panel:{foo:C}});A.fireEvent("FOO");expect(C).toHaveBeenCalled()});it("controls Component events with control() method",function(){var C=jasmine.createSpy("foo handler");B.control({panel:{foo:C}});A.fireEvent("foo");expect(C).toHaveBeenCalled()});it("listens to Component events with listen() method",function(){var C=jasmine.createSpy("bar handler");B.listen({component:{panel:{bar:C}}});A.fireEvent("bar");expect(C).toHaveBeenCalled()});describe("looking up a menu as the direct child of a menu item",function(){var C,D;beforeEach(function(){C=jasmine.createSpy("foo handler");D=new Ext.menu.Menu({width:100,items:[{itemId:"foobar",menu:new Ext.menu.Menu({id:"childMenu",items:[{text:"A"}]})}],renderTo:Ext.getBody()})});afterEach(function(){Ext.destroy(D);C=D=null});it("should find the owner of the menu as a descendant of the menu item",function(){B.control({"#foobar menu":{foo:C}});Ext.getCmp("childMenu").fireEvent("foo");expect(C).toHaveBeenCalled()});it("should find the owner of the menu as a direct child of the menu item",function(){B.control({"#foobar > menu":{foo:C}});Ext.getCmp("childMenu").fireEvent("foo");expect(C).toHaveBeenCalled()})})})