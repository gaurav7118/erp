describe("Ext.button.Split",function(){var G=jasmine.focusAndWait,D;function E(H){H=Ext.apply({renderTo:Ext.getBody(),text:"foo"},H);return D=new Ext.button.Split(H)}function F(H,I){return jasmine.expectAriaAttr(D,H,I)}function C(H){return jasmine.expectNoAriaAttr(D,H)}function A(H,I){return jasmine.expectAriaAttr(D.arrowEl,H,I)}function B(H){return jasmine.expectNoAriaAttr(D.arrowEl,H)}afterEach(function(){if(D){D.destroy()}D=null});describe("arrowEl",function(){beforeEach(function(){E()});it("should render arrowEl",function(){expect(D.arrowEl.dom.nodeName).toBe("SPAN")})});describe("ARIA attributes",function(){describe("tabindex",function(){describe("default",function(){beforeEach(function(){E()});it('should have tabindex="0" on the main el',function(){F("tabIndex","0")});it('should have tabindex="0" on the arrowEl',function(){A("tabIndex","0")})});describe("configured",function(){beforeEach(function(){E({tabIndex:-10})});it('should have tabindex="-10" on the main el',function(){F("tabIndex","-10")});it('should have tabindex="-10" on the arrowEl',function(){A("tabIndex","-10")})});describe("when disabled",function(){beforeEach(function(){E({disabled:true})});xit("should have no tabindex on the main el",function(){C("tabIndex")});it("should have no tabindex on the arrowEl",function(){B("tabIndex")})});describe("setTabIndex",function(){beforeEach(function(){E();D.setTabIndex(42)});it('should have tabindex="42" on the main el',function(){F("tabIndex","42")});it('should have tabindex="42" on the arrowEl',function(){A("tabIndex","42")})});describe("disabling",function(){beforeEach(function(){E({tabIndex:99});D.disable()});xit("should have tabindex removed from the main el",function(){C("tabIndex")});it("should have tabindex removed from the arrowEl",function(){B("tabIndex")});describe("enabling",function(){beforeEach(function(){D.enable()});it('should have tabindex="99" on the main el',function(){F("tabIndex","99")});it('should have tabindex="99" on the arrowEl',function(){A("tabIndex","99")})})})});describe("role",function(){beforeEach(function(){E()});it("should have button role on the main el",function(){F("role","button")});it("should have button role on the arrowEl",function(){A("role","button")})});describe("aria-hidden",function(){describe("default",function(){beforeEach(function(){E()});it("should be set to false on the main el",function(){F("aria-hidden","false")});it("should be set to false on the arrowEl",function(){A("aria-hidden","false")});describe("hiding",function(){beforeEach(function(){D.hide()});it("should be set to true on the main el",function(){F("aria-hidden","true")});it("should be set to true on the arrowEl",function(){A("aria-hidden","true")});describe("showing",function(){beforeEach(function(){D.show()});it("should be set to false on the main el",function(){F("aria-hidden","false")});it("should be set to false on the arrowEl",function(){A("aria-hidden","false")})})})});describe("configured hidden",function(){beforeEach(function(){E({hidden:true})});it("should be set to true on the main el",function(){F("aria-hidden","true")});it("should be set to true on the arrowEl",function(){A("aria-hidden","true")})})});describe("aria-disabled",function(){describe("default",function(){beforeEach(function(){E()});it("should be set to false on the main el",function(){F("aria-disabled","false")});it("should be set to false on the arrowEl",function(){A("aria-disabled","false")});describe("disabling",function(){beforeEach(function(){D.disable()});it("should be set to true on the main el",function(){F("aria-disabled","true")});it("should be set to true on the arrowEl",function(){A("aria-disabled","true")});describe("enabling",function(){beforeEach(function(){D.enable()});it("should be set to false on the main el",function(){F("aria-disabled","false")});it("should be set to false on the arrowEl",function(){A("aria-disabled","false")})})})});describe("configured disabled",function(){beforeEach(function(){E({disabled:true})});it("should be set to true on the main el",function(){F("aria-disabled","true")});it("should be set to true on the arrowEl",function(){A("aria-disabled","true")})})});describe("labelling",function(){describe("with arrowTooltip",function(){beforeEach(function(){E({arrowTooltip:"fee fie foe foo"})});it("should have aria-label",function(){A("aria-label","fee fie foe foo")});it("should not have aria-labelledby",function(){B("aria-labelledby")})});describe("no arrowTooltip",function(){beforeEach(function(){E()});it("should have aria-labelledby",function(){A("aria-labelledby",D.el.id)});it("should not have aria-label",function(){B("aria-label")})})})});describe("focus styling",function(){var H;beforeEach(function(){H=new Ext.button.Button({renderTo:Ext.getBody(),text:"before"});E()});afterEach(function(){H.destroy();H=null});describe("focusing main el",function(){beforeEach(function(){G(D)});it("should add focusCls",function(){expect(D.el.hasCls("x-btn-focus")).toBe(true)});it("should not add x-arrow-focus",function(){expect(D.el.hasCls("x-arrow-focus")).toBe(false)});describe("blurring main el",function(){beforeEach(function(){G(H)});it("should remove x-btn-focus",function(){expect(D.el.hasCls("x-btn-focus")).toBe(false)});it("should not have x-arrow-focus",function(){expect(D.el.hasCls("x-arrow-focus")).toBe(false)})})});describe("focusing arrowEl",function(){beforeEach(function(){G(D.arrowEl)});it("should add x-arrow-focus",function(){expect(D.el.hasCls("x-arrow-focus")).toBe(true)});it("should not add x-btn-focus",function(){expect(D.el.hasCls("x-btn-focus")).toBe(false)});describe("blurring arrowEl",function(){beforeEach(function(){G(H)});it("should remove x-arrow-focus",function(){expect(D.el.hasCls("x-arrow-focus")).toBe(false)});it("should not have x-btn-focus",function(){expect(D.el.hasCls("x-btn-focus")).toBe(false)})})})});describe("events",function(){var K,L,I,J,M,H;beforeEach(function(){H=jasmine.createSpy("beforeFocusSpy");K=new Ext.button.Button({renderTo:Ext.getBody(),text:"before",listeners:{focus:H}});L=jasmine.createSpy("focus");I=jasmine.createSpy("blur");E({listeners:{focus:L,blur:I}});J=jasmine.createSpy("elFocus");M=jasmine.createSpy("arrowElFocus");D.el.on("focus",J);D.arrowEl.on("focus",M)});afterEach(function(){K.destroy();K=L=I=H=null;J=M=null});describe("focus",function(){beforeEach(function(){G(K);waitForSpy(H)});it("should fire when main el is focused from the outside",function(){G(D.el);waitForSpy(J);runs(function(){expect(L).toHaveBeenCalled()})});it("should fire when arrowEl is focused from the outside",function(){G(D.arrowEl);waitForSpy(M);runs(function(){expect(L).toHaveBeenCalled()})});it("should not fire when focus moved from main el to arrowEl",function(){G(D.el);G(D.arrowEl);waitForSpy(M);runs(function(){expect(L.callCount).toBe(1)})});it("should not fire when focus moved from arrowEl to main el",function(){G(D.arrowEl);G(D.el);waitForSpy(J);runs(function(){expect(L.callCount).toBe(1)})})});describe("blur",function(){it("should fire when main el is blurring to the outside",function(){G(D.el);waitForSpy(J);G(K);waitForSpy(H);runs(function(){expect(I).toHaveBeenCalled()})});it("should fire when arrowEl is blurring to the outside",function(){G(D.arrowEl);waitForSpy(M);G(K);waitForSpy(H);runs(function(){expect(I).toHaveBeenCalled()})});it("should not fire when focus moved from main el to arrowEl",function(){G(D.el);waitForSpy(J);G(D.arrowEl);waitForSpy(M);runs(function(){expect(I).not.toHaveBeenCalled()})});it("should not fire when focus moved from arrowEl to main el",function(){G(D.arrowEl);waitForSpy(M);G(D.el);waitForSpy(J);runs(function(){expect(I).not.toHaveBeenCalled()})})})});describe("dynamic setMenu",function(){describe("removing menu",function(){beforeEach(function(){E({tabIndex:1,menu:[{text:"item 1"},{text:"item 2"}]});D.setMenu(null)});it("should remove tabindex from arrowEl",function(){B("tabIndex")});it("should set display:none on arrowEl",function(){expect(D.arrowEl.dom.style.display).toBe("none")});describe("re-adding menu",function(){beforeEach(function(){D.setMenu({items:[{text:"foo 1"},{text:"foo 2"}]})});it("should add tabindex to arrowEl",function(){A("tabIndex","1")});it("should remove display:none from arrowEl",function(){expect(D.arrowEl.isVisible(true)).toBe(true)})})})});describe("keyboard interaction",function(){var J=jasmine.pressKey,K,H,I;afterEach(function(){K=H=I=null});describe("keydown processing",function(){beforeEach(function(){E({renderTo:undefined});H=spyOn(D,"onEnterKey").andCallThrough();I=spyOn(D,"onDownKey").andCallThrough();K=spyOn(D,"onClick").andCallThrough();D.render(Ext.getBody())});describe("Space key",function(){beforeEach(function(){J(D.arrowEl,"space")});it("should call onClick",function(){expect(K).toHaveBeenCalled()});it("should stop the keydown event",function(){var L=H.mostRecentCall.args;expect(L[0].isStopped).toBe(true)});it("should return false to stop propagation",function(){expect(H.mostRecentCall.result).toBe(false)})});describe("Enter key",function(){beforeEach(function(){J(D.arrowEl,"enter")});it("should call onClick",function(){expect(K).toHaveBeenCalled()});it("should stop the keydown event",function(){var L=H.mostRecentCall.args;expect(L[0].isStopped).toBeTruthy()});it("should return false to stop propagation",function(){expect(H.mostRecentCall.result).toBe(false)})});describe("Down arrow key",function(){beforeEach(function(){J(D.arrowEl,"down")});it("should NOT call onClick",function(){expect(K).not.toHaveBeenCalled()});it("should NOT stop the keydown event",function(){var L=I.mostRecentCall.args;expect(L[0].isStopped).toBeFalsy()});it("should NOT return false to stop propagation",function(){expect(I.mostRecentCall.result).not.toBeDefined()})})});describe("with menu",function(){beforeEach(function(){E({renderTo:undefined,menu:[{text:"foo"},{text:"bar"}]});H=spyOn(D,"onEnterKey").andCallThrough();I=spyOn(D,"onDownKey").andCallThrough();K=spyOn(D,"onClick").andCallThrough();D.render(Ext.getBody())});it("should open the menu on Space key",function(){J(D.arrowEl,"space");waitForSpy(H);runs(function(){expect(D.menu.isVisible()).toBe(true)})});it("should open the menu on Enter key",function(){J(D.arrowEl,"enter");waitForSpy(H);runs(function(){expect(D.menu.isVisible()).toBe(true)})});it("should open the menu on Down arrow key",function(){J(D.arrowEl,"down");waitForSpy(I);runs(function(){expect(D.menu.isVisible()).toBe(true)})})});describe("with arrowHandler",function(){var L;beforeEach(function(){L=jasmine.createSpy("arrowHandler");E({renderTo:undefined,arrowHandler:L});H=spyOn(D,"onEnterKey").andCallThrough();I=spyOn(D,"onDownKey").andCallThrough();K=spyOn(D,"onClick").andCallThrough();D.render(Ext.getBody())});it("should fire the handler on Space key",function(){J(D.arrowEl,"space");waitForSpy(H);runs(function(){expect(L).toHaveBeenCalled()})});it("should fire the handler on Enter key",function(){J(D.arrowEl,"enter");waitForSpy(H);runs(function(){expect(L).toHaveBeenCalled()})});it("should not fire the handler on down arrow key",function(){J(D.arrowEl,"down");waitForSpy(I);runs(function(){expect(L).not.toHaveBeenCalled()})})})})})