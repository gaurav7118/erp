describe("Ext.container.ButtonGroup",function(){var C;afterEach(function(){if(C){C.destroy();C=null}});function A(D){spyOn(Ext.log,"warn");C=new Ext.container.ButtonGroup(D||{});return C}function B(D){D=Ext.apply({renderTo:Ext.getBody()},D);return A(D)}describe("Structure and creation",function(){it("should extend Ext.Panel",function(){expect(A() instanceof Ext.Panel).toBeTruthy()});it("should allow instantiation via the 'buttongroup' xtype",function(){var D=new Ext.Panel({items:[{xtype:"buttongroup"}]});expect(D.items.getAt(0) instanceof Ext.container.ButtonGroup).toBeTruthy();D.destroy()})});describe("Layout",function(){it("should default to table layout",function(){A();expect(C.getLayout() instanceof Ext.layout.container.Table).toBeTruthy()});it("should allow overriding the layout",function(){A({layout:{type:"hbox"}});expect(C.getLayout() instanceof Ext.layout.container.HBox).toBeTruthy()});xit("should default to one table row",function(){A({items:[{},{},{},{},{},{},{},{},{},{}],renderTo:Ext.getBody()});expect(C.el.select("tr").getCount()).toEqual(1);expect(C.el.select("tr").item(0).select("td").getCount()).toEqual(10)});it("should honor a 'columns' config property",function(){A({columns:5,items:[{},{},{},{},{},{},{},{},{},{}],renderTo:Ext.getBody()});expect(C.getLayout().columns).toEqual(5)})});describe("Children",function(){it("should default child items to an xtype of 'button'",function(){A({items:[{},{xtype:"splitbutton"}]});expect(C.items.getAt(0).xtype).toEqual("button");expect(C.items.getAt(1).xtype).toEqual("splitbutton")})});describe("Title",function(){it("should have no title by default",function(){A({renderTo:Ext.getBody()});expect(C.title).toBeNull();expect(C.el.select(".x-btn-group-header").getCount()).toEqual(0)});it("should allow configuring a title",function(){A({title:"Group Title",renderTo:Ext.getBody()});expect(C.header.getTitle().getText()).toEqual("Group Title");expect(C.el.select(".x-btn-group-header").getCount()).toEqual(1)})});describe("Element classes",function(){it("should have a className of 'x-btn-group-notitle' when no title is configured",function(){A({renderTo:Ext.getBody()});expect(C.el).toHaveCls("x-btn-group-notitle")});it("should not have a className of 'x-btn-group-notitle' when a title is configured",function(){A({title:"Group Title",renderTo:Ext.getBody()});expect(C.el).not.toHaveCls("x-btn-group-notitle")});it("should have a className of 'x-btn-group' by default",function(){A({renderTo:Ext.getBody()});expect(C.el).toHaveCls("x-btn-group")});it("should allow overriding the baseCls",function(){A({baseCls:"x-test",frame:false,renderTo:Ext.getBody()});expect(C.el).not.toHaveCls("x-btn-group");expect(C.el).toHaveCls("x-test")})});describe("Framing",function(){it("should default to having a frame",function(){A({renderTo:Ext.getBody()});expect(C.frame).toBeTruthy();expect(C.el).toHaveCls("x-btn-group-default-framed")});it("should allow turning off the frame",function(){A({frame:false,renderTo:Ext.getBody()});expect(C.frame).toBeFalsy();expect(C.el).not.toHaveCls("x-btn-group-default-framed")})});describe("ARIA",function(){var E=jasmine.expectAriaAttr,D=jasmine.expectNoAriaAttr;describe("general",function(){beforeEach(function(){B()});it("should be a FocusableContainer",function(){expect(C.enableFocusableContainer).toBe(true)});it("should have presentation role on main el",function(){E(C.el,"role","presentation")});it("should have toolbar role on body el",function(){E(C.body,"role","toolbar")})});describe("labels",function(){describe("with header",function(){beforeEach(function(){B({title:"frobbe"})});it("should have aria-labelledby",function(){E(C.body,"aria-labelledby",C.header.titleCmp.textEl.id)});it("should not have aria-label",function(){D(C.body,"aria-label")})});describe("with title but no header",function(){beforeEach(function(){B({title:"bonzo",header:false})});it("should have aria-label",function(){E(C.body,"aria-label","bonzo")});it("should not have aria-labelledby",function(){D(C.body,"aria-labelledby")})});describe("with title but header updated to none",function(){beforeEach(function(){B({title:"throbbe",header:false});C.setIconCls("guzzard")});it("should have aria-label",function(){E(C.body,"aria-label","throbbe")});it("should not have aria-labelledby",function(){D(C.body,"aria-labelledby")})});describe("no header no title",function(){beforeEach(function(){B()});it("should not have aria-labelledby",function(){D(C.body,"aria-labelledby")});it("should not have aria-label",function(){D(C.body,"aria-label")})})})})})