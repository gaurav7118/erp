describe("Ext.container.Container",function(){var B,A;var C={dir:function(E){return E},log:function(E){return E},error:function(E){return E},warn:function(E){return E}};beforeEach(function(){A=Ext.global.console;Ext.global.console=C});afterEach(function(){B=Ext.destroy(B);Ext.global.console=A});function D(E){if(Ext.isArray(E)){E={items:E}}B=new Ext.container.Container(E);return B}describe("Floating descendants",function(){it("should find floating descentants using down(), not child()",function(){B=Ext.create("Ext.window.Window",{bodyPadding:5,layout:"fit",title:"Test",height:400,width:600,items:{xtype:"fieldset",title:"Test",items:{xtype:"window",title:"Descendant",height:100,width:200,constrain:true}},autoShow:true});expect(B.child("window")).toBeNull();expect(B.down("window")).not.toBeNull()});describe("layouts",function(){it("should allow floater layouts to run when the container has one queued",function(){var E=new Ext.window.Window({width:200,height:200});var F=new Ext.container.Container({renderTo:document.body,width:400,height:400,items:E});E.show();Ext.suspendLayouts();F.setSize(500,500);E.add({title:"X"});Ext.resumeLayouts(true);expect(E.items.first().rendered).toBe(true);F.destroy()})})});describe("onRender sequence",function(){beforeEach(function(){spyOn(Ext.Component.prototype,"onRender").andCallThrough()});it("should call onRender passing parentNode and position",function(){D({renderTo:document.body,items:{xtype:"panel"}});expect(Ext.Component.prototype.onRender.calls[0].args[0]).toEqual(Ext.getBody());expect(Ext.Component.prototype.onRender.calls[0].args[1]).toBeUndefined();expect(Ext.Component.prototype.onRender.calls[1].args[0]).toEqual(B.layout.innerCt);expect(Ext.Component.prototype.onRender.calls[1].args[1]).toEqual(0)})});describe("reading items",function(){it("should have item count 0 if items is ommitted",function(){D();expect(B.items.getCount()).toEqual(0)});it("should have an item count 0 if an empty array is specified",function(){D({items:[]});expect(B.items.getCount()).toEqual(0)});it("should handle adding a single item configuration",function(){D({items:{itemId:"first"}});expect(B.items.getCount()).toEqual(1);expect(B.items.first().itemId).toEqual("first")});it("should handle an array of items",function(){D({items:[{itemId:"item1"},{itemId:"item2"}]});expect(B.items.getCount()).toEqual(2);expect(B.items.first().itemId).toEqual("item1");expect(B.items.last().itemId).toEqual("item2")});describe("subclassing",function(){var F,E;beforeEach(function(){E=[{itemId:"item1"},{itemId:"item2"},{itemId:"item3"}]});afterEach(function(){E=null});it("should be able to apply items in initComponent",function(){F=Ext.define(null,{extend:"Ext.container.Container",initComponent:function(){Ext.apply(this,{items:E});this.callParent()}});B=new F();expect(B.items.getCount()).toBe(3)});it("should be able to applyIf items in initComponent",function(){F=Ext.define(null,{extend:"Ext.container.Container",initComponent:function(){Ext.applyIf(this,{items:E});this.callParent()}});B=new F();expect(B.items.getCount()).toBe(3)})})});describe("defaultType",function(){it("should use panel if one isn't specified",function(){D({items:[{itemId:"item"}]});expect(B.items.first() instanceof Ext.Panel).toBeTruthy()});it("should use a specified default type",function(){D({defaultType:"container",items:[{itemId:"item"}]});expect(B.items.first() instanceof Ext.container.Container)})});describe("getComponent",function(){var F,E,I,H,G;beforeEach(function(){F=new Ext.Component({itemId:"a"});E=new Ext.Component({id:"b"});I=new Ext.Component({itemId:"c"});H=new Ext.Component({itemId:"d"});D({items:[F,E,I,H]})});afterEach(function(){Ext.destroy(F,E,I,H,G);F=E=I=H=G=null});it("should return undefined if id is not found",function(){expect(B.getComponent("foo")).not.toBeDefined()});it("should return undefined if index is not found",function(){expect(B.getComponent(100)).not.toBeDefined()});it("should return undefined if instance is not found",function(){G=new Ext.Component();expect(B.getComponent(G)).not.toBeDefined()});it("should find a passed instance",function(){expect(B.getComponent(E)).toEqual(E)});it("should find a passed index",function(){expect(B.getComponent(2)).toEqual(I)});it("should find by id",function(){expect(B.getComponent("d")).toEqual(H)});describe("with floaters",function(){var J;beforeEach(function(){J=new Ext.Component({floating:true,itemId:"floater"})});afterEach(function(){J=null});it("should not get a floater by index",function(){B.removeAll();B.add(J);expect(B.getComponent(0)).toBeUndefined()});it("should be able to get a floater by id",function(){B.add(J);expect(B.getComponent("floater")).toBe(J)});it("should get a component via the instance",function(){B.add(J);expect(B.getComponent(J)).toBe(J)})})});describe("add",function(){it("should return the added item",function(){D();var E=new Ext.Component();expect(B.add(E)).toEqual(E)});it("should accept a single item",function(){D();var E=B.add({itemId:"foo"});expect(B.items.getCount()).toEqual(1);expect(B.items.first()).toEqual(E)});it("should be able to be called sequentiallly",function(){D();var F=B.add({}),E=B.add({}),G=B.add({});expect(B.items.getCount()).toEqual(3);expect(B.items.first()).toEqual(F);expect(B.items.getAt(1)).toEqual(E);expect(B.items.last()).toEqual(G)});it("should accept an array of items",function(){D();var G=new Ext.Component(),F=new Ext.Component(),H=new Ext.Component(),E;E=B.add([G,F,H]);expect(E[0]).toEqual(G);expect(E[1]).toEqual(F);expect(E[2]).toEqual(H);expect(B.items.first()).toEqual(G);expect(B.items.getAt(1)).toEqual(F);expect(B.items.last()).toEqual(H)});it("should accept n parameters, similar to array",function(){D();var G=new Ext.Component(),F=new Ext.Component(),I=new Ext.Component(),H=new Ext.Component(),E;E=B.add(G,F,I,H);expect(E[0]).toEqual(G);expect(E[1]).toEqual(F);expect(E[2]).toEqual(I);expect(E[3]).toEqual(H);expect(B.items.first()).toEqual(G);expect(B.items.getAt(1)).toEqual(F);expect(B.items.getAt(2)).toEqual(I);expect(B.items.last()).toEqual(H)});it("should fire the beforeadd event",function(){D();var E={fn:Ext.emptyFn},F=new Ext.Component();spyOn(E,"fn");B.on("beforeadd",E.fn);B.add(F);expect(E.fn).wasCalled()});it("should cancel if beforeadd returns false",function(){D();B.on("beforeadd",function(){return false});var E=B.add({});expect(B.items.getCount()).toEqual(0);E.destroy()});it("should fire the add event",function(){D();var E={fn:Ext.emptyFn},F=new Ext.Component();spyOn(E,"fn");B.on("add",E.fn);B.add(F);expect(E.fn.calls.length).toBe(1);expect(E.fn.calls[0].args[0]).toBe(B);expect(E.fn.calls[0].args[1]).toBe(F);expect(E.fn.calls[0].args[2]).toBe(0)});it("should fire the add event for floating items",function(){D();var F={fn:Ext.emptyFn},E=Ext.create("Ext.panel.Panel",{floating:true});spyOn(F,"fn");B.on("add",F.fn);B.add(E);expect(F.fn.calls.length).toBe(1);expect(F.fn.calls[0].args[0]).toBe(B);expect(F.fn.calls[0].args[1]).toBe(E);expect(F.fn.calls[0].args[2]).toBe(0)})});describe("insert",function(){it("should return the component instance",function(){D();var E=new Ext.Component();expect(B.insert(0,E)).toEqual(E)});it("should insert to the first spot when empty",function(){D();var E=B.insert(0,{});expect(B.items.first()).toEqual(E)});it("should be able to be called sequentially",function(){D();var F=new Ext.Component(),E=new Ext.Component(),G=new Ext.Component();B.insert(0,G);B.insert(0,E);B.insert(0,F);expect(B.items.first()).toEqual(F);expect(B.items.getAt(1)).toEqual(E);expect(B.items.last()).toEqual(G)});it("should insert to the lowest possible index if the specified index is too high",function(){D({items:[{},{},{}]});var E=B.insert(100,{});expect(B.items.last()).toEqual(E)});it("should insert at at the end if we use -1",function(){D({items:[{},{},{}]});var E=B.insert(-1,{});expect(B.items.last()).toEqual(E)});it("should put the item into the correct position",function(){D({items:[{},{},{}]});var E=B.insert(1,{});expect(B.items.getAt(1)).toEqual(E)});it("should accept an array",function(){D({items:[{},{},{}]});var F=new Ext.Component(),E=new Ext.Component(),G=new Ext.Component();B.insert(1,[F,E,G]);expect(B.items.getAt(1)).toEqual(F);expect(B.items.getAt(2)).toEqual(E);expect(B.items.getAt(3)).toEqual(G)});it("should move a component if it already exists, not insert/add",function(){var F=new Ext.Component(),E=new Ext.Component(),J=new Ext.Component(),I=new Ext.Component(),H=new Ext.Component(),G=false;D({items:[F,E,J,I,H]});B.on("add",function(){G=true});B.insert(1,I);expect(G).toBe(false);expect(B.items.indexOf(I)).toBe(1)})});describe("moving items",function(){describe("move",function(){it("should return false if the index doesn't exist in the container",function(){D({items:[{},{},{}]});expect(B.move(4,1)).toBe(false)});it("should return false if the component doesn't exist in the container",function(){D({items:[{},{},{}]});var E=new Ext.Component();expect(B.move(E,1)).toBe(false);E.destroy()});it("should move components by index",function(){var F=new Ext.Component(),E=new Ext.Component(),I=new Ext.Component(),H=new Ext.Component(),G=new Ext.Component();D({items:[F,E,I,H,G]});B.move(4,1);expect(B.items.indexOf(G)).toBe(1)});it("should move components by instance",function(){var F=new Ext.Component(),E=new Ext.Component(),I=new Ext.Component(),H=new Ext.Component(),G=new Ext.Component();D({items:[F,E,I,H,G]});B.move(I,1);expect(B.items.indexOf(I)).toBe(1)});it("should limit the index to the item size",function(){var F=new Ext.Component(),E=new Ext.Component();D({items:[F,E]});var H=jasmine.createSpy();B.on("childmove",H);B.move(F,100);var G=H.mostRecentCall.args;expect(G[2]).toBe(0);expect(G[3]).toBe(1)});describe("events",function(){it("should fire the move event and pass the container, the item, fromIdx & toIdx",function(){var F=jasmine.createSpy(),G=new Ext.Component(),E;D({items:[{},G,{}]});B.on("childmove",F);B.move(1,0);expect(F).toHaveBeenCalled();E=F.mostRecentCall.args;expect(E[0]).toBe(B);expect(E[1]).toBe(G);expect(E[2]).toBe(1);expect(E[3]).toBe(0)});it("should not fire the move event if the fromIdx === toIdx",function(){var E=jasmine.createSpy();D({items:[{},{},{}]});B.on("childmove",E);B.move(1,1);expect(E).not.toHaveBeenCalled()})})});describe("moveBefore",function(){var E,F;beforeEach(function(){E=new Ext.Component();F=new Ext.Component()});afterEach(function(){Ext.destroy(F,E);F=E=null});it("should be able to add a component instance that does not exist in the container",function(){D([E]);expect(B.moveBefore(F,E)).toBe(F);expect(B.items.getAt(0)).toBe(F);expect(B.items.getAt(1)).toBe(E)});it("should be able to add a component config and return it",function(){D([E]);var G=B.moveBefore({xtype:"panel",title:"Foo"},E);expect(B.items.getAt(0)).toBe(G);expect(G.getTitle()).toBe("Foo")});it("should return the moved item",function(){D({},E,{},F);expect(B.moveBefore(F,E)).toBe(F)});it("should be able to add items from another container",function(){var G=new Ext.container.Container({items:F});D([E]);expect(B.moveBefore(F,E)).toBe(F);expect(G.items.indexOf(F)).toBe(-1);expect(B.items.getAt(0)).toBe(F);expect(B.items.getAt(1)).toBe(E);G.destroy()});it("should be able to move existing items in a container",function(){D([{},{},E,{},{},{},F,{},{}]);expect(B.moveBefore(F,E)).toBe(F);expect(B.items.getAt(2)).toBe(F);expect(B.items.getAt(3)).toBe(E)});describe("with the item not in the container",function(){it("should move to the end if the before reference is null",function(){D([{},{},{},{}]);expect(B.moveBefore(F,null)).toBe(F);expect(B.items.getAt(4)).toBe(F)});it("should be able to move before the first item",function(){D([E,{},{},{}]);expect(B.moveBefore(F,E)).toBe(F);expect(B.items.getAt(0)).toBe(F);expect(B.items.getAt(1)).toBe(E)});it("should be able to move before the last item",function(){D([{},{},{},E]);expect(B.moveBefore(F,E)).toBe(F);expect(B.items.getAt(3)).toBe(F);expect(B.items.getAt(4)).toBe(E)});it("should be able to add to an empty container",function(){D([]);expect(B.moveBefore(F,null)).toBe(F);expect(B.items.getAt(0)).toBe(F)});it("should be able to move into the middle of the container",function(){D([{},{},{},E,{},{},{}]);expect(B.moveBefore(F,E)).toBe(F);expect(B.items.getAt(3)).toBe(F);expect(B.items.getAt(4)).toBe(E)})});describe("with the item in the container",function(){it("should do nothing if the reference is the component",function(){D([{},F,{}]);expect(B.moveBefore(F,F)).toBe(F);expect(B.items.getAt(1)).toBe(F)});it("should move to the end if the before reference is null",function(){D([F,{},{},{},{}]);expect(B.moveBefore(F,null)).toBe(F);expect(B.items.getAt(4)).toBe(F)});it("should be able to move before the first item",function(){D([E,{},F,{},{}]);expect(B.moveBefore(F,E)).toBe(F);expect(B.items.getAt(0)).toBe(F);expect(B.items.getAt(1)).toBe(E)});it("should be able to move before the last item",function(){D([{},F,{},{},E]);expect(B.moveBefore(F,E)).toBe(F);expect(B.items.getAt(3)).toBe(F);expect(B.items.getAt(4)).toBe(E)});it("should be able to move into the middle of the container when before the reference",function(){D([{},F,{},{},E,{},{},{}]);expect(B.moveBefore(F,E)).toBe(F);expect(B.items.getAt(3)).toBe(F);expect(B.items.getAt(4)).toBe(E)});it("should be able to move into the middle of the container when after the reference",function(){D([{},{},{},E,{},{},F,{}]);expect(B.moveBefore(F,E)).toBe(F);expect(B.items.getAt(3)).toBe(F);expect(B.items.getAt(4)).toBe(E)})});describe("events",function(){var G;beforeEach(function(){G=jasmine.createSpy()});afterEach(function(){G=null});describe("item exists in the container",function(){it("should not fire the remove event",function(){D([{},E,{},{},F]);B.on("remove",G);B.moveBefore(F,E);expect(G).not.toHaveBeenCalled()});it("should fire the childmove event & pass the container, component, prevIndex & newIndex",function(){D([{},E,{},{},F]);B.on("childmove",G);B.moveBefore(F,E);var H=G.mostRecentCall.args;expect(H[0]).toBe(B);expect(H[1]).toBe(F);expect(H[2]).toBe(4);expect(H[3]).toBe(1)})});describe("item exists in another container",function(){var H;beforeEach(function(){H=new Ext.container.Container({items:F})});afterEach(function(){H.destroy();H=null});it("should fire the remove event on the other container",function(){D([{},E,{}]);H.on("remove",G);B.moveBefore(F,E);expect(G.callCount).toBe(1)});it("should fire the add event & pass the container, component, & index",function(){D([{},E,{}]);B.on("add",G);B.moveBefore(F,E);var I=G.mostRecentCall.args;expect(I[0]).toBe(B);expect(I[1]).toBe(F);expect(I[2]).toBe(1)})});describe("new item",function(){it("should fire the add event & pass the container, component, & index",function(){D([{},E,{}]);B.on("add",G);B.moveBefore(F,E);var H=G.mostRecentCall.args;expect(H[0]).toBe(B);expect(H[1]).toBe(F);expect(H[2]).toBe(1)})})})});describe("moveAfter",function(){var E,F;beforeEach(function(){E=new Ext.Component();F=new Ext.Component()});afterEach(function(){Ext.destroy(F,E);F=E=null});it("should be able to add a component instance that does not exist in the container",function(){D([E]);expect(B.moveAfter(F,E)).toBe(F);expect(B.items.getAt(1)).toBe(F);expect(B.items.getAt(0)).toBe(E)});it("should be able to add a component config and return it",function(){D([E]);var G=B.moveAfter({xtype:"panel",title:"Foo"},E);expect(B.items.getAt(1)).toBe(G);expect(G.getTitle()).toBe("Foo")});it("should return the moved item",function(){D({},E,{},F);expect(B.moveAfter(F,E)).toBe(F)});it("should be able to add items from another container",function(){var G=new Ext.container.Container({items:F});D([E]);expect(B.moveAfter(F,E)).toBe(F);expect(G.items.indexOf(F)).toBe(-1);expect(B.items.getAt(1)).toBe(F);expect(B.items.getAt(0)).toBe(E);G.destroy()});it("should be able to move existing items in a container",function(){D([{},{},E,{},{},{},F,{},{}]);expect(B.moveAfter(F,E)).toBe(F);expect(B.items.getAt(3)).toBe(F);expect(B.items.getAt(2)).toBe(E)});describe("with the item not in the container",function(){it("should move to the start if the after reference is null",function(){D([{},{},{},{}]);expect(B.moveAfter(F,null)).toBe(F);expect(B.items.getAt(0)).toBe(F)});it("should be able to move after the first item",function(){D([E,{},{},{}]);expect(B.moveAfter(F,E)).toBe(F);expect(B.items.getAt(1)).toBe(F);expect(B.items.getAt(0)).toBe(E)});it("should be able to move after the last item",function(){D([{},{},{},E]);expect(B.moveAfter(F,E)).toBe(F);expect(B.items.getAt(4)).toBe(F);expect(B.items.getAt(3)).toBe(E)});it("should be able to add to an empty container",function(){D([]);expect(B.moveAfter(F,null)).toBe(F);expect(B.items.getAt(0)).toBe(F)});it("should be able to move into the middle of the container",function(){D([{},{},{},E,{},{},{}]);expect(B.moveAfter(F,E)).toBe(F);expect(B.items.getAt(4)).toBe(F);expect(B.items.getAt(3)).toBe(E)})});describe("with the item in the container",function(){it("should move to the start if the after reference is null",function(){D([{},{},F,{},{}]);expect(B.moveAfter(F,null)).toBe(F);expect(B.items.getAt(0)).toBe(F)});it("should do nothing if the reference is the component",function(){D([{},F,{}]);expect(B.moveAfter(F,F)).toBe(F);expect(B.items.getAt(1)).toBe(F)});it("should be able to move after the first item",function(){D([E,{},F,{},{}]);expect(B.moveAfter(F,E)).toBe(F);expect(B.items.getAt(1)).toBe(F);expect(B.items.getAt(0)).toBe(E)});it("should be able to move after the last item",function(){D([{},F,{},{},E]);expect(B.moveAfter(F,E)).toBe(F);expect(B.items.getAt(4)).toBe(F);expect(B.items.getAt(3)).toBe(E)});it("should be able to move into the middle of the container when before the reference",function(){D([{},F,{},{},E,{},{},{}]);expect(B.moveAfter(F,E)).toBe(F);expect(B.items.getAt(4)).toBe(F);expect(B.items.getAt(3)).toBe(E)});it("should be able to move into the middle of the container when after the reference",function(){D([{},{},{},E,{},{},F,{}]);expect(B.moveAfter(F,E)).toBe(F);expect(B.items.getAt(4)).toBe(F);expect(B.items.getAt(3)).toBe(E)})});describe("events",function(){var G;beforeEach(function(){G=jasmine.createSpy()});afterEach(function(){G=null});describe("item exists in the container",function(){it("should not fire the remove event",function(){D([{},E,{},{},F]);B.on("remove",G);B.moveAfter(F,E);expect(G).not.toHaveBeenCalled()});it("should fire the childmove event & pass the container, component, prevIndex & newIndex",function(){D([{},E,{},{},F]);B.on("childmove",G);B.moveAfter(F,E);var H=G.mostRecentCall.args;expect(H[0]).toBe(B);expect(H[1]).toBe(F);expect(H[2]).toBe(4);expect(H[3]).toBe(2)})});describe("item exists in another container",function(){var H;beforeEach(function(){H=new Ext.container.Container({items:F})});afterEach(function(){H.destroy();H=null});it("should fire the remove event on the other container",function(){D([{},E,{}]);H.on("remove",G);B.moveAfter(F,E);expect(G.callCount).toBe(1)});it("should fire the add event & pass the container, component, & index",function(){D([{},E,{}]);B.on("add",G);B.moveAfter(F,E);var I=G.mostRecentCall.args;expect(I[0]).toBe(B);expect(I[1]).toBe(F);expect(I[2]).toBe(2)})});describe("new item",function(){it("should fire the add event & pass the container, component, & index",function(){D([{},E,{}]);B.on("add",G);B.moveAfter(F,E);var H=G.mostRecentCall.args;expect(H[0]).toBe(B);expect(H[1]).toBe(F);expect(H[2]).toBe(2)})})})})});describe("remove",function(){function H(I){B=new Ext.container.Container({items:I||[F,E,G]})}var F,E,G;beforeEach(function(){F=new Ext.Component({itemId:"item1"});E=new Ext.Component();G=new Ext.Component()});afterEach(function(){F.destroy();E.destroy();G.destroy();F=E=G=null});describe("Removing during a layout",function(){it("Should cancel a component's layout when the component is removed and destroyed",function(){E.afterRender=Ext.Function.createSequence(E.afterRender,function(){B.remove(F,true)});H([F]);B.render(document.body);B.add(E);expect(B.layout.innerCt.dom.childNodes.length).toEqual(1);expect(B.layout.innerCt.dom.childNodes[0]).toBe(E.el.dom);expect(B.items.items.length).toEqual(1);expect(B.items.items[0]).toBe(E);expect(E.rendered).toBe(true);expect(F.destroyed).toBe(true);B.destroy()});it("Should cancel a component's layout when the component is removed and not destroyed",function(){E.afterRender=Ext.Function.createSequence(E.afterRender,function(){B.remove(F,false)});H([F]);B.render(document.body);B.add(E);expect(B.layout.innerCt.dom.childNodes.length).toEqual(1);expect(B.layout.innerCt.dom.childNodes[0]).toBe(E.el.dom);expect(B.items.items.length).toEqual(1);expect(B.items.items[0]).toBe(E);expect(E.rendered).toBe(true);expect(F.destroyed).toBeFalsy();B.destroy()})});describe("if the component isn't in the container",function(){var I;beforeEach(function(){H();I=new Ext.Component();B.remove(I)});afterEach(function(){Ext.destroy(I);I=null});it("should not remove",function(){expect(B.items.getCount()).toEqual(3)})});describe("if the container is empty",function(){beforeEach(function(){H([]);B.remove(F)});it("should do nothing if the container is empty",function(){expect(B.items.getCount()).toEqual(0)})});it("should remove a floater",function(){H();var I=new Ext.Component({floating:true});B.add(I);B.remove(I);expect(I.destroyed).toBe(true)});it("should return the removed item",function(){H();expect(B.remove(E)).toEqual(E)});it("should be able to remove by instance",function(){H();B.remove(F);expect(B.items.getCount()).toEqual(2)});it("should be able to remove by index",function(){H();B.remove(1);expect(B.items.getCount()).toEqual(2)});it("should be able to remove by id",function(){H();B.remove("item1");expect(B.items.getCount()).toEqual(2)});it("should be able to be called sequentially",function(){H();B.remove(F);B.remove(E);expect(B.items.getCount()).toEqual(1);expect(B.items.first()).toEqual(G)});it("should leave items in the correct order",function(){H();B.remove(1);expect(B.items.first()).toEqual(F);expect(B.items.last()).toEqual(G)});it("should fire beforeremove",function(){H();var I={fn:Ext.emptyFn};spyOn(I,"fn");B.on("beforeremove",I.fn);B.remove(F);expect(I.fn).wasCalled()});it("should cancel the remove if beforeremove returns false",function(){H();B.on("beforeremove",function(){return false});B.remove(F);expect(B.items.getCount()).toEqual(3);expect(B.items.first()).toEqual(F)});it("should fire the remove event",function(){H();var I={fn:Ext.emptyFn};spyOn(I,"fn");B.on("remove",I.fn);B.remove(E);expect(I.fn).wasCalled()});it("should use container autoDestroy as a default",function(){H();B.remove(F);expect(F.destroyed).toBeTruthy();B.autoDestroy=false;B.remove(E);expect(E.destroyed).toBeFalsy()});it("should respect the autoDestroy paramater",function(){H();B.autoDestroy=false;B.remove(F,true);expect(F.destroyed).toBeTruthy();B.autoDestroy=true;B.remove(E,false);expect(E.destroyed).toBeFalsy()});it("should move the component to the detachedBody when removed and not destroyed",function(){H();B.render(Ext.getBody());B.remove(F,false);expect(F.el.dom.parentNode).not.toBe(B.el.dom)});it("should respect the detachOnRemove config option",function(){H();B.detachOnRemove=false;B.render(Ext.getBody());B.remove(F,false);expect(F.el.dom.parentNode).toBe(B.layout.innerCt.dom)});it("should remove childEls from the cache by id",function(){H({xtype:"textfield",id:"text1"});B.render(Ext.getBody());B.remove("text1");expect(Ext.cache["text1-inputEl"]).toBe(undefined)});it("should remove childEls from the cache by inputId",function(){H({xtype:"textfield",inputId:"foo",id:"text1"});B.render(Ext.getBody());B.remove("text1");expect(Ext.cache["foo"]).toBe(undefined)})});describe("removeAll",function(){var F,E,H;function G(I){B=new Ext.container.Container({items:I||[F,E,H]})}beforeEach(function(){F=new Ext.Component({itemId:"item1"});E=new Ext.Component();H=new Ext.Component()});afterEach(function(){F.destroy();E.destroy();H.destroy();F=E=H=null});it("should do nothing if the container is empty",function(){G([]);B.removeAll();expect(B.items.getCount()).toEqual(0)});it("should remove all the items",function(){G();B.removeAll();expect(B.items.getCount()).toEqual(0)});it("should remove all floating components",function(){var I=new Ext.Component({floating:true});G();B.add(I);B.removeAll();expect(I.destroyed).toBe(true)});it("should return the removed items",function(){var I;G();I=B.removeAll();expect(I[0]).toEqual(F);expect(I[1]).toEqual(E);expect(I[2]).toEqual(H)});it("should include floating items in the return statement",function(){var J=new Ext.Component({floating:true}),I;G();B.add(J);I=B.removeAll();expect(I[3]).toBe(J)});it("should destroy items if autoDestroy is true",function(){G();B.removeAll(true);expect(F.destroyed).toBeTruthy();expect(E.destroyed).toBeTruthy();expect(H.destroyed).toBeTruthy()});it("should not destroy items if autoDestroy is false",function(){G();B.removeAll(false);expect(F.destroyed).toBeFalsy();expect(E.destroyed).toBeFalsy();expect(H.destroyed).toBeFalsy()});it("should remove childEls from the cache by id",function(){G({xtype:"textfield",id:"text1"});B.render(Ext.getBody());B.removeAll();expect(Ext.cache["text1-inputEl"]).toBe(undefined)});it("should remove childEls from the cache by inputId",function(){G({xtype:"textfield",inputId:"foo"});B.render(Ext.getBody());B.removeAll();expect(Ext.cache["foo"]).toBe(undefined)})});describe("defaults",function(){describe("using proper configs",function(){beforeEach(function(){Ext.define("spec.Cmp",{extend:"Ext.Component",xtype:"spec.cmp",config:{foo:null}})});afterEach(function(){Ext.undefine("spec.Cmp")});it("should apply default to component config",function(){B=D({defaults:{foo:1},items:{xtype:"spec.cmp"}});expect(B.items.getAt(0).getFoo()).toBe(1)});it("should apply default to component instance",function(){var E=new spec.Cmp();spyOn(E,"setFoo").andCallThrough();B=D({defaults:{foo:1},items:E});expect(E.setFoo).toHaveBeenCalledWith(1);expect(E.getFoo()).toBe(1)});it("should not apply default to component config if property exists in config",function(){B=D({defaults:{foo:1},items:{xtype:"spec.cmp",foo:2}});expect(B.items.getAt(0).getFoo()).toBe(2)});it("should not apply default to component instance if config is already set on the instance",function(){var E=new spec.Cmp({foo:2});spyOn(E,"setFoo").andCallThrough();B=D({defaults:{foo:1},items:E});expect(E.setFoo).not.toHaveBeenCalled();expect(E.getFoo()).toBe(2)})});describe("using old-style configs",function(){beforeEach(function(){Ext.define("spec.Cmp",{extend:"Ext.Component",xtype:"spec.cmp"})});afterEach(function(){Ext.undefine("spec.Cmp")});it("should apply default to component config",function(){B=D({defaults:{foo:1},items:{xtype:"spec.cmp"}});expect(B.items.getAt(0).foo).toBe(1)});it("should apply default to component instance",function(){var E=new spec.Cmp();B=D({defaults:{foo:1},items:E});expect(E.foo).toBe(1)});it("should not apply default to component config if property exists in config",function(){B=D({defaults:{foo:1},items:{xtype:"spec.cmp",foo:2}});expect(B.items.getAt(0).foo).toBe(2)});it("should not apply default to component instance if config is already set on the instance",function(){var E=new spec.Cmp({foo:2});B=D({defaults:{foo:1},items:E});expect(E.foo).toBe(2)})});it("should accept a defaults function",function(){D({defaults:function(){return{disabled:true}},items:[{},{}]});expect(B.items.first().disabled).toBeTruthy();expect(B.items.last().disabled).toBeTruthy()});it("should not apply defaults to component instances",function(){D({items:new Ext.Component({disabled:false}),defaults:{disabled:true}});expect(B.items.first().disabled).toBe(false)});it("should only apply defaults to configs if they don't exist",function(){D({items:{disabled:false},defaults:{disabled:true,hidden:true}});expect(B.items.first().disabled).toBeFalsy();expect(B.items.first().hidden).toBeTruthy()})});describe("ComponentQuery",function(){beforeEach(function(){B=new Ext.container.Container({items:[{foo:1,id:"top1",items:[{foo:3,id:"child1"},{bar:2,itemId:"child2",items:[{foo:5}]}]},{foo:2,itemId:"top2",items:[{foo:7,itemId:"child3"},{bar:4}]},{bar:3},{foo:8}]})});describe("query",function(){it("should return all items if the selector is empty",function(){var E=[];function F(G){G.items.each(function(H){E.push(H);F(H)})}F(B);expect(B.query()).toEqual(E)});it("should return an empty array for no matches",function(){var E=B.query("list");expect(E).toEqual([])});it("should return a filled array with matches",function(){var E=B.query("#child1");expect(E).toEqual([Ext.getCmp("child1")]);E=B.query("[foo=1] #child1");expect(E).toEqual([Ext.getCmp("child1")])})});describe("child",function(){it("should return the first item if the selector is empty",function(){var E=B.items.first();expect(B.child()).toBe(E)});describe("selector is a string",function(){it("should return null if no match is found",function(){expect(B.child("#foo")).toBeNull()});it("should only return direct children",function(){expect(B.child("#child3")).toBeNull()});it("should return matching direct children",function(){var E=B.items.last();expect(B.child('component[foo="8"]')).toEqual(E)});it("should return null if component is not a direct child",function(){var F=B.query("#child1")[0],E=B.query("#child2")[0];expect(B.child("#child2")).toBeNull();expect(F.child("#child2")).toBeNull();expect(E.child("#top1")).toBeNull()})});describe("selector is a component",function(){it("should return null if no match is found",function(){var E=Ext.create("Ext.Component",{renderTo:document.body});expect(B.child(E)).toBeNull();E.destroy();E=null});it("should only return direct children",function(){var G=B.query("#child1")[0],F=B.query("#child2")[0],E=B.query("#child3")[0];expect(B.child(G)).toBeNull();expect(B.child(F)).toBeNull();expect(B.child(E)).toBeNull()});it("should return matching direct children",function(){var E=B.query("#top1")[0],F=B.items.last();expect(B.child(E)).toBe(E);expect(B.child(F)).toBe(F)});it("should return null if component is not a direct child",function(){var G=B.query("#top1")[0],F=B.query("#child1")[0],E=B.query("#child2")[0];expect(B.child(E)).toBeNull();expect(F.child(E)).toBeNull();expect(E.child(G)).toBeNull()})});describe("component ids with non alpha-numeric chars",function(){var E,J=function(L,K){return new Ext.container.Container({items:[{id:L,items:[{id:K},{itemId:"child2"}]}]})},I,H,G,F;afterEach(function(){Ext.destroy(E);E=G=F=I=H=null});it("should allow non alpha-numeric chars",function(){I="a-1_23_456-";H="b-------222222222______";E=J(I,H);G=E.query("#"+I)[0];F=G.query("#"+H)[0];expect(E.child(G)).toBe(G);expect(G.child(F)).toBe(F)})})});describe("down",function(){it("should return the first item if the selector is empty",function(){var E=B.items.first();expect(B.down()).toBe(E)});describe("selector is a string",function(){it("should return null if no match is found",function(){expect(B.down("#foo")).toBeNull()});it("should return null if component is not a descendant",function(){var F=B.query("#child1")[0],E=B.query("#child2")[0];expect(F.down("#child2")).toBeNull();expect(E.down("#top1")).toBeNull()});it("should return children at any level",function(){var E=B.items.getAt(1).items.first();expect(B.down("#child3")).toEqual(E)});it("should return the first match",function(){var E=B.items.first();expect(B.down("component[foo]")).toEqual(E)})});describe("selector is a component",function(){it("should return null if no match is found",function(){var E=Ext.create("Ext.Component",{renderTo:document.body});expect(B.down(E)).toBeNull();E.destroy();E=null});it("should return null if component is not a descendant",function(){var G=B.query("#top1")[0],F=B.query("#child1")[0],E=B.query("#child2")[0];expect(F.down(E)).toBeNull();expect(E.down(G)).toBeNull()});it("should return children at any level",function(){var G=B.query("#top1")[0],F=B.query("#child1")[0],E=B.query("#child2")[0];expect(B.down(G)).toEqual(G);expect(B.down(F)).toEqual(F);expect(B.down(E)).toEqual(E)})});describe("component ids with non alpha-numeric chars",function(){var E,I=function(L,K){return new Ext.container.Container({items:[{id:"foo",items:[{id:L},{items:[{itemId:K}]}]}]})},G,F,J,H;afterEach(function(){Ext.destroy(E);E=J=H=G=F=null});it("should allow non alpha-numeric chars",function(){G="a-1_23_456-";F="b-------222222222______";E=I(G,F);J=E.query("#"+G)[0];H=E.query("#"+F)[0];expect(E.down(J)).toBe(J);expect(E.down(H)).toBe(H)})})})});describe("queryBy",function(){it("should return no items if the container is empty",function(){D();expect(B.queryBy(function(){})).toEqual([])});it("should default the scope to the current component",function(){var H=[],G=new Ext.Component(),F=new Ext.Component(),E=new Ext.Component();D({items:[G,F,E]});B.queryBy(function(I){H.push(I)});expect(H).toEqual([G,F,E])});it("should use the specified scope",function(){var G={},F=new Ext.Component(),E;D({items:F});B.queryBy(function(){E=this},G);expect(E).toBe(G)});it("should only exclude items if the return value is false",function(){var G=new Ext.Component(),F=new Ext.Component(),E=new Ext.Component();D({items:[G,F,E]});expect(B.queryBy(function(H){})).toEqual([G,F,E])});it("should exclude items if the return value is false",function(){var G=new Ext.Component(),F=new Ext.Component(),E=new Ext.Component();D({items:[G,F,E]});expect(B.queryBy(function(H){return H!==F})).toEqual([G,E])});it("should retrieve items in nested containers",function(){var G=new Ext.Component(),F=new Ext.Container({items:G}),E=new Ext.Container({items:F});D({items:E});expect(B.queryBy(function(H){return H===G})).toEqual([G])})});it("should destroy any child items on destroy",function(){var F=new Ext.Component(),E=new Ext.Component(),G=new Ext.Component({floating:true});D({items:[F,E,G]});B.destroy();expect(F.destroyed).toBe(true);expect(E.destroyed).toBe(true);expect(G.destroyed).toBe(true)});describe("enable/disable",function(){var M,T,S,R,W,V,U,L,J,H;var E=Ext.define(null,{extend:"Ext.container.Container",privates:{getChildItemsToDisable:function(){return M.call(this)}}});beforeEach(function(){Ext.define("spec.Custom",{extend:"Ext.Component",alias:"widget.custom",disableCount:0,enableCount:0,onDisableCount:0,onEnableCount:0,initComponent:function(){this.on({scope:this,enable:function(){++this.enableCount},disable:function(){++this.disableCount}});this.callParent()},onDisable:function(){++this.onDisableCount;this.callParent(arguments)},onEnable:function(){++this.onEnableCount;this.callParent(arguments)}});M=function(){return this.query("custom")}});afterEach(function(){Ext.undefine("spec.Custom");W=V=U=L=J=H=T=S=R=M=null});function P(X){X=Ext.apply({defaultType:"custom"},X);B=new E(X);T=B.down("#a");S=B.down("#b");R=B.down("#c");W=B.down("#a1");V=B.down("#a2");U=B.down("#a3");L=B.down("#b1");J=B.down("#b2");H=B.down("#b3")}function N(Z,Y){var X=[];Ext.Array.forEach(Z,function(a){X.push({xtype:"custom",itemId:a})});return X}function I(){var X=arguments.length,Y;for(Y=0;Y<X;++Y){expect(arguments[Y].disabled).toBe(false)}}function O(){var X=arguments.length,Y;for(Y=0;Y<X;++Y){expect(arguments[Y].disabled).toBe(true)}}function Q(){var X=arguments.length,Z=arguments[0],Y;for(Y=1;Y<X;++Y){expect(arguments[Y].onEnableCount).toBe(Z)}}function F(){var X=arguments.length,Z=arguments[0],Y;for(Y=1;Y<X;++Y){expect(arguments[Y].onDisableCount).toBe(Z)}}function G(){var X=arguments.length,Z=arguments[0],Y;for(Y=1;Y<X;++Y){expect(arguments[Y].enableCount).toBe(Z)}}function K(){var X=arguments.length,Z=arguments[0],Y;for(Y=1;Y<X;++Y){expect(arguments[Y].disableCount).toBe(Z)}}describe("via configuration",function(){describe("candidates to disable",function(){it("should disable children",function(){P({disabled:true,items:N(["a","b","c"])});O(T,S,R)});it("should only disable matching children",function(){M=function(){return this.query("#a,#c")};P({disabled:true,items:N(["a","b","c"])});O(T,R);I(S)});it("should disable children deeply",function(){P({disabled:true,items:[{xtype:"container",itemId:"a",items:N(["a1","a2","a3"])},{xtype:"container",itemId:"b",items:N(["b1","b2","b3"])}]});O(W,V,U,L,J,H)});it("should only disable matching deep children",function(){M=function(){return this.query("#a1,#a3,#b2")};P({disabled:true,items:[{xtype:"container",itemId:"a",items:N(["a1","a2","a3"])},{xtype:"container",itemId:"b",items:N(["b1","b2","b3"])}]});O(W,U,J);I(V,L,H)});it("should not disable non-matching containers",function(){P({disabled:true,items:[{xtype:"container",itemId:"a",items:N(["a1","a2","a3"])},{xtype:"container",itemId:"b",items:N(["b1","b2","b3"])}]});I(T,S)})});describe("events/template methods",function(){it("should not fire the disable event",function(){P({disabled:true,items:[{xtype:"container",itemId:"a",items:N(["a1","a2","a3"])},{xtype:"container",itemId:"b",items:N(["b1","b2","b3"])}]});F(0,W,V,U,L,J,H)});it("should not call onDisable until rendered",function(){P({disabled:true,items:[{xtype:"container",itemId:"a",items:N(["a1","a2","a3"])},{xtype:"container",itemId:"b",items:N(["b1","b2","b3"])}]});F(0,W,V,U,L,J,H);B.render(Ext.getBody());F(1,W,V,U,L,J,H)})})});describe("enable",function(){describe("before render",function(){beforeEach(function(){P({disabled:true,items:[{xtype:"container",itemId:"a",items:N(["a1","a2","a3"])},{xtype:"container",itemId:"b",items:N(["b1","b2","b3"])}]})});it("should enable child components",function(){O(W,V,U,L,J,H);B.enable();I(W,V,U,L,J,H)});describe("events/template methods",function(){it("should fire the enable event",function(){B.enable();G(1,W,V,U,L,J,H)});it("should not fire the enable event with silent: true",function(){B.enable(true);G(0,W,V,U,L,J,H)});it("should not call onEnable",function(){B.enable();Q(0,W,V,U,L,J,H);B.render(Ext.getBody());Q(0,W,V,U,L,J,H)})})});describe("after render",function(){beforeEach(function(){P({renderTo:Ext.getBody(),disabled:true,items:[{xtype:"container",itemId:"a",items:N(["a1","a2","a3"])},{xtype:"container",itemId:"b",items:N(["b1","b2","b3"])}]})});it("should enable child components",function(){O(W,V,U,L,J,H);B.enable();I(W,V,U,L,J,H)});describe("events/template methods",function(){it("should fire the enable event",function(){B.enable();G(1,W,V,U,L,J,H)});it("should not fire the enable event with silent: true",function(){B.enable(true);G(0,W,V,U,L,J,H)});it("should call onEnable",function(){B.enable();Q(1,W,V,U,L,J,H)})})})});describe("disable",function(){describe("before render",function(){beforeEach(function(){P({items:[{xtype:"container",itemId:"a",items:N(["a1","a2","a3"])},{xtype:"container",itemId:"b",items:N(["b1","b2","b3"])}]})});it("should disable child components",function(){I(W,V,U,L,J,H);B.disable();O(W,V,U,L,J,H)});describe("events/template methods",function(){it("should fire the disable event",function(){B.disable();K(1,W,V,U,L,J,H)});it("should not fire the disable event with silent: true",function(){B.disable(true);K(0,W,V,U,L,J,H)});it("should not call onDisable until rendering",function(){B.disable();F(0,W,V,U,L,J,H);B.render(Ext.getBody());F(1,W,V,U,L,J,H)})})});describe("after render",function(){beforeEach(function(){P({renderTo:Ext.getBody(),items:[{xtype:"container",itemId:"a",items:N(["a1","a2","a3"])},{xtype:"container",itemId:"b",items:N(["b1","b2","b3"])}]})});it("should disable child components",function(){I(W,V,U,L,J,H);B.disable();O(W,V,U,L,J,H)});describe("events/template methods",function(){it("should fire the disable event",function(){B.disable();K(1,W,V,U,L,J,H)});it("should not fire the disable event with silent: true",function(){B.disable(true);K(0,W,V,U,L,J,H)});it("should call onDisable",function(){B.disable();F(1,W,V,U,L,J,H)})})})});describe("masking",function(){it("should only mask the top level component",function(){P({renderTo:Ext.getBody(),disabled:true,items:[{xtype:"container",itemId:"a",items:N(["a1"])}]});expect(B.isMasked()).toBe(true);expect(T.isMasked()).toBe(false);expect(W.isMasked()).toBe(false)})});describe("child state",function(){describe("child disabled before container",function(){it("should keep the child disabled state",function(){P({items:[{itemId:"a"}]});T.disable();B.disable();expect(B.disabled).toBe(true);expect(T.disabled).toBe(true);B.enable();expect(B.disabled).toBe(false);expect(T.disabled).toBe(true)})});describe("child disabled after container",function(){it("should keep the child disabled state",function(){P({items:[{itemId:"a"}]});B.disable();T.disable();expect(B.disabled).toBe(true);expect(T.disabled).toBe(true);B.enable();expect(B.disabled).toBe(false);expect(T.disabled).toBe(true)})});describe("child disabled before being added to container",function(){it("should keep the child disabled state",function(){P();B.disable();T=new Ext.Component({disabled:true});B.add(T);expect(B.disabled).toBe(true);expect(T.disabled).toBe(true);B.enable();expect(B.disabled).toBe(false);expect(T.disabled).toBe(true)})})})});describe("afterrender event",function(){var E,F;beforeEach(function(){E={handler:function(){}};F=spyOn(E,"handler")});it('should fire "afterrender" after render',function(){expect(F.callCount).toEqual(0);D({listeners:{afterrender:E.handler},renderTo:Ext.getBody()});expect(F.callCount).toEqual(1)});it('should fire "afterrender" after render, with no items',function(){expect(F.callCount).toEqual(0);D({listeners:{afterrender:E.handler},renderTo:Ext.getBody(),items:[]});expect(F.callCount).toEqual(1)});it('should fire "afterrender" only once with one item',function(){expect(F.callCount).toEqual(0);D({listeners:{afterrender:E.handler},renderTo:Ext.getBody(),items:[{},{},{}]});expect(F.callCount).toEqual(1)})});describe("nextChild",function(){var E,F;beforeEach(function(){E=new Ext.container.Container({items:[{xtype:"textfield",fieldLabel:"Name",name:"name"},{xtype:"textfield",fieldLabel:"Email",name:"email",vtype:"email"},{xtype:"numberfield",fieldLabel:"Age",name:"age"},{xtype:"textfield",fieldLabel:"Country",name:"country"},{xtype:"textareafield",fieldLabel:"Bio",labelAlign:"top",name:"bio"}]});F=E.getComponent(2)});afterEach(function(){E.destroy();E=null});it("should return the next child",function(){expect(E.nextChild(F)).toBe(E.getComponent(3))});it("should return the next child using a selector",function(){expect(E.nextChild(F,"field[name=bio]")).toBe(E.getComponent(4))});it("should return null if there is no child",function(){expect(E.nextChild(null,"field[name=bio]")).toBeNull()});it("should return null if there are no matches",function(){expect(E.nextChild(F,"madeupxtype")).toBeNull()})});describe("prevChild",function(){var E,F;beforeEach(function(){E=new Ext.container.Container({items:[{xtype:"textfield",fieldLabel:"Name",name:"name"},{xtype:"textfield",fieldLabel:"Email",name:"email",vtype:"email"},{xtype:"numberfield",fieldLabel:"Age",name:"age"},{xtype:"textfield",fieldLabel:"Country",name:"country"},{xtype:"textareafield",fieldLabel:"Bio",labelAlign:"top",name:"bio"}]});F=E.getComponent(2)});afterEach(function(){E.destroy();E=null});it("should return the previous child",function(){expect(E.prevChild(F)).toBe(E.getComponent(1))});it("should return the previous child using a selector",function(){expect(E.prevChild(F,"field[name=name]")).toBe(E.getComponent(0))});it("should return null if there is no child",function(){expect(E.prevChild(null,"field[name=name]")).toBeNull()});it("should return null if there are no matches",function(){expect(E.prevChild(F,"madeupxtype")).toBeNull()})});describe("render",function(){it("should allow a child item to veto its render",function(){var E=Ext.create("Ext.Container",{renderTo:document.body,items:[{xtype:"component",listeners:{beforerender:function(){return false}}}]});expect(E.child().rendered).toBe(false);E.destroy()});it("should only perform one layout on render",function(){var E=new Ext.panel.Panel({title:"Panel",items:[{xtype:"gridpanel",columns:[{text:"Col1",dataIndex:"field1"}],store:{fields:["field1"],data:[{field1:"value1"},{field1:"value2"}],autoDestroy:true},width:200},{xtype:"gridpanel",columns:[{text:"Col1",dataIndex:"field1"}],store:{fields:["field1"],data:[{field1:"value1"},{field1:"value2"}],autoDestroy:true},width:200}],renderTo:Ext.getBody()});expect(E.layoutCounter).toBe(1);E.destroy()});it("should perform three layouts in total if embedded views are shrinkwrap height",function(){var E=new Ext.panel.Panel({title:"Panel",items:[{xtype:"gridpanel",columns:[{text:"Col1",dataIndex:"field1"}],store:{fields:["field1"],data:[{field1:"value1"},{field1:"value2"}],autoDestroy:true},width:200},{xtype:"gridpanel",columns:[{text:"Col1",dataIndex:"field1"}],store:{fields:["field1"],data:[{field1:"value1"},{field1:"value2"}],autoDestroy:true},width:200}],renderTo:Ext.getBody()}),G=E.getComponent(0).view,F=E.getComponent(1).view;G.refresh();F.refresh();expect(E.layoutCounter).toBe(3);E.destroy()});it("should only perform one layout in total if embedded views do deferred refreshes and variableRowHeight is NOT set",function(){var E=new Ext.panel.Panel({title:"Panel",items:[{xtype:"gridpanel",columns:[{text:"Col1",dataIndex:"field1"}],store:{fields:["field1"],data:[{field1:"value1"},{field1:"value2"}],autoDestroy:true},width:200,height:100},{xtype:"gridpanel",columns:[{text:"Col1",dataIndex:"field1"}],store:{fields:["field1"],data:[{field1:"value1"},{field1:"value2"}],autoDestroy:true},width:200,height:100}],renderTo:Ext.getBody()}),G=E.getComponent(0).view,F=E.getComponent(1).view;G.refresh();F.refresh();expect(G.ownerGrid.layoutCounter).toBe(1);expect(F.ownerGrid.layoutCounter).toBe(1);expect(E.layoutCounter).toBe(1);E.destroy()});it("should only perform two grid layouts in total if embedded views have variableRowHeight",function(){var E=new Ext.panel.Panel({title:"Panel",items:[{xtype:"gridpanel",variableRowHeight:true,columns:[{text:"Col1",dataIndex:"field1"}],store:{fields:["field1"],data:[{field1:"value1"},{field1:"value2"}],autoDestroy:true},width:200,height:100},{xtype:"gridpanel",columns:[{text:"Col1",dataIndex:"field1",variableRowHeight:true}],store:{fields:["field1"],data:[{field1:"value1"},{field1:"value2"}],autoDestroy:true},width:200,height:100}],renderTo:Ext.getBody()}),G=E.getComponent(0).view,F=E.getComponent(1).view;G.refresh();F.refresh();expect(G.ownerGrid.layoutCounter).toBe(2);expect(F.ownerGrid.layoutCounter).toBe(2);expect(E.layoutCounter).toBe(1);E.destroy()})});describe("hierarchy state",function(){var M,P,O,N,L,J,I,H,G,F,E,T,S,R;function K(V){V=V||{};var U=V.hidden||V.collapsed;L=Ext.widget({xtype:"component",id:"fa",floating:true,shadow:false});J=Ext.widget({xtype:"component",id:"fb",floating:true,shadow:false,hidden:U});I=Ext.widget({xtype:"component",id:"fc",floating:true,shadow:false});H=Ext.widget({xtype:"component",id:"fd",floating:true,shadow:false,hidden:U});G=Ext.widget({xtype:"component",id:"fe",floating:true,shadow:false});F=Ext.widget({xtype:"component",id:"ff",floating:true,shadow:false});E=Ext.widget({xtype:"component",id:"fg",floating:true,shadow:false});T=Ext.widget({xtype:"component",id:"fh",floating:true,shadow:false,hidden:U});S=Ext.widget({xtype:"component",id:"fi",floating:true,shadow:false});R=Ext.widget({xtype:"component",id:"fj",floating:true,shadow:false,hidden:U});M={renderTo:document.body,xtype:"panel",id:"a",animCollapse:false,header:{items:[E,T]},items:[{xtype:"panel",id:"b",header:{items:[S,R]},items:[{xtype:"container",id:"c",items:[L,J,I,H,G,F]}]}]};if(V.hidden){M.hidden=true}if(V.collapsed){M.collapsed=true}P=Ext.widget(M);O=Ext.getCmp("b");N=Ext.getCmp("c");L.show();I.show();G.show();F.show();E.show();S.show();if(!U){J.show();J.hide();H.show();H.hide();T.show();T.hide();R.show();R.hide()}}afterEach(function(){Ext.destroy(P,O,N,L,J,I,H,G,F,E,T,S,R)});it("should chain the hierarchy state of descendants",function(){K();var U=P.getInherited();U.foo=1;expect(O.getInherited().foo).toBe(1);expect(N.getInherited().foo).toBe(1);expect(L.getInherited().foo).toBe(1);expect(J.getInherited().foo).toBe(1)});describe("moving to from visible, expanded parent to visible, expanded parent",function(){var U;beforeEach(function(){K();U=Ext.widget({xtype:"panel",renderTo:document.body});U.add(O);U.getInherited().foo=1});afterEach(function(){U.destroy()});it("should chain the hierarchy state to the new parent",function(){expect(O.getInherited().foo).toBe(1);expect(N.getInherited().foo).toBe(1);expect(L.getInherited().foo).toBe(1)})});function Q(Y){var V,X,U;if(Y==="hidden"){V="visible";X="hide";U="show"}else{V="expanded";X="collapse";U="expand"}describe("hierarchical "+((Y==="hidden")?"hiding":"collapsing"),function(){beforeEach(function(){K()});it("should set "+Y+" in the hierarchy state",function(){P[X]();expect(O.getInherited()[Y]).toBe(true);expect(N.getInherited()[Y]).toBe(true);expect(L.getInherited()[Y]).toBe(true);expect(J.getInherited()[Y]).toBe(true)});it("should hide floating descendant",function(){var a=jasmine.createSpy(),b=jasmine.createSpy();spyOn(L,"hide").andCallThrough();L.on("beforehide",b);L.on("hide",a);spyOn(L,"afterHide").andCallThrough();P[X]();expect(L.hide).toHaveBeenCalled();expect(b).toHaveBeenCalled();expect(a).toHaveBeenCalled();expect(L.afterHide).toHaveBeenCalled();expect(L.hidden).toBe(true);expect(L.el.isVisible()).toBe(false)});it("should not hide hidden floating descendant",function(){spyOn(J,"hide").andCallThrough();P[X]();expect(J.hide).not.toHaveBeenCalled();expect(J.hidden).toBe(true);expect(J.el.isVisible()).toBe(false)});it("should not allow beforehide to veto the hierarchical hide of a floating descendant",function(){var a=jasmine.createSpy(),b=jasmine.createSpy().andReturn(false);spyOn(I,"hide").andCallThrough();I.on("beforehide",b);I.on("hide",a);spyOn(I,"afterHide").andCallThrough();P[X]();expect(I.hide).toHaveBeenCalled();expect(b).toHaveBeenCalled();expect(a).toHaveBeenCalled();expect(I.afterHide).toHaveBeenCalled();expect(I.hidden).toBe(true);expect(I.el.isVisible()).toBe(false)});if(Y==="hidden"){it("should hide floater that is a child of a collapse-immune child",function(){var a=jasmine.createSpy(),b=jasmine.createSpy();spyOn(E,"hide").andCallThrough();E.on("beforehide",b);E.on("hide",a);spyOn(E,"afterHide").andCallThrough();P.hide();expect(E.hide).toHaveBeenCalled();expect(b).toHaveBeenCalled();expect(a).toHaveBeenCalled();expect(E.afterHide).toHaveBeenCalled();expect(E.hidden).toBe(true);expect(E.el.isVisible()).toBe(false)})}else{it("should not hide floater that is a child of a collapse-immune child",function(){spyOn(E,"hide").andCallThrough();P.collapse();expect(E.hide).not.toHaveBeenCalled();expect(E.hidden).toBe(false);expect(E.el.isVisible()).toBe(true)})}it("should not hide hidden floater that is a child of a collapse-immune child",function(){spyOn(T,"hide").andCallThrough();P[X]();expect(T.hide).not.toHaveBeenCalled();expect(T.hidden).toBe(true);expect(T.el.isVisible()).toBe(false)});it("should hide floater that is a child of a collapse-immune grandchild",function(){var a=jasmine.createSpy(),b=jasmine.createSpy();spyOn(S,"hide").andCallThrough();S.on("beforehide",b);S.on("hide",a);spyOn(S,"afterHide").andCallThrough();P[X]();expect(S.hide).toHaveBeenCalled();expect(b).toHaveBeenCalled();expect(a).toHaveBeenCalled();expect(S.afterHide).toHaveBeenCalled();expect(S.hidden).toBe(true);expect(S.el.isVisible()).toBe(false)});it("should not hide hidden floater that is a child of a collapse-immune grandchild",function(){spyOn(R,"hide").andCallThrough();P[X]();expect(R.hide).not.toHaveBeenCalled();expect(R.hidden).toBe(true);expect(R.el.isVisible()).toBe(false)})});function W(a){describe("hierarchical "+((Y==="hidden")?"showing":"expanding")+" (parent "+(a?("initially rendered "+Y):(Y+" after inital render"))+")",function(){beforeEach(function(){var b;if(a){b={};b[Y]=true;K(b)}else{K();P[Y==="hidden"?"hide":"collapse"]()}});it("should remove "+Y+" from the hierarchy state",function(){P[U]();expect(Y in O.getInherited()).toBe(false);expect(Y in N.getInherited()).toBe(false);expect(Y in L.getInherited()).toBe(false);expect(Y in J.getInherited()).toBe(Y==="hidden"?true:false)});it("should show hierarchically hidden floating descendant",function(){var c=jasmine.createSpy(),b=jasmine.createSpy();spyOn(L,"show").andCallThrough();L.on("beforeshow",b);L.on("show",c);spyOn(L,"afterShow").andCallThrough();P[U]();expect(L.show).toHaveBeenCalled();expect(b).toHaveBeenCalled();expect(c).toHaveBeenCalled();expect(L.afterShow).toHaveBeenCalled();expect(L.hidden).toBe(false);expect(L.el.isVisible()).toBe(true)});it("should not show explicitly hidden floating descendant",function(){spyOn(J,"show").andCallThrough();P[U]();expect(J.show).not.toHaveBeenCalled();expect(J.hidden).toBe(true);if(a){expect(J.rendered).toBe(false)}else{expect(J.el.isVisible()).toBe(false)}});it("should allow beforeshow to veto the show of a hierarchically hidden floating descendant",function(){var c=jasmine.createSpy(),b=jasmine.createSpy().andReturn(false);spyOn(I,"show").andCallThrough();I.on("beforeshow",b);I.on("show",c);spyOn(I,"afterShow").andCallThrough();P[U]();expect(I.show).toHaveBeenCalled();expect(b).toHaveBeenCalled();expect(c).not.toHaveBeenCalled();expect(I.afterShow).not.toHaveBeenCalled();if(a){expect(J.rendered).toBe(false)}else{expect(I.hidden).toBe(true);expect(I.el.isVisible()).toBe(false)}});it("should defer the show of an explicitly hidden floating descendant whose show method was called while hierarchically hidden",function(){var e=jasmine.createSpy(),c=jasmine.createSpy(),b=jasmine.createSpy(),d={};H.on("beforeshow",c);H.on("show",e);spyOn(H,"afterShow").andCallThrough();H.show("foo",b,d);expect(c).not.toHaveBeenCalled();expect(e).not.toHaveBeenCalled();expect(H.afterShow).not.toHaveBeenCalled();expect(b).not.toHaveBeenCalled();spyOn(H,"show").andCallThrough();P[U]();expect(H.show).toHaveBeenCalledWith(null,b,d);expect(c).toHaveBeenCalled();expect(e).toHaveBeenCalled();expect(H.afterShow).toHaveBeenCalled();expect(b).toHaveBeenCalled()});it("should not show a hierarchically hidden floating descendant whose hide method was called while hierarchically hidden",function(){G.hide();spyOn(G,"show").andCallThrough();P[U]();expect(G.show).not.toHaveBeenCalled();expect(G.hidden).toBe(true);if(a){expect(J.rendered).toBe(false)}else{expect(J.el.isVisible()).toBe(false)}});it("should defer the show of a hierarchically hidden floating descendant whose show method was called while hierarchically hidden",function(){var e=jasmine.createSpy(),c=jasmine.createSpy(),b=jasmine.createSpy(),d={};F.on("beforeshow",c);F.on("show",e);spyOn(F,"afterShow").andCallThrough();F.show("foo",b,d);expect(c).not.toHaveBeenCalled();expect(e).not.toHaveBeenCalled();expect(F.afterShow).not.toHaveBeenCalled();expect(b).not.toHaveBeenCalled();spyOn(F,"show").andCallThrough();P[U]();expect(F.show).toHaveBeenCalledWith(null,b,d);expect(c).toHaveBeenCalled();expect(e).toHaveBeenCalled();expect(F.afterShow).toHaveBeenCalled();expect(b).toHaveBeenCalled()});if(Y==="hidden"){it("should show hierarchically hidden floater that is a child of a collapse-immune child",function(){var c=jasmine.createSpy(),b=jasmine.createSpy();spyOn(E,"show").andCallThrough();E.on("beforeshow",b);E.on("show",c);spyOn(E,"afterShow").andCallThrough();P[U]();expect(E.show).toHaveBeenCalled();expect(b).toHaveBeenCalled();expect(c).toHaveBeenCalled();expect(E.afterShow).toHaveBeenCalled();expect(E.hidden).toBe(false);expect(E.el.isVisible()).toBe(true)})}else{it("should not show visible floater that is a child of a collapse-immune child",function(){spyOn(E,"show").andCallThrough();P[U]();expect(E.show).not.toHaveBeenCalled();expect(E.hidden).toBe(false);expect(E.el.isVisible()).toBe(true)})}it("should not show explicitly hidden floater that is a child of a collapse-immune child",function(){spyOn(T,"show").andCallThrough();P[U]();expect(T.show).not.toHaveBeenCalled();expect(T.hidden).toBe(true);if(a){expect(T.rendered).toBe(false)}else{expect(T.el.isVisible()).toBe(false)}});it("should show hierarchically hidden floater that is a child of a collapse-immune grandchild",function(){var c=jasmine.createSpy(),b=jasmine.createSpy();spyOn(S,"show").andCallThrough();S.on("beforeshow",b);S.on("show",c);spyOn(S,"afterShow").andCallThrough();P[U]();expect(S.show).toHaveBeenCalled();expect(b).toHaveBeenCalled();expect(c).toHaveBeenCalled();expect(S.afterShow).toHaveBeenCalled();expect(S.hidden).toBe(false);expect(S.el.isVisible()).toBe(true)});it("should not show explicitly hidden floater that is a child of a collapse-immune grandchild",function(){spyOn(R,"show").andCallThrough();P[U]();expect(R.show).not.toHaveBeenCalled();expect(R.hidden).toBe(true);if(a){expect(R.rendered).toBe(false)}else{expect(R.el.isVisible()).toBe(false)}})})}W();W(true);describe("moving from "+V+" parent to "+Y+" parent",function(){var a;beforeEach(function(){K();a=Ext.widget({xtype:"panel",renderTo:document.body,hidden:Y==="hidden",collapsed:Y==="collapsed"})});afterEach(function(){a.destroy()});it("should chain the hierarchy state to the new parent",function(){a.add(O);expect(O.getInherited()[Y]).toBe(true);expect(N.getInherited()[Y]).toBe(true);expect(L.getInherited()[Y]).toBe(true);expect(J.getInherited()[Y]).toBe(true)});it("should hide floating descendant",function(){var b=jasmine.createSpy(),c=jasmine.createSpy();spyOn(L,"hide").andCallThrough();L.on("beforehide",c);L.on("hide",b);spyOn(L,"afterHide").andCallThrough();a.add(O);expect(L.hide).toHaveBeenCalled();expect(c).toHaveBeenCalled();expect(b).toHaveBeenCalled();expect(L.afterHide).toHaveBeenCalled();expect(L.hidden).toBe(true);expect(L.el.isVisible()).toBe(false)});it("should not hide hidden floating descendant",function(){spyOn(J,"hide").andCallThrough();a.add(O);expect(J.hide).not.toHaveBeenCalled();expect(J.hidden).toBe(true);expect(J.el.isVisible()).toBe(false)});it("should not allow beforehide to veto the hierarchical hide of a floating descendant",function(){var b=jasmine.createSpy(),c=jasmine.createSpy().andReturn(false);spyOn(I,"hide").andCallThrough();I.on("beforehide",c);I.on("hide",b);spyOn(I,"afterHide").andCallThrough();a.add(O);expect(I.hide).toHaveBeenCalled();expect(c).toHaveBeenCalled();expect(b).toHaveBeenCalled();expect(I.afterHide).toHaveBeenCalled();expect(I.hidden).toBe(true);expect(I.el.isVisible()).toBe(false)});it("should hide floater that is a child of a hierarchically hidden collapse-immune child",function(){var b=jasmine.createSpy(),c=jasmine.createSpy();spyOn(S,"hide").andCallThrough();S.on("beforehide",c);S.on("hide",b);spyOn(S,"afterHide").andCallThrough();a.add(O);expect(S.hide).toHaveBeenCalled();expect(c).toHaveBeenCalled();expect(b).toHaveBeenCalled();expect(S.afterHide).toHaveBeenCalled();expect(S.hidden).toBe(true);expect(S.el.isVisible()).toBe(false)});it("should not hide hidden floater that is a child of a hierarchically hidden collapse-immune child",function(){spyOn(R,"hide").andCallThrough();a.add(O);expect(R.hide).not.toHaveBeenCalled();expect(R.hidden).toBe(true);expect(R.el.isVisible()).toBe(false)})});function Z(a){describe("moving from "+Y+" parent to "+V+" (parent"+(a?("initially rendered "+Y):(Y+" after inital render"))+")",function(){var b;beforeEach(function(){var c;if(a){c={};c[Y]=true;K(c)}else{K();P[Y==="hidden"?"hide":"collapse"]()}b=Ext.widget({xtype:"panel",renderTo:document.body})});afterEach(function(){b.destroy()});it("should chain the hierarchy state to the new parent",function(){b.add(O);expect(Y in O.getInherited()).toBe(false);expect(Y in N.getInherited()).toBe(false);expect(Y in L.getInherited()).toBe(false);expect(Y in J.getInherited()).toBe(Y==="hidden"?true:false)});it("should show hierarchically hidden floating descendant",function(){var d=jasmine.createSpy(),c=jasmine.createSpy();spyOn(L,"show").andCallThrough();L.on("beforeshow",c);L.on("show",d);spyOn(L,"afterShow").andCallThrough();b.add(O);expect(L.show).toHaveBeenCalled();expect(c).toHaveBeenCalled();expect(d).toHaveBeenCalled();expect(L.afterShow).toHaveBeenCalled();expect(L.hidden).toBe(false);expect(L.el.isVisible()).toBe(true)});it("should not show explicitly hidden floating descendant",function(){spyOn(J,"show").andCallThrough();b.add(O);expect(J.show).not.toHaveBeenCalled();expect(J.hidden).toBe(true);if(a){expect(J.rendered).toBe(false)}else{expect(J.el.isVisible()).toBe(false)}});it("should allow beforeshow to veto the show of a hierarchically hidden floating descendant",function(){var d=jasmine.createSpy(),c=jasmine.createSpy().andReturn(false);spyOn(I,"show").andCallThrough();I.on("beforeshow",c);I.on("show",d);spyOn(I,"afterShow").andCallThrough();b.add(O);expect(I.show).toHaveBeenCalled();expect(c).toHaveBeenCalled();expect(d).not.toHaveBeenCalled();expect(I.afterShow).not.toHaveBeenCalled();if(a){expect(J.rendered).toBe(false)}else{expect(I.hidden).toBe(true);expect(I.el.isVisible()).toBe(false)}});it("should defer the show of an explicitly hidden floating descendant whose show method was called while hierarchically hidden",function(){var f=jasmine.createSpy(),d=jasmine.createSpy(),c=jasmine.createSpy(),e={};H.on("beforeshow",d);H.on("show",f);spyOn(H,"afterShow").andCallThrough();H.show("foo",c,e);expect(d).not.toHaveBeenCalled();expect(f).not.toHaveBeenCalled();expect(H.afterShow).not.toHaveBeenCalled();expect(c).not.toHaveBeenCalled();spyOn(H,"show").andCallThrough();b.add(O);expect(H.show).toHaveBeenCalledWith(null,c,e);expect(d).toHaveBeenCalled();expect(f).toHaveBeenCalled();expect(H.afterShow).toHaveBeenCalled();expect(c).toHaveBeenCalled()});it("should not show a hierarchically hidden floating descendant whose hide method was called while hierarchically hidden",function(){G.hide();spyOn(G,"show").andCallThrough();b.add(O);expect(G.show).not.toHaveBeenCalled();expect(G.hidden).toBe(true);if(a){expect(J.rendered).toBe(false)}else{expect(J.el.isVisible()).toBe(false)}});it("should defer the show of a hierarchically hidden floating descendant whose show method was called while hierarchically hidden",function(){var f=jasmine.createSpy(),d=jasmine.createSpy(),c=jasmine.createSpy(),e={};F.on("beforeshow",d);F.on("show",f);spyOn(F,"afterShow").andCallThrough();F.show("foo",c,e);expect(d).not.toHaveBeenCalled();expect(f).not.toHaveBeenCalled();expect(F.afterShow).not.toHaveBeenCalled();expect(c).not.toHaveBeenCalled();spyOn(F,"show").andCallThrough();b.add(O);expect(F.show).toHaveBeenCalledWith(null,c,e);expect(d).toHaveBeenCalled();expect(f).toHaveBeenCalled();expect(F.afterShow).toHaveBeenCalled();expect(c).toHaveBeenCalled()});it("should show hierarchically hidden floater that is a child of a collapse-immune grandchild",function(){var d=jasmine.createSpy(),c=jasmine.createSpy();spyOn(S,"show").andCallThrough();S.on("beforeshow",c);S.on("show",d);spyOn(S,"afterShow").andCallThrough();b.add(O);expect(S.show).toHaveBeenCalled();expect(c).toHaveBeenCalled();expect(d).toHaveBeenCalled();expect(S.afterShow).toHaveBeenCalled();expect(S.hidden).toBe(false);expect(S.el.isVisible()).toBe(true)});it("should not show explicitly hidden floater that is a child of a collapse-immune grandchild",function(){spyOn(R,"show").andCallThrough();b.add(O);expect(R.show).not.toHaveBeenCalled();expect(R.hidden).toBe(true);if(a){expect(R.rendered).toBe(false)}else{expect(R.el.isVisible()).toBe(false)}})})}Z();Z(true)}Q("hidden");Q("collapsed")});describe("references",function(){describe("static",function(){it("should not be a reference holder by default",function(){D({items:{xtype:"component",reference:"a"}});expect(B.lookupReference("foo")).toBeNull()});it("should support a direct child",function(){D({referenceHolder:true,items:{xtype:"component",itemId:"compA",reference:"a"}});expect(B.lookupReference("a")).toBe(B.down("#compA"))});it("should support a deep child",function(){D({referenceHolder:true,items:{xtype:"container",items:{xtype:"container",items:{xtype:"container",items:{xtype:"component",itemId:"compA",reference:"a"}}}}});expect(B.lookupReference("a")).toBe(B.down("#compA"))});it("should support children at multiple depths",function(){D({referenceHolder:true,items:[{xtype:"component",itemId:"compA",reference:"a"},{xtype:"container",items:{xtype:"component",itemId:"compB",reference:"b"}}]});expect(B.lookupReference("a")).toBe(B.down("#compA"));expect(B.lookupReference("b")).toBe(B.down("#compB"))});it("should support multiple children at the same depth",function(){D({referenceHolder:true,items:[{xtype:"component",itemId:"compA",reference:"a"},{xtype:"component",itemId:"compB",reference:"b"}]});expect(B.lookupReference("a")).toBe(B.down("#compA"));expect(B.lookupReference("b")).toBe(B.down("#compB"))});it("should support multiple children down the some tree",function(){D({referenceHolder:true,items:[{xtype:"container",itemId:"compA",reference:"a",items:{xtype:"container",itemId:"compB",reference:"b",items:{xtype:"component",itemId:"compC",reference:"c"}}}]});expect(B.lookupReference("a")).toBe(B.down("#compA"));expect(B.lookupReference("b")).toBe(B.down("#compB"));expect(B.lookupReference("c")).toBe(B.down("#compC"))});it("should support a reference holder not being at the root",function(){D({items:{xtype:"container",items:{xtype:"container",itemId:"ref",referenceHolder:true,items:{xtype:"container",items:{xtype:"component",itemId:"compA",reference:"a"}}}}});var E=B.down("#ref");expect(E.lookupReference("a")).toBe(E.down("#compA"))});it("should support multiple ref holders in a tree",function(){D({referenceHolder:true,items:{xtype:"container",itemId:"compA",reference:"a",items:{xtype:"container",referenceHolder:true,itemId:"ref",items:{xtype:"container",items:{xtype:"component",itemId:"compB",reference:"b"}}}}});var E=B.down("#ref");expect(B.lookupReference("a")).toBe(B.down("#compA"));expect(E.lookupReference("b")).toBe(E.down("#compB"))});it("should hide inner references from outer holders",function(){D({referenceHolder:true,items:{xtype:"container",itemId:"compA",reference:"a",items:{xtype:"container",referenceHolder:true,itemId:"ref",items:{xtype:"container",items:{xtype:"component",itemId:"compB",reference:"b"}}}}});expect(B.lookupReference("b")).toBeNull()});it("should allow a reference holder to have a reference",function(){D({referenceHolder:true,items:{referenceHolder:true,xtype:"container",itemId:"compA",reference:"a",items:{xtype:"container",itemId:"compB",reference:"b"}}});var E=B.down("#compA");expect(E.lookupReference("b")).toBe(E.down("#compB"));expect(B.lookupReference("a")).toBe(E)});describe("docking",function(){function E(F){B=new Ext.panel.Panel(F)}it("should get a reference to a direct child",function(){E({referenceHolder:true,dockedItems:{xtype:"component",itemId:"compA",reference:"a"}});expect(B.lookupReference("a")).toBe(B.down("#compA"))});it("should get a reference to an indirect child",function(){E({referenceHolder:true,dockedItems:{xtype:"container",items:{xtype:"component",itemId:"compA",reference:"a"}}});expect(B.lookupReference("a")).toBe(B.down("#compA"))})});describe("chained references",function(){it("should gain a reference to a deep child",function(){D({referenceHolder:true,items:[{xtype:"container",reference:"parent>",items:{xtype:"component",itemId:"compA",reference:"a"}}]});expect(B.lookupReference("parent.a")).toBe(B.down("#compA"))});it("should strip the > from the parent reference",function(){D({referenceHolder:true,items:[{xtype:"container",reference:"a>",itemId:"compA",items:{xtype:"component",reference:"b"}}]});expect(B.lookupReference("a")).toBe(B.down("#compA"))});it("should allow the parent to be reference even if there's no children",function(){D({referenceHolder:true,items:[{xtype:"container",reference:"a>",itemId:"compA"}]});expect(B.lookupReference("a")).toBe(B.down("#compA"))});it("should not setup a deep reference if the there's an intervening referenceHolder",function(){D({referenceHolder:true,items:[{xtype:"container",referenceHolder:true,reference:"a>",items:{xtype:"component",reference:"b"}}]});expect(B.lookupReference("b")).toBeNull()});it("should allow for a multiple depth reference",function(){D({referenceHolder:true,items:[{xtype:"container",reference:"a>",items:{xtype:"container",reference:"b>",items:{xtype:"container",reference:"c>",items:{xtype:"container",reference:"d>",items:{xtype:"component",reference:"e",itemId:"compE"}}}}}]});expect(B.lookupReference("a.b.c.d.e")).toBe(B.down("#compE"))});it("should isolate references by parent",function(){D({referenceHolder:true,items:[{xtype:"container",reference:"parent1>",items:{xtype:"component",reference:"child",itemId:"compA"}},{xtype:"container",reference:"parent2>",items:{xtype:"component",reference:"child",itemId:"compB"}}]});expect(B.lookupReference("parent1.child")).toBe(B.down("#compA"));expect(B.lookupReference("parent2.child")).toBe(B.down("#compB"))});it("should allow the reference holder to begin at any depth",function(){D({items:[{xtype:"container",reference:"a>",items:{xtype:"container",reference:"b>",items:{xtype:"container",referenceHolder:true,reference:"c>",itemId:"compC",items:{xtype:"container",reference:"d>",items:{xtype:"component",reference:"e",itemId:"compE"}}}}}]});var E=B.down("#compC");expect(E.lookupReference("d.e")).toBe(B.down("#compE"))});it("should allow multiple references in the tree",function(){D({referenceHolder:true,items:[{xtype:"container",reference:"a>",itemId:"compA",items:{xtype:"container",reference:"b>",itemId:"compB",items:{xtype:"container",referenceHolder:true,reference:"c>",itemId:"compC",items:{xtype:"container",reference:"d>",itemId:"compD",items:{xtype:"component",reference:"e",itemId:"compE"}}}}}]});expect(B.lookupReference("a.b")).toBe(B.down("#compB"));expect(B.lookupReference("a.b.c")).toBe(B.down("#compC"));expect(B.lookupReference("a.b.c.d")).toBeNull();expect(B.lookupReference("a.b.c.d.e")).toBeNull()});describe("docking",function(){function E(F){B=new Ext.panel.Panel(F)}it("should get a reference to an indirect child",function(){E({referenceHolder:true,dockedItems:{xtype:"container",reference:"a>",items:{xtype:"component",itemId:"compB",reference:"b"}}});expect(B.lookupReference("a.b")).toBe(B.down("#compB"))})})})});describe("dynamic",function(){describe("adding",function(){it("should gain a reference to a direct child",function(){D({referenceHolder:true});B.add({xtype:"component",itemId:"compA",reference:"a"});expect(B.lookupReference("a")).toBe(B.down("#compA"))});it("should gain a reference to an indirect child",function(){D({referenceHolder:true});B.add({xtype:"container",items:{xtype:"component",itemId:"compA",reference:"a"}});expect(B.lookupReference("a")).toBe(B.down("#compA"))});it("should gain a reference to a component inside an already constructed container",function(){var E=new Ext.container.Container({items:{xtype:"component",itemId:"compA",reference:"a"}});D({referenceHolder:true,items:E});expect(B.lookupReference("a")).toBe(B.down("#compA"))});it("should gain a reference to a component added to containers child",function(){D({referenceHolder:true,items:{xtype:"container"}});B.items.first().add({xtype:"component",itemId:"compA",reference:"a"});expect(B.lookupReference("a")).toBe(B.down("#compA"))});describe("chained references",function(){it("should gain a reference to an indirect child",function(){D({referenceHolder:true});B.add({xtype:"container",reference:"parent>",items:{xtype:"component",itemId:"compA",reference:"a"}});expect(B.lookupReference("parent.a")).toBe(B.down("#compA"))});it("should gain a reference to a component inside an already constructed container",function(){var E=new Ext.container.Container({reference:"parent>",items:{xtype:"component",itemId:"compA",reference:"a"}});D({referenceHolder:true,items:E});expect(B.lookupReference("parent.a")).toBe(B.down("#compA"))});it("should gain a reference to a component added to containers child",function(){D({referenceHolder:true,items:{xtype:"container",reference:"parent>"}});B.items.first().add({xtype:"component",itemId:"compA",reference:"a"});expect(B.lookupReference("parent.a")).toBe(B.down("#compA"))});describe("docking",function(){function E(F){B=new Ext.panel.Panel(F)}it("should gain a reference to an indirect child",function(){E({referenceHolder:true});B.addDocked({xtype:"container",reference:"parent>",items:{xtype:"component",itemId:"compA",reference:"a"}});expect(B.lookupReference("parent.a")).toBe(B.down("#compA"))});it("should gain a reference to a component inside an already constructed container",function(){var F=new Ext.container.Container({reference:"parent>",items:{xtype:"component",itemId:"compA",reference:"a"}});E({referenceHolder:true,dockedItems:F});expect(B.lookupReference("parent.a")).toBe(B.down("#compA"))});it("should gain a reference to a component added to containers child",function(){E({referenceHolder:true,dockedItems:{xtype:"container",reference:"parent>"}});B.getDockedItems()[0].add({xtype:"component",itemId:"compA",reference:"a"});expect(B.lookupReference("parent.a")).toBe(B.down("#compA"))})})});describe("docking",function(){function E(F){B=new Ext.panel.Panel(F)}it("should gain a reference to a direct child",function(){E({referenceHolder:true});B.addDocked({xtype:"component",itemId:"compA",reference:"a"});expect(B.lookupReference("a")).toBe(B.down("#compA"))});it("should gain a reference to an indirect child",function(){E({referenceHolder:true});B.addDocked({xtype:"container",items:{xtype:"component",itemId:"compA",reference:"a"}});expect(B.lookupReference("a")).toBe(B.down("#compA"))});it("should gain a reference to a component inside an already constructed container",function(){var F=new Ext.container.Container({items:{xtype:"component",itemId:"compA",reference:"a"}});E({referenceHolder:true,dockedItems:F});expect(B.lookupReference("a")).toBe(B.down("#compA"))});it("should gain a reference to a component added to containers child",function(){E({referenceHolder:true,dockedItems:{xtype:"container"}});B.getDockedItems()[0].add({xtype:"component",itemId:"compA",reference:"a"});expect(B.lookupReference("a")).toBe(B.down("#compA"))})})});describe("removing",function(){it("should not have a reference when removing a direct child",function(){D({referenceHolder:true,items:{xtype:"component",reference:"a"}});var E=B.lookupReference("a");E.destroy();expect(B.lookupReference("a")).toBeNull()});it("should not have a reference when removing an indirect child",function(){D({referenceHolder:true,items:{xtype:"container",items:{xtype:"component",reference:"a"}}});var E=B.lookupReference("a");E.destroy();expect(B.lookupReference("a")).toBeNull()});it("should not have a reference when removing+destroying a container that has references",function(){D({referenceHolder:true,items:{xtype:"container",items:{xtype:"component",reference:"a"}}});var F=B.lookupReference("a");var E=B.remove(0);expect(B.lookupReference("a")).toBeNull();E.destroy()});it("should not have a reference when only removing a container that has references",function(){D({referenceHolder:true,items:{xtype:"container",items:{xtype:"component",reference:"a"}}});var F=B.lookupReference("a");var E=B.remove(0,false);expect(B.lookupReference("a")).toBeNull();E.destroy()});describe("chained references",function(){it("should not have a reference when removing an indirect child",function(){D({referenceHolder:true,items:{xtype:"container",reference:"parent>",items:{xtype:"component",reference:"a"}}});var E=B.lookupReference("parent.a");E.destroy();expect(B.lookupReference("parent.a")).toBeNull()});it("should not have a reference when removing+destroying a container that has references",function(){D({referenceHolder:true,items:{xtype:"container",reference:"parent>",items:{xtype:"component",reference:"a"}}});var F=B.lookupReference("parent.a");var E=B.remove(0);expect(B.lookupReference("parent.a")).toBeNull();E.destroy()});it("should not have a reference when only removing a container that has references",function(){D({referenceHolder:true,items:{xtype:"container",reference:"parent>",items:{xtype:"component",reference:"a"}}});var F=B.lookupReference("parent.a");var E=B.remove(0,false);expect(B.lookupReference("parent.a")).toBeNull();E.destroy()});describe("docking",function(){function E(F){B=new Ext.panel.Panel(F)}it("should not have a reference when removing an indirect child",function(){E({referenceHolder:true,dockedItems:{xtype:"container",reference:"parent>",items:{xtype:"component",reference:"a"}}});var F=B.lookupReference("parent.a");F.destroy();expect(B.lookupReference("parent.a")).toBeNull()});it("should not have a reference when removing+destroying a container that has references",function(){E({referenceHolder:true,dockedItems:{xtype:"container",reference:"parent>",items:{xtype:"component",reference:"a"}}});var F=B.getDockedItems()[0];B.removeDocked(F);expect(B.lookupReference("parent.a")).toBeNull()});it("should not have a reference when only removing a container that has references",function(){E({referenceHolder:true,dockedItems:{xtype:"container",reference:"parent>",items:{xtype:"component",reference:"a"}}});var F=B.getDockedItems()[0];var G=B.removeDocked(F,false);expect(B.lookupReference("parent.a")).toBeNull();G.destroy()})})});describe("docking",function(){function E(F){B=new Ext.panel.Panel(F)}it("should not have a reference when removing a direct child",function(){E({referenceHolder:true,dockedItems:{xtype:"component",reference:"a"}});var F=B.lookupReference("a");F.destroy();expect(B.lookupReference("a")).toBeNull()});it("should not have a reference when removing an indirect child",function(){E({referenceHolder:true,dockedItems:{xtype:"container",items:{xtype:"component",reference:"a"}}});var F=B.lookupReference("a");F.destroy();expect(B.lookupReference("a")).toBeNull()});it("should not have a reference when removing+destroying a container that has references",function(){E({referenceHolder:true,dockedItems:{xtype:"container",items:{xtype:"component",reference:"a"}}});var F=B.getDockedItems()[0];B.removeDocked(F);expect(B.lookupReference("a")).toBeNull()});it("should not have a reference when only removing a container that has references",function(){E({referenceHolder:true,dockedItems:{xtype:"container",items:{xtype:"component",reference:"a"}}});var F=B.getDockedItems()[0];var G=B.removeDocked(F,false);expect(B.lookupReference("a")).toBeNull();G.destroy()})})})});describe("setup",function(){it("should not create references on the rootInheritedState if not requested",function(){var F=new Ext.container.Viewport({referenceHolder:true});var E=new Ext.container.Container({items:{xtype:"component",reference:"a"}});var G=E.items.first();B=new Ext.container.Container({referenceHolder:true,items:E});expect(F.lookupReference("a")).toBeNull();expect(B.lookupReference("a")).toBe(G);F.destroy()})})});describe("view controllers",function(){var E;beforeEach(function(){E=Ext.define("spec.TestController",{extend:"Ext.app.ViewController",alias:"controller.test"})});afterEach(function(){E=null;Ext.undefine("spec.TestController");Ext.Factory.controller.instance.clearCache()});it("should use a defined controller as a referenceHolder",function(){D({controller:"test",items:{xtype:"component",itemId:"compA",reference:"a"}});expect(B.lookupReference("a")).toBe(B.down("#compA"))})});describe("defaultListenerScope",function(){describe("static",function(){it("should fire on a direct parent",function(){D({defaultListenerScope:true,items:{xtype:"container",itemId:"compA",listeners:{custom:"callFn"}}});B.callFn=jasmine.createSpy();B.down("#compA").fireEvent("custom");expect(B.callFn).toHaveBeenCalled()});it("should fire on an indirect parent",function(){D({defaultListenerScope:true,items:{xtype:"container",items:{xtype:"container",itemId:"compA",listeners:{custom:"callFn"}}}});B.callFn=jasmine.createSpy();B.down("#compA").fireEvent("custom");expect(B.callFn).toHaveBeenCalled()});it("should fire children in the same tree",function(){D({defaultListenerScope:true,items:{xtype:"container",itemId:"compA",listeners:{custom:"callFn"},items:{xtype:"container",itemId:"compB",listeners:{custom:"callFn"}}}});B.callFn=jasmine.createSpy();B.down("#compA").fireEvent("custom");B.down("#compB").fireEvent("custom");expect(B.callFn.callCount).toBe(2)});it("should fire when the ref holder isn't at the root",function(){D({items:{defaultListenerScope:true,xtype:"container",itemId:"compA",items:{xtype:"container",itemId:"compB",listeners:{custom:"callFn"}}}});var E=B.down("#compA");E.callFn=jasmine.createSpy();B.down("#compB").fireEvent("custom");expect(E.callFn).toHaveBeenCalled()});it("should only fire the event at the closest defaultListenerScope holder",function(){D({defaultListenerScope:true,items:{defaultListenerScope:true,xtype:"container",itemId:"compA",items:{xtype:"container",itemId:"compB",listeners:{custom:"callFn"}}}});var E=B.down("#compA");B.callFn=jasmine.createSpy();E.callFn=jasmine.createSpy();B.down("#compB").fireEvent("custom");expect(E.callFn).toHaveBeenCalled();expect(B.callFn).not.toHaveBeenCalled()})});describe("dynamic",function(){it("should fire on a direct parent",function(){D({defaultListenerScope:true});var E=B.add({xtype:"component",listeners:{custom:"callFn"}});B.callFn=jasmine.createSpy();E.fireEvent("custom");expect(B.callFn).toHaveBeenCalled()});it("should fire on an indirect parent",function(){D({defaultListenerScope:true,items:{xtype:"container"}});var E=B.items.first().add({xtype:"component",listeners:{custom:"callFn"}});B.callFn=jasmine.createSpy();E.fireEvent("custom");expect(B.callFn).toHaveBeenCalled()});it("should resolve a new method in a new hierarchy",function(){D({defaultListenerScope:true,items:{xtype:"component",itemId:"compA",listeners:{custom:"callFn"}}});var E=new Ext.container.Container({defaultListenerScope:true});var F=B.down("#compA");B.callFn=jasmine.createSpy();E.callFn=jasmine.createSpy();F.fireEvent("custom");expect(B.callFn).toHaveBeenCalled();E.add(F);B.callFn.reset();F.fireEvent("custom");expect(B.callFn).not.toHaveBeenCalled();expect(E.callFn).toHaveBeenCalled();E.destroy()});it("should resolve a new method in the same hierarchy",function(){D({defaultListenerScope:true,items:{defaultListenerScope:true,xtype:"container",itemId:"compA",items:{xtype:"component",itemId:"compB",listeners:{custom:"callFn"}}}});var E=B.down("#compA"),F=B.down("#compB");B.callFn=jasmine.createSpy();E.callFn=jasmine.createSpy();F.fireEvent("custom");expect(E.callFn).toHaveBeenCalled();expect(B.callFn).not.toHaveBeenCalled();B.add(F);E.callFn.reset();F.fireEvent("custom");expect(B.callFn).toHaveBeenCalled();expect(E.callFn).not.toHaveBeenCalled()})})});describe("cascade",function(){var H;beforeEach(function(){H=jasmine.createSpy()});function F(){return new Ext.Component()}function G(I){return new Ext.container.Container({items:I})}function E(J){var L=H.calls,I=L.length,K;expect(H.callCount).toBe(J.length);for(K=0;K<I;++K){expect(L[K].args[0]).toBe(J[K])}}it("should include the container as part of the calls",function(){D();B.cascade(H);E([B])});it("should return the container",function(){D();expect(B.cascade(H)).toBe(B)});describe("call order",function(){it("should call the container first",function(){var J=F(),I=F(),K=F();D({items:[J,I,K]});B.cascade(H);E([B,J,I,K])});it("should call children in item order",function(){var J=F(),I=F(),L=F(),K=F();D({items:[K,I,J,L]});B.cascade(H);E([B,K,I,J,L])});it("should call depth first",function(){var M=F(),L=F(),J=F(),T=G([M,L,J]),S=F(),R=G([S]),O=F(),N=F(),Q=G([O,N]),K=F(),I=F(),U=F(),P=G([K,I,U]);D({items:[T,R,Q,P]});B.cascade(H);E([B,T,M,L,J,R,S,Q,O,N,P,K,I,U])})});describe("scoping",function(){it("should default the scope to the component",function(){var J=F(),I=F(),K=F();D({items:[J,I,K]});B.cascade(H);expect(H.calls[0].object).toBe(B);expect(H.calls[1].object).toBe(J);expect(H.calls[2].object).toBe(I);expect(H.calls[3].object).toBe(K)});it("should use a passed scope",function(){var J=F(),I=F(),L=F(),K={};D({items:[J,I,L]});B.cascade(H,K);expect(H.calls[0].object).toBe(K);expect(H.calls[1].object).toBe(K);expect(H.calls[2].object).toBe(K);expect(H.calls[3].object).toBe(K)})});describe("args",function(){it("should pass the component as the default args",function(){var J=F(),I=F(),K=F();D({items:[J,I,K]});B.cascade(H);E([B,J,I,K])});it("should pass custom args and append the component",function(){var J=F(),I=F(),K=F();D({items:[J,I,K]});B.cascade(H,null,[1,2,3]);expect(H.calls[0].args).toEqual([1,2,3,B]);expect(H.calls[1].args).toEqual([1,2,3,J]);expect(H.calls[2].args).toEqual([1,2,3,I]);expect(H.calls[3].args).toEqual([1,2,3,K])})});describe("stopping iteration",function(){it("should stop iterating at the container if the callback returns false",function(){D({items:[{},{},{}]});H=H.andReturn(false);B.cascade(H);expect(H.callCount).toBe(1)});it("should stop iterating deeper if the callback returns false",function(){var K=F(),J=G([K]),L=F(),I=G([L]),M=F(),N=G([M]);D({items:[J,I,N]});H=H.andCallFake(function(){return this!==J});B.cascade(H);E([B,J,I,L,N,M])});it("should not stop iterating siblings if the callback returns false",function(){var J=G([]),I=G([]),L=G([]),K=G([]);D({items:[J,I,L,K]});H=H.andCallFake(function(){return this!==I});B.cascade(H);E([B,J,I,L,K])})})});describe("defaultFocus",function(){function E(F){D(Ext.apply({renderTo:Ext.getBody(),width:100,height:100},F))}describe("with defaultFocus",function(){var G,F;beforeEach(function(){E({items:[{xtype:"component",html:"foo"},{xtype:"component",itemId:"bar",html:"bar"}]});G=B.items.getAt(0);F=B.items.getAt(1)});it("should return foo",function(){B.defaultFocus="component";var H=B.getFocusEl();expect(H).toBe(G)});it("should return bar",function(){B.defaultFocus="#bar";var H=B.getFocusEl();expect(H).toBe(F)})});describe("no defaultFocus",function(){beforeEach(function(){E()});it("should return targetEl when focusable",function(){B.focusable=true;var F=B.getFocusEl();expect(F).toBe(B.getTargetEl())});it("should return undefined when not focusable",function(){var F=B.getFocusEl();expect(F).toBe(undefined)})})})})