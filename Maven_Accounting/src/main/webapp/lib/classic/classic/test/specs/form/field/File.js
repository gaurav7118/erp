describe("Ext.form.field.File",function(){var B,A;beforeEach(function(){A=function(C){C=C||{};B=new Ext.form.field.File(C)}});afterEach(function(){Ext.destroy(B);B=A=null});describe("defaults",function(){beforeEach(function(){A()});it("should default to readOnly",function(){expect(B.readOnly).toBe(true)});it("should default to have a button",function(){expect(B.buttonOnly).toBe(false)});it("should tell us it's an upload field",function(){expect(B.isFileUpload()).toBe(true)})});it("should respect the buttonText config",function(){A({renderTo:Ext.getBody(),buttonText:"Foo"});expect(B.button.text).toBe("Foo")});it("should respect the buttonConfig config",function(){A({renderTo:Ext.getBody(),buttonConfig:{text:"FooBar",iconCls:"download"},buttonText:"Foo"});expect(B.button.text).toBe("FooBar")});it("should respect the buttonOnly config",function(){A({renderTo:Ext.getBody(),buttonOnly:true});expect(B.inputWrap.getStyle("display")).toBe("none")});it("should be be able to be configured as disabled",function(){A({renderTo:Ext.getBody(),disabled:true});expect(B.inputEl.dom.disabled).toBe(true)});it("should be able to produce a fake input when not rendered",function(){A({name:"foo"});var C=B.extractFileInput();expect(C.name).toBe("foo");expect(C.type).toBe("file")});describe("focus/blur",function(){var E,C,D;beforeEach(function(){E=jasmine.createSpy("focus");C=jasmine.createSpy("blur");A({renderTo:Ext.getBody(),listeners:{focus:E,blur:C}});D=new Ext.button.Button({renderTo:Ext.getBody(),text:"after"})});afterEach(function(){Ext.destroy(D);D=E=C=null});it("should fire focus event on field when button is focused",function(){jasmine.focusAndWait(B.button);waitForSpy(E);runs(function(){expect(E).toHaveBeenCalled()})});it("should fire blur event on field when button is blurred",function(){jasmine.focusAndWait(B.button);waitForSpy(E);jasmine.focusAndWait(D);waitForSpy(C);runs(function(){expect(C).toHaveBeenCalled()})})})})