describe("Ext.form.field.Radio",function(){var A;beforeEach(function(){A=[]});afterEach(function(){var C=0,B=A.length;for(;C<B;++C){A[C].destroy()}});it("should be registered with the 'radiofield' xtype",function(){var B=Ext.create("Ext.form.field.Radio",{name:"test"});expect(B instanceof Ext.form.field.Radio).toBe(true);expect(Ext.getClass(B).xtype).toBe("radiofield");A=[B]});xit("should render a button input with type='radio'",function(){var B=new Ext.form.field.Radio({name:"test",renderTo:Ext.getBody()});expect(B.inputEl.dom.type.toLowerCase()).toEqual("radio");A=[B]});it("should respect the checked value",function(){var B=new Ext.form.field.Radio({checked:true,name:"test",renderTo:Ext.getBody()});expect(B.getValue()).toBeTruthy();B.destroy();B=new Ext.form.field.Radio({name:"test",renderTo:Ext.getBody()});expect(B.getValue()).toBeFalsy();A=[B]});it("should get the correct group value",function(){var B=0;for(B=0;B<5;++B){A.push(new Ext.form.field.Radio({renderTo:Ext.getBody(),name:"test",inputValue:B+1,checked:B+1==3}))}expect(A[0].getGroupValue()).toEqual(3)});describe("setValue",function(){it("should unset the values when checking in a group",function(){var B=0;for(B=0;B<3;++B){A.push(new Ext.form.field.Radio({renderTo:Ext.getBody(),name:"test",inputValue:B+1}))}expect(A[0].getGroupValue()).toBeNull();A[1].setValue(true);expect(A[0].getValue()).toBeFalsy();expect(A[1].getValue()).toBeTruthy();expect(A[2].getValue()).toBeFalsy();A[2].setValue(true);expect(A[0].getValue()).toBeFalsy();expect(A[1].getValue()).toBeFalsy();expect(A[2].getValue()).toBeTruthy()});it("should check the sibling radio matching a passed string value",function(){var B=0;for(B=0;B<3;++B){A.push(new Ext.form.field.Radio({renderTo:Ext.getBody(),name:"test",inputValue:B+1}))}A[0].setValue(2);expect(A[0].getValue()).toBeFalsy();expect(A[1].getValue()).toBeTruthy();expect(A[2].getValue()).toBeFalsy();A[0].setValue(3);expect(A[0].getValue()).toBeFalsy();expect(A[1].getValue()).toBeFalsy();expect(A[2].getValue()).toBeTruthy()});it("should call handlers for all items in a group",function(){var B=[],D=[],C=0;for(C=0;C<3;++C){B.push({fn:function(){}});D.push(spyOn(B[C],"fn"));A.push(new Ext.form.field.Radio({renderTo:Ext.getBody(),name:"test",inputValue:C+1,handler:B[C].fn}))}A[1].setValue(true);expect(B[1].fn).toHaveBeenCalledWith(A[1],true);A[0].setValue(true);expect(B[0].fn).toHaveBeenCalledWith(A[0],true);expect(B[1].fn).toHaveBeenCalledWith(A[1],false)})})})