describe("Ext.grid.Panel",function(){var S=Ext.getScrollbarSize().width?it:xit,F=true,C=Ext.data.ProxyStore.prototype.load,U;function Q(X){Ext.Ajax.mockComplete({status:200,responseText:Ext.encode(X)})}function T(Z){var X=0,Y=[];for(Z=Z||50;X<Z;X++){Y.push({name:"Name "+X,email:"dev_"+X+"@sencha.com",phone:"1-717-"+X})}return Y}function R(Y,X){return A.getView().getCellInclusive({row:Y,column:X},true)}function J(Z,b,a,Y,X,d){var c=R(b,a);jasmine.fireMouseEvent(c,Z,X,d,Y)}function E(a,Z,Y,X){var b=R(a,Z);jasmine.fireKeyEvent(b,Y,X)}function W(){var X=[];H.each(function(Y){X.push(Y.get("name"))});return X.join(",")}var L=function(Y,X){if(!(X&&X.viewModel&&X.viewModel.stores)){if(!(Y instanceof Ext.data.Store)){H=new Ext.data.Store(Ext.apply({storeId:"simpsonsStore",fields:["name","email","phone"],data:[{name:"Lisa",email:"lisa@simpsons.com",phone:"555-111-1224"},{name:"Bart",email:"bart@simpsons.com",phone:"555-222-1234"},{name:"Homer",email:"homer@simpsons.com",phone:"555-222-1244"},{name:"Marge",email:"marge@simpsons.com",phone:"555-222-1254"}]},Y))}else{H=Y}}else{H=null}A=new Ext.grid.Panel(Ext.apply({title:"Simpsons",store:H,columns:[{header:"Name",dataIndex:"name",width:100},{header:"Email",dataIndex:"email",flex:1},{header:"Phone",dataIndex:"phone",flex:1,hidden:true}],viewConfig:{mouseOverOutBuffer:false,deferHighlight:false},height:200,width:400,renderTo:Ext.getBody()},X));G=A.getColumnManager().getColumns();M=A.view;O=A.selModel;D=A.getNavigationModel()};var P=Ext.view.Table.prototype,V=P.selectedItemCls,K=P.focusedItemCls,N=P.overItemCls,A,G,H,M,O,D,B;beforeEach(function(){U=Ext.data.ProxyStore.prototype.load=function(){C.apply(this,arguments);if(F){this.flushLoad.apply(this,arguments)}return this};B=Ext.failedLayouts||0});afterEach(function(){Ext.data.ProxyStore.prototype.load=C;A=M=O=Ext.destroy(A)});function I(){var X=(Ext.failedLayouts||0)-B;expect(X).toBe(0)}describe("scrollable: false",function(){var X;afterEach(function(){X.destroy()});it("should be able to focus for a second time without throwing an error",function(){L(null,{viewConfig:{scrollable:false}});X=new Ext.form.field.Text({renderTo:document.body});A.view.focus();X.focus();A.view.focus();waitsFor(function(){return M.cellFocused},"non-scrollable TableView to focus for a second time")})});describe("Loading the store during render",function(){it("should not throw an error",function(){var X=Ext.define(null,{extend:"Ext.grid.Panel",afterRender:function(){this.callParent(arguments);this.getStore().loadPage(1)}});A=new X({width:700,height:500,store:H,renderTo:Ext.getBody()})})});describe("Allowing for scrollbar in HeaderContainer",function(){S("should add scrollBarWidth to HeaderContainer's innerCt width",function(){L(null,{height:100,columns:[{header:"Name",dataIndex:"name",width:200},{header:"Email",dataIndex:"email",width:200},{header:"Phone",dataIndex:"phone",width:200}]});expect(A.headerCt.layout.innerCt.dom.offsetWidth).toBe(600+Ext.getScrollbarSize().width);M.setScrollX(100);waitsFor(function(){return A.headerCt.getScrollX()===100});runs(function(){A.columns[1].sort();expect(A.headerCt.getScrollX()).toBe(100)})})});describe("constructing plugins and features",function(){describe("defined on the panel",function(){beforeEach(function(){L(null,{plugins:[{ptype:"preview",bodyField:"excerpt",expanded:true,pluginId:"preview"}]})});xit("should construct plugins with feature dependencies on the grid",function(){expect(A.features.length).toBe(1);expect(A.plugins.length).toBe(1);expect(A.view.body.query(".x-grid-rowbody").length).toBe(4)});xit("should add a reference to the feature on the view",function(){expect(M.features.length).toBe(1)});it("should convert the plugins config array from objects into instances",function(){expect(A.plugins[0] instanceof Ext.ux.PreviewPlugin).toBe(true)})})});describe("hideHeaders",function(){var X=[[1,"Hello"],[2,"World"]];it("should render columns correctly",function(){A=new Ext.grid.Panel({columns:[{flex:1,dataIndex:"field1"},{width:100,dataIndex:"field2"}],border:false,width:500,height:300,store:X,hideHeaders:true,renderTo:Ext.getBody()});I();var Y=A.columnManager.getColumns();expect(Y[0].getWidth()).toEqual(500-100);expect(Y[1].getWidth()).toEqual(100);expect(A.getDockedItems()[0].getHeight()).toBe(0)});it("should accept a headerCt config object",function(){A=new Ext.grid.Panel({columns:new Ext.grid.header.Container({items:[{flex:1,dataIndex:"field1"},{flex:1,dataIndex:"field2"}]}),border:false,width:500,height:300,store:X,hideHeaders:true,renderTo:Ext.getBody()});I();var Y=A.columnManager.getColumns();expect(Y[0].getWidth()).toEqual(250);expect(Y[1].getWidth()).toEqual(250);expect(A.getDockedItems()[0].getHeight()).toBe(0)});it("should not have a horizontal scrollbar when there is a flex column (EXTJSIV-7153)",function(){var Y=0;A=new Ext.grid.Panel({columns:[{flex:1,dataIndex:"field1"}],width:100,height:100,store:X,hideHeaders:true,renderTo:Ext.getBody(),listeners:{viewready:function(){++Y}}});waitsFor(function(){return Y});runs(function(){expect(A.view.el.dom.scrollWidth).toBe(100-A.body.getBorderWidth("lr"))})})});describe("grid layout",function(){H=Ext.create("Ext.data.ArrayStore",{fields:[{name:"company"},{name:"price",type:"float"},{name:"change",type:"float"},{name:"pctChange",type:"float"},{name:"lastChange",type:"date",dateFormat:"n/j h:ia"}],data:[]});function X(Z,Y){return Ext.widget(Ext.apply({xtype:"grid",store:H,columnLines:true,columns:[{text:"Company<br>Name",locked:Z,width:200,sortable:false,dataIndex:"company"},{text:"Price",width:125,sortable:true,formatter:"usMoney",dataIndex:"price"},{text:"Change",width:125,sortable:true,dataIndex:"change"},{text:"% Change",width:125,sortable:true,dataIndex:"pctChange"},{text:"Last Updated",width:135,sortable:true,formatter:'date("m/d/Y")',dataIndex:"lastChange"}],height:350,width:600,title:"Locking Grid Column",renderTo:Ext.getBody()},Y))}it("should calculate the locked grid's width to encapsulate the total locked column width plus right+left borders",function(){A=X(true,{lockedGridConfig:{style:{borderLeft:"5px solid red",borderRight:"5px solid red"}}});expect(A.lockedGrid.getWidth()).toBe(210)});it("should properly place table below header",function(){A=X(true);var Y=A.query("grid")[1];expect(Y.body.getLocalY()).toEqual(Y.headerCt.getHeight());A.destroy()});it("should not show hidden flex columns",function(){L();var Z=A.headerCt.getGridColumns();Z[2].show();expect(A).toHaveLayout({el:{xywh:"0 0 400 200"},body:{xywh:"0 50 400 150"},items:{gridview:{el:{xywh:"1 51 398 148"}}},dockedItems:{header:{el:{xywh:"0 0 400 27"},items:{"component":{el:{xywh:"6 6 388 16"}}}},headercontainer:{el:{xywh:"0 27 400 [23,24]"},items:{0:{el:{xywh:"1 1 100 22"},textEl:{xywh:"7 [4,5] [27-30] [13-15]"},titleEl:{xywh:"1 1 99 22"}},1:{el:{xywh:"101 1 149 22"},textEl:{xywh:"107 [4,5] [24-28] [13-15]"},titleEl:{xywh:"101 1 148 22"}},2:{el:{xywh:"250 1 149 22"},textEl:{xywh:"256 [4-5] [30-32] [13-15]"},titleEl:{xywh:"250 1 148 22"}}}}}});var a=A.view.el.down("table").dom,Y=a.tBodies[0],b=Y.children[0];expect(b.children[0].clientWidth).toEqual(100);expect(b.children[1].clientWidth).toEqual(149);expect(b.children[2].clientWidth).toEqual(149)})});describe("sorting",function(){it("should maintain selection across sort",function(){var X,Y;L({groupField:"sex",fields:["name","sex","email","phone"],data:[{"name":"Homer","sex":"Male","email":"homer@simpsons.com","phone":"555-222-1244"},{"name":"Bart","sex":"Male","email":"bart@simpsons.com","phone":"555-222-1234"},{"name":"Marge","sex":"Female","email":"marge@simpsons.com","phone":"555-222-1254"},{"name":"Lisa","sex":"Female","email":"lisa@simpsons.com","phone":"555-111-1224"}]},{width:600,height:400,features:[{ftype:"grouping"}],columns:[{header:"Name",dataIndex:"name",width:200,locked:true},{header:"Email",dataIndex:"email",flex:1},{header:"Phone",dataIndex:"phone",flex:1,hidden:true}],selModel:{selType:"cellmodel"}});Y=A.getSelectionModel();X=A.store.getAt(0);Y.setCurrentPosition({view:A.lockedGrid.view,row:0,column:0});A.store.sort("name");expect(A.getSelectionModel().getSelection()[0]).toBe(X)});describe("Custom column sorter",function(){var X;afterEach(function(){Ext.state.Manager.set(A.getStateId(),null)});function Y(){L(null,{stateful:true,stateId:"zarquon",columns:[{header:"Name",dataIndex:"name",width:200,locked:true,sorter:function(b,a){var c=b.get("name"),Z=a.get("name");if(c<Z){return 1}if(c>Z){return -1}return 0}},{header:"Email",dataIndex:"email",flex:1},{header:"Phone",dataIndex:"phone",flex:1,hidden:true}]});X=G[0]}it("should sort by a column's custom sorter",function(){Y();expect(W()).toEqual("Lisa,Bart,Homer,Marge");expect(X.hasCls(X.ascSortCls)).toBe(false);expect(X.hasCls(X.descSortCls)).toBe(false);G[0].sort();expect(X.hasCls(X.ascSortCls)).toBe(true);expect(X.hasCls(X.descSortCls)).toBe(false);expect(W()).toEqual("Marge,Lisa,Homer,Bart");G[0].sort();expect(X.hasCls(X.ascSortCls)).toBe(false);expect(X.hasCls(X.descSortCls)).toBe(true);expect(W()).toEqual("Bart,Homer,Lisa,Marge");A.saveState();A.destroy();Y();expect(W()).toEqual("Bart,Homer,Lisa,Marge")})})});describe("scrolling",function(){it("should scroll locked side",function(){var X=Ext.getScrollbarSize;Ext.getScrollbarSize=function(){return{height:0,width:0}};L({groupField:"sex",fields:["name","sex","email","phone"],data:[{"name":"Homer","sex":"Male","email":"homer@simpsons.com","phone":"555-222-1244"},{"name":"Bart","sex":"Male","email":"bart@simpsons.com","phone":"555-222-1234"},{"name":"Marge","sex":"Female","email":"marge@simpsons.com","phone":"555-222-1254"},{"name":"Lisa","sex":"Female","email":"lisa@simpsons.com","phone":"555-111-1224"}]},{width:600,height:400,features:[{ftype:"grouping"}],columns:[{header:"Name",dataIndex:"name",width:200,locked:true},{header:"Email",dataIndex:"email",flex:1},{header:"Phone",dataIndex:"phone",flex:1,hidden:true}],selModel:{selType:"cellmodel"},lockedViewConfig:{scroll:"horizontal"}});Ext.getScrollbarSize=X;var Y=A.lockedGrid.view.getScrollable();expect(Y.getX()).toBe(true);expect(Y.getY()).toBe(true)})});describe("reconfigure",function(){var X;it("Should reconfigure the grid with no error",function(){A=new Ext.grid.Panel({height:300,width:600,hideHeaders:true,renderTo:Ext.getBody(),columns:[{dataIndex:"name"}],store:new Ext.data.Store({fields:["name","surname"],data:[{name:"Tom",surname:"Jones"},{name:"Pete",surname:"Tong"},{name:"Brian",surname:"May"}]})});A.reconfigure(null,[{dataIndex:"surname"}]);X=A.view.el.query("tbody td");expect(Ext.String.trim(X[0].textContent||X[0].innerText)).toEqual("Jones");expect(Ext.String.trim(X[1].textContent||X[1].innerText)).toEqual("Tong");expect(Ext.String.trim(X[2].textContent||X[2].innerText)).toEqual("May")});it("Should reconfigure the grid with no error when there's a buffered renderer",function(){A=new Ext.grid.Panel({height:300,width:600,hideHeaders:true,renderTo:Ext.getBody(),columns:[{dataIndex:"name"}],store:new Ext.data.Store({fields:["name","surname"],data:[{name:"Tom",surname:"Jones"},{name:"Pete",surname:"Tong"},{name:"Brian",surname:"May"}]})});A.reconfigure(null,[{dataIndex:"surname"}]);X=A.view.el.query("tbody td");expect(Ext.String.trim(X[0].textContent||X[0].innerText)).toEqual("Jones");expect(Ext.String.trim(X[1].textContent||X[1].innerText)).toEqual("Tong");expect(Ext.String.trim(X[2].textContent||X[2].innerText)).toEqual("May")});it("Should reconfigure the grid with no error when no columns are passed",function(){A=new Ext.grid.Panel({height:300,width:600,hideHeaders:true,renderTo:Ext.getBody(),columns:[{dataIndex:"name"}],store:new Ext.data.Store({fields:["name"],data:[{name:"Tom"},{name:"Pete"},{name:"Brian"}]})});var Y=new Ext.data.Store({fields:["name"],proxy:{type:"memory",reader:"json"},data:[{name:"Jones"},{name:"Tong"},{name:"May"}]});A.reconfigure(Y);X=A.view.el.query("tbody td");expect(Ext.String.trim(X[0].textContent||X[0].innerText)).toEqual("Jones");expect(Ext.String.trim(X[1].textContent||X[1].innerText)).toEqual("Tong");expect(Ext.String.trim(X[2].textContent||X[2].innerText)).toEqual("May")});describe("viewready event",function(){var Z=false;function Y(a){A.reconfigure(a);expect(Z).toBe(true)}beforeEach(function(){A=new Ext.grid.Panel({height:300,width:600,hideHeaders:true,renderTo:Ext.getBody(),columns:[{dataIndex:"name"}],store:new Ext.data.Store({fields:["name"],data:[{name:"Tom"},{name:"Pete"},{name:"Brian"}]}),listeners:{viewready:function(){Z=true}}})});it("should fire when the new store does not have a data config",function(){Y(new Ext.data.Store({fields:["name"],proxy:{type:"memory",reader:"json"}}))});it("should fire when the new store has no data",function(){Y(new Ext.data.Store({fields:["name"],proxy:{type:"memory",reader:"json"},data:[]}))});it("should fire when the new store has data",function(){Y(new Ext.data.Store({fields:["name"],proxy:{type:"memory",reader:"json"},data:[{name:"Lily"},{name:"Rupert"},{name:"Utley"},{name:"Molly"},{name:"Pete"}]}))})});describe("reconfiguring with forceFit",function(){it("should reconfigure so each header is the same width",function(){var c=[[{id:1,text:"Item 1",type:"a"},{id:2,text:"Item 2",type:"c"},{id:3,text:"Item 3",type:"b"},{id:4,text:"Item 4",type:"b"},{id:5,text:"Item 5",type:"a"},{id:6,text:"Item 6",type:"b"},{id:7,text:"Item 7",type:"c"},{id:8,text:"Item 8",type:"a"},{id:9,text:"Item 9",type:"c"},{id:10,text:"Item 10",type:"b"}],[{id:1,city:"New York",country:"U.S.A."},{id:2,city:"London",country:"United Kingdom"},{id:3,city:"Sydney",country:"Australia"},{id:4,city:"Los Angeles",country:"U.S.A."},{id:5,city:"Melbourne",country:"Australia"},{id:6,city:"Montreal",country:"Canada"},{id:7,city:"Paris",country:"France"},{id:8,city:"Nice",country:"France"},{id:9,city:"Rome",country:"Italy"},{id:10,city:"Liverpool",country:"United Kingdom"}]],Y=[["id","text","type"],["id","city","country"]],d=[[{property:"type",direction:"ASC"}],[{property:"country",direction:"DESC"}]],e=[[{header:"Item",dataIndex:"text"},{header:"Type",dataIndex:"type"}],[{header:"City",dataIndex:"city"},{header:"Country",dataIndex:"country"}]],Z=[],b,a;Z[0]=new Ext.data.Store({fields:Y[0],data:c[0],sorters:d[0]});Z[1]=new Ext.data.Store({fields:Y[1],data:c[1],sorters:d[1]});A=new Ext.grid.Panel({title:"Grid reconfigure",forceFit:true,renderTo:Ext.getBody(),width:300,height:400,columns:[],viewConfig:{emptyText:"No records found.",deferEmptyText:false}});expect(A.query("gridcolumn").length).toEqual(0);A.reconfigure(Z[0],e[0]);b=A.child("headercontainer").el.getViewSize().width;a=A.query("gridcolumn");expect(a.length).toEqual(2);expect(a[0].getWidth()).toEqual(b/2);expect(a[1].getWidth()).toEqual(b/2);expect(a[1].el.hasCls("x-column-header-sort-ASC")).toBe(true);A.reconfigure(Z[1],e[1]);a=A.query("gridcolumn");expect(a.length).toEqual(2);expect(a[0].getWidth()).toEqual(b/2);expect(a[1].getWidth()).toEqual(b/2);expect(a[1].el.hasCls("x-column-header-sort-DESC")).toBe(true)})})});xdescribe("Buffered rendering",function(){var b,Y,d,e=[{"name":"Homer","email":"homer@simpsons.com","phone":"555-222-1244","role":"Parent"},{"name":"Marge","email":"marge@simpsons.com","phone":"555-222-1254","role":"Parent"},{"name":"Lisa","email":"lisa@simpsons.com","phone":"555-111-1224","role":"Child"},{"name":"Bart","email":"bart@simpsons.com","phone":"555-222-1234","role":"Child"}],c=[{"name":"Homer1","email":"homer@simpsons.com","phone":"555-222-1244","role":"Parent"},{"name":"Homer2","email":"homer@simpsons.com","phone":"555-222-1244","role":"Parent"},{"name":"Homer3","email":"homer@simpsons.com","phone":"555-222-1244","role":"Parent"},{"name":"Homer4","email":"homer@simpsons.com","phone":"555-222-1244","role":"Parent"},{"name":"Homer5","email":"homer@simpsons.com","phone":"555-222-1244","role":"Parent"},{"name":"Homer6","email":"homer@simpsons.com","phone":"555-222-1244","role":"Parent"},{"name":"Homer7","email":"homer@simpsons.com","phone":"555-222-1244","role":"Parent"},{"name":"Homer8","email":"homer@simpsons.com","phone":"555-222-1244","role":"Parent"},{"name":"Homer9","email":"homer@simpsons.com","phone":"555-222-1244","role":"Parent"},{"name":"Homer10","email":"homer@simpsons.com","phone":"555-222-1244","role":"Parent"},{"name":"Marge1","email":"marge@simpsons.com","phone":"555-222-1254","role":"Parent"},{"name":"Marge2","email":"marge@simpsons.com","phone":"555-222-1254","role":"Parent"},{"name":"Marge3","email":"marge@simpsons.com","phone":"555-222-1254","role":"Parent"},{"name":"Marge4","email":"marge@simpsons.com","phone":"555-222-1254","role":"Parent"},{"name":"Marge5","email":"marge@simpsons.com","phone":"555-222-1254","role":"Parent"},{"name":"Marge6","email":"marge@simpsons.com","phone":"555-222-1254","role":"Parent"},{"name":"Marge7","email":"marge@simpsons.com","phone":"555-222-1254","role":"Parent"},{"name":"Marge8","email":"marge@simpsons.com","phone":"555-222-1254","role":"Parent"},{"name":"Marge9","email":"marge@simpsons.com","phone":"555-222-1254","role":"Parent"},{"name":"Marge10","email":"marge@simpsons.com","phone":"555-222-1254","role":"Parent"},{"name":"Lisa1","email":"lisa@simpsons.com","phone":"555-111-1224","role":"Child"},{"name":"Lisa2","email":"lisa@simpsons.com","phone":"555-111-1224","role":"Child"},{"name":"Lisa3","email":"lisa@simpsons.com","phone":"555-111-1224","role":"Child"},{"name":"Lisa4","email":"lisa@simpsons.com","phone":"555-111-1224","role":"Child"},{"name":"Lisa5","email":"lisa@simpsons.com","phone":"555-111-1224","role":"Child"},{"name":"Lisa6","email":"lisa@simpsons.com","phone":"555-111-1224","role":"Child"},{"name":"Lisa7","email":"lisa@simpsons.com","phone":"555-111-1224","role":"Child"},{"name":"Lisa8","email":"lisa@simpsons.com","phone":"555-111-1224","role":"Child"},{"name":"Lisa9","email":"lisa@simpsons.com","phone":"555-111-1224","role":"Child"},{"name":"Lisa10","email":"lisa@simpsons.com","phone":"555-111-1224","role":"Child"},{"name":"Bart1","email":"bart@simpsons.com","phone":"555-222-1234","role":"Child"},{"name":"Bart2","email":"bart@simpsons.com","phone":"555-222-1234","role":"Child"},{"name":"Bart3","email":"bart@simpsons.com","phone":"555-222-1234","role":"Child"},{"name":"Bart4","email":"bart@simpsons.com","phone":"555-222-1234","role":"Child"},{"name":"Bart5","email":"bart@simpsons.com","phone":"555-222-1234","role":"Child"},{"name":"Bart6","email":"bart@simpsons.com","phone":"555-222-1234","role":"Child"},{"name":"Bart7","email":"bart@simpsons.com","phone":"555-222-1234","role":"Child"},{"name":"Bart8","email":"bart@simpsons.com","phone":"555-222-1234","role":"Child"},{"name":"Bart9","email":"bart@simpsons.com","phone":"555-222-1234","role":"Child"},{"name":"Bart10","email":"bart@simpsons.com","phone":"555-222-1234","role":"Child"}],a=[{header:"Name",dataIndex:"name"},{header:"Email",dataIndex:"email",flex:1},{header:"Phone",dataIndex:"phone"}],Z=function(f){return new Ext.grid.Panel(Ext.apply({renderTo:Ext.getBody(),columns:a,store:{fields:["name","email","phone","role"],data:e,groupField:"role"}},f))},X=function(f){return new Ext.grid.Panel(Ext.apply({renderTo:Ext.getBody(),columns:a,store:{fields:["name","email","phone","role"],data:c,groupField:"role"}},f))};afterEach(function(){b.destroy()});describe("grouping with buffered rendering",function(){it("should collapse correctly when all data fits inside view height",function(){b=Z({height:400,width:600,features:{ftype:"grouping",startCollapsed:false}});Y=b.view;d=Y.findFeature("grouping");waitsFor(function(){return Y.all.getCount()!==0});runs(function(){expect(Y.dataSource.getCount()).toEqual(4);expect(Y.all.getCount()).toEqual(4);d.collapse("Child");expect(Y.dataSource.getCount()).toEqual(3);expect(Y.all.getCount()).toEqual(3)})});it("should collapse correctly when all data does not fit inside view height",function(){b=X({height:400,width:600,border:false,features:{ftype:"grouping",startCollapsed:false},trailingBufferZone:0,leadingBufferZone:1});Y=b.view;d=Y.findFeature("grouping");waitsFor(function(){return Y.all.getCount()!==0});runs(function(){var f=Y.getNode(3);b.setHeight(f.offsetTop+f.offsetHeight+b.headerCt.getHeight());expect(Y.dataSource.getCount()).toEqual(40);expect(Y.all.getCount()).toEqual(Y.bufferedRenderer.viewSize);d.collapse("Child");expect(Y.dataSource.getCount()).toEqual(21);expect(Y.all.getCount()).toEqual(Y.bufferedRenderer.viewSize)})});it("should reduce the scrollHeight when collapsing groups and increase when expanding",function(){b=X({height:400,width:600,border:false,features:{ftype:"grouping",startCollapsed:false}});Y=b.view;d=Y.findFeature("grouping");waitsFor(function(){return Y.all.getCount()!==0});runs(function(){var f=Y.el.dom.scrollHeight,g;d.collapse("Child");expect(g=Y.el.dom.scrollHeight).toBeLessThan(f);f=g;d.collapse("Parent");expect(g=Y.el.dom.scrollHeight).toBeLessThan(f);f=g;d.expand("Child");expect(g=Y.el.dom.scrollHeight).toBeGreaterThan(f);f=g;d.expand("Parent");expect(g=Y.el.dom.scrollHeight).toBeGreaterThan(f)})})});it("should reload after remote filter",function(){function g(l,j){var k=[],h=1;for(h=1;h<=l;++h){k.push({id:h,title:"Title"+h})}return{data:k,totalCount:j}}MockAjaxManager.addMethods();Ext.define("ForumThread",{extend:"Ext.data.Model",fields:["id","title"]});var f=new Ext.data.Store({model:"ForumThread",buffered:true,pageSize:350,proxy:{type:"ajax",url:"fakeUrl",reader:{rootProperty:"data",totalProperty:"totalCount"}},remoteFilter:true});b=new Ext.grid.Panel({width:700,height:500,store:f,columns:[{text:"Topic",dataIndex:"title",flex:1}],renderTo:Ext.getBody()});f.load();Ext.Ajax.mockComplete({status:200,responseText:Ext.encode(g(350,5000))});f.filter({value:"quicktips"});Ext.Ajax.mockComplete({status:200,responseText:Ext.encode(g(20,20))});expect(b.getView().getNodes().length).toBe(20);MockAjaxManager.removeMethods();Ext.undefine("ForumThread")});it("should update the view when removing a chunk of records in the middle",function(){var h=[],g=0;for(;g<200;++g){h.push({name:"Name"+g})}var f=new Ext.data.Store({fields:["name"],data:h});b=new Ext.grid.Panel({renderTo:Ext.getBody(),width:400,height:400,store:f,columns:[{dataIndex:"name",text:"Name",flex:1}]});f.remove(f.getRange(1,198));expect(b.getView().all.getCount()).toBe(2)});it("should render the last row selected",function(){function g(l){var k=[],j=1;for(j=1;j<=l;++j){k.push({id:j,title:"Title"+j})}return{success:true,total:l,data:k}}Ext.define("ForumThread",{extend:"Ext.data.Model",fields:["id","title"]});var f=new Ext.data.Store({model:"ForumThread",buffered:true,pageSize:50,proxy:{type:"memory",enablePaging:true,reader:{rootProperty:"data"},data:g(200)},leadingBufferZone:200}),h;b=new Ext.grid.Panel({width:700,height:300,store:f,columns:[{text:"Topic",dataIndex:"title",flex:1}],renderTo:Ext.getBody()});f.load();expect(f.getTotalCount()).toBe(200);h=f.getAt(199);b.getSelectionModel().select(h);b.view.el.setScrollTop(4000);waits(10);runs(function(){var i=Ext.get(b.view.getNode(h));expect(i.hasCls(Ext.view.Table.prototype.selectedItemCls)).toBe(true)});Ext.undefine("ForumThread")});describe("reload",function(){var f=false;function g(){H=new Ext.data.Store({model:"Foo",buffered:true,pageSize:100,proxy:{type:"ajax",url:"/grid/Panel/store/reload",reader:{type:"json"}},autoLoad:true,listeners:{prefetch:function(i,h){f=true}}});b=new Ext.grid.Panel({width:700,height:500,store:H,columns:[{text:"Topic",dataIndex:"title",flex:1}],renderTo:Ext.getBody()});Y=b.view}beforeEach(function(){Ext.define("Foo",{extend:"Ext.data.Model",fields:["id","title"]})});afterEach(function(){H.destroy();b.destroy();Ext.undefine("Foo");f=false});it("should reload the current view and buffers",function(){var i,h;g();waitsFor(function(){return f});runs(function(){i=H.lastRequestStart;h=H.lastRequestEnd;f=false;H.reload()});waitsFor(function(){return f});runs(function(){expect(H.lastRequestStart).toEqual(i);expect(H.lastRequestEnd).toEqual(h)})});it("should retain the scroll position on reload",function(){var h;g();waitsFor(function(){return f});runs(function(){f=false;b.view.bufferedRenderer.scrollTo(3000,true,function(){f=true})});waitsFor(function(){return f});runs(function(){f=false;h=b.view.body.dom.scrollHeight;H.reload()});waitsFor(function(){return f});runs(function(){expect(b.view.body.dom.scrollHeight).toEqual(h)})})})});xdescribe("View's element cache",function(){beforeEach(L);describe("Removing single row",function(){it("should move subsequent rows up",function(){A.view.all.removeElement(0,true);expect(A.view.all.first().child(A.view.getCellSelector(),true).childNodes[0].innerHTML).toEqual("Bart");expect(A.view.all.getCount()).toBe(3)})});describe("Removing range",function(){it("should move subsequent rows up",function(){A.view.all.removeRange(0,1,true);expect(A.view.all.first().child(A.view.getCellSelector(),true).childNodes[0].innerHTML).toEqual("Homer");expect(A.view.all.getCount()).toBe(2)})});describe("removing larger range than is rendered (buffered rendering does this)",function(){it("should only attempt to remove valid element indices",function(){var X=A.view.all;X.removeElement(4);expect(X.getCount()).toEqual(4);expect(X.startIndex).toEqual(0);expect(X.endIndex).toEqual(3)})})});xdescribe("emptyText",function(){function X(Y){Y=Ext.apply({},Y||{},{xtype:"grid",columns:[{dataIndex:"field1"},{dataIndex:"field2"}],border:false,width:500,height:300,store:[],hideHeaders:true,renderTo:Ext.getBody(),viewConfig:{deferEmptyText:false}});A=Ext.widget(Y)}afterEach(function(){A.destroy();A=null});describe("defined on grid panel",function(){it("should render the emptyText to the grid view (string)",function(){runs(function(){X({emptyText:"foobar"})});waitsFor(function(){return A.isVisible()});runs(function(){expect(A.view.el.dom.lastChild).hasHTML(A.emptyText)})});it("should render the emptyText to the grid view (html)",function(){runs(function(){X({emptyText:'<div class="baz">foobar</div>'})});waitsFor(function(){return A.isVisible()});runs(function(){expect(A.view.el.dom.lastChild).hasHTML(A.emptyText)})});it('should wrap the emptyText with a div with the CSS class "x-grid-empty"',function(){runs(function(){X({emptyText:"foobar"})});waitsFor(function(){return A.isVisible()});runs(function(){expect(A.view.el.dom.lastChild.tagName).toBe("DIV");expect(A.view.el.dom.lastChild.className).toBe("x-grid-empty")})})});describe("defined in view config",function(){it("should render the emptyText to the grid view when defined in viewConfig (string)",function(){runs(function(){X({viewConfig:{deferEmptyText:false,emptyText:"foobar"}})});waitsFor(function(){return A.isVisible()});runs(function(){expect(A.view.el.dom.lastChild).hasHTML(A.viewConfig.emptyText)})});it("should render the emptyText to the grid view when defined in viewConfig (html)",function(){runs(function(){X({viewConfig:{deferEmptyText:false,emptyText:'<div class="baz">foobar</div>'}})});waitsFor(function(){return A.isVisible()});runs(function(){expect(A.view.el.dom.lastChild).hasHTML(A.viewConfig.emptyText)})});it('should wrap the emptyText with a div with the CSS class "x-grid-empty" when defined in viewConfg',function(){runs(function(){X({viewConfig:{deferEmptyText:false,emptyText:"foobar"}})});waitsFor(function(){return A.isVisible()});runs(function(){expect(A.view.el.dom.lastChild.tagName).toBe("DIV");expect(A.view.el.dom.lastChild.className).toBe("x-grid-empty")})})});it("should size based on the emptyText when shrink wrapping height",function(){A=new Ext.grid.Panel({columns:[{dataIndex:"field1"},{dataIndex:"field2"}],border:false,width:500,store:[],hideHeaders:true,renderTo:Ext.getBody(),bodyStyle:"border: 0",emptyCls:"foo",emptyText:'<div style="height: 100px;"></div>',viewConfig:{deferEmptyText:false}});expect(A.getHeight()).toBe(100)})});describe("changing record id",function(){it("should update the view when changing from phantom to not phantom",function(){L();var Y=H.first(),X=H.getCount();Y.setId(1);H.remove(Y);expect(A.getView().getNodes().length).toBe(X-1)});it("should update the view when changing a non phantom id",function(){L({data:[{id:1,"name":"Lisa","email":"lisa@simpsons.com","phone":"555-111-1224"},{"name":"Bart","email":"bart@simpsons.com","phone":"555-222-1234"},{"name":"Homer","email":"homer@simpsons.com","phone":"555-222-1244"},{"name":"Marge","email":"marge@simpsons.com","phone":"555-222-1254"}]});var a=H.first(),Y=A.getView();a.setId(2);a.set("name","foo");var Z=Y.getNode(0);var X=Z.rows[0].cells[0];expect(Ext.fly(X).down(Y.innerSelector,true)).hasHTML("foo")})});describe("statefulness",function(){var Y,X;beforeEach(function(){Y=[{name:"Homer",sex:"Male",email:"homer@simpsons.com",phone:"555-222-1244",isSprog:false},{name:"Bart",sex:"Male",email:"bart@simpsons.com",phone:"555-222-1234",isSprog:true},{name:"Marge",sex:"Female",email:"marge@simpsons.com",phone:"555-222-1254",isSprog:false},{name:"Lisa",sex:"Female",email:"lisa@simpsons.com",phone:"555-111-1224",isSprog:true}];X={items:Y};MockAjaxManager.addMethods()});afterEach(function(){MockAjaxManager.removeMethods();Ext.state.Manager.clear("foo");Y=X=null});describe("autoLoad = false",function(){var f={filter:{property:"name",value:"Name 1"},sort:{property:"name",direction:"DESC"}},a,d;function e(h,i){d=Ext.apply({autoLoad:false,statefulFilters:true,fields:["name","sex","email","phone",{name:"isSprog",type:"boolean"}],proxy:{type:"ajax",url:"/fakeUrl"},data:null},h);if(!i.stateId){throw"Test requires a unique stateId"}a=Ext.apply({stateful:true,width:600,height:400,columns:[{header:"Name",dataIndex:"name",width:200},{header:"Email",dataIndex:"email",flex:1},{header:"Sprog?",dataIndex:"isSprog",flex:1},{header:"Phone",dataIndex:"phone",flex:1}],selModel:{selType:"cellmodel"},saveDelay:0},i)}function Z(h,i){e(h,i);H=new Ext.data.Store(d);spyOn(H,"flushLoad").andCallThrough();L(H,a)}function c(g,i){var h={stateId:Ext.id(null,"stateful-filters-")};Z(g,h);expect(H.flushLoad.callCount).toBe(0);H[i](f[i]);A.saveState();A=H=Ext.destroy(A,H);Z(g,h);expect(H.flushLoad.callCount).toBe(0)}function b(g,h){c(g,h);F=true;H[h](f[h]);expect(H.flushLoad.callCount).toBe(1)}beforeEach(function(){F=false});afterEach(function(){F=true});describe("on page load",function(){describe("sorting",function(){it("should not load when local sorting",function(){c({remoteSort:false},"sort")});it("should not load when remote sorting",function(){c({remoteSort:true},"sort")})});describe("filtering",function(){it("should not load when local filtering",function(){c({remoteFilter:false},"filter")});it("should not load when remote filtering",function(){c({remoteFilter:true},"filter")})})});describe("after page load",function(){describe("sorting",function(){it("should trigger a load when remote sorting",function(){b({remoteSort:true},"sort")})});describe("filtering",function(){it("should trigger a load when remote filtering",function(){b({remoteFilter:true},"filter")})})})})});describe("updating",function(){var Z,a,X,b,Y;beforeEach(function(){Z=Ext.create("Ext.data.Store",{fields:["name","email","phone"],proxy:{type:"ajax",url:"faleUrl"},autoSync:false});a=Ext.create("Ext.grid.Panel",{title:"Simpsons",store:Z,columns:[{header:"Name",dataIndex:"name",width:100},{header:"Email",dataIndex:"email",flex:1,variableRowHeight:true},{header:"Phone",dataIndex:"phone",flex:1}],height:200,width:400,renderTo:Ext.getBody()});X=a.getView();MockAjaxManager.addMethods()});afterEach(function(){Z.destroy();a.destroy();MockAjaxManager.removeMethods()});it("should only update the modified field's cell",function(){Z.load();Ext.Ajax.mockComplete({status:200,responseText:Ext.encode([{name:"Lisa",email:"lisa@simpsons.com",phone:"555-111-1224"},{name:"Bart",email:"bart@simpsons.com",phone:"555-222-1234"},{name:"Homer",email:"homer@simpsons.com",phone:"555-222-1244"},{name:"Marge",email:"marge@simpsons.com",phone:"555-222-1254"}])});var f=X.getRow(0),e=f.childNodes[0].innerHTML,d=f.childNodes[1].innerHTML,c=f.childNodes[2].innerHTML;Z.getAt(0).set("phone","555-111-1111");Z.getAt(1).set("phone","555-222-2222");expect(f.childNodes[0].innerHTML===e).toBe(true);expect(f.childNodes[1].innerHTML===d).toBe(true);expect(f.childNodes[2].innerHTML===c).toBe(false);expect(f.childNodes[2].firstChild.firstChild.nodeValue).toBe("555-111-1111");e=f.childNodes[0].innerHTML;d=f.childNodes[1].innerHTML;c=f.childNodes[2].innerHTML;b=a.layoutCounter;Y=X.refreshCounter;Z.sync();Ext.Ajax.mockComplete({status:200,responseText:Ext.encode([{name:"Lisa",email:"lisa@simpsons.google.com",phone:"555-111-1111"},{name:"Bart",email:"bart@simpsons.google.com",phone:"555-222-2222"}])});expect(a.layoutCounter).toBe(b+1);expect(X.refreshCounter).toBe(Y);f=X.getRow(0);expect(f.childNodes[0].innerHTML===e).toBe(true);expect(f.childNodes[1].innerHTML===d).toBe(false);expect(f.childNodes[2].innerHTML===c).toBe(true);expect(f.childNodes[1].firstChild.firstChild.nodeValue).toBe("lisa@simpsons.google.com")})});xdescribe("forceFit",function(){var Z,X,a,Y,b;afterEach(function(){X.destroy();Ext.destroy(Z);Z=X=a=Y=b=null});it("should not allow extremely wide columns to resize the view",function(){X=Ext.create("Ext.data.Store",{storeId:"simpsonsStore",fields:["name","email","phone"],data:[{"name":"Lisa asdf asdf asfd asdf asdf asfd asfd asfd asdf asfd asdf asdf asdf asdf asdf asdf asdf asdf","email":"lisa@simpsons.com","phone":"555-111-1224"},{"name":"Bart","email":"bart@simpsons.com","phone":"555-222-1234"},{"name":"Homer","email":"homer@simpsons.com","phone":"555-222-1244"},{"name":"Marge","email":"marge@simpsons.com","phone":"555-222-1254"}]});Z=Ext.create("Ext.grid.Panel",{title:"Simpsons",store:X,forceFit:true,columns:[{header:"Name",dataIndex:"name",width:100},{header:"Email",dataIndex:"email",width:50},{header:"Phone",dataIndex:"phone",width:50}],height:200,width:200,renderTo:document.body});a=Z.view.body;Y=a.getWidth();Z.headerCt.autoSizeColumn(Z.columns[0]);b=a.getWidth();expect(b).not.toBeGreaterThan(Y)});it("should not push last column out of the view when hiding and showing",function(){var c=false;X=Ext.create("Ext.data.ArrayStore",{fields:[{name:"company"},{name:"price",type:"float",convert:null,defaultValue:undefined},{name:"change",type:"float",convert:null,defaultValue:undefined},{name:"pctChange",type:"float",convert:null,defaultValue:undefined},{name:"lastChange",type:"date",dateFormat:"n/j h:ia",defaultValue:undefined}],data:[["3m Co",71.72,0.02,0.03,"9/1 12:00am"],["Alcoa Inc",29.01,0.42,1.47,"9/1 12:00am"],["Altria Group Inc",83.81,0.28,0.34,"9/1 12:00am"],["American Express Company",52.55,0.01,0.02,"9/1 12:00am"],["American International Group, Inc.",64.13,0.31,0.49,"9/1 12:00am"],["AT&T Inc.",31.61,-0.48,-1.54,"9/1 12:00am"],["Boeing Co.",75.43,0.53,0.71,"9/1 12:00am"],["Caterpillar Inc.",67.27,0.92,1.39,"9/1 12:00am"],["Citigroup, Inc.",49.37,0.02,0.04,"9/1 12:00am"]]});Z=Ext.create("Ext.grid.Panel",{store:X,forceFit:true,columns:[{text:"Company",width:200,dataIndex:"company"},{text:"Price",width:75,dataIndex:"price"},{text:"Change",width:75,dataIndex:"change"},{text:"% Change",width:75,dataIndex:"pctChange"},{text:"Last Updated",width:85,dataIndex:"lastChange"},{menuDisabled:true,sortable:false,xtype:"actioncolumn",width:50,items:[{icon:"../shared/icons/fam/delete.gif",tooltip:"Sell stock",handler:function(e,g,d){var f=X.getAt(g);alert("Sell "+f.get("company"))}},{handler:function(e,g,d){var f=X.getAt(g);alert((f.get("change")<0?"Hold ":"Buy ")+f.get("company"))}}]}],listeners:{viewready:function(){c=true}},height:400,width:600,renderTo:document.body});a=Z.view.body;waitsFor(function(){return c});runs(function(){var e=0,d;Y=a.getWidth();for(;e<8;e++){if(e>3){d=e%4;Z.columns[d].show();Z.headerCt.autoSizeColumn(Z.columns[d])}else{Z.columns[e].hide()}}b=a.getWidth();expect(b).not.toBeGreaterThan(Y)})})});describe("column manager",function(){it("should create the column manager when columns is a config",function(){L();expect(A.columnManager).toBeDefined()});it("should create the column manager when columns is an instance",function(){L({},{columns:new Ext.grid.header.Container({items:[{header:"Name",dataIndex:"name",width:100},{header:"Email",dataIndex:"email",flex:1},{header:"Phone",dataIndex:"phone",flex:1,hidden:true}]})});expect(A.columnManager).toBeDefined()})});describe("focusing",function(){it("should restore focus when the view is refreshed with no buffered rendering",function(){var X,Y;L(null,{bufferedRenderer:false});D.setPosition(1,1);X=M.getCellByPosition({row:1,column:1});expect(M.el.query("."+M.focusedItemCls).length).toBe(1);expect(X.hasCls(M.focusedItemCls)).toBe(true);H.fireEvent("refresh",H);Y=M.getCellByPosition({row:1,column:1});expect(Y.dom!==X.dom).toBe(true);expect(M.el.query("."+M.focusedItemCls).length).toBe(1);expect(Y.hasCls(M.focusedItemCls)).toBe(true)});it("should restore focus when the view is refreshed with buffered rendering",function(){var X,Y;L();D.setPosition(1,1);X=M.getCellByPosition({row:1,column:1});expect(M.el.query("."+M.focusedItemCls).length).toBe(1);expect(X.hasCls(M.focusedItemCls)).toBe(true);H.fireEvent("refresh",H);Y=M.getCellByPosition({row:1,column:1});expect(Y.dom!==X.dom).toBe(true);expect(M.el.query("."+M.focusedItemCls).length).toBe(1);expect(Y.hasCls(M.focusedItemCls)).toBe(true)})});describe("buffered store, locking and sorting",function(){var X;beforeEach(function(){MockAjaxManager.addMethods();X=Ext.define(null,{extend:"Ext.data.Model",fields:["id","title"]})});afterEach(function(){MockAjaxManager.removeMethods()});it("should successfully sort a locked grid with a buffered store",function(){function Z(d,b){var c=[],a=1;for(a=1;a<=d;++a){c.push({id:a,title:"Title"+a})}return{data:c,totalCount:b}}var Y=new Ext.data.Store({model:X,buffered:true,pageSize:350,proxy:{type:"ajax",url:"fakeUrl",reader:{rootProperty:"data",totalProperty:"totalCount"}},remoteFilter:true});A=new Ext.grid.Panel({width:700,height:500,store:Y,columns:[{text:"ID",dataIndex:"id",locked:true},{text:"Topic",dataIndex:"title",flex:1}],renderTo:Ext.getBody()});Y.load();Ext.Ajax.mockComplete({status:200,responseText:Ext.encode(Z(350,5000))});A.getVisibleColumnManager().getColumns()[0].sort();Ext.Ajax.mockComplete({status:200,responseText:Ext.encode(Z(350,5000))})})});describe("buffered store, dataset shrinks on reload",function(){var X;beforeEach(function(){MockAjaxManager.addMethods();X=Ext.define(null,{extend:"Ext.data.Model",fields:["id","title"]})});afterEach(function(){MockAjaxManager.removeMethods()});it("should successfully reload the smaller dataset, and render what it can",function(){function a(e,c){var d=[],b=1;for(b=1;b<=e;++b){d.push({id:b,title:"Title"+b})}return{data:d,totalCount:c}}var Z=new Ext.data.Store({model:X,buffered:true,pageSize:350,proxy:{type:"ajax",url:"fakeUrl",reader:{rootProperty:"data",totalProperty:"totalCount"}},remoteFilter:true});A=new Ext.grid.Panel({width:700,height:500,store:Z,columns:[{text:"Topic",dataIndex:"title",flex:1}],renderTo:Ext.getBody()});var Y=A.getView();Z.load();Ext.Ajax.mockComplete({status:200,responseText:Ext.encode(a(350,5000))});waitsFor(function(){if(Y.all.startIndex>0){return true}Y.scrollTo(0,Y.getScrollY()+100)});runs(function(){Z.reload();Ext.Ajax.mockComplete({status:200,responseText:Ext.encode(a(10,10))});expect(Y.all.startIndex).toBe(0);expect(Y.all.endIndex).toBe(9)})})});xdescribe("selected/focused/hover css classes",function(){beforeEach(L);it("should add and remove the selected and before selected classes when the selection changes",function(){O.select(1);expect(M.getNode(1)).toHaveCls(V);O.select(3);expect(M.getNode(1)).not.toHaveCls(V);expect(M.getNode(3)).toHaveCls(V)});it("should add and remove the focused and before focused classes when the focus changes",function(){O.setLastFocused(H.getAt(1));expect(M.getNode(1)).toHaveCls(K);O.setLastFocused(H.getAt(3));expect(M.getNode(1)).not.toHaveCls(K);expect(M.getNode(3)).toHaveCls(K)});it("should add and remove the over and before over classes when the hover state changes",function(){M.setHighlightedItem(M.getNode(1));expect(M.getNode(1)).toHaveCls(N);M.setHighlightedItem(M.getNode(3));expect(M.getNode(1)).not.toHaveCls(N);expect(M.getNode(3)).toHaveCls(N)});it("should add and remove the before selected class to the table element when the first row is selected and unselected",function(){O.select(0);expect(M.getNode(0)).toHaveCls(V);O.select(2)});it("should add and remove the before focused class to the table element when the first row is focused and unfocused",function(){O.setLastFocused(H.getAt(0));expect(M.getNode(0)).toHaveCls(K);O.setLastFocused(H.getAt(1))});it("should add and remove the before over class to the table element when the first row is focused and unfocused",function(){M.setHighlightedItem(M.getNode(0));expect(M.getNode(0)).toHaveCls(N);M.setHighlightedItem(M.getNode(1))});it("should restore selected classes when the view is refreshed",function(){O.select(1);M.refresh();expect(M.getNode(1)).toHaveCls(V)});it("should restore selected classes when the view is refreshed (first row)",function(){O.select(0);M.refresh();expect(M.getNode(0)).toHaveCls(V)});it("should restore focused classes when the view is refreshed",function(){O.setLastFocused(H.getAt(1));M.refresh();expect(M.getNode(1)).toHaveCls(K)});it("should restore focused classes when the view is refreshed (first row)",function(){O.setLastFocused(H.getAt(0));M.refresh();expect(M.getNode(0)).toHaveCls(K)});it("should update the before selected class when a row is added before the selected row",function(){O.select(1);H.insert(1,{name:"Phil",email:"phil.guerrant@sencha.com",phone:"1-800-SENCHA"});expect(M.getNode(2)).toHaveCls(V)});it("should update the before selected class when a row is removed before the selected row",function(){O.select(2);H.removeAt(1);expect(M.getNode(1)).toHaveCls(V)});it("should update the before focused class when a row is added before the focused row",function(){O.setLastFocused(H.getAt(1));H.insert(1,{name:"Phil",email:"phil.guerrant@sencha.com",phone:"1-800-SENCHA"});expect(M.getNode(2)).toHaveCls(K)});it("should update the before focused class when a row is removed before the focused row",function(){O.select(2);H.removeAt(1);expect(M.getNode(1)).toHaveCls(K)})});xdescribe("selected/focused/hover css classes - through events",function(){beforeEach(L);it("should add and remove the selected and before selected classes when the selection changes",function(){J("click",1,0);expect(M.getNode(1)).toHaveCls(V);J("click",3,0);expect(M.getNode(1)).not.toHaveCls(V);expect(M.getNode(3)).toHaveCls(V)});it("should add and remove the selected and before selected classes when the selection changes when using the contextmenu event",function(){J("contextmenu",1,0);expect(M.getNode(1)).toHaveCls(V);J("contextmenu",3,0);expect(M.getNode(1)).not.toHaveCls(V);expect(M.getNode(3)).toHaveCls(V)});it("should add and remove the focused and before focused classes when the focus changes",function(){E(2,0,"keydown",Ext.event.Event.UP);expect(M.getNode(1)).toHaveCls(K);E(1,0,"keydown",Ext.event.Event.DOWN);E(2,0,"keydown",Ext.event.Event.DOWN);expect(M.getNode(1)).not.toHaveCls(K);expect(M.getNode(3)).toHaveCls(K)});it("should add and remove the over and before over classes when the hover state changes",function(){J("mouseover",1,0);expect(M.getNode(1)).toHaveCls(N);J("mouseout",1,0);J("mouseover",3,0);expect(M.getNode(1)).not.toHaveCls(N);expect(M.getNode(3)).toHaveCls(N)});it("should add and remove the before selected class to the table element when the first row is selected and unselected",function(){J("click",0,0);expect(M.getNode(0)).toHaveCls(V);J("click",2,0)});it("should add and remove the before focused class to the table element when the first row is focused and unfocused",function(){E(1,0,"keydown",Ext.event.Event.UP);expect(M.getNode(0)).toHaveCls(K);E(0,0,"keydown",Ext.event.Event.DOWN);O.setLastFocused(H.getAt(1))});it("should add and remove the before over class to the table element when the first row is mouseovered and mouseouted",function(){J("mouseover",0,0);expect(M.getNode(0)).toHaveCls(N);J("mouseout",0,0);J("mouseover",1,0);M.setHighlightedItem(M.getNode(1))})});xdescribe("selected/focused/hover css classes - through events. With buffered store",function(){beforeEach(function(){L({buffered:true,pageSize:4})});it("should add and remove the selected and before selected classes when the selection changes",function(){J("click",1,0);expect(M.getNode(1)).toHaveCls(V);J("click",3,0);expect(M.getNode(1)).not.toHaveCls(V);expect(M.getNode(3)).toHaveCls(V)});it("should add and remove the focused and before focused classes when the focus changes",function(){E(2,0,"keydown",Ext.event.Event.UP);expect(M.getNode(1)).toHaveCls(K);E(1,0,"keydown",Ext.event.Event.DOWN);E(2,0,"keydown",Ext.event.Event.DOWN);expect(M.getNode(1)).not.toHaveCls(K);expect(M.getNode(3)).toHaveCls(K)});it("should add and remove the over and before over classes when the hover state changes",function(){J("mouseover",1,0);expect(M.getNode(1)).toHaveCls(N);J("mouseout",1,0);J("mouseover",3,0);expect(M.getNode(1)).not.toHaveCls(N);expect(M.getNode(3)).toHaveCls(N)});it("should add and remove the before selected class to the table element when the first row is selected and unselected",function(){var X=M.el.down("table.x-grid-table");J("click",0,0);expect(M.getNode(0)).toHaveCls(V);J("click",2,0)});it("should add and remove the before focused class to the table element when the first row is focused and unfocused",function(){var X=M.el.down("table.x-grid-table");E(1,0,"keydown",Ext.event.Event.UP);expect(M.getNode(0)).toHaveCls(K);E(0,0,"keydown",Ext.event.Event.DOWN);O.setLastFocused(H.getAt(1))});it("should add and remove the before over class to the table element when the first row is mouseovered and mouseouted",function(){var X=M.el.down("table.x-grid-table");J("mouseover",0,0);expect(M.getNode(0)).toHaveCls(N);J("mouseout",0,0);J("mouseover",1,0);M.setHighlightedItem(M.getNode(1))})});xdescribe("selected row css classes with multi-select",function(){beforeEach(function(){L(null,{selModel:{selType:"rowmodel",mode:"MULTI"}})});it("should update the selected classes when rows before the selections are removed",function(){var X=M.el.down("table.x-grid-table");O.select([H.getAt(1),H.getAt(3)]);H.remove([0,2]);expect(M.getNode(0)).toHaveCls(V);expect(M.getNode(1)).toHaveCls(V)});it("should update the selected classes when selected rows are removed",function(){O.select([H.getAt(1),H.getAt(3)]);H.remove([1,3]);expect(M.getNode(0)).not.toHaveCls(V);expect(M.getNode(1)).not.toHaveCls(V)})});describe("selected/focused/hover css classes with grouping",function(){var X;function Y(Z){A=Ext.widget({renderTo:Ext.getBody(),xtype:"grid",id:"grid",title:"Employees",margin:"0 10 0 0",store:Ext.create("Ext.data.Store",{fields:["name","seniority"],groupField:"seniority",data:{"employees":[{"name":"Michael Scott","seniority":"7"},{"name":"Dwight Schrute","seniority":"7"},{"name":"Jim Halpert","seniority":"3"},{"name":"Kevin Malone","seniority":"3"},{"name":"Angela Martin","seniority":"3"}]},proxy:{type:"memory",reader:{type:"json",rootProperty:"employees"}}}),columns:[{text:"Name",dataIndex:"name"},{text:"Seniority",dataIndex:"seniority"}],features:[{ftype:"grouping"}],selModel:{selType:"rowmodel",mode:"MULTI"},width:400,height:275});H=A.store;M=A.view;O=A.selModel;X=M.findFeature("grouping")}beforeEach(function(){Y()});afterEach(function(){A.destroy();A=null});it("should preserve the selected classes when the view is refreshed",function(){O.select([H.getAt(0),H.getAt(1),H.getAt(3)]);M.refresh();expect(M.getNode(0)).toHaveCls(V);expect(M.getNode(1)).toHaveCls(V);expect(M.getNode(3)).toHaveCls(V)});it("should preserve the selected classes when grouping is disabled",function(){O.select([H.getAt(0),H.getAt(1),H.getAt(3)]);X.disable();expect(M.getNode(0)).toHaveCls(V);expect(M.getNode(1)).toHaveCls(V);expect(M.getNode(3)).toHaveCls(V)});it("should preserve the selected classes when grouping is enabled",function(){O.select([H.getAt(0),H.getAt(1),H.getAt(3)]);X.disable();X.enable();expect(M.getNode(0)).toHaveCls(V);expect(M.getNode(1)).toHaveCls(V);expect(M.getNode(3)).toHaveCls(V)});it("should remove the selected classes when selected rows are removed (first in group)",function(){O.select([H.getAt(0),H.getAt(3)]);H.remove([0,3]);expect(M.getNode(0)).not.toHaveCls(V);expect(M.getNode(2)).not.toHaveCls(V)});it("should remove the selected classes when selected rows are removed (not first in group)",function(){O.select([H.getAt(1),H.getAt(4)]);H.remove([1,4]);expect(M.getNode(1)).not.toHaveCls(V);expect(M.getNode(2)).not.toHaveCls(V)});it("should update the selected classes when rows before selected rows are removed",function(){O.select([H.getAt(1),H.getAt(3)]);H.remove([0,2]);expect(M.getNode(0)).toHaveCls(V);expect(M.getNode(1)).toHaveCls(V)})});xdescribe("RowExpander plugin",function(){function X(Y){L(null,Ext.apply({plugins:[{ptype:"rowexpander",rowBodyTpl:new Ext.XTemplate("Expanded data for {name} Simpson")}]},Y))}it("should start collapsed, then expand to reveal expander row",function(){X();var a=A.view.all.item(0),Y=Ext.fly(a).down("."+Ext.baseCSSPrefix+"grid-row-expander",true),b=Ext.fly(a).down(Ext.grid.plugin.RowExpander.prototype.rowBodyTrSelector),Z=b.down(".x-grid-rowbody",true);expect(a).toHaveCls(Ext.grid.plugin.RowExpander.prototype.rowCollapsedCls);expect(b.isVisible()).toBe(false);jasmine.fireMouseEvent(Y,"click");expect(b.isVisible()).toBe(true);expect(a).not.toHaveCls(Ext.grid.plugin.RowExpander.prototype.rowCollapsedCls);expect(Z.firstChild.data).toBe("Expanded data for Lisa Simpson")});it("should insert checkbox at column 1 when using a CheckboxSelectionModel",function(){L(null,{selModel:new Ext.selection.CheckboxModel(),plugins:[{ptype:"rowexpander",rowBodyTpl:new Ext.XTemplate("Expanded data for {name} Simpson")}]});expect(A.getVisibleColumnManager().getColumns().length).toBe(4);expect(A.getVisibleColumnManager().getColumns()[1].el).toHaveCls(Ext.baseCSSPrefix+"column-header-checkbox")});it("should add/remove highlighted CSS classes to rows",function(){var Y;X({viewConfig:{mouseOverOutBuffer:false}});Y=M.all.elements;J("mouseover",2,1);expect(Ext.fly(Y[2])).toHaveCls("x-grid-item-over");J("mouseout",2,1);expect(Ext.fly(Y[2])).not.toHaveCls("x-grid-item-over")})});xit("should work with a grid subclass which adds the plugin at initComponent time",function(){var X=Ext.create("Ext.data.Store",{fields:["name","email","phone"],data:[{"name":"Lisa","email":"lisa@simpsons.com","phone":"555-111-1224"},{"name":"Bart","email":"bart@simpsons.com","phone":"555-222-1234"},{"name":"Homer","email":"homer@simpsons.com","phone":"555-222-1244"},{"name":"Marge","email":"marge@simpsons.com","phone":"555-222-1254"}]});Ext.define("TestRowExpanderGrid",{extend:"Ext.grid.Panel",title:"Simpsons",height:200,width:400,initComponent:function(){this.store=X;this.columns=[{header:"Name",dataIndex:"name",width:100},{header:"Email",dataIndex:"email",flex:1},{header:"Phone",dataIndex:"phone",flex:1}];this.enableLocking=true;this.plugins={ptype:"rowexpander",rowBodyTpl:new Ext.XTemplate("Expanded data for {name} Simpson")};this.callParent(arguments)}});A=new TestRowExpanderGrid({renderTo:Ext.getBody()});waits(1);runs(function(){var Y=A.getVisibleColumnManager().getColumns(),Z=A.lockedGrid.getVisibleColumnManager().getColumns();expect(Y.length).toBe(4);expect(Z.length).toBe(1);expect(Z[0].innerCls).toBe("x-grid-cell-inner-row-expander");expect(Z[0]===Y[0]).toBe(true);Ext.undefine("TestRowExpanderGrid")})});xdescribe("enableLocking:true with no locked columns and buffered store",function(){it("should hide the locked grid when there are no locked columns, and not refresh it",function(){L({buffered:true,pageSize:4},{enableLocking:true});expect(A.lockedGrid.view.refreshCounter).toBeFalsy();expect(A.normalGrid.view.refreshCounter).toBe(1)})});xdescribe("rowValues",function(){it("should not render rowAttr information from another view",function(){var X=new Ext.tree.Panel({width:400,height:200,renderTo:Ext.getBody(),root:{text:"Foo",expanded:true,children:[{text:"A",leaf:true},{text:"B",leaf:true},{text:"C",leaf:true}]}});L({},{});X.getRootNode().childNodes[1].set({qtip:"Hello from",qtitle:"Redwood City!"});waits(1);runs(function(){var Y=A.view.getNode(0);expect(Y.getAttribute("data-qtip")).toBe(null);expect(Y.getAttribute("data-qtitle")).toBe(null);X.destroy();X=null})})});describe("disableSelection",function(){function X(Z,Y){var a=Y?new Ext.selection.Model():"rowmodel";afterEach(function(){a=null});describe("when disableSelection = "+Z+", config.selModel.isSelectionModel = "+!!Y,function(){it("should work when defined on the grid",function(){L(null,{selModel:a,disableSelection:Z});J("click",0,0);expect(!!A.selModel.getSelection().length).toBe(!Z)});it("should work when defined on the view",function(){L(null,{selModel:a,viewConfig:{disableSelection:Z}});J("click",0,0);expect(!!A.selModel.getSelection().length).toBe(!Z)})})}X(false,false);X(true,false);X(true,true);X(false,true)});describe("autoLoad config",function(){var X;beforeEach(function(){L(null,{autoLoad:true,bind:"{foo}",viewModel:{stores:{foo:{storeId:"Utley",proxy:{type:"memory",useModelWarning:false}}}}});X=Ext.StoreMgr.get("Utley")});it("should work with a VM store binding",function(){waitsFor(function(){return A.store===X});runs(function(){expect(A.store).toBe(X)})});it("should load the bound store",function(){waitsFor(function(){return A.store===X});runs(function(){H=A.store;expect(H.loading||H.isLoaded()).toBe(true)})})});describe("grid destruction of contained grid",function(){it("should not throw an error",function(){var Z=new Ext.panel.Panel({width:500,height:260,renderTo:document.body,layout:"fit",items:[{xtype:"grid",columns:[{locked:true,text:"col1",dataIndex:"col1",width:150,variableRowHeight:true},{text:"col2",dataIndex:"col2",width:300},{text:"col3",dataIndex:"col3",width:300}],store:{proxy:{type:"memory"},fields:["id","group","col1","col2","col3"],data:[{id:1,group:"group1",col1:"fdsfds",col2:"zeeazepze",col3:"pokopkpok"},{id:2,group:"group1",col1:"fdsfds",col2:"zeeazepze",col3:"pokopkpok"},{id:3,group:"group2",col1:"fdsfds",col2:"zeeazepze",col3:"pokopkpok"},{id:4,group:"group2",col1:"fdsfds",col2:"zeeazepze",col3:"pokopkpok"},{id:5,group:"group2",col1:"fdsfds",col2:"zeeazepze",col3:"pokopkpok"}],grouper:{property:"group",direction:"ASC"}},enableLocking:true,syncRowHeight:true}]}),Y=Z.down("grid"),X=Y.getStore();X.getById(3).set("col1","AZERTY");Y.destroy();Z.destroy()})})})