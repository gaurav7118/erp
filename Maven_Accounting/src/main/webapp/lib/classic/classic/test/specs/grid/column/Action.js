describe("Ext.grid.column.Action",function(){var G,A,F,B,J=true,C=Ext.data.ProxyStore.prototype.load,E;function H(K,L){return A.getView().getCellInclusive({row:K,column:L})}function I(L,M,N){var K=H(M||0,N||1);jasmine.fireMouseEvent(K.down("."+Ext.grid.column.Action.prototype.actionIconCls,true),L||"click");return K}function D(K,L){G=new Ext.data.Store(Ext.apply({fields:["text","actionCls"],data:[{text:"text",actionCls:"x-form-clear-trigger"}],autoDestroy:true},L||{}));A=new Ext.grid.Panel(Ext.apply({store:G,columns:[{dataIndex:"text",header:"Text"},{xtype:"actioncolumn",dataIndex:"actionCls",header:"Action",renderer:Ext.emptyFn,items:[{handler:Ext.emptyFn,isDisabled:Ext.emptyFn}]}],renderTo:Ext.getBody()},K||{}));F=A.view;B=A.columnManager.getHeaderByDataIndex("actionCls")}beforeEach(function(){E=Ext.data.ProxyStore.prototype.load=function(){C.apply(this,arguments);if(J){this.flushLoad.apply(this,arguments)}return this}});afterEach(function(){Ext.data.ProxyStore.prototype.load=C;G=A=F=B=Ext.destroy(A)});describe("events",function(){var K=false;beforeEach(function(){D({columns:[{dataIndex:"text",header:"Text"},{xtype:"actioncolumn",dataIndex:"actionCls",header:"Action",items:[{handler:function(){K=true}}]}]})});afterEach(function(){K=false});it("should process click events",function(){I("click");expect(K).toBe(true)});it("should not process mousedown events",function(){I("mousedown");expect(K).toBe(false)})});it("should not be sortable if there is no dataIndex even if sortable: true",function(){D({sortableColumns:true,columns:[{dataIndex:"text",header:"Text"},{xtype:"actioncolumn",handler:Ext.emptyFn}]});var K=A.query("gridcolumn");expect(K[0].sortable).toBe(true);expect(K[1].sortable).toBe(false)});describe("getClass",function(){it("should use the dataIndex and pass it to getClass",function(){var K=jasmine.createSpy(),L=jasmine.createSpy();D({columns:[{dataIndex:"text",header:"Text"},{xtype:"actioncolumn",dataIndex:"actionCls",header:"Action",items:[{getClass:L.andReturn("x-form-clear-trigger"),handler:K}]}]});expect(L.mostRecentCall.args[0]).toBe("x-form-clear-trigger");I();expect(K).toHaveBeenCalled()})});describe("focus",function(){it("should not select and focus the row when clicking the action item",function(){var K;D();K=I();expect(A.selModel.isSelected(A.view.getRecord(K))).toBe(false)})});describe("stopSelection",function(){it("should not select the row when clicking the action with stopSelection: true",function(){D({columns:[{},{xtype:"actioncolumn",stopSelection:true,dataIndex:"actionCls",header:"Action",items:[{handler:Ext.emptyFn}]}]});I();expect(A.getSelectionModel().getSelection().length).toBe(0)});it("should select the row & focus the cell when clicking the action with stopSelection: false",function(){D({columns:[{},{xtype:"actioncolumn",stopSelection:false,dataIndex:"actionCls",header:"Action",items:[{handler:Ext.emptyFn}]}]});I();expect(A.getSelectionModel().isSelected(G.first())).toBe(true);var K=A.view.getNavigationModel().getPosition();expect(K.record).toBe(G.first());expect(K.column).toBe(A.down("actioncolumn"))})});describe("handler",function(){var N,M,L,P,O;function K(Q){Q=Ext.apply({xtype:"actioncolumn",dataIndex:"actionCls",header:"Action",itemId:"theAction"},Q);D({columns:[{dataIndex:"text",header:"Text"},Q]});L=A.down("#theAction")}beforeEach(function(){N=jasmine.createSpy();M=jasmine.createSpy();P={foo:function(){}};O={foo:function(){}};spyOn(P,"foo");spyOn(O,"foo")});afterEach(function(){P=O=L=null});describe("handler priority",function(){it("should use a handler on the column",function(){K({handler:N});I();expect(N).toHaveBeenCalled()});it("should use a handler on the item",function(){K({items:[{handler:N}]});I();expect(N).toHaveBeenCalled()});it("should favour the handler on the item",function(){K({handler:N,items:[{handler:M}]});I();expect(N).not.toHaveBeenCalled();expect(M).toHaveBeenCalled()})});describe("enabled/disabled state",function(){it("should not fire the handler if configured as disabled",function(){K({handler:N,items:[{disabled:true,iconCls:"icon-pencil"}]});var Q=A.getView(),S=Q.getNode(0),R=Ext.get(S).down(".x-action-col-icon"),T=R.hasCls("x-item-disabled");I();expect(N).not.toHaveBeenCalled();expect(T).toBe(true)});it("should fire if enabled dynamically",function(){K({handler:N,items:[{disabled:true,iconCls:"icon-pencil"}]});var Q=A.getView(),S=Q.getNode(0),R=Ext.get(S).down(".x-action-col-icon"),T=R.hasCls("x-item-disabled");L.enableAction(0);I();expect(N).toHaveBeenCalled();expect(T).toBe(true)});it("should not fire if disabled dynamically",function(){K({handler:N,items:[{}]});var Q=A.getView(),S=Q.getNode(0),R=Ext.get(S).down(".x-action-col-icon");expect(R.hasCls("x-item-disabled")).toBe(false);L.disableAction(0);expect(R.hasCls("x-item-disabled")).toBe(true);I();expect(N).not.toHaveBeenCalled()})});describe("scoping",function(){it("should default the scope to the column",function(){K({handler:N});I();expect(N.mostRecentCall.object).toBe(L)});describe("with handler on the column",function(){it("should use the scope on the column",function(){K({handler:N,scope:P,items:[{}]});I();expect(N.mostRecentCall.object).toBe(P)});it("should use the scope on the item",function(){K({handler:N,items:[{scope:P}]});I();expect(N.mostRecentCall.object).toBe(P)});it("should favour the scope on the item",function(){K({handler:N,scope:P,items:[{scope:O}]});I();expect(N.mostRecentCall.object).toBe(O)})});describe("with handler on the item",function(){it("should use the scope on the column",function(){K({scope:P,items:[{handler:N}]});I();expect(N.mostRecentCall.object).toBe(P)});it("should use the scope on the item",function(){K({items:[{handler:N,scope:P}]});I();expect(N.mostRecentCall.object).toBe(P)});it("should favour the scope on the item",function(){K({scope:P,items:[{handler:N,scope:O}]});I();expect(N.mostRecentCall.object).toBe(O)})})});describe("string handler",function(){describe("handler on the column",function(){it("should lookup a scope on the column",function(){K({scope:P,handler:"foo",items:[{}]});I();expect(P.foo).toHaveBeenCalled()});it("should lookup a scope on the item",function(){K({handler:"foo",items:[{scope:P}]});I();expect(P.foo).toHaveBeenCalled()});it("should favour the scope on the item",function(){K({handler:"foo",scope:P,items:[{scope:O}]});I();expect(P.foo).not.toHaveBeenCalled();expect(O.foo).toHaveBeenCalled()})});describe("handler on the item",function(){it("should lookup a scope on the column",function(){K({scope:P,items:[{handler:"foo"}]});I();expect(P.foo).toHaveBeenCalled()});it("should lookup a scope on the item",function(){K({items:[{handler:"foo",scope:P}]});I();expect(P.foo).toHaveBeenCalled()});it("should favour the scope on the item",function(){K({scope:P,items:[{handler:"foo",scope:O}]});I();expect(P.foo).not.toHaveBeenCalled();expect(O.foo).toHaveBeenCalled()})});describe("no scope",function(){it("should resolve the scope",function(){K({handler:"foo"});L.resolveListenerScope=function(){return O};I();expect(O.foo).toHaveBeenCalled()})})});it("should pass view, rowIdx, cellIndex, item, e, record, row",function(){K({handler:N});I();var Q=N.mostRecentCall.args;expect(Q[0]).toBe(A.getView());expect(Q[1]).toBe(0);expect(Q[2]).toBe(1);expect(Q[3].dataIndex).toBe("actionCls");expect(Q[4] instanceof Ext.event.Event).toBe(true);expect(Q[5]).toBe(G.first());expect(Q[6]).toBe(A.getView().getRow(0))})});describe("destroy",function(){describe("as a subclass with items on the class",function(){var K=Ext.define(null,{extend:"Ext.grid.column.Action",items:[{iconCls:"foo"}]});it("should not cause an exception when not rendered",function(){D({renderTo:null,columns:[new K()]});expect(function(){A.destroy()}).not.toThrow()});it("should not cause an exception when rendered",function(){D({columns:[new K()]});expect(function(){A.destroy()}).not.toThrow()})});describe("as a config with items on the class",function(){it("should not cause an exception when not rendered",function(){D({renderTo:null});expect(function(){A.destroy()}).not.toThrow()});it("should not cause an exception when rendered",function(){D();expect(function(){A.destroy()}).not.toThrow()})})});describe("callbacks",function(){describe("when the model is updated",function(){describe("renderers",function(){function K(L){it("should call "+L,function(){D();spyOn(B,L).andCallThrough();G.getAt(0).set("text","Kilgore Trout");expect(B[L].callCount).toBe(1)})}K("origRenderer");K("defaultRenderer")});describe("isDisabled on items",function(){it("should call isDisabled",function(){var K;D();K=B.items[0];spyOn(K,"isDisabled").andCallThrough();G.getAt(0).set("text","Kilgore Trout");expect(K.isDisabled.callCount).toBe(1)})})})})})