describe("Ext.grid.column.Boolean",function(){var C,A,D;var E=Ext.define(null,{extend:"Ext.data.Model",fields:[{name:"field",defaultValue:undefined}]});function B(H,I){return C.getView().getCellInclusive({row:H,column:I})}function G(I,J){var H=B(I,J);return Ext.fly(H).down(C.getView().innerSelector).dom.innerHTML}function F(I,H){A=new Ext.data.Store({model:E,data:[{field:I}]});C=new Ext.grid.Panel({store:A,columns:[Ext.apply({xtype:"booleancolumn",text:"Col",dataIndex:"field",flex:1},H)],width:400,height:100,border:false,renderTo:Ext.getBody()});D=C.getColumnManager().getColumns()}afterEach(function(){Ext.destroy(C,A);D=A=C=null});describe("renderer",function(){describe("undefinedText",function(){it("should render the undefined text",function(){F(undefined);var H=G(0,0);if(H==="&nbsp;"){H="&#160;"}expect(H).toBe(D[0].undefinedText)})});describe("falseText",function(){it("should render the falseText if value === false",function(){F(false);expect(G(0,0)).toBe(D[0].falseText)});it("should render the falseText if value === 'false'",function(){F("false");expect(G(0,0)).toBe(D[0].falseText)})});it("should render the trueText otherwise",function(){F(true);expect(G(0,0)).toBe(D[0].trueText)})});describe("updating",function(){it("should update correctly with html in the true/false text",function(){F(false,{trueText:'<div class="foo">isTrue</div>',falseText:'<div class="bar">isFalse</div>'});A.first().set("field",true);var H=G(0,0).replace(/\"/g,"").toLowerCase();expect(H).toBe("<div class=foo>istrue</div>");A.first().set("field",false);H=G(0,0).replace(/\"/g,"").toLowerCase();expect(H).toBe("<div class=bar>isfalse</div>")})})})