describe("Ext.grid.filters.filter.List",function(){var G=Ext.define(null,{extend:"Ext.data.Model",fields:["id","text"]}),A,N,E,I,F,Q=true,K=Ext.data.Store.prototype.load,M;function L(T,S,R){Q=false;N=new Ext.data.Store(Ext.apply({model:G,remoteFilter:false,data:J()},S));A=new Ext.grid.Panel(Ext.apply({store:N,columns:[{dataIndex:"id"},{dataIndex:"text",itemId:"filterCol",filter:Ext.apply({type:"list",updateBuffer:0},T)}],plugins:[{ptype:"gridfilters"}],height:200,width:400,renderTo:Ext.getBody()},R));Q=true;if(N.hasPendingLoad()){N.flushLoad()}E=A.down("#filterCol");F=E.filter}function O(R){var S;P();S=C().items.getAt(R);jasmine.fireMouseEvent(S.el,"click")}function D(R){Ext.Ajax.mockComplete({status:200,responseText:Ext.encode(R)})}function J(){var T=[],R=0,S;for(R=0;R<12;++R){S=R+1;T.push({id:"t"+S,text:"Item "+S})}return T}function C(){return A.headerCt.getMenu().down("#filters").menu}function P(){A.headerCt.showMenuBy(null,E.triggerEl,E);I=A.headerCt.getMenu().down("#filters");I.activated=true;I.expandMenu(null,0)}function H(){M=Ext.data.Store.prototype.load=function(){K.apply(this,arguments);if(Q){this.flushLoad.apply(this,arguments)}return this};MockAjaxManager.addMethods()}function B(){Ext.data.Store.prototype.load=K;E=I=F=A=N=Ext.destroy(N,A);MockAjaxManager.removeMethods()}beforeEach(H);afterEach(B);describe("init",function(){it("should be given a default value if no value or options are specified",function(){L();expect(Ext.isArray(F.filter.getValue())).toBe(true)});it("should use the value config as its value if specified",function(){var R=["t1","t3"];L({value:R});expect(F.filter.getValue()).toEqual(R)})});describe("binding the grid store listeners",function(){Ext.grid.filters.filter.List.prototype.getGridStoreListeners=function(){var S=this;return S.gridStoreListeners={scope:S,add:S.onDataChanged,refresh:S.onDataChanged,remove:S.onDataChanged,update:S.onDataChanged,"extjs-18225":Ext.emptyFn}};function R(T){var S={store:null,viewModel:{stores:{quux:{fields:["id","text"],data:J()}}},bind:{store:"{quux}"}};return Ext.apply(S,T)}describe("when inferring its list options from the grid store",function(){describe("on construction",function(){describe("should not bind",function(){it("should not bind when not configured with a value",function(){L();expect(F.gridStoreListeners).toBeUndefined()});it("should not bind when not configured with a value even when explicitly configured as active",function(){L({active:true});expect(F.gridStoreListeners).toBeUndefined()});it("should not bind when configured as inactive (no value)",function(){L({active:false});expect(F.gridStoreListeners).toBeUndefined()});it("should not bind when configured as inactive (with a value)",function(){L({active:false,value:"foo"});expect(F.gridStoreListeners).toBeUndefined()});describe("late binding",function(){var S;beforeEach(function(){S=false});afterEach(function(){S=false});function T(V,U){it("should not bind when late-binding when active = "+V+" and value = "+U,function(){L({active:V,value:U},null,R({listeners:{reconfigure:function(){S=true}}}));waitsFor(function(){return S});runs(function(){expect(F.gridStoreListeners).toBeUndefined()})})}T(false,"Pete");T(true,null)})});describe("should bind",function(){it("should bind when configured with a value",function(){L({value:"quux"});expect(F.gridStoreListeners).toBeDefined()});it("should bind when late-binding the grid store",function(){var S=false;L({value:"baz"},null,R({listeners:{reconfigure:function(){S=true}}}));waitsFor(function(){return S});runs(function(){expect(F.gridStoreListeners).toBeDefined()})})})});describe("on menu show",function(){function S(T){describe(!T?"configured store":"late binding",function(){beforeEach(function(){L(null,null,T?R():null);waits(1);runs(function(){O(1)})});it("should bind the listeners on menu show when not configured with a value",function(){expect(F.gridStoreListeners).toBeDefined()});it("should not have bound the listeners to the empty store",function(){expect(Ext.StoreMgr.get("ext-empty-store").events["extjs-18225"]).toBeUndefined()});it("should have bound the listeners to the correct store",function(){expect(A.store.events["extjs-18225"]).toBeDefined()})})}S(false);S(true)})})});describe("filter configs",function(){describe("idField",function(){it('should default to "id"',function(){L();expect(F.idField).toBe("id")});it("should honor a different value",function(){var R="hot-dog";L({idField:R});expect(F.idField).toBe(R)})});describe("labelField",function(){it('should default to "text"',function(){L();expect(F.labelField).toBe("text")});it("should honor a different value",function(){var R="veggieburger";L({labelField:R});expect(F.labelField).toBe(R)})});describe("dataIndex",function(){it("should default to the column dataIndex",function(){L();expect(F.dataIndex).toBe(E.dataIndex)});it("should set the store filter property",function(){L();expect(F.filter.getProperty()).toBe(E.dataIndex)});it("should honor a different value",function(){var R="gryphon";L({dataIndex:R});expect(F.dataIndex).toBe(R);expect(F.filter.getProperty()).toBe(R)});describe("specifying a dataIndex value",function(){var R;beforeEach(function(){L({dataIndex:"type"},{data:[{id:101,type:"t101"},{id:102,type:"t102"},{id:103,type:"t103"},{id:104,type:"t104"}]});P();R=F.menu});afterEach(function(){R=null});it("should create the expected number of menu items",function(){expect(R.items.length).toBe(4)});it("should not be the same value as the column dataIndex",function(){expect(F.dataIndex).not.toBe(E.dataIndex)})})});describe("labelIndex",function(){it("should default to the filter dataIndex",function(){L();expect(F.labelIndex).toBe(F.dataIndex)});it("should honor a different value",function(){var R="Worcester County";L({labelIndex:R});expect(F.labelIndex).toBe(R)});describe("specifying a labelIndex value",function(){var R;beforeEach(function(){L({dataIndex:"foo",labelIndex:"name"},{data:[{foo:101,name:"Item 101"},{foo:102,name:"Item 102"},{foo:103,name:"Item 103"},{foo:104,name:"Item 104"}]});P();R=F.menu});afterEach(function(){R=null});it("should create the expected number of menu items",function(){expect(R.items.length).toBe(4)});it("should work",function(){expect(R.items.getAt(0).text).toBe("Item 101")})})})});describe("list items",function(){var R;describe("passing config.value",function(){describe("empty array",function(){beforeEach(function(){L({value:[]})});it("should set the List filter as active",function(){expect(F.active).toBe(true)});it("should check the Filters menu item",function(){P();expect(I.checked).toBe(true)});it("should not check any option menu items",function(){P();expect(I.query("[checked]").length).toBe(0)});it("should create a store filter",function(){P();expect(N.getFilters().length).toBe(1)});it("should filter the grid store",function(){P();expect(N.data.filtered).toBe(true)});it("should not filter if explicitly configured as not active",function(){Ext.destroy(A,N);A=N=null;L({active:false,value:[]});expect(N.data.filtered).toBe(false)})});describe("non-empty array",function(){beforeEach(function(){L({value:["Item 1","Item 3"]})});it("should set the List filter as active",function(){expect(F.active).toBe(true)});it("should check the Filters menu item",function(){P();expect(I.checked).toBe(true)});it("should check the option menu items specified in the config",function(){var S;P();S=I.query("[checked]");expect(S.length).toBe(2);expect(S[0].getValue()).toBe("Item 1");expect(S[1].getValue()).toBe("Item 3")});it("should create a store filter",function(){P();expect(N.getFilters().length).toBe(1)});it("should filter the grid store",function(){P();expect(N.data.filtered).toBe(true)});it("should not filter if explicitly configured as not active",function(){Ext.destroy(A,N);A=N=null;L({active:false,value:["Item 1","Item 3"]});expect(N.data.filtered).toBe(false)})})});describe("passing options",function(){describe("flat array",function(){var S=["foo","bar","baz"];it("should use the array element as the menu text",function(){L({options:S});P();var T=C();expect(T.items.getCount()).toBe(3);expect(T.items.getAt(0).text).toBe("foo");expect(T.items.getAt(1).text).toBe("bar");expect(T.items.getAt(2).text).toBe("baz")});it("should use the array element as the filter value",function(){L({options:S});O(1);var T=N.getFilters().first();expect(T.getProperty()).toBe("text");expect(T.getOperator()).toBe("in");expect(T.getValue()).toEqual(["bar"])})});describe("nested array",function(){var S=[["foo","Foo"],["bar","Bar"],["baz","Baz"]];it("should use the element at index 1 as the menu text",function(){L({options:S});P();var T=C();expect(T.items.getCount()).toBe(3);expect(T.items.getAt(0).text).toBe("Foo");expect(T.items.getAt(1).text).toBe("Bar");expect(T.items.getAt(2).text).toBe("Baz")});it("should use the element at index 0 as the filter value",function(){L({options:S});O(1);var T=N.getFilters().first();expect(T.getProperty()).toBe("text");expect(T.getOperator()).toBe("in");expect(T.getValue()).toEqual(["bar"])})});describe("array of objects",function(){var S=[{id:"foo",text:"Foo"},{id:"bar",text:"Bar"},{id:"baz",text:"Baz"}];it("should use the item with the labelField as the menu text",function(){L({options:S,idField:"id",labelField:"text"});P();var T=C();expect(T.items.getCount()).toBe(3);expect(T.items.getAt(0).text).toBe("Foo");expect(T.items.getAt(1).text).toBe("Bar");expect(T.items.getAt(2).text).toBe("Baz")});it("should use the item with the idField as the filter value",function(){L({options:S,idField:"id",labelField:"text"});O(1);var T=N.getFilters().first();expect(T.getProperty()).toBe("text");expect(T.getOperator()).toBe("in");expect(T.getValue()).toEqual(["bar"])})})});describe("passing a store",function(){afterEach(function(){R=Ext.destroy(R)});describe("with data",function(){function S(){return new Ext.data.Store({model:G,data:[{id:"t1",text:"Type 1"},{id:"t2",text:"Type 2"}]})}it("should not load the store",function(){R=S();spyOn(R,"load");L({store:R});P();expect(R.load).not.toHaveBeenCalled()});it("should use the field with the labelField as the menu text",function(){R=S();L({store:R});P();var T=C();expect(T.items.getCount()).toBe(2);expect(T.items.getAt(0).text).toBe("Type 1");expect(T.items.getAt(1).text).toBe("Type 2")});it("should use the field with the idField as the filter value",function(){R=S();L({store:R});O(0);var T=N.getFilters().first();expect(T.getProperty()).toBe("text");expect(T.getOperator()).toBe("in");expect(T.getValue()).toEqual(["t1"])})});describe("with no data",function(){function S(T){return new Ext.data.Store(Ext.apply({model:G,proxy:{type:"ajax",url:"foo"}},T))}it("should not load on creation",function(){R=S();spyOn(R,"load");L({store:R});expect(R.load).not.toHaveBeenCalled()});describe("placeholder",function(){it("should show a loading placeholder on show",function(){R=S();L({store:R});P();var T=C();expect(T.items.getCount()).toBe(1);expect(T.items.getAt(0).text).toBe(F.loadingText)});it("should remove the placeholder when the store loads",function(){R=S();L({store:R});P();var T=C();D([{id:"t1",text:"Type 1"},{id:"t2",text:"Type 2"}]);expect(T.items.getCount()).toBe(2);expect(T.items.getAt(0).text).toBe("Type 1");expect(T.items.getAt(1).text).toBe("Type 2")})});describe("loadOnShow",function(){describe("with loadOnShow: true",function(){it("should load the store on show",function(){R=S();spyOn(R,"load");L({store:R,loadOnShow:true});P();expect(R.load).toHaveBeenCalled()});it("should not load if the store has a pending autoLoad",function(){R=S({autoLoad:true});spyOn(R,"load");L({store:R,loadOnShow:true});P();expect(R.load).not.toHaveBeenCalled()});it("should not load if the store is loading",function(){R=S();R.load();spyOn(R,"load");L({store:R,loadOnShow:true});P();expect(R.load).not.toHaveBeenCalled()});it("should not load if the store has already loaded",function(){R=S();L({store:R,loadOnShow:true});P();D([{id:"t1",text:"Type 1"}]);C().hide();spyOn(R,"load");P();expect(R.load).not.toHaveBeenCalled()})});describe("with loadOnShow: false",function(){it("should not load the store on show",function(){R=S();spyOn(R,"load");L({store:R,loadOnShow:false});P();expect(R.load).not.toHaveBeenCalled()})})});describe("after load",function(){it("should use the field with the labelField as the menu text",function(){R=S();L({store:R,idField:"id",labelField:"text"});P();D([{id:"t1",text:"Type 1"},{id:"t2",text:"Type 2"},{id:"t3",text:"Type 3"}]);var T=C();expect(T.items.getCount()).toBe(3);expect(T.items.getAt(0).text).toBe("Type 1");expect(T.items.getAt(1).text).toBe("Type 2");expect(T.items.getAt(2).text).toBe("Type 3")});it("should use the field with the idField as the filter value",function(){R=S();L({store:R,idField:"id",labelField:"text"});P();D([{id:"t1",text:"Type 1"},{id:"t2",text:"Type 2"},{id:"t3",text:"Type 3"}]);O(1);var T=N.getFilters().first();expect(T.getProperty()).toBe("text");expect(T.getOperator()).toBe("in");expect(T.getValue()).toEqual(["t2"])})});describe("cleanup",function(){it("should not have any listeners on the store if the store has not loaded",function(){R=S();var T=R.hasListeners.load||0;L({store:R});A.destroy();expect(R.hasListeners.load||0).toBe(T)});it("should not have any listeners on the store if the store is loading if the load returns after destroy",function(){R=S();var T=R.hasListeners.load||0;L({store:R});P();A.destroy();expect(R.hasListeners.load||0).toBe(T);D([])});it("should not have any listeners on the store if the store has loaded",function(){R=S();var T=R.hasListeners.load||0;L({store:R});P();D([]);A.destroy();expect(R.hasListeners.load||0).toBe(T)})})})});describe("store types",function(){it("should accept a store id",function(){R=new Ext.data.Store({model:G,id:"Foo",data:[{text:"A"},{text:"B"}]});L({store:"Foo",labelField:"text"});P();var S=C();expect(S.items.getCount()).toBe(2);expect(S.items.getAt(0).text).toBe("A");expect(S.items.getAt(1).text).toBe("B");R.destroy()});it("should accept a store config",function(){L({store:{model:G,data:[{text:"A"},{text:"B"}]},labelField:"text"});P();var S=C();expect(S.items.getCount()).toBe(2);expect(S.items.getAt(0).text).toBe("A");expect(S.items.getAt(1).text).toBe("B")})});describe("cleanup",function(){describe("with autoDestroy: true",function(){it("should destroy a store specified by id",function(){R=new Ext.data.Store({model:G,autoDestroy:true,id:"Foo",data:[{text:"A"},{text:"B"}]});L({store:"Foo",labelField:"text"});P();var S=C();A.destroy();expect(R.destroyed).toBe(true)});it("should destroy a store instance",function(){R=new Ext.data.Store({model:G,autoDestroy:true,data:[{text:"A"},{text:"B"}]});L({store:R});P();var S=C();A.destroy();expect(R.destroyed).toBe(true)});it("should destroy a store passed as a config",function(){L({store:{model:G,autoDestroy:true,data:[{text:"A"},{text:"B"}]}});P();var S=C();R=F.store;A.destroy();expect(R.destroyed).toBe(true)})});describe("with autoDestroy: false",function(){it("should not destroy a store specified by id",function(){R=new Ext.data.Store({model:G,autoDestroy:false,id:"Foo",data:[{text:"A"},{text:"B"}]});L({store:"Foo",labelField:"text"});P();var S=C();A.destroy();expect(R.destroyed).toBe(false);R.destroy()});it("should not destroy a store instance",function(){R=new Ext.data.Store({model:G,autoDestroy:false,data:[{text:"A"},{text:"B"}]});L({store:R,labelField:"text"});P();var S=C();A.destroy();expect(R.destroyed).toBe(false);R.destroy()});it("should not destroy a store passed as a config",function(){L({store:{model:G,autoDestroy:false,data:[{text:"A"},{text:"B"}]},labelField:"text"});P();var S=C();R=F.store;A.destroy();expect(R.destroyed).toBe(false);R.destroy()})})});describe("inferring from grid store",function(){describe("with data",function(){beforeEach(function(){L({},{data:[{text:"t1"},{text:"t1"},{text:"t1"},{text:"t2"},{text:"t2"},{text:"t3"},{text:null},{text:"t4"}]})});it("should not load the store",function(){spyOn(N,"load");P();expect(N.load).not.toHaveBeenCalled()});it("should use the unique dataIndex values as the menu text and exclude nulls",function(){P();var S=C();expect(S.items.getCount()).toBe(4);expect(S.items.getAt(0).text).toBe("t1");expect(S.items.getAt(1).text).toBe("t2");expect(S.items.getAt(2).text).toBe("t3");expect(S.items.getAt(3).text).toBe("t4")});it("should use the dataIndex as the filter value",function(){P();O(1);var S=N.getFilters().first();expect(S.getProperty()).toBe("text");expect(S.getOperator()).toBe("in");expect(S.getValue()).toEqual(["t2"])});describe("cleanup",function(){it("should not destroy the store when destroying the grid",function(){spyOn(N,"destroy").andCallThrough();A.destroy();expect(N.destroy).not.toHaveBeenCalled()})})});describe("with no data",function(){var S;beforeEach(function(){S=[{text:"t1"},{text:"t1"},{text:"t1"},{text:"t2"},{text:"t2"},{text:"t3"},{text:null},{text:"t4"}];L({},{data:null,proxy:{type:"ajax",url:"fake"}})});it("should not load the store",function(){spyOn(N,"load");P();expect(N.load).not.toHaveBeenCalled()});it("should use the unique dataIndex values as the menu text and exclude nulls when the store loads",function(){N.load();P();var T=C();D(S);expect(T.items.getCount()).toBe(4);expect(T.items.getAt(0).text).toBe("t1");expect(T.items.getAt(1).text).toBe("t2");expect(T.items.getAt(2).text).toBe("t3");expect(T.items.getAt(3).text).toBe("t4")});it("should use the dataIndex as the filter value when the store loads",function(){N.load();P();D(S);O(1);var T=N.getFilters().first();expect(T.getProperty()).toBe("text");expect(T.getOperator()).toBe("in");expect(T.getValue()).toEqual(["t2"])});describe("cleanup",function(){it("should not destroy the store when destroying the grid",function(){N.load();P();D(S);spyOn(N,"destroy").andCallThrough();A.destroy();expect(N.destroy).not.toHaveBeenCalled()})})})});describe("active config",function(){it("should be `false` by default",function(){L();expect(F.active).toBe(false)});describe("active === true",function(){describe("when no item defaults",function(){describe("with a value",function(){beforeEach(function(){L({active:true,value:["Item 2","Item 3"]})});it("should honor the config when `true`",function(){expect(F.active).toBe(true)});it("should check the Filters menu item",function(){P();expect(I.checked).toBe(true)});it("should check the option menu items specified by the value config",function(){var S;P();S=F.menu;expect(S.query("[checked]").length).toBe(2);expect(S.down('[text="Item 1"]').checked).toBe(false);expect(S.down('[text="Item 2"]').checked).toBe(true);expect(S.down('[text="Item 3"]').checked).toBe(true);expect(S.down('[text="Item 4"]').checked).toBe(false)});it("should create a store filter with the values in the value config",function(){expect(F.filter.getValue()).toEqual(["Item 2","Item 3"])});it("should add the filter to the store",function(){expect(A.store.getFilters().length).toBe(1)});it("should filter the grid store",function(){var S=N.data;expect(N.getCount()).toBe(2);expect(S.getSource().length).toBe(12);expect(S.filtered).toBe(true)});it("should not be the grid store",function(){expect(F.store).not.toBe(N)})});describe("with an empty value",function(){beforeEach(function(){L({active:true,value:[]})});it("should honor the config when `true`",function(){expect(F.active).toBe(true)});it("should check the Filters menu item",function(){P();expect(I.checked).toBe(true)});it("should not check any of the option menu items",function(){P();expect(F.menu.query("[checked]").length).toBe(0)});it("should create a store filter with no value",function(){expect(F.filter.getValue()).toEqual([])});it("should add the filter to the store",function(){expect(A.store.getFilters().length).toBe(1)});it("should filter the grid store",function(){var S=N.data;expect(N.getCount()).toBe(0);expect(S.getSource().length).toBe(12);expect(S.filtered).toBe(true)});it("should not be the grid store",function(){expect(F.store).not.toBe(N)})});describe("without a value",function(){beforeEach(function(){L({active:true})});it("should honor the config when `true`",function(){expect(F.active).toBe(true)});it("should check the Filters menu item",function(){P();expect(I.checked).toBe(true)});it("should not check any of the option menu items",function(){P();expect(F.menu.query("[checked]").length).toBe(0)});it("should create a store filter with no value",function(){expect(F.filter.getValue()).toEqual([])});it("should add the filter to the store",function(){expect(A.store.getFilters().length).toBe(1)});it("should filter the grid store",function(){var S=N.data;expect(N.getCount()).toBe(0);expect(S.getSource().length).toBe(12);expect(S.filtered).toBe(true)});it("should not be the grid store",function(){expect(F.store).not.toBe(N)});it("should not create a list store",function(){expect(F.store).toBe(undefined)})})})});describe("active === false",function(){describe("when no item defaults",function(){beforeEach(function(){L({active:false})});it("should honor the config when `false`",function(){expect(F.active).toBe(false)});it("should not check the Filters menu item",function(){P();expect(I.checked).toBe(false)});it("should not check any of the menu items",function(){P();expect(F.menu.query("[checked]").length).toBe(0)});it("should create an empty store filter",function(){expect(F.filter.getValue().length).toBe(0)});it("should not add a filter to the store",function(){expect(A.store.getFilters().length).toBe(0)});it("should not filter the grid store",function(){expect(N.getCount()).toBe(12);expect(N.data.filtered).toBe(false)})})})});describe("keeping the list filter store and menu in sync with the grid store",function(){beforeEach(function(){L();P()});it("should update its list items when a model is updated",function(){var S="Pete the Dog";expect(F.menu.items.getAt(0).getValue()).toBe("Item 1");N.getAt(0).set("text",S);expect(F.menu.items.getAt(0).getValue()).toBe(S)});describe("changing the grid store dataset",function(){var T,U,S;beforeEach(function(){B();H();L({dataIndex:"type",labelIndex:"name"},{data:[{id:101,name:"Item 101",type:"t101"},{id:102,name:"Item 102",type:"t102"},{id:103,name:"Item 103",type:"t103"},{id:104,name:"Item 104",type:"t104"}]});P();T=F.menu.items;expect(T.length).toBe(4);for(U=0,S=T.length;U<S;U++){expect(T.getAt(U).getValue()).toBe("t"+(U+101))}});afterEach(function(){T=U=S=null});it("should update when reloaded",function(){N.loadData([{id:101,name:"Item 101",type:"t101"},{id:102,name:"Item 102",type:"t102"},{id:103,name:"Item 103",type:"t103"},{id:104,name:"Item 104",type:"t104"},{id:105,name:"Item 105",type:"t105"},{id:106,name:"Item 106",type:"t106"}]);expect(T.length).toBe(6);for(U=0,S=T.length;U<S;U++){expect(T.getAt(U).getValue()).toBe("t"+(U+101))}});it("should update when a record is added",function(){N.add({id:105,name:"Item 105",type:"t105"});expect(T.length).toBe(5);expect(T.getAt(0).getValue()).toBe("t101");expect(T.getAt(1).getValue()).toBe("t102");expect(T.getAt(2).getValue()).toBe("t103");expect(T.getAt(3).getValue()).toBe("t104");expect(T.getAt(4).getValue()).toBe("t105")});it("should update when a record is removed",function(){N.getAt(2).drop();expect(T.length).toBe(3);expect(T.getAt(0).getValue()).toBe("t101");expect(T.getAt(1).getValue()).toBe("t102");expect(T.getAt(2).getValue()).toBe("t104")});it("should not add to the menu items if a duplicate is added",function(){N.add({id:105,name:"Item 105",type:"t104"});expect(T.length).toBe(4);expect(T.getAt(0).getValue()).toBe("t101");expect(T.getAt(1).getValue()).toBe("t102");expect(T.getAt(2).getValue()).toBe("t103");expect(T.getAt(3).getValue()).toBe("t104")})})})});describe("recreating the list store and the filter menu items",function(){beforeEach(function(){L();P();spyOn(F,"createListStore").andCallThrough();spyOn(F,"createMenuItems").andCallThrough()});describe("should not",function(){it("should not recreate when sorting the grid store",function(){A.store.sort();expect(F.createListStore.callCount).toBe(0);expect(F.createMenuItems.callCount).toBe(0)});describe("the Filters menu item",function(){it("should not recreate when unchecking the Filters menu item",function(){jasmine.fireMouseEvent(I.checkEl.dom,"click");expect(F.createListStore.callCount).toBe(0);expect(F.createMenuItems.callCount).toBe(0)});it("should not recreate when toggling the Filters menu item",function(){jasmine.fireMouseEvent(I.checkEl.dom,"click");jasmine.fireMouseEvent(I.checkEl.dom,"click");expect(F.createListStore.callCount).toBe(0);expect(F.createMenuItems.callCount).toBe(0)})});describe("the filter menu item",function(){it("should not recreate when unchecking the Filters menu item",function(){O(2);expect(F.createListStore.callCount).toBe(0);expect(F.createMenuItems.callCount).toBe(0)});it("should not recreate when toggling the Filters menu item",function(){O(2);O(2);expect(F.createListStore.callCount).toBe(0);expect(F.createMenuItems.callCount).toBe(0)})})})});describe("initializing the UI",function(){var T=[{id:"t1",text:"Item 1"},{id:"t2",text:"Item 2"},{id:"t3",text:"Item 3"},{id:"t4",text:"Item 4"},{id:"t5",text:"Item 5"},{id:"t6",text:"Item 6"}],U=T.length,S,R,V;afterEach(function(){R=V=null});describe("when the options are inferred from the grid store",function(){function W(X){describe("when active state is "+X,function(){describe("when there is a value",function(){beforeEach(function(){L({active:X,value:["Item 1","Item 4"]},{data:null,proxy:{type:"ajax",url:"fakeUrl"}});N.load();D(T)});describe("the view",function(){it("should render a row for each record in the store",function(){R=A.view.all.count;expect(R).toBe(N.data.length);expect(R).toBe(X?2:U)})});describe("the gridfilters UI",function(){it("should check the Filters menu item",function(){P();expect(I.checked).toBe(X)});it("should check each menu item in that is in the value config",function(){P();V=F.menu;expect(V.query("[checked]").length).toBe(2);expect(V.down('[text="Item 1"]').checked).toBe(true);expect(V.down('[text="Item 2"]').checked).toBe(false);expect(V.down('[text="Item 3"]').checked).toBe(false);expect(V.down('[text="Item 4"]').checked).toBe(true);expect(V.down('[text="Item 5"]').checked).toBe(false);expect(V.down('[text="Item 6"]').checked).toBe(false)})})});describe("when there is an empty value",function(){beforeEach(function(){L({active:X,value:[]},{data:null,proxy:{type:"ajax",url:"fakeUrl"}});N.load();D(T)});describe("the view",function(){it("should render a row for each record in the store",function(){R=A.view.all.count;expect(R).toBe(N.data.length);expect(R).toBe(X?0:U)})});describe("the gridfilters UI",function(){it("should check the Filters menu item",function(){P();expect(I.checked).toBe(X)});it("should check each menu item in that is in the value config",function(){P();V=F.menu;expect(V.query("[checked]").length).toBe(0);expect(V.down('[text="Item 1"]').checked).toBe(false);expect(V.down('[text="Item 2"]').checked).toBe(false);expect(V.down('[text="Item 3"]').checked).toBe(false);expect(V.down('[text="Item 4"]').checked).toBe(false);expect(V.down('[text="Item 5"]').checked).toBe(false);expect(V.down('[text="Item 6"]').checked).toBe(false)})})});describe("when there is not a value",function(){beforeEach(function(){L({active:X},{data:null,proxy:{type:"ajax",url:"fakeUrl"}});N.load();D(T)});describe("the view",function(){it("should render a row for each record in the store",function(){R=A.view.all.count;expect(R).toBe(N.data.length);expect(R).toBe(X?0:U)})});describe("the gridfilters UI",function(){it("should check the Filters menu item",function(){P();expect(I.checked).toBe(X)});it("should check each menu item in that is in the value config",function(){P();V=F.menu;expect(V.query("[checked]").length).toBe(0);expect(V.down('[text="Item 1"]').checked).toBe(false);expect(V.down('[text="Item 2"]').checked).toBe(false);expect(V.down('[text="Item 3"]').checked).toBe(false);expect(V.down('[text="Item 4"]').checked).toBe(false);expect(V.down('[text="Item 5"]').checked).toBe(false);expect(V.down('[text="Item 6"]').checked).toBe(false)})})})})}W(true);W(false)});describe("when the options are created from the filter store config",function(){function W(Y){return new Ext.data.ArrayStore(Ext.apply({model:G,data:[["t1","Item 1"],["t2","Item 2"],["t3","Item 3"],["t4","Item 4"]]},Y))}afterEach(function(){S=Ext.destroy(S)});function X(Y){describe("when active state is "+Y,function(){describe("when there is a value",function(){beforeEach(function(){S=W();L({active:Y,store:S,dataIndex:"id",labelIndex:"text",value:["t3","t4"]});N.load();D(T)});describe("the view",function(){it("should render a row for each record in the store",function(){R=A.view.all.count;expect(R).toBe(N.data.length);expect(R).toBe(Y?2:U)})});describe("the gridfilters UI",function(){it("should check the Filters menu item",function(){P();expect(I.checked).toBe(Y)});it("should check each menu item in the Filters menu",function(){P();V=F.menu;expect(V.query("[checked]").length).toBe(2);expect(V.down('[text="Item 1"]').checked).toBe(false);expect(V.down('[text="Item 2"]').checked).toBe(false);expect(V.down('[text="Item 3"]').checked).toBe(true);expect(V.down('[text="Item 4"]').checked).toBe(true)})})});describe("when there is an empty value",function(){beforeEach(function(){S=W();L({active:Y,store:S,value:[]});N.load();D(T)});describe("the view",function(){it("should render a row for each record in the store",function(){R=A.view.all.count;expect(R).toBe(N.data.length);expect(R).toBe(Y?0:U)})});describe("the gridfilters UI",function(){it("should check the Filters menu item",function(){P();expect(I.checked).toBe(Y)});it("should check each menu item in the Filters menu",function(){P();V=F.menu;expect(V.query("[checked]").length).toBe(0);expect(V.down('[text="Item 1"]').checked).toBe(false);expect(V.down('[text="Item 2"]').checked).toBe(false);expect(V.down('[text="Item 3"]').checked).toBe(false);expect(V.down('[text="Item 4"]').checked).toBe(false)})})});describe("when there is not a value",function(){beforeEach(function(){S=W();L({active:Y,store:S,});N.load();D(T)});describe("the view",function(){it("should render a row for each record in the store",function(){R=A.view.all.count;expect(R).toBe(N.data.length);expect(R).toBe(Y?0:U)})});describe("the gridfilters UI",function(){it("should check the Filters menu item",function(){P();expect(I.checked).toBe(Y)});it("should check each menu item in the Filters menu",function(){P();V=F.menu;expect(V.query("[checked]").length).toBe(0);expect(V.down('[text="Item 1"]').checked).toBe(false);expect(V.down('[text="Item 2"]').checked).toBe(false);expect(V.down('[text="Item 3"]').checked).toBe(false);expect(V.down('[text="Item 4"]').checked).toBe(false)})})})})}X(true);X(false)})});describe("showing the menu",function(){describe("should work",function(){describe("remoteFilter",function(){function R(T,S){it("should show regardless of `remoteFilter` value (remoteFilter = "+T+")",function(){L({value:S},{remoteFilter:T});expect(function(){P()}).not.toThrow()})}describe("when store is not filtered",function(){R(false,null);R(true,null)});describe("when store is filtered",function(){R(false,"Item 5");R(true,"Item 5")})})});describe("the active state",function(){var R;afterEach(function(){R=null});function S(T){it("should not add a possible additional filter to the store when shown, active state = "+T,function(){L({active:T,value:["Item 1","Item 4"]});R=N.getFilters().getCount();P();expect(R).toBe(N.getFilters().getCount())})}S(true);S(false)});describe("the list store",function(){beforeEach(function(){L({value:["Item 2","Item 3"]});O(1)});it("should create the list store",function(){expect(F.store).toBeDefined()});it("should create a list store with the same number of records as there are unique elements in the grid store",function(){expect(F.store.data.length).toEqual(N.collect("text",true,true).length)})})});describe("statefulness",function(){var S;function R(){L(null,null,{stateful:true,stateId:"pozzuoli"});P();S=F.menu}beforeEach(function(){new Ext.state.Provider();R()});afterEach(function(){Ext.state.Manager.getProvider().clear();S=null});it("should retain selections",function(){expect(S.query("[checked]").length).toBe(0);O(0);O(3);expect(S.query("[checked]").length).toBe(2);expect(S.items.getAt(0).checked).toBe(true);expect(S.items.getAt(3).checked).toBe(true);A.saveState();A.destroy();R();expect(S.query("[checked]").length).toBe(2);expect(S.items.getAt(0).checked).toBe(true);expect(S.items.getAt(3).checked).toBe(true)})});describe("reconfiguring",function(){it("should not try to bind a null value",function(){L();expect(function(){A.reconfigure(null,[{dataIndex:"text",filter:{type:"list",value:"foo"}}])}).not.toThrow()})})})