describe("grid-aria",function(){var C=jasmine.expectAriaAttr,B=jasmine.expectNoAriaAttr,F={type:"array",fields:["field1","field2","field3","field4","field5"],data:[["foo","bar","baz","qux","fred"],["frob","throbbe","bonzo","mymse","xyzzy"]]},E=[{dataIndex:"field1",text:"field 1"},{dataIndex:"field2",text:"field 2"},{dataIndex:"field3",text:"field 3"},{dataIndex:"field4",text:"field 4"},{dataIndex:"field5",text:"field 5"}],A,I=true,D=Ext.data.ProxyStore.prototype.load,H;function G(J){J=Ext.apply({renderTo:Ext.getBody(),width:500,height:300,store:F,columns:E},J);A=new Ext.grid.Panel(J)}beforeEach(function(){H=Ext.data.ProxyStore.prototype.load=function(){D.apply(this,arguments);if(I){this.flushLoad.apply(this,arguments)}return this}});afterEach(function(){Ext.data.ProxyStore.prototype.load=D;if(A){A.destroy();A=null}});describe("structure",function(){var L,K,J;afterEach(function(){L=K=J=null});describe("with header",function(){beforeEach(function(){G();L=A.getHeaderContainer();K=A.getColumns()[0];J=A.getView()});it("should have grid role on the main el",function(){C(A,"role","grid")});it("should have rowgroup role on the column header main el",function(){C(L,"role","rowgroup")});it("should have row role on the column header innerCt el",function(){C(L.layout.innerCt,"role","row")});it("should have columnheader role on first column header",function(){C(K,"role","columnheader")});it("should have rowgroup role on the view",function(){C(J,"role","rowgroup")});it("should not have aria-hidden on the view",function(){B(J,"aria-hidden")});it("should not have aria-disabled on the view",function(){B(J,"aria-disabled")});it("should have presentation role on the row table node",function(){var M=J.getNode(0);C(M,"role","presentation")});it("should have row role on the row tr node",function(){var M=J.getRow(0);C(M,"role","row")});it("should have gridcell role on cell td nodes",function(){var M=J.getCell(0,K);C(M,"role","gridcell")});it("should have no role on the cell inner div",function(){var M=J.getCell(0,K),N=M.dom.firstChild;B(N,"role")})});describe("without header",function(){var N,M;beforeEach(function(){G({hideHeaders:true});N=A.getColumns()[0];M=A.getView()});it("should have grid role on the main el",function(){C(A,"role","grid")});it("should have rowgroup role on the view",function(){C(M,"role","rowgroup")});it("should not have aria-hidden on the view",function(){B(M,"aria-hidden")});it("should not have aria-disabled on the view",function(){B(M,"aria-disabled")});it("should have presentation role on the row table node",function(){var O=M.getNode(0);C(O,"role","presentation")});it("should have row role on the row tr node",function(){var O=M.getRow(0);C(O,"role","row")});it("should have gridcell role on cell td nodes",function(){var O=M.getCell(0,N);C(O,"role","gridcell")});it("should have no role on the cell inner div",function(){var O=M.getCell(0,N),P=O.dom.firstChild;B(P,"role")})})});describe("grouped columns",function(){describe("labelling",function(){beforeEach(function(){G({columns:[{text:"group",columns:[{dataIndex:"field1",text:"column 1"},{dataIndex:"field2",text:"column 2"}]}]})});it("should have aria-label on first column header",function(){var J=A.getColumns()[0];C(J,"aria-label","group column 1")});it("should have aria-label on second column header",function(){var J=A.getColumns()[1];C(J,"aria-label","group column 2")})});describe("HTML in labels",function(){beforeEach(function(){G({columns:[{text:"<span><tt>group</tt></span>",columns:[{dataIndex:"field1",text:"<span><b>column 1</b></span>"}]}]})});it("should strip HTML tags from group and column text",function(){var J=A.getColumns()[0];C(J,"aria-label","group column 1")})})});describe("sort state",function(){var K,J;beforeEach(function(){G({columns:[{dataIndex:"field1",text:"sortable 1",sortable:true},{dataIndex:"field2",text:"sortable 2",sortable:true}]});K=A.getColumns()[0];J=A.getColumns()[1]});afterEach(function(){K=J=null});it("should have no aria-sort when not sorted by default",function(){B(K,"aria-sort")});it("should have aria-sort when sorted ascending",function(){K.sort("ASC");C(K,"aria-sort","ascending")});it("should have aria-sort when sorted descending",function(){K.sort("DESC");C(K,"aria-sort","descending")});it("should have aria-sort removed when sort state is reset",function(){K.sort("ASC");J.sort("DESC");B(K,"aria-sort")})});describe("aria-readonly",function(){it("should be true when not editable",function(){G();C(A,"aria-readonly","true")});it("should be false with cellediting plugin",function(){G({plugins:[{ptype:"cellediting"}]});C(A,"aria-readonly","false")});it("should be false with rowediting plugin",function(){G({plugins:[{ptype:"rowediting"}]});C(A,"aria-readonly","false")});it("should have aria-readonly on the column headers",function(){G({plugins:[{ptype:"cellediting"}]});var J=A.getColumns()[0];C(J,"aria-readonly","true")})});describe("aria-multiselectable",function(){it("should be false with SINGLE",function(){G();C(A,"aria-multiselectable","false")});it("should be true with SIMPLE",function(){G({selModel:{mode:"SIMPLE"}});C(A,"aria-multiselectable","true")});it("should be true with MULTI",function(){G({selModel:{mode:"MULTI"}});C(A,"aria-multiselectable","true")})});describe("aria-selected",function(){var J;beforeEach(function(){G({selModel:{type:"spreadsheet",mode:"MULTI"}});J=A.getSelectionModel()});describe("row",function(){var K;beforeEach(function(){K=A.getView().getRow(0)});afterEach(function(){K=null});it("should not be set when not selected",function(){B(K,"aria-selected")});it("should be set when selected",function(){J.select(0);C(K,"aria-selected","true")});it("should be removed when deselected",function(){J.select(0);J.deselect(0);B(K,"aria-selected")})});describe("cell",function(){var K;beforeEach(function(){K=A.getView().getCell(0,A.getColumns()[0])});it("should not be set when not selected",function(){B(K,"aria-selected")});it("should be set when selected",function(){J.selectCells([0,0],[1,5]);C(K,"aria-selected","true")});it("should be removed when deselected",function(){J.selectCells([0,0],[1,5]);J.resetSelection(true);B(K,"aria-selected")})})})})