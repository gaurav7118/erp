describe("grid-view",function(){function A(B){describe(B?"with buffered rendering":"without buffered rendering",function(){var C;afterEach(function(){Ext.destroy(C);C=null});describe("locked view",function(){var D;beforeEach(function(){Ext.define("spec.LockedModel",{extend:"Ext.data.Model",fields:["f1","f2","f3","f4"]});C=new Ext.grid.Panel({width:600,height:300,bufferedRenderer:B,renderTo:Ext.getBody(),store:{model:spec.LockedModel,data:[{f1:1,f2:2,f3:3,f4:4},{f1:5,f2:6,f3:7,f4:8},{f1:9,f2:10,f3:11,f4:12},{f1:13,f2:14,f3:15,f4:16}]},columns:[{locked:true,dataIndex:"f1"},{locked:true,dataIndex:"f2"},{dataIndex:"f3"},{dataIndex:"f4"}]});D=C.normalGrid.getView().innerSelector});afterEach(function(){Ext.undefine("spec.LockedModel");Ext.data.Model.schema.clear()});describe("getCellInclusive",function(){it("should be able to get a cell in the locked area",function(){var E=C.getView().getCellInclusive({row:0,column:0});expect(E.down(D,true).innerHTML).toBe("1")});it("should be able to get a cell in the unlocked area",function(){var E=C.getView().getCellInclusive({row:3,column:3});expect(E.down(D,true).innerHTML).toBe("16")});it("should return false if the cell doesn't exist",function(){var E=C.getView().getCellInclusive({row:20,column:20});expect(E).toBe(false)});it("should return a dom element if the returnDom param is passed",function(){var E=C.getView().getCellInclusive({row:1,column:1},true);expect(E.tagName).not.toBeUndefined();expect(Ext.fly(E).down(D,true).innerHTML).toBe("6")})});describe("reconfigure",function(){beforeEach(function(){spyOn(Ext.log,"warn")});it("should use the new store to refresh",function(){expect(C.lockedGrid.view.all.getCount()).toBe(4);expect(C.normalGrid.view.all.getCount()).toBe(4);C.reconfigure(new Ext.data.Store(),[{dataIndex:name,locked:true},{dataIndex:"name"}]);expect(C.lockedGrid.view.all.getCount()).toBe(0);expect(C.normalGrid.view.all.getCount()).toBe(0)})})})})}A(false);A(true)})