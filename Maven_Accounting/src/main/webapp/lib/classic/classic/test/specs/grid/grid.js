describe("grid-general",function(){var B,I,K=true,D=Ext.data.ProxyStore.prototype.load,H;beforeEach(function(){H=Ext.data.ProxyStore.prototype.load=function(){D.apply(this,arguments);if(K){this.flushLoad.apply(this,arguments)}return this}});afterEach(function(){Ext.data.ProxyStore.prototype.load=D;B=I=Ext.destroy(B,I)});var G=Ext.getScrollbarSize().width,E="webkitTransform" in document.documentElement.style?"webkitTransform":"transform",F=!!G,A=F?it:xit;function J(M){var N=Ext.getDom(M),L;if(Ext.supports.CssTransforms&&!Ext.isIE9m){L=N.style[E];return L?parseInt(L.split(",")[1],10):0}else{return parseInt(N.style.top||"0",10)}}function C(L){describe(L?"with buffered rendering":"without buffered rendering",function(){var P=Ext.define(null,{extend:"Ext.data.Model",fields:["field1","field2","field3","field4","field5","field6","field7","field8","field9","field10"]}),N,O;function M(S){if(!S&&S!==null){S=[{field1:1,field2:2,field3:3,field4:4,field5:5,field6:6,field7:7,field8:8,field9:9,field10:10}]}I=new Ext.data.Store({model:P,data:S});return I}function R(S,U,X,a,W){a=a||{};X=X||{};var V,Z,Y;if(!a.preventColumnCreate&&!S){S=[];for(V=1;V<11;V++){S.push({dataIndex:"field"+V,text:"Field "+V,width:90,locked:W&&V===1})}}if(typeof U==="number"){Z=U;U=[];for(V=0;V<Z;V++){Y={id:"rec"+V};for(var T=0;T<S.length;T++){Y[S[T].dataIndex]=(V+1)+", "+(T+1)}U.push(Y)}}if(!a.preventStoreCreate){M(U)}B=new Ext.grid.Panel(Ext.apply({columns:S,store:I,trailingBufferZone:1000,leadingBufferZone:1000,width:1000,height:500,border:false,bodyStyle:!X.border?"border: 0":"",bufferedRenderer:L,viewConfig:Ext.apply({mouseOverOutBuffer:0},X.viewConfig)},X));if(X.renderTo===undefined){B.render(Ext.getBody())}N=B.getView();O=B.getColumnManager().getColumns()}afterEach(function(){N=O=null;Ext.data.Model.schema.clear()});function Q(U,T){var S=N.getCell(I.getAt(U),O[T]),V=B.lockedGrid?B.lockedGrid.getView():N;return S.down(V.innerSelector).dom.innerHTML}describe("misc tests",function(){it("should not throw an exception when scrollable:false",function(){R(null,undefined,{scrollable:false})});it("should not throw an exception when hiding a column in a locked grid during initComponent",function(){var S=Ext.define(null,{extend:"Ext.AbstractPlugin",init:function(T){T.hide()}});R([{plugins:[new S()],locked:true},{}])});it("should invalidate cached element data when grid DOM is updated",function(){R();B.columns[0].hasCustomRenderer=true;Ext.fly(B.view.all.item(0,true)).addCls("foo-bar");expect(Ext.fly(B.view.all.item(0,true)).hasCls("foo-bar")).toBe(true);I.getAt(0).set("field1","CHANGED");expect(Ext.fly(B.view.all.item(0,true)).hasCls("foo-bar")).toBe(false)});it("should not throw an error when the store is loaded in the afterrender of an earlier sibling",function(){R(null,undefined,{renderTo:null});var S;expect(function(){S=new Ext.container.Container({renderTo:Ext.getBody(),items:[{xtype:"component",html:"Foo",listeners:{afterrender:function(){var T=new Ext.data.proxy.Ajax({url:"foo"});spyOn(T,"read").andReturn();I.setProxy(T);I.load()}}},B]})}).not.toThrow();Ext.destroy(S)});it("should not throw an error when the store is loaded in the afterrender event",function(){R(null,[],{listeners:{afterrender:function(){var S=new Ext.data.proxy.Ajax({url:"foo"});spyOn(S,"read").andReturn();I.setProxy(S);expect(function(){I.load()}).not.toThrow()}}})})});describe("autoSizeColumn",function(){function S(){var T=B.getView().getEl().down(O[0].getCellInnerSelector()),U=Ext.supports.ScrollWidthInlinePaddingBug?parseInt(T.getStyle("padding-right"),10):0;return parseInt(T.getStyle("padding-left"),10)+U}it("should size the column when passed a header",function(){R(null,[{field1:'<div style="width: 125px;>a</div>'},{field1:'<div style="width: 450px;>b</div>'},{field1:'<div style="width: 375px;>c</div>'}]);B.getView().autoSizeColumn(O[0]);expect(O[0].getWidth()).toBe(451+S())});it("should size the column when passed a header index",function(){R(null,[{field1:'<div style="width: 125px;>a</div>'},{field1:'<div style="width: 450px;>b</div>'},{field1:'<div style="width: 375px;>c</div>'}]);B.getView().autoSizeColumn(0);expect(O[0].getWidth()).toBe(451+S())})});describe("sizing",function(){it("should allow for a minHeight on the view with a shrink wrapped grid",function(){R(null,undefined,{height:undefined,viewConfig:{minHeight:100}});expect(N.getHeight()).toBe(100);expect(B.getHeight()).toBe(100+B.headerCt.getHeight())})});describe("getRowClass",function(){var S;beforeEach(function(){S=jasmine.createSpy();R(null,3,{viewConfig:{getRowClass:S.andCallFake(function(U){return"customCls"+I.indexOf(U)+" testCls"})}})});afterEach(function(){S=null});function T(U){var V=N.getNode(U);return Ext.fly(V).down(N.rowSelector)}it("should be called for each rendered row",function(){expect(S.callCount).toBe(3);expect(S.calls[0].args[0]).toBe(I.getAt(0));expect(S.calls[0].args[1]).toBe(0);expect(S.calls[1].args[0]).toBe(I.getAt(1));expect(S.calls[1].args[1]).toBe(1);expect(S.calls[2].args[0]).toBe(I.getAt(2));expect(S.calls[2].args[1]).toBe(2)});it("should be called when refreshing the view",function(){S.reset();N.refresh();expect(S.calls[0].args[0]).toBe(I.getAt(0));expect(S.calls[0].args[1]).toBe(0);expect(S.calls[1].args[0]).toBe(I.getAt(1));expect(S.calls[1].args[1]).toBe(1);expect(S.calls[2].args[0]).toBe(I.getAt(2));expect(S.calls[2].args[1]).toBe(2)});it("should be called when adding a new record",function(){S.reset();I.add({});expect(S.callCount).toBe(1);expect(S.mostRecentCall.args[0]).toBe(I.getAt(3));expect(S.mostRecentCall.args[1]).toBe(3)});it("should be called when inserting a new record",function(){S.reset();I.insert(0,{});expect(S.callCount).toBe(1);expect(S.mostRecentCall.args[0]).toBe(I.getAt(0));expect(S.mostRecentCall.args[1]).toBe(0)});it("should be called when the row is updating",function(){S.reset();I.getAt(0).set("field1","new value");expect(S.callCount).toBe(1);expect(S.mostRecentCall.args[0]).toBe(I.getAt(0));expect(S.mostRecentCall.args[1]).toBe(0)});it("should add the class to the row element",function(){expect(T(0).hasCls("customCls0")).toBe(true);expect(T(1).hasCls("customCls1")).toBe(true);expect(T(2).hasCls("customCls2")).toBe(true)});it("should be able to add multiple class names",function(){expect(T(0).hasCls("customCls0")).toBe(true);expect(T(0).hasCls("testCls")).toBe(true);expect(T(1).hasCls("customCls1")).toBe(true);expect(T(1).hasCls("testCls")).toBe(true);expect(T(2).hasCls("customCls2")).toBe(true);expect(T(2).hasCls("testCls")).toBe(true)})});describe("emptyText",function(){function S(){return B.getEl().down("."+B.emptyCls)||null}describe("when to display",function(){it("should display on first refresh with deferEmptyText: false",function(){R(null,null,{viewConfig:{emptyText:"Foo",deferEmptyText:false}});expect(S()).not.toBeNull()});it("should not display on first refresh with deferEmptyText: true",function(){R(null,null,{viewConfig:{emptyText:"Foo",deferEmptyText:true}});expect(S()).toBeNull()});it("should display on subsequent refreshes with deferEmptyText: true",function(){R(null,null,{viewConfig:{emptyText:"Foo",deferEmptyText:true}});B.getView().refresh();expect(S()).not.toBeNull()});it("should display when removing the last record",function(){R(null,1,{viewConfig:{emptyText:"Foo",deferEmptyText:true}});I.removeAt(0);expect(S()).not.toBeNull()});it("should display when removing all records",function(){R(null,5,{viewConfig:{emptyText:"Foo",deferEmptyText:true}});I.removeAll();expect(S()).not.toBeNull()})});describe("config",function(){describe("emptyCls",function(){it("should use the passed emptyCls",function(){R(null,null,{emptyCls:"foo",viewConfig:{emptyText:"Foo",deferEmptyText:false}});expect(S().hasCls("foo")).toBe(true)})});describe("emptyText",function(){it("should use the passed emptyText",function(){R(null,null,{viewConfig:{emptyText:"Foo",deferEmptyText:false}});expect(S().dom).hasHTML("Foo")})})});describe("size",function(){it("should set the grid height correctly based on the emptyText when auto heighting",function(){R(null,null,{height:null,hideHeaders:true,viewConfig:{emptyText:'<div style="width: 50px; height: 100px;">a</div>',deferEmptyText:false}});var T=B.body.getBorderWidth("tb")+B.el.down(N.bodySelector).getHeight();expect(B.getHeight()).toBe(100+S().getPadding("tb")+T)})});describe("scrolling",function(){it("should keep a horizontal scrollbar if columns are larger than the grid width",function(){R([{width:800},{width:800}],0,{viewConfig:{emptyText:'<div style="width: 50px; height: 100px;">a</div>',deferEmptyText:false}});expect(N.getEl().dom.scrollWidth).toBe(1600)})})});describe("stripeRows",function(){var S=Ext.view.Table.prototype.altRowCls;describe("with stripeRows: false",function(){function T(){Ext.Array.forEach(B.getView().getNodes(),function(U){expect(Ext.fly(U).hasCls(S)).toBe(false)})}beforeEach(function(){R(null,11,{viewConfig:{stripeRows:false}})});it("should not stripe rows on initial render",function(){T()});it("should not stripe rows when adding records",function(){I.add([{},{},{},{},{}]);T()});it("should not stripe rows when removing records",function(){I.removeAt(0);T()});it("should not stripe rows when updating records",function(){I.getAt(0).set("field1","foo");T()});it("should not stripe rows on refresh",function(){B.getView().refresh();T()})});describe("with stripeRows: true",function(){beforeEach(function(){R(null,11,{viewConfig:{stripeRows:true}})});function T(){Ext.Array.forEach(B.getView().getNodes(),function(V,U){if(U%2===1){expect(Ext.fly(V).hasCls(S)).toBe(true)}else{expect(Ext.fly(V).hasCls(S)).toBe(false)}})}it("should stripe rows on initial render",function(){T()});it("should stripe rows when appending records",function(){I.add([{},{},{},{},{}]);T()});it("should stripe rows when inserting records",function(){I.insert(0,{});T()});it("should stripe when removing records",function(){I.removeAt(0);T()});it("should retain the stripe class when updating records",function(){I.getAt(1).set("field1","foo");T()});it("should stripe when a record update causes the position to change",function(){I.sort("field1");I.getAt(0).set("field1","999999999");T()});it("should stripe on refresh",function(){I.suspendEvents();var U=[70,72,75,27,82,70,53,42,87,19,23];I.each(function(W,V){W.set("field1",U[V])});I.sort("field1");I.resumeEvents();B.getView().refresh();T()})})});describe("forceFit",function(){var S;beforeEach(function(){S=[];for(var T=0;T<50;T++){S.push({field1:(T+1)+", "+1,field2:(T+1)+", "+2,field3:(T+1)+", "+3,field4:(T+1)+", "+4,field5:(T+1)+", "+5,field6:(T+1)+", "+6,field7:(T+1)+", "+7,field8:(T+1)+", "+8,field9:(T+1)+", "+9,field10:(T+1)+", "+10})}});afterEach(function(){S=null});describe("starting with no overflow",function(){beforeEach(function(){R(null,undefined,{forceFit:true,width:400,height:200})});it("should size the columns to fit within the grid body",function(){var T=new Ext.data.Store({autoDestroy:false,model:P,data:[]});expect(B.headerCt.getTableWidth()).toBe(B.body.getWidth()-B.body.getBorderWidth("lr"));I.add(S);expect(B.headerCt.getTableWidth()).toBe(B.body.getWidth()-B.body.getBorderWidth("lr")-Ext.getScrollbarSize().width);I.autoDestroy=false;B.reconfigure(T);B.reconfigure(I);expect(B.headerCt.getTableWidth()).toBe(B.body.getWidth()-B.body.getBorderWidth("lr")-Ext.getScrollbarSize().width);Ext.destroy(T)})});describe("with overflow",function(){beforeEach(function(){R(null,S,{forceFit:true,width:400,height:200})});it("should size the columns to fit within the grid body, inside the scrollbar",function(){expect(B.headerCt.getTableWidth()).toBe(B.body.getWidth()-B.body.getBorderWidth("lr")-Ext.getScrollbarSize().width)})})});describe("basic settings",function(){describe("columns",function(){describe("without locking",function(){it("should be able to configure without columns",function(){expect(function(){R(null,undefined,null,{preventColumnCreate:true})}).not.toThrow()})});describe("with locking",function(){it("should be able to configure without columns",function(){expect(function(){R(null,undefined,{enableLocking:true},{preventColumnCreate:true})}).not.toThrow()})})});describe("itemSelector",function(){var S=Ext.view.Table.prototype.itemSelector;describe("without locking",function(){it("should be able to lookup the itemSelector on the view",function(){R();expect(N.itemSelector).toBe(S)})});describe("with locking",function(){it("should be able to lookup the itemSelector on the LockingView",function(){R(null,undefined,null,null,true);expect(N.itemSelector).toBe(S)})})});describe("css classes",function(){it("should add the x-grid cls",function(){R();expect(B.el.hasCls("x-grid")).toBe(true)});it("should add the x-grid cls when specifying a custom cls",function(){R(undefined,undefined,{cls:"foo"});expect(B.el.hasCls("x-grid")).toBe(true);expect(B.el.hasCls("foo")).toBe(true)})});describe("markDirty",function(){var U;function S(X,W,V){R(V,undefined,{renderTo:W?null:Ext.getBody(),viewConfig:{markDirty:X,mouseOverOutBuffer:0}});U=B.getView().dirtyCls}afterEach(function(){U=null});function T(V,W){return B.getView().getCell(V,W)}describe("with markDirty: false",function(){it("should not render a cell with the dirtyCls initially",function(){S(false,true);I.first().set("field1","bleh");B.render(Ext.getBody());expect(B.getEl().select("."+U).getCount()).toBe(0)});it("should not add the dirtyCls when updated with a simple cell updater",function(){S(false);I.first().set("field1","bleh");expect(B.getEl().select("."+U).getCount()).toBe(0)});it("should not add the dirtyCls when updated with a renderer",function(){S(false,false,[{dataIndex:"",renderer:function(V,W,X){return X.get("field1")+X.get("field2")}}]);I.first().set("field1","bleh");expect(B.getEl().select("."+U).getCount()).toBe(0)})});describe("with markDirty: true",function(){it("should not render a cell with the dirtyCls initially if not dirty",function(){S(true,true);B.render(Ext.getBody());var W=I.first();for(var V=0;V<O.length;++V){expect(T(W,O[V])).not.toHaveCls(U)}});it("should render a cell with the dirtyCls initially if the cell is dirty",function(){S(true,true);I.first().set("field1","bleh");B.render(Ext.getBody());var W=I.first();expect(T(W,O[0])).toHaveCls(U);for(var V=1;V<O.length;++V){expect(T(W,O[V])).not.toHaveCls(U)}});it("should add the dirtyCls to updated cells",function(){S(true);var V=I.first();V.set("field1","bleh");expect(T(V,O[0])).toHaveCls(U);V.set("field4","qwerty");expect(T(V,O[3])).toHaveCls(U)});it("should remove the dirtyCls when the cell is no longer dirty",function(){S(true);var W=I.first(),V=W.get("field1");W.set("field1","asdf");expect(T(W,O[0])).toHaveCls(U);W.set("field1",V);expect(T(W,O[0])).not.toHaveCls(U)});it("should remove the dirtyCls on commit",function(){S(true);var V=I.first();V.set("field1","foo");V.set("field2","bar");expect(T(V,O[0])).toHaveCls(U);expect(T(V,O[1])).toHaveCls(U);V.set("field3","baz");expect(T(V,O[2])).toHaveCls(U);V.commit();expect(T(V,O[0])).not.toHaveCls(U);expect(T(V,O[1])).not.toHaveCls(U);expect(T(V,O[2])).not.toHaveCls(U)});it("should remove the dirtyCls on reject",function(){S(true);var V=I.first();V.set("field1","foo");V.set("field2","bar");expect(T(V,O[0])).toHaveCls(U);expect(T(V,O[1])).toHaveCls(U);V.set("field3","baz");expect(T(V,O[2])).toHaveCls(U);V.reject();expect(T(V,O[0])).not.toHaveCls(U);expect(T(V,O[1])).not.toHaveCls(U);expect(T(V,O[2])).not.toHaveCls(U)})})})});describe("selection",function(){function S(T){describe(T?"with locking":"without locking",function(){var U;beforeEach(function(){U=new Ext.selection.RowModel();R([{dataIndex:"field1",locked:T},{dataIndex:"field2"}],undefined,{selModel:U})});afterEach(function(){U=null});it("should bind the store to the selection model",function(){expect(U.getStore()).toBe(B.getStore())});it("should add the selectedItemCls when selected",function(){var V;U.select(0);if(T){N=B.normalGrid.getView();V=N.selectedItemCls;expect(B.lockedGrid.getView().getNode(0)).toHaveCls(V);expect(N.getNode(0)).toHaveCls(V)}else{N=B.getView();V=N.selectedItemCls;expect(N.getNode(0)).toHaveCls(V)}});it("should remove the selectedItemCls when deselected",function(){var V;U.select(0);U.deselect(0);if(T){N=B.normalGrid.getView();V=N.selectedItemCls;expect(B.lockedGrid.getView().getNode(0)).not.toHaveCls(V);expect(N.getNode(0)).not.toHaveCls(V)}else{N=B.getView();V=N.selectedItemCls;expect(N.getNode(0)).not.toHaveCls(V)}});it("should retain the selectedItemCls when updating a row",function(){var V;U.select(0);I.first().commit();if(T){N=B.normalGrid.getView();V=N.selectedItemCls;expect(B.lockedGrid.getView().getNode(0)).toHaveCls(V);expect(N.getNode(0)).toHaveCls(V)}else{N=B.getView();V=N.selectedItemCls;expect(N.getNode(0)).toHaveCls(V)}})})}S(false);S(true)});describe("renderers",function(){describe("scope",function(){it("should use the grid as the default scope",function(){var S;R([{dataIndex:"field1",text:"Field1",renderer:function(){S=this}}]);expect(S).toBe(B)});it("should use the passed scope",function(){var T={},S;R([{dataIndex:"field1",text:"Field1",scope:T,renderer:function(){S=this}}]);expect(S).toBe(T)})});describe("params",function(){var S;beforeEach(function(){R([{dataIndex:"field1",renderer:function(){S=Array.prototype.slice.call(arguments,0,arguments.length)}}])});it("should pass the value as the first param",function(){expect(S[0]).toBe(1)});it("should pass a meta object as the second param",function(){expect(Ext.isObject(S[1])).toBe(true)});it("should pass the record as the third param",function(){expect(S[2]).toBe(I.getAt(0))});it("should pass the recordIndex as the fourth param",function(){expect(S[3]).toBe(0)});it("should pass the cellIndex as the fifth param",function(){expect(S[4]).toBe(0)});it("should pass the store as the sixth param",function(){expect(S[5]).toBe(I)});it("should pass the view as the seventh param",function(){expect(S[6]).toBe(B.getView())})});describe("cellIndex",function(){it("should pass the local index when dealing with locked columns",function(){var S=[],T=function(){S.push(arguments[4])};R([{locked:true,dataIndex:"field1",renderer:T},{locked:true,dataIndex:"field2",renderer:T},{dataIndex:"field3",renderer:T},{dataIndex:"field4",renderer:T}]);expect(S).toEqual([0,1,0,1])});it("should take into account hidden columns when passing cellIdx",function(){var S=[],T=[],U=function(V){S.push(V);T.push(arguments[4])};R([{dataIndex:"field1",renderer:U},{hidden:true,dataIndex:"field2",renderer:U},{dataIndex:"field3",renderer:U},{hidden:true,dataIndex:"field4",renderer:U},{dataIndex:"field5",renderer:U}]);expect(T).toEqual([0,2,4]);expect(S).toEqual([1,3,5])})});it("should accept a string formatter that maps to Ext.util.Format",function(){var T=Ext.util.Format.capitalize,S;Ext.util.Format.capitalize=function(){S=true};R([{dataIndex:"field1",formatter:"capitalize"}]);expect(S).toBe(true);Ext.util.Format.capitalize=T});it("should accept a scoped formatter",function(){var T=0;var S=function(V,U){T=V+U};R([{dataIndex:"field1",formatter:"this.foo(2)"}],undefined,{defaultListenerScope:true,foo:S});expect(T).toBe(3)});it("should treat dynamic renderers as needed to run in all cases",function(){var S=0;var T=Ext.define(null,{extend:"Ext.app.ViewController",doRender:function(){return"x"+ ++S}});R([{dataIndex:"field1"},{renderer:"doRender"}],1,{controller:new T()});var U=I.getAt(0);expect(Q(0,1)).toBe("x1");U.set("field1","foo");expect(Q(0,1)).toBe("x2")})});describe("model operations",function(){describe("destroy",function(){it("should remove the model when destroy is called",function(){R([{dataIndex:"field1"}],[{field1:"foo"},{field1:"bar"},{field1:"baz"}]);I.first().erase();expect(B.getView().getNodes().length).toBe(2)})})});describe("reconfigure",function(){function S(V){function T(Z,a,W,Y,X){W=W||{};if(V){W.renderTo=null}R(Z,a,W,Y,X)}function U(){B.reconfigure.apply(B,arguments);if(V){B.render(Ext.getBody())}}describe(V?"before render":"after render",function(){describe("store only",function(){describe("without locking",function(){function W(X){expect(N.getNodes().length).toBe(X)}describe("with no store",function(){beforeEach(function(){T([{dataIndex:"field1"}],undefined,null,{preventStoreCreate:true});U(M())});it("should render data from the new store",function(){W(1)});it("should react to store",function(){I.add({});W(2)});it("should react to store remove",function(){I.removeAt(0);W(0)});it("should react to store update",function(){I.getAt(0).set("field1","Foo");expect(Q(0,0)).toBe("Foo")});it("should react to store load",function(){I.loadData([{},{},{},{},{},{}]);W(6)});it("should bind to the selection model",function(){expect(B.getView().getSelectionModel().getStore()).toBe(I)})});describe("with an existing store",function(){var X;beforeEach(function(){T([{dataIndex:"field1"}],20);X=I;U(M())});afterEach(function(){X=Ext.destroy(X)});it("should render data from the new store",function(){W(1)});it("should react to store",function(){I.add({});W(2)});it("should react to store remove",function(){I.removeAt(0);W(0)});it("should react to store update",function(){I.getAt(0).set("field1","Foo");expect(Q(0,0)).toBe("Foo")});it("should react to store load",function(){I.loadData([{},{},{},{},{},{}]);W(6)});it("should bind the new store to the loadMask",function(){expect(B.getView().loadMask.store).toBe(I)});it("should bind to the selection model",function(){expect(B.getView().getSelectionModel().getStore()).toBe(I)});it("should not react to the old store",function(){X.add([{},{},{},{},{},{}]);W(1);X.removeAt(0);W(1);X.getAt(0).set("field1","Foo");expect(Q(0,0)).toBe("1");X.loadData([{},{},{},{},{},{},{},{},{}]);W(1)})})});describe("with locking",function(){function W(X){expect(B.lockedGrid.getView().getNodes().length).toBe(X);expect(B.normalGrid.getView().getNodes().length).toBe(X)}describe("with no store",function(){beforeEach(function(){T([{locked:true,dataIndex:"field1"},{dataIndex:"field2"}],undefined,null,{preventStoreCreate:true});U(M())});it("should render data from the new store",function(){W(1)});it("should react to store",function(){I.add({});W(2)});it("should react to store remove",function(){I.removeAt(0);W(0)});it("should react to store update",function(){I.getAt(0).set("field1","Foo");expect(Q(0,0)).toBe("Foo")});it("should react to store load",function(){I.loadData([{},{},{},{},{},{}]);W(6)});it("should bind to the selection model",function(){expect(B.getView().getSelectionModel().getStore()).toBe(I)})});describe("with an existing store",function(){var X;beforeEach(function(){T([{locked:true,dataIndex:"field1"},{dataIndex:"field2"}],20);X=I;U(M())});afterEach(function(){X=Ext.destroy(X)});it("should render data from the new store",function(){W(1)});it("should react to store",function(){I.add({});W(2)});it("should react to store remove",function(){I.removeAt(0);W(0)});it("should react to store update",function(){I.getAt(0).set("field1","Foo");expect(Q(0,0)).toBe("Foo")});it("should react to store load",function(){I.loadData([{},{},{},{},{},{}]);W(6)});it("should bind the new store to the loadMask",function(){expect(B.getView().loadMask.store).toBe(I)});it("should bind to the selection model",function(){expect(B.getView().getSelectionModel().getStore()).toBe(I)});it("should not react to the old store",function(){X.add([{},{},{},{},{},{}]);W(1);X.removeAt(0);W(1);X.getAt(0).set("field1","Foo");expect(Q(0,0)).toBe("1");X.loadData([{},{},{},{},{},{},{},{},{}]);W(1)})})})});describe("columns only",function(){var W;afterEach(function(){W=null});describe("without locking",function(){describe("with no columns",function(){beforeEach(function(){T(null,undefined,null,{preventColumnCreate:true});W=O;U(null,[{dataIndex:"field2"},{dataIndex:"field7"}]);O=B.getVisibleColumnManager().getColumns()});it("should add the new columns and render the contents",function(){expect(O.length).toBe(2);expect(Q(0,0)).toBe("2");expect(Q(0,1)).toBe("7")})});describe("with existing columns",function(){beforeEach(function(){T([{dataIndex:"field1"}]);W=O;U(null,[{dataIndex:"field2"},{dataIndex:"field7"}]);O=B.getVisibleColumnManager().getColumns()});it("should add the new columns and render the contents",function(){expect(O.length).toBe(2);expect(Q(0,0)).toBe("2");expect(Q(0,1)).toBe("7")});it("should destroy old columns",function(){expect(W[0].destroyed).toBe(true)})});it("should only refresh after the columns have been rendered",function(){var Z=jasmine.createSpy(),a,Y,X;T();X=B.getView();Y=X.refreshCounter||0;X.on("refresh",function(){a=Z.callCount});U(null,[{dataIndex:"field2",listeners:{afterrender:Z}},{dataIndex:"field7",listeners:{afterrender:Z}}]);expect(a).toBe(2);expect(X.refreshCounter).toBe(Y+1)})});describe("with locking",function(){describe("with no columns",function(){beforeEach(function(){T(null,undefined,{enableLocking:true},{preventColumnCreate:true});W=O;U(null,[{locked:true,dataIndex:"field2"},{dataIndex:"field7"}]);O=B.getVisibleColumnManager().getColumns()});it("should add the new columns and render the contents",function(){expect(O.length).toBe(2);expect(Q(0,0)).toBe("2");expect(Q(0,1)).toBe("7")});it("should process locked/unlocked columns",function(){expect(B.lockedGrid.getVisibleColumnManager().getColumns().length).toBe(1);expect(B.normalGrid.getVisibleColumnManager().getColumns().length).toBe(1)})});describe("with existing columns",function(){beforeEach(function(){T([{locked:true,dataIndex:"field1"},{dataIndex:"field3"}]);W=O;U(null,[{locked:true,dataIndex:"field2"},{dataIndex:"field7"}]);O=B.getVisibleColumnManager().getColumns()});it("should add the new columns and render the contents",function(){expect(O.length).toBe(2);expect(Q(0,0)).toBe("2");expect(Q(0,1)).toBe("7")});it("should process locked/unlocked columns",function(){expect(B.lockedGrid.getVisibleColumnManager().getColumns().length).toBe(1);expect(B.normalGrid.getVisibleColumnManager().getColumns().length).toBe(1)});it("should destroy old columns",function(){expect(W[0].destroyed).toBe(true);expect(W[1].destroyed).toBe(true)})});it("should only refresh after the columns have been rendered",function(){var Z=jasmine.createSpy(),a,Y,X;T([{locked:true,dataIndex:"field1"},{dataIndex:"field3"}]);X=B.lockedGrid.getView();Y=X.refreshCounter||0;X.on("refresh",function(){a=Z.callCount});U(null,[{locked:true,dataIndex:"field2",listeners:{afterrender:Z}},{dataIndex:"field7",listeners:{afterrender:Z}}]);expect(a).toBe(2);expect(X.refreshCounter).toBe(Y+1)})})});describe("store & columns",function(){var X,W;afterEach(function(){Ext.destroy(W);W=X=null});describe("without locking",function(){function Y(Z){expect(N.getNodes().length).toBe(Z)}describe("with no store and no columns",function(){beforeEach(function(){T(null,undefined,null,{preventStoreCreate:true,preventColumnCreate:true});X=O;W=I;U(M(),[{dataIndex:"field2"},{dataIndex:"field7"}]);O=B.getVisibleColumnManager().getColumns()});it("should render data from the new store",function(){Y(1)});it("should react to store",function(){I.add({});Y(2)});it("should react to store remove",function(){I.removeAt(0);Y(0)});it("should react to store update",function(){I.getAt(0).set("field2","Foo");expect(Q(0,0)).toBe("Foo")});it("should react to store load",function(){I.loadData([{},{},{},{},{},{}]);Y(6)});it("should bind to the selection model",function(){expect(B.getView().getSelectionModel().getStore()).toBe(I)});it("should add the new columns and render the contents",function(){expect(O.length).toBe(2);expect(Q(0,0)).toBe("2");expect(Q(0,1)).toBe("7")})});describe("with an existing store and no columns",function(){beforeEach(function(){T(null,undefined,null,{preventColumnCreate:true});X=O;W=I;U(M(),[{dataIndex:"field2"},{dataIndex:"field7"}]);O=B.getVisibleColumnManager().getColumns()});it("should render data from the new store",function(){Y(1)});it("should react to store",function(){I.add({});Y(2)});it("should react to store remove",function(){I.removeAt(0);Y(0)});it("should react to store update",function(){I.getAt(0).set("field2","Foo");expect(Q(0,0)).toBe("Foo")});it("should react to store load",function(){I.loadData([{},{},{},{},{},{}]);Y(6)});it("should bind to the selection model",function(){expect(B.getView().getSelectionModel().getStore()).toBe(I)});it("should not react to the old store",function(){W.add([{},{},{},{},{},{}]);Y(1);W.removeAt(0);Y(1);W.getAt(0).set("field1","Foo");expect(Q(0,0)).toBe("2");W.loadData([{},{},{},{},{},{},{},{},{}]);Y(1)});it("should add the new columns and render the contents",function(){expect(O.length).toBe(2);expect(Q(0,0)).toBe("2");expect(Q(0,1)).toBe("7")})});describe("with no store and existing columns",function(){beforeEach(function(){T([{dataIndex:"field1"}],undefined,null,{preventStoreCreate:true});X=O;W=I;U(M(),[{dataIndex:"field2"},{dataIndex:"field7"}]);O=B.getVisibleColumnManager().getColumns()});it("should render data from the new store",function(){Y(1)});it("should react to store",function(){I.add({});Y(2)});it("should react to store remove",function(){I.removeAt(0);Y(0)});it("should react to store update",function(){I.getAt(0).set("field2","Foo");expect(Q(0,0)).toBe("Foo")});it("should react to store load",function(){I.loadData([{},{},{},{},{},{}]);Y(6)});it("should bind to the selection model",function(){expect(B.getView().getSelectionModel().getStore()).toBe(I)});it("should add the new columns and render the contents",function(){expect(O.length).toBe(2);expect(Q(0,0)).toBe("2");expect(Q(0,1)).toBe("7")});it("should destroy old columns",function(){expect(X[0].destroyed).toBe(true)})});describe("with an existing store and existing columns",function(){beforeEach(function(){T([{dataIndex:"field1"}]);X=O;W=I;U(M(),[{dataIndex:"field2"},{dataIndex:"field7"}]);O=B.getVisibleColumnManager().getColumns()});it("should render data from the new store",function(){Y(1)});it("should react to store",function(){I.add({});Y(2)});it("should react to store remove",function(){I.removeAt(0);Y(0)});it("should react to store update",function(){I.getAt(0).set("field2","Foo");expect(Q(0,0)).toBe("Foo")});it("should react to store load",function(){I.loadData([{},{},{},{},{},{}]);Y(6)});it("should bind to the selection model",function(){expect(B.getView().getSelectionModel().getStore()).toBe(I)});it("should not react to the old store",function(){W.add([{},{},{},{},{},{}]);Y(1);W.removeAt(0);Y(1);W.getAt(0).set("field1","Foo");expect(Q(0,0)).toBe("2");W.loadData([{},{},{},{},{},{},{},{},{}]);Y(1)});it("should add the new columns and render the contents",function(){expect(O.length).toBe(2);expect(Q(0,0)).toBe("2");expect(Q(0,1)).toBe("7")});it("should destroy old columns",function(){expect(X[0].destroyed).toBe(true)})});it("should only refresh after the columns have been rendered",function(){var b=jasmine.createSpy(),c,a,Z;T();W=I;Z=B.getView();a=Z.refreshCounter||0;Z.on("refresh",function(){c=b.callCount});U(I,[{dataIndex:"field2",listeners:{afterrender:b}},{dataIndex:"field7",listeners:{afterrender:b}}]);expect(c).toBe(2);expect(Z.refreshCounter).toBe(a+1)})});describe("with locking",function(){function Y(Z){expect(B.lockedGrid.getView().getNodes().length).toBe(Z);expect(B.normalGrid.getView().getNodes().length).toBe(Z)}describe("with no store and no columns",function(){beforeEach(function(){T(null,undefined,{enableLocking:true},{preventStoreCreate:true,preventColumnCreate:true});X=O;W=I;U(M(),[{locked:true,dataIndex:"field2"},{dataIndex:"field7"}]);O=B.getVisibleColumnManager().getColumns()});it("should render data from the new store",function(){Y(1)});it("should react to store",function(){I.add({});Y(2)});it("should react to store remove",function(){I.removeAt(0);Y(0)});it("should react to store update",function(){I.getAt(0).set("field2","Foo");expect(Q(0,0)).toBe("Foo")});it("should react to store load",function(){I.loadData([{},{},{},{},{},{}]);Y(6)});it("should bind to the selection model",function(){expect(B.getView().getSelectionModel().getStore()).toBe(I)});it("should add the new columns and render the contents",function(){expect(O.length).toBe(2);expect(Q(0,0)).toBe("2");expect(Q(0,1)).toBe("7")});it("should process locked/unlocked columns",function(){expect(B.lockedGrid.getVisibleColumnManager().getColumns().length).toBe(1);expect(B.normalGrid.getVisibleColumnManager().getColumns().length).toBe(1)})});describe("with an existing store and no columns",function(){beforeEach(function(){T(null,undefined,{enableLocking:true},{preventColumnCreate:true});X=O;W=I;U(M(),[{locked:true,dataIndex:"field2"},{dataIndex:"field7"}]);O=B.getVisibleColumnManager().getColumns()});it("should render data from the new store",function(){Y(1)});it("should react to store",function(){I.add({});Y(2)});it("should react to store remove",function(){I.removeAt(0);Y(0)});it("should react to store update",function(){I.getAt(0).set("field2","Foo");expect(Q(0,0)).toBe("Foo")});it("should react to store load",function(){I.loadData([{},{},{},{},{},{}]);Y(6)});it("should bind to the selection model",function(){expect(B.getView().getSelectionModel().getStore()).toBe(I)});it("should not react to the old store",function(){W.add([{},{},{},{},{},{}]);Y(1);W.removeAt(0);Y(1);W.getAt(0).set("field1","Foo");expect(Q(0,0)).toBe("2");W.loadData([{},{},{},{},{},{},{},{},{}]);Y(1)});it("should add the new columns and render the contents",function(){expect(O.length).toBe(2);expect(Q(0,0)).toBe("2");expect(Q(0,1)).toBe("7")});it("should process locked/unlocked columns",function(){expect(B.lockedGrid.getVisibleColumnManager().getColumns().length).toBe(1);expect(B.normalGrid.getVisibleColumnManager().getColumns().length).toBe(1)})});describe("with no store and existing columns",function(){beforeEach(function(){T([{locked:true,dataIndex:"field1"},{dataIndex:"field3"}],undefined,null,{preventStoreCreate:true});X=O;W=I;U(M(),[{locked:true,dataIndex:"field2"},{dataIndex:"field7"}]);O=B.getVisibleColumnManager().getColumns()});it("should render data from the new store",function(){Y(1)});it("should react to store",function(){I.add({});Y(2)});it("should react to store remove",function(){I.removeAt(0);Y(0)});it("should react to store update",function(){I.getAt(0).set("field2","Foo");expect(Q(0,0)).toBe("Foo")});it("should react to store load",function(){I.loadData([{},{},{},{},{},{}]);Y(6)});it("should bind to the selection model",function(){expect(B.getView().getSelectionModel().getStore()).toBe(I)});it("should add the new columns and render the contents",function(){expect(O.length).toBe(2);expect(Q(0,0)).toBe("2");expect(Q(0,1)).toBe("7")});it("should process locked/unlocked columns",function(){expect(B.lockedGrid.getVisibleColumnManager().getColumns().length).toBe(1);expect(B.normalGrid.getVisibleColumnManager().getColumns().length).toBe(1)});it("should destroy old columns",function(){expect(X[0].destroyed).toBe(true);expect(X[1].destroyed).toBe(true)})});describe("with an existing store and existing columns",function(){beforeEach(function(){T([{locked:true,dataIndex:"field1"},{dataIndex:"field3"}]);X=O;W=I;U(M(),[{locked:true,dataIndex:"field2"},{dataIndex:"field7"}]);O=B.getVisibleColumnManager().getColumns()});it("should render data from the new store",function(){Y(1)});it("should react to store",function(){I.add({});Y(2)});it("should react to store remove",function(){I.removeAt(0);Y(0)});it("should react to store update",function(){I.getAt(0).set("field2","Foo");expect(Q(0,0)).toBe("Foo")});it("should react to store load",function(){I.loadData([{},{},{},{},{},{}]);Y(6)});it("should bind to the selection model",function(){expect(B.getView().getSelectionModel().getStore()).toBe(I)});it("should not react to the old store",function(){W.add([{},{},{},{},{},{}]);Y(1);W.removeAt(0);Y(1);W.getAt(0).set("field1","Foo");expect(Q(0,0)).toBe("2");W.loadData([{},{},{},{},{},{},{},{},{}]);Y(1)});it("should add the new columns and render the contents",function(){expect(O.length).toBe(2);expect(Q(0,0)).toBe("2");expect(Q(0,1)).toBe("7")});it("should process locked/unlocked columns",function(){expect(B.lockedGrid.getVisibleColumnManager().getColumns().length).toBe(1);expect(B.normalGrid.getVisibleColumnManager().getColumns().length).toBe(1)});it("should destroy old columns",function(){expect(X[0].destroyed).toBe(true);expect(X[1].destroyed).toBe(true)})});it("should only refresh after the columns have been rendered",function(){var b=jasmine.createSpy(),c,a,Z;T([{locked:true,dataIndex:"field1"},{dataIndex:"field3"}]);W=I;Z=B.lockedGrid.getView();a=Z.refreshCounter||0;Z.on("refresh",function(){c=b.callCount});U(M(),[{locked:true,dataIndex:"field2",listeners:{afterrender:b}},{dataIndex:"field7",listeners:{afterrender:b}}]);expect(c).toBe(2);expect(Z.refreshCounter).toBe(a+1)})})})})}S(false);S(true);it("should only refresh the view once",function(){var T=0;R([{dataIndex:"field1"}]);B.getView().on("refresh",function(){++T});B.reconfigure(null,[{dataIndex:"field2"},{dataIndex:"field3"},{dataIndex:"field4"},{dataIndex:"field5"},{dataIndex:"field6"},{dataIndex:"field7"}]);expect(T).toBe(1)})});if(L){describe("buffered row rendering",function(){var S,V,Y,U,W,X,T;beforeEach(function(){var a,Z,b;U=[];for(a=0;a<100;a++){b={};for(Z=1;Z<11;Z++){b["field"+Z]="r"+a+",f"+Z}U.push(b)}R(null,U,{width:1000,height:500,border:false,trailingBufferZone:Ext.grid.plugin.BufferedRenderer.prototype.trailingBufferZone,leadingBufferZone:Ext.grid.plugin.BufferedRenderer.prototype.leadingBufferZone});S=B.getView();V=S.all;Y=S.bufferedRenderer;B.setHeight(Y.rowHeight*15+B.headerCt.getHeight());X=Y.viewSize});it("should handle removing range above the rendered view",function(){var Z;T=Y.rowHeight;expect(V.getCount()).toBe(X);expect(S.el.dom.scrollHeight).toBeWithin(1,T*I.getCount());Y.scrollTo(64);W=S.getScrollY();Z=V.startIndex;I.removeAt(0,10);expect(V.startIndex).toBe(Z-10);expect(S.el.dom.scrollHeight).toBe(T*I.getCount());expect(S.getScrollY()).toBeLessThan(W);expect(V.getCount()).toBe(X);expect(J(S.body)).toBe(V.startIndex*T-S.body.getBorderWidth("t"))});it("should handle removing range which intersects the top of the rendered view",function(){T=Y.rowHeight;expect(S.el.dom.scrollHeight).toBeWithin(1,T*I.getCount());Y.scrollTo(64);W=S.getScrollY();I.removeAt(V.startIndex-10,20);expect(S.el.dom.scrollHeight).toBeWithin(1,T*I.getCount());expect(S.getScrollY()).toBeLessThan(W);expect(V.getCount()).toBe(X);expect(J(S.body)).toBe(V.startIndex*T-S.body.getBorderWidth("t"))});it("should handle removing range wholly within the rendered view",function(){T=Y.rowHeight;expect(S.el.dom.scrollHeight).toBeWithin(1,T*I.getCount());Y.scrollTo(64);W=S.getScrollY();I.removeAt(52,10);expect(S.el.dom.scrollHeight).toBe(T*I.getCount());expect(S.getScrollY()).toBe(W);expect(V.getCount()).toBe(X);expect(J(S.body)).toBe(V.startIndex*T-S.body.getBorderWidth("t"))});it("should handle removing range which intersects the bottom of the rendered view",function(){T=Y.rowHeight;expect(S.el.dom.scrollHeight).toBeWithin(1,T*I.getCount());Y.scrollTo(64);W=S.getScrollY();I.removeAt(V.endIndex-10,20);expect(S.el.dom.scrollHeight).toBeWithin(1,T*I.getCount());expect(S.getScrollY()).toBe(W);expect(V.getCount()).toBe(X);expect(J(S.body)).toBe(V.startIndex*T-S.body.getBorderWidth("t"))});it("should handle removing range which removes everything from halfway down rendered view",function(){T=Y.rowHeight;expect(S.el.dom.scrollHeight).toBeWithin(1,T*I.getCount());Y.scrollTo(64);W=S.getScrollY();I.removeAt(Math.floor((V.endIndex-V.startIndex)/2),1000);expect(S.el.dom.scrollHeight).toBeWithin(1,T*I.getCount());expect(V.getCount()).toBe(I.getCount());expect(J(S.body)).toBe(0)});it("should handle removing range which removes from top to halfway down rendered view",function(){T=Y.rowHeight;expect(S.el.dom.scrollHeight).toBeWithin(1,T*I.getCount());Y.scrollTo(64);W=S.getScrollY();I.removeAt(0,Math.floor(V.startIndex+X/2));expect(S.el.dom.scrollHeight).toBeWithin(1,T*I.getCount());expect(V.getCount()).toBe(I.getCount());expect(S.getScrollY()).toBe(0);expect(J(S.body)).toBe(0)});it("should handle removing range below the rendered view",function(){T=Y.rowHeight;expect(S.el.dom.scrollHeight).toBeWithin(1,T*I.getCount());Y.scrollTo(64);W=S.getScrollY();I.removeAt(V.endIndex+10,10);expect(S.el.dom.scrollHeight).toBe(T*I.getCount());expect(S.getScrollY()).toBe(W);expect(V.getCount()).toBe(X);expect(J(S.body)).toBe(V.startIndex*T-S.body.getBorderWidth("t"))});it("should handle removing range which encompasses the rendered view and leaves less than view size rows remaining",function(){T=Y.rowHeight;expect(S.el.dom.scrollHeight).toBeWithin(1,T*I.getCount());Y.scrollTo(44);W=S.getScrollY();I.removeAt(5,90);expect(S.el.dom.scrollHeight).toBeWithin(1,S.el.dom.clientHeight);expect(S.getScrollY()).toBe(0);expect(V.getCount()).toBe(10);expect(J(S.body)).toBe(0)});it("should handle removing range which encompasses the rendered view",function(){T=Y.rowHeight;expect(S.el.dom.scrollHeight).toBeWithin(1,T*I.getCount());Y.scrollTo(44);W=S.getScrollY();I.removeAt(V.startIndex-1,X+2);expect(Y.bodyTop+S.body.dom.offsetHeight-1).toBe(T*I.getCount());expect(S.el.dom.scrollTop).toBe(W);expect(V.getCount()).toBeLessThan(X);expect(J(S.body)).toBe(Math.max(V.startIndex*T,0))});it("should handle removing range which leaves less than the viewSize rows in store",function(){T=Y.rowHeight;expect(S.el.dom.scrollHeight).toBeWithin(1,T*I.getCount());Y.scrollTo(34);W=S.getScrollY();I.removeAt(0,I.getCount()-10);expect(S.el.dom.scrollHeight).toBe(S.el.dom.clientHeight);expect(S.getScrollY()).toBe(0);expect(V.getCount()).toBe(10);expect(J(S.body)).toBe(0)});it("Should prepend to the rendered block when inserting at position 0",function(){var Z;W=S.getScrollY();I.insert(0,{field1:"Test"});Z=Ext.getDom(S.getCellByPosition({row:0,column:0}));expect(S.getScrollY()).toBeGreaterThan(W);expect(Ext.String.trim(Z.textContent||Z.innerText)).toBe("Test");expect(J(S.body)).toBe(0)});it("should handle adding range above the rendered view",function(){var Z;T=Y.rowHeight;expect(V.getCount()).toBe(X);expect(S.el.dom.scrollHeight).toBeWithin(1,T*I.getCount());Y.scrollTo(64);W=S.el.dom.scrollTop;Z=V.startIndex;I.insert(0,[{},{},{},{},{},{},{},{},{},{}]);expect(V.startIndex).toBe(Z+10);expect(S.el.dom.scrollHeight).toBe(T*I.getCount());expect(S.el.dom.scrollTop).toBeGreaterThan(W);expect(V.getCount()).toBe(X);expect(J(S.body)).toBe(V.startIndex*T-S.body.getBorderWidth("t"))});it("should render rows when buffered block is less than the view size",function(){var Z=X,a=Z-10;I.removeAt(a,I.getCount()-a);expect(V.getCount()).toBe(a);expect(Y.scrollTop).toBe(0);expect(Y.position).toBe(0);I.add({});expect(V.getCount()).toBe(a+1);expect(Y.scrollTop).toBe(0);expect(Y.position).toBe(0)})});describe("initial correction of viewSize",function(){describe("when rowHeight is smaller than expected and viewSize has to grow",function(){var T,V,S,U=new String();beforeEach(function(){V=[];for(T=0;T<200;T++){V.push({field0:"r"+T+",f0"})}S=[{dataIndex:"field0",text:"Field 0",width:90,renderer:function(){return U}}]});it("should append new rows to the view",function(){R(S,V,{height:900,border:false,renderTo:null,trailingBufferZone:1,leadingBufferZone:1});var W=spyOn(I,"getRange").andCallThrough();B.render(document.body);expect(N.refreshCounter).toBe(1);expect(N.all.getCount()).toBe(N.bufferedRenderer.viewSize);expect(W.callCount).toBe(2);expect(W.calls[0].args).toEqual([0,Ext.grid.plugin.BufferedRenderer.prototype.viewSize-1]);expect(Ext.Array.slice(W.calls[1].args,0,2)).toEqual([Ext.grid.plugin.BufferedRenderer.prototype.viewSize,N.bufferedRenderer.viewSize-1])})});describe("when rowHeight is larger than expected and viewSize has to shrink",function(){var T,U,S;beforeEach(function(){U=[];for(T=0;T<200;T++){U.push({field0:"r"+T+",f0"})}S=[{dataIndex:"field0",text:"Field 0",width:90,renderer:function(){return'<div style="height:30px"></div>'}}]});it("should append new rows to the view",function(){R(S,U,{height:200,border:false,renderTo:null,trailingBufferZone:1,leadingBufferZone:1});var V=spyOn(I,"getRange").andCallThrough(),W=spyOn(N.all,"removeRange").andCallThrough();B.render(document.body);expect(N.refreshCounter).toBe(1);expect(N.all.getCount()).toBe(N.bufferedRenderer.viewSize);expect(V.callCount).toBe(1);expect(V.calls[0].args).toEqual([0,Ext.grid.plugin.BufferedRenderer.prototype.viewSize-1]);expect(Ext.Array.slice(W.calls[0].args,0,2)).toEqual([N.bufferedRenderer.viewSize,Ext.grid.plugin.BufferedRenderer.prototype.viewSize-1])})})})}describe("shrinkwrap height",function(){var T,S;beforeEach(function(){var V,U,W;T=[];for(V=0;V<100;V++){W={};for(U=1;U<11;U++){W["field"+U]="r"+V+",f"+U}T.push(W)}S=[];for(V=1;V<11;V++){S.push({dataIndex:"field"+V,text:"Field "+V,width:90})}S[0].flex=1});it("should allow unconstrained height grids to expand to accommodate content",function(){R(S,T,{height:undefined,border:false});expect(N.getWidth()).toBe(B.getWidth());expect(N.getHeight()).toBe(B.getHeight()-B.body.getBorderWidth("tb")-B.headerCt.getHeight());expect(N.el.dom.clientWidth).toBe(B.getWidth());expect(N.el.dom.clientHeight).toBe(N.getHeight())});it("should reduce height if shrinkwrap height violates height constraint",function(){R(S,T,{maxHeight:100,border:false});expect(N.getWidth()).toBe(B.getWidth());if(Ext.getScrollbarSize().width){expect(N.el.dom.clientWidth).toBeLessThan(B.getWidth())}expect(N.el.dom.clientHeight).toBeLessThan(N.el.dom.scrollHeight)})});describe("locking columns",function(){it("should synchronize horizontal scrollbar presence between locked and normal side.",function(){var S=[],T=function(){S.push(arguments[4])};R([{locked:true,dataIndex:"field1",renderer:T},{locked:true,dataIndex:"field2",renderer:T},{dataIndex:"field3",renderer:T},{dataIndex:"field4",renderer:T}],undefined,{width:600,height:200});expect(B.lockedGrid.getView().getTargetEl().dom.clientHeight).toEqual(B.normalGrid.getView().getTargetEl().dom.clientHeight);expect(B.lockedGrid.getView().getTargetEl().dom.clientHeight).toEqual(B.lockedGrid.getView().getTargetEl().dom.offsetHeight);B.getColumnManager().getColumns()[3].setWidth(500);expect(B.lockedGrid.getView().getTargetEl().dom.clientHeight).toEqual(B.normalGrid.getView().getTargetEl().dom.clientHeight);if(G&&Ext.supports.touchScroll!==2){expect(B.lockedGrid.getView().getTargetEl().dom.clientHeight).toBeLessThan(B.lockedGrid.getView().getTargetEl().dom.offsetHeight);expect(B.normalGrid.getView().getTargetEl().dom.clientHeight).toBeLessThan(B.normalGrid.getView().getTargetEl().dom.offsetHeight)}});it("should unbind locking view from its store",function(){R([{locked:true,dataIndex:"field1"},{locked:true,dataIndex:"field2"},{dataIndex:"field3"},{dataIndex:"field4"}],undefined,{width:600,height:200});expect(I.hasListeners.refresh).toBeDefined();B.destroy();expect(I.hasListeners.refresh).toBeUndefined()});describe("loadMask",function(){function S(){while(Ext.Ajax.mockGetAllRequests().length){Ext.Ajax.mockComplete({status:200,responseText:Ext.encode({success:false})})}}describe("Proxy throws exception during load",function(){beforeEach(function(){MockAjaxManager.addMethods()});afterEach(function(){MockAjaxManager.removeMethods()});it("should hide the load mask if the load fails with an exception",function(){R(null,undefined,{store:{proxy:{type:"ajax",url:"fakeUrl",reader:{type:"json"}}}},{preventStoreCreate:true});B.store.loadPage(1);expect(B.view.loadMask.isVisible()).toBe(true);S();expect(B.view.loadMask.isVisible()).toBe(false)})});it("should raise a load mask by default (no loadMask config specified)",function(){R([{locked:true,dataIndex:"field1"},{locked:true,dataIndex:"field2"},{dataIndex:"field3"},{dataIndex:"field4"}],undefined,{width:600,height:200});expect(B.view.loadMask instanceof Ext.LoadMask).toBe(true)});it("should not raise a load mask when set as false in viewConfig",function(){R([{locked:true,dataIndex:"field1"},{locked:true,dataIndex:"field2"},{dataIndex:"field3"},{dataIndex:"field4"}],undefined,{viewConfig:{loadMask:false}});expect(B.view.loadMask).toBe(false)});it("should raise a load mask when set on the grid",function(){R([{locked:true,dataIndex:"field1"},{locked:true,dataIndex:"field2"},{dataIndex:"field3"},{dataIndex:"field4"}],undefined,{loadMask:true});expect(B.loadMask).toBe(true);expect(B.view.loadMask instanceof Ext.LoadMask).toBe(true)});it("should respect the viewConfig definition as final (loadMask == true)",function(){R([{locked:true,dataIndex:"field1"},{locked:true,dataIndex:"field2"},{dataIndex:"field3"},{dataIndex:"field4"}],undefined,{loadMask:false,viewConfig:{loadMask:true}});expect(B.loadMask).toBe(false);expect(B.view.loadMask instanceof Ext.LoadMask).toBe(true)});it("should respect the viewConfig definition as final (loadMask == false)",function(){R([{locked:true,dataIndex:"field1"},{locked:true,dataIndex:"field2"},{dataIndex:"field3"},{dataIndex:"field4"}],undefined,{loadMask:true,viewConfig:{loadMask:false}});expect(B.loadMask).toBe(true);expect(B.view.loadMask).toBe(false)})});describe("reconfiguring",function(){describe("with CheckboxModel",function(){it("should invalidate the lockedGrid.width so it shrinkwraps",function(){var S;this.addMatchers({toBeAtLeast:function(U){return U<=this.actual}});R(null,undefined,{enableLocking:true,selModel:new Ext.selection.CheckboxModel()});B.reconfigure(I,[{dataIndex:"field1"},{dataIndex:"field2"},{dataIndex:"field3"}]);var T=B.lockedGrid.el.getBorderWidth("lr");expect(B.lockedGrid.width).toBe(Ext.selection.CheckboxModel.prototype.headerWidth+T);S=B.normalGrid.columnManager.getLast();B.lock(S);expect(B.lockedGrid.width).toBe(Ext.selection.CheckboxModel.prototype.headerWidth+S.width+T)})})});describe("variable row height",function(){var S,T,U;it("should match the row heights between locked sides",function(){R([{dataIndex:"name",locked:true,variableRowHeight:true},{dataIndex:"email",width:200},{dataIndex:"phone",width:200}],[{field1:"1<br>"},{field1:"2<br>1"},{field1:"3<br>1"},{field1:"4<br>1"}]);S=B.normalGrid.getView().all;T=B.lockedGrid.getView().all;for(U=S.startIndex;U<=S.endIndex;U++){expect(S.item(U,true).offsetHeight).toEqual(T.item(U,true).offsetHeight)}B.unlock(B.getColumnManager().getHeaderAtIndex(0));if(L){expect(B.normalGrid.view.bufferedRenderer.variableRowHeight).toBe(true);B.normalGrid.getVisibleColumnManager().getColumns()[0].hide();expect(B.normalGrid.view.bufferedRenderer.variableRowHeight).toBe(false)}})})});describe("ensureVisible",function(){var X,S,W,V,U,T;beforeEach(function(){X=false;R(null,500);U=I.getAt(100);T=I.getAt(400)});it("should scroll into view when using record ID",function(){B.ensureVisible("rec400",{callback:function(a,Z,Y){X=a;S=Z;W=Y;V=this},select:true});waitsFor(function(){return X});runs(function(){expect(V).toBe(B);expect(S).toBe(T);expect(W).toBe(N.getNode(T));expect(B.getSelectionModel().getSelection()[0]).toBe(T);expect(Ext.fly(W).getBox().bottom).toBeLessThanOrEqual(N.getBox().bottom);B.ensureVisible("rec100",{callback:function(a,Z,Y){X=a;S=Z;W=Y;V=this}});waitsFor(function(){return X});runs(function(){expect(V).toBe(B);expect(S).toBe(U);expect(W).toBe(N.getNode(U));expect(Ext.fly(W).getBox().top).toBeGreaterThanOrEqual(N.getBox().top)})})});it("should scroll into view when using record",function(){var Y={};B.ensureVisible(T,{callback:function(b,a,Z){X=b;S=a;W=Z;V=this},scope:Y});waitsFor(function(){return X});runs(function(){expect(V).toBe(Y);expect(S).toBe(T);expect(W).toBe(N.getNode(T));expect(Ext.fly(W).getBox().bottom).toBeLessThanOrEqual(N.getBox().bottom);B.ensureVisible(U,{callback:function(b,a,Z){X=b;S=a;W=Z;V=this},scope:Y});waitsFor(function(){return X});runs(function(){expect(V).toBe(Y);expect(S).toBe(U);expect(W).toBe(N.getNode(U));expect(Ext.fly(N.getNode(U)).getBox().top).toBeGreaterThanOrEqual(N.getBox().top)})})});it("should scroll into view when using record index",function(){B.ensureVisible(400,{callback:function(a,Z,Y){X=a;S=Z;W=Y}});waitsFor(function(){return X});runs(function(){expect(S).toBe(T);expect(W).toBe(N.getNode(T));expect(Ext.fly(W).getBox().bottom).toBeLessThanOrEqual(N.getBox().bottom);B.ensureVisible(100,{callback:function(a,Z,Y){X=a;S=Z;W=Y;V=this}});waitsFor(function(){return X});runs(function(){expect(S).toBe(U);expect(W).toBe(N.getNode(U));expect(Ext.fly(W).getBox().top).toBeGreaterThanOrEqual(N.getBox().top)})})})});describe("scrollbars",function(){function S(T){describe(T?"with locking":"without locking",function(){var h,e,f,X,V,U,d,c,W;beforeEach(function(){c=false;e=Ext.grid.ColumnLayout.prototype.scrollbarWidth;Ext.grid.ColumnLayout.prototype.scrollbarWidth=F?20:0;if(!f){U=0;Z([{dataIndex:"field1",width:100}],10);var j=(T?B.normalGrid:B).getView(),i=j.getHeight(),k=Ext.fly(j.getNode(0));f=k.getHeight();if(Ext.isIE8){f-=k.getBorderWidth("b")}X=Math.floor(i/f);i-=Ext.getScrollbarSize().width;W=Math.floor(i/f);V=X+100;if(T){U=parseInt(B.lockedGrid.getEl().getStyle("border-right-width"),10)}B.destroy();I.destroy();h=d=null}});afterEach(function(){Ext.grid.ColumnLayout.prototype.scrollbarWidth=e;h=d=null;c=false});function Z(j,l,i){var k=100;if(Ext.isNumber(l)){l=a(l)}Ext.Array.forEach(j,function(n,m){if(!n.dataIndex){n.dataIndex="field"+(m+1)}});if(T){j.unshift({width:k,dataIndex:"field10",locked:true,variableRowHeight:c});i=i||{};i.width=1000+U+k}R(j,l,i);h=T?B.normalGrid:B;d=h.getColumnManager().getColumns()}function b(j,i){var k=h.getView().getEl().dom;if(j!==undefined){if(j){if(Ext.isMac){expect(k.scrollHeight).toBeGreaterThanOrEqual(k.clientHeight)}else{expect(k.scrollHeight).toBeGreaterThan(k.clientHeight)}}else{expect(k.scrollHeight).toBeLessThanOrEqual(k.clientHeight)}}if(i!==undefined){if(i){if(Ext.isMac){expect(k.scrollWidth).toBeGreaterThanOrEqual(k.clientWidth)}else{expect(k.scrollWidth).toBeGreaterThan(k.clientWidth)}}else{expect(k.scrollWidth).toBeLessThanOrEqual(k.clientWidth)}}}function Y(n,m){m=m||h.getVisibleColumnManager();var l=m.getColumns(),j=l.length,k;for(k=0;k<j;++k){expect(l[k].getWidth()).toBe(n[k])}}function a(l){var k=[],j;for(j=1;j<=l;++j){k.push({field1:j+".1",field2:j+".2",field3:j+".3",field4:j+".4",field5:j+".5",field6:j+".6",field7:j+".7",field8:j+".8",field9:j+".9",field10:j+".10"})}return k}function g(i){return'<div style="height:'+(f*i)+'px;">x</div>'}describe("basic initial rendering functionality",function(){describe("fixed width columns",function(){it("should not show scrollbars if neither dimensions overflows",function(){Z([{width:100},{width:300}],1);b(false,false);Y([100,300])});it("should show a vertical scrollbar if y overflows",function(){Z([{width:100},{width:300}],V);b(true,false);Y([100,300])});it("should show a horizontal scrollbar if x overflows",function(){Z([{width:600},{width:600}],1);b(false,true);Y([600,600])});it("should show both scrollbars if x & y overflow",function(){Z([{width:600},{width:600}],V);b(true,true);Y([600,600])});A("should show a vertical scrollbar if triggered by a horizontal scrollbar",function(){Z([{width:600},{width:600}],X);b(true,true);Y([600,600])});A("should show a horizontal scrollbar if triggered by a vertical scrollbar",function(){Z([{width:499},{width:499}],V);b(true,true);Y([499,499])})});describe("flexed columns",function(){it("should not show scrollbars if neither dimension overflows",function(){Z([{flex:1},{flex:1}],1);b(false,false);Y([500,500])});it("should not show scrollbars if neither dimension overflows with hideHeaders: true and border: true",function(){Z([{flex:1},{flex:1}],1,{hideHeaders:true,border:true});b(false,false);Y([499,499])});it("should show a vertical scrollbar if y overflows",function(){Z([{flex:1},{flex:1}],V);b(true,false);Y(F?[490,490]:[500,500])});it("should show a vertical scrollbar if y overflows with hideHeaders: true and border: true",function(){Z([{flex:1},{flex:1}],V,{hideHeaders:true,border:true});b(true,false);Y(F?[489,489]:[499,499])});describe("min width constraint",function(){it("should show a horizontal scrollbar if x overflows",function(){Z([{flex:1,minWidth:600},{flex:1,minWidth:600}]);b(false,true);Y([600,600])});it("should show both scrollbars if x & y overflow",function(){Z([{flex:1,minWidth:600},{flex:1,minWidth:600}],V);b(true,true);Y([600,600])});A("should show a vertical scrollbar if triggered by a horizontal scrollbar",function(){Z([{flex:1,minWidth:600},{flex:1,minWidth:600}],X);b(true,true);Y([600,600])});A("should show a horizontal scrollbar if triggered by a vertical scrollbar",function(){Z([{flex:1,minWidth:499},{flex:1,minWidth:499}],V);b(true,true);Y([499,499])})})});describe("fixed width + flexed columns",function(){it("should not show scrollbars if neither dimensions overflows",function(){Z([{width:100},{flex:1}],1);b(false,false);Y([100,900])});it("should show a vertical scrollbar if y overflows",function(){Z([{width:100},{flex:1}],V);b(true,false);Y(F?[100,880]:[100,900])});it("should adjust the width of all flex columns if a scrollbar shows",function(){Z([{width:200},{flex:1},{flex:1},{flex:1}],V);b(true,false);Y(F?[200,260,260,260]:[200,267,267,266])})})});describe("resizing the grid",function(){function i(k){B.setHeight(B.getHeight()+k*f)}function j(k){B.setWidth(B.getWidth()+k)}describe("fixed width columns",function(){describe("vertically",function(){it("should not show a vertical scrollbar if resize does not cause overflow",function(){Z([{width:100},{width:300}],1);b(false,false);i(-10);b(false,false)});it("should retain a vertical scrollbar if resize does not cause underflow",function(){Z([{width:100},{width:300}],V);b(true,false);i(-10);b(true,false)});it("should show a vertical scrollbar if y overflows",function(){Z([{width:100},{width:300}],X);b(false,false);i(-10);b(true,false)});it("should not show a vertical scrollbar if y underflows",function(){Z([{width:100},{width:300}],X+5);b(true,false);i(10);b(false,false)});A("should show a horizontal scrollbar if triggered by a vertical scrollbar",function(){Z([{width:495},{width:495}],X);b(false,false);i(-1);b(true,true)});xit("should not show a horizontal scrollbar if triggered by a vertical scrollbar",function(){Z([{width:495},{width:495}],X);i(-1);b(true,true);i(1);b(false,false)})});describe("horizontally",function(){it("should not show a horizontal scrollbar if resize does not cause overflow",function(){Z([{width:100},{width:300}],1);b(false,false);j(200);b(false,false)});it("should retain a horizontal scrollbar if resize does not cause underflow",function(){Z([{width:600},{width:600}],1);b(false,true);j(-100);b(false,true)});it("should show a horizontal scrollbar if x overflows",function(){Z([{width:400},{width:400}],1);b(false,false);j(-400);b(false,true)});it("should not show a horizontal scrollbar if x underflows",function(){Z([{width:600},{width:600}],1);b(false,true);j(400);b(false,false)});A("should show a vertical scrollbar if triggered by a horizontal scrollbar",function(){Z([{width:495},{width:495}],X);b(false,false);j(-50);b(true,true)});A("should not show a vertical scrollbar if triggered by a horizontal scrollbar",function(){Z([{width:505},{width:505}],X,{height:null});B.setHeight(B.getHeight()-5);b(true,true);j(50);N.el.setDisplayed(false);waits(1);runs(function(){N.el.setDisplayed(true);b(false,false)})})})});describe("flexed columns",function(){describe("vertically",function(){it("should not show a vertical scrollbar if resize does not cause overflow",function(){Z([{flex:1},{flex:1}],1);b(false,false);Y([500,500]);i(-10);b(false,false);Y([500,500])});it("should retain a vertical scrollbar if resize does not cause underflow",function(){Z([{flex:1},{flex:1}],V);b(true,false);Y(F?[490,490]:[500,500]);i(-10);b(true,false);Y(F?[490,490]:[500,500])});it("should show a vertical scrollbar if y overflows",function(){Z([{flex:1},{flex:1}],X);b(false,false);Y([500,500]);i(-10);b(true,false);Y(F?[490,490]:[500,500])});it("should not show a vertical scrollbar if y underflows",function(){Z([{flex:1},{flex:1}],X+5);b(true,false);Y(F?[490,490]:[500,500]);i(10);b(false,false);Y([500,500])})})});describe("fixed width + flexed columns",function(){describe("vertically",function(){it("should not show a vertical scrollbar if resize does not cause overflow",function(){Z([{width:300},{flex:1}],1);b(false,false);Y([300,700]);i(-10);b(false,false);Y([300,700])});it("should retain a vertical scrollbar if resize does not cause underflow",function(){Z([{width:300},{flex:1}],V);b(true,false);Y(F?[300,680]:[300,700]);i(-10);b(true,false);Y(F?[300,680]:[300,700])});it("should show a vertical scrollbar if y overflows",function(){Z([{width:300},{flex:1}],X);b(false,false);Y([300,700]);i(-10);b(true,false);Y(F?[300,680]:[300,700])});it("should not show a vertical scrollbar if y underflows",function(){Z([{width:300},{flex:1}],X+5);b(true,false);Y(F?[300,680]:[300,700]);i(10);b(false,false);Y([300,700])})})})});describe("column operations",function(){var i=Ext.grid.plugin.HeaderResizer.prototype.minColWidth;describe("resizing",function(){describe("fixed width columns",function(){it("should show a horizontal scrollbar if resizing causes overflow",function(){Z([{width:100},{width:300}],1);b(false,false);d[0].setWidth(800);b(false,true)});it("should not show a horizontal scrollbar if resizing causes underflow",function(){Z([{width:600},{width:600}],1);b(false,true);d[0].setWidth(300);b(false,false)});it("should show a vertical scrollbar if resizing causes overflow",function(){Z([{width:600},{width:300}],X);b(false,false);d[0].setWidth(800);b(F,true)});it("should not show a vertical scrollbar if resizing causes underflow",function(){Z([{width:600},{width:600}],X);b(F,true);d[0].setWidth(300);b(false,false)})});describe("fixed width + flexed columns",function(){it("should show a horizontal scrollbar if resizing causes overflow",function(){Z([{width:300},{flex:1}],1);b(false,false);Y([300,700]);d[0].setWidth(1200);b(false,true);Y([1200,i])});it("should not show a horizontal scrollbar if resizing causes underflow",function(){Z([{width:600},{width:600},{flex:1}],1);b(false,true);Y([600,600,i]);d[0].setWidth(200);b(false,false);Y([200,600,200])});it("should show a vertical scrollbar if resizing causes overflow",function(){Z([{width:300},{flex:1}],X);b(false,false);Y([300,700]);d[0].setWidth(1200);b(F,true);Y([1200,i])});it("should not show a vertical scrollbar if resizing causes underflow",function(){Z([{width:600},{width:600},{flex:1}],X,{height:null});B.setHeight(B.getHeight()-5);b(true,true);Y([600,600,i]);d[0].setWidth(200);N.el.setDisplayed(false);waits(1);runs(function(){N.el.setDisplayed(true);b(!F,false);Y([200,600,200])})})})});describe("adding",function(){function j(k){h.headerCt.add(k)}describe("fixed width columns",function(){it("should show a horizontal scrollbar if adding causes overflow",function(){Z([{width:100},{width:300}],1);b(false,false);j({width:700});b(false,true)});it("should not show a horizontal scrollbar if adding does not cause overflow",function(){Z([{width:100},{width:300}],1);b(false,false);j({width:300});b(false,false)});it("should show a vertical scrollbar if adding causes overflow",function(){Z([{width:600},{width:300}],X);b(false,false);j({width:200});b(F,true)});describe("with variableRowHeight",function(){A("should show a vertical scrollbar if adding causes overflow",function(){var k=a(X);k[0].field3=g(2);Z([{width:100},{width:300}],k);b(false,false);j({width:200,variableRowHeight:true,dataIndex:"field3"});b(true,false)});A("should show a horizontal scrollbar if adding triggered a vertical scrollbar",function(){var k=a(X);k[0].field3=g(2);Z([{width:330},{width:330}],k);b(false,false);j({width:330,variableRowHeight:true,dataIndex:"field3"});b(true,true)})})});describe("fixed width + flexed columns",function(){it("should show a horizontal scrollbar if adding causes overflow",function(){Z([{width:300},{flex:1}],1);b(false,false);Y([300,700]);j({width:800});b(false,true);Y([300,i,800])});it("should not show a horizontal scrollbar if adding does not cause overflow",function(){Z([{width:300},{flex:1}],1);b(false,false);Y([300,700]);j({width:300});b(false,false);Y([300,400,300])});it("should show a vertical scrollbar if adding causes overflow",function(){Z([{width:300},{flex:1}],X);b(false,false);Y([300,700]);j({width:800});b(F,true);Y([300,i,800])});describe("with variableRowHeight",function(){it("should show a vertical scrollbar if adding causes overflow",function(){var k=a(X);k[0].field3=g(2);Z([{width:300},{flex:1}],k);b(false,false);Y([300,700]);j({width:200,variableRowHeight:true,dataIndex:"field3"});b(true,false);Y([300,F?480:500,200])})})})});describe("showing",function(){describe("fixed width columns",function(){it("should show a horizontal scrollbar if adding causes overflow",function(){Z([{width:100},{width:700,hidden:true},{width:300}],1);b(false,false);d[1].show();b(false,true)});it("should not show a horizontal scrollbar if adding does not cause overflow",function(){Z([{width:100},{width:300,hidden:true},{width:300}],1);b(false,false);d[1].show();b(false,false)});it("should show a vertical scrollbar if adding causes overflow",function(){Z([{width:600},{width:200,hidden:true},{width:300}],X);b(false,false);d[1].show();b(F,true)});describe("with variableRowHeight",function(){A("should show a vertical scrollbar if showing causes overflow",function(){var j=a(X);j[0].field3=g(2);Z([{width:100},{width:300},{width:200,variableRowHeight:true,hidden:true}],j);b(false,false);d[2].show();b(true,false)});A("should show a horizontal scrollbar if showing triggered a vertical scrollbar",function(){var j=a(X);j[0].field3=g(2);Z([{width:330},{width:330},{width:330,variableRowHeight:true,hidden:true}],j);b(false,false);d[2].show();b(true,true)})})});describe("fixed width + flexed columns",function(){it("should show a horizontal scrollbar if adding causes overflow",function(){Z([{width:300},{width:800,hidden:true},{flex:1}],1);b(false,false);Y([300,700]);d[1].show();b(false,true);Y([300,800,i])});it("should not show a horizontal scrollbar if adding does not cause overflow",function(){Z([{width:300},{width:300,hidden:true},{flex:1}],1);b(false,false);Y([300,700]);d[1].show();b(false,false);Y([300,300,400])});it("should show a vertical scrollbar if adding causes overflow",function(){Z([{width:300},{width:800,hidden:true},{flex:1}],X);b(false,false);Y([300,700]);d[1].show();b(F,true);Y([300,800,i])});describe("with variableRowHeight",function(){it("should show a vertical scrollbar if showing causes overflow",function(){var j=a(X);j[0].field3=g(2);Z([{width:300},{flex:1},{width:200,variableRowHeight:true,hidden:true}],j);b(false,false);Y([300,700]);d[2].show();b(true,false);Y([300,F?480:500,200])})})})});describe("removing",function(){describe("fixed width columns",function(){it("should not show a horizontal scrollbar if removing causes underflow",function(){Z([{width:100},{width:300},{width:700}],1);b(false,true);d[2].destroy();b(false,false)});it("should retain a horizontal scrollbar if removing does not cause underflow",function(){Z([{width:600},{width:600},{width:600}],1);b(false,true);d[2].destroy();b(false,true)});it("should not show a vertical scrollbar if removing causes underflow",function(){Z([{width:600},{width:300},{width:200}],X);b(F,true);d[2].destroy();b(false,false)});describe("with variableRowHeight",function(){it("should not show a vertical scrollbar if removing causes underflow",function(){var j=a(X);j[0].field3=g(2);Z([{width:100},{width:300},{width:200,variableRowHeight:true}],j);b(true,false);d[2].destroy();b(false,false)});A("should not show a horizontal scrollbar if removing triggered a vertical scrollbar removal",function(){var j=a(X);j[0].field3=g(2);Z([{width:330},{width:330},{width:330,variableRowHeight:true}],j);b(true,true);d[2].destroy();b(false,false)})})});describe("fixed width + flexed columns",function(){it("should not show a horizontal scrollbar if removing causes underflow",function(){Z([{width:300},{flex:1},{width:800}],1);b(false,true);Y([300,i,800]);d[2].destroy();b(false,false);Y([300,700])});it("should show a horizontal scrollbar if removing does not cause underflow",function(){Z([{width:600},{width:600},{flex:1},{width:600}],1);b(false,true);Y([600,600,i,600]);d[3].destroy();b(false,true);Y([600,600,i])});it("should not show a vertical scrollbar if removing causes underflow",function(){Z([{width:300},{flex:1},{width:800}],X);b(F,true);Y([300,i,800]);d[2].destroy();N.el.setDisplayed(false);waits(1);runs(function(){N.el.setDisplayed(true);b(false,false);Y([300,700])})});describe("with variableRowHeight",function(){it("should not show a vertical scrollbar if removing causes underflow",function(){var j=a(X);j[0].field3=g(2);Z([{width:300},{flex:1},{width:200,variableRowHeight:true}],j);b(true,false);Y([300,F?480:500,200]);d[2].destroy();b(false,false);Y([300,700])})})})});describe("hiding",function(){describe("fixed width columns",function(){it("should not show a horizontal scrollbar if hiding causes underflow",function(){Z([{width:100},{width:300},{width:700}],1);b(false,true);d[2].hide();b(false,false)});it("should retain a horizontal scrollbar if hiding does not cause underflow",function(){Z([{width:600},{width:600},{width:600}],1);b(false,true);d[2].hide();b(false,true)});it("should not show a vertical scrollbar if hiding causes underflow",function(){Z([{width:600},{width:300},{width:200}],X);b(F,true);d[2].hide();N.el.setDisplayed(false);waits(1);runs(function(){N.el.setDisplayed(true);b(false,false)})});describe("with variableRowHeight",function(){it("should not show a vertical scrollbar if hiding causes underflow",function(){var j=a(X);j[0].field3=g(2);Z([{width:100},{width:300},{width:200,variableRowHeight:true}],j);b(true,false);d[2].hide();N.el.setDisplayed(false);waits(1);runs(function(){N.el.setDisplayed(true);b(false,false)})});A("should not show a horizontal scrollbar if hiding triggered a vertical scrollbar removal",function(){var j=a(X);j[0].field3=g(2);Z([{width:330},{width:330},{width:330,variableRowHeight:true}],j);b(true,true);d[2].hide();b(false,false)})})});describe("fixed width + flexed columns",function(){it("should not show a horizontal scrollbar if hiding causes underflow",function(){Z([{width:300},{flex:1},{width:800}],1);b(false,true);Y([300,i,800]);d[2].hide();b(false,false);Y([300,700])});it("should show a horizontal scrollbar if hiding does not cause underflow",function(){Z([{width:600},{width:600},{flex:1},{width:600}],1);b(false,true);Y([600,600,i,600]);d[3].hide();b(false,true);Y([600,600,i])});it("should not show a vertical scrollbar if hiding causes underflow",function(){Z([{width:300},{flex:1},{width:800}],X);b(F,true);Y([300,i,800]);d[2].hide();N.el.setDisplayed(false);waits(1);runs(function(){N.el.setDisplayed(true);b(false,false);Y([300,700])})});describe("with variableRowHeight",function(){it("should not show a vertical scrollbar if hiding causes underflow",function(){var j=a(X);j[0].field3=g(2);Z([{width:300},{flex:1},{width:200,variableRowHeight:true}],j);b(true,false);Y([300,F?480:500,200]);d[2].hide();N.el.setDisplayed(false);waits(1);runs(function(){N.el.setDisplayed(true);b(false,false);Y([300,700])})})})})})});describe("store operations",function(){describe("adding records",function(){describe("fixed width columns",function(){it("should not show a vertical scrollbar if adding does not cause overflow",function(){Z([{width:100},{width:300}],1);b(false,false);I.add({});b(false,false)});it("should retain a vertical scrollbar if overflow exists",function(){Z([{width:100},{width:300}],V);b(true,false);I.add({});b(true,false)});it("should show a vertical scrollbar if adding causes an overflow",function(){Z([{width:100},{width:300}],X);b(false,false);I.add({});b(true,false)});A("should show a vertical scrollbar if triggered by a horizontal scrollbar",function(){Z([{width:600},{width:600}],W,{height:null});B.setHeight(B.getHeight()+5);b(false,true);I.add({});b(true,true)});A("should show a horizontal scrollbar if triggered by a vertical scrollbar",function(){Z([{width:495},{width:495}],X);b(false,false);I.add({});b(true,true)})});describe("flexed columns",function(){it("should not show a vertical scrollbar if adding does not cause overflow",function(){Z([{flex:1},{flex:1}],1);b(false,false);Y([500,500]);I.add({});b(false,false);Y([500,500])});it("should retain a vertical scrollbar if overflow exists",function(){Z([{flex:1},{flex:1}],V);b(true,false);Y(F?[490,490]:[500,500]);I.add({});b(true,false);Y(F?[490,490]:[500,500])});it("should show a vertical scrollbar if adding causes an overflow",function(){Z([{flex:1},{flex:1}],X);b(false,false);Y([500,500]);I.add({});b(true,false);Y(F?[490,490]:[500,500])})});describe("fixed width + flexed columns",function(){it("should not show a vertical scrollbar if adding does not cause overflow",function(){Z([{width:300},{flex:1}],1);b(false,false);Y([300,700]);I.add({});b(false,false);Y([300,700])});it("should retain a vertical scrollbar if overflow exists",function(){Z([{width:300},{flex:1}],V);b(true,false);Y(F?[300,680]:[300,700]);I.add({});b(true,false);Y(F?[300,680]:[300,700])});it("should show a vertical scrollbar if adding causes an overflow",function(){Z([{width:300},{flex:1}],X);b(false,false);Y([300,700]);I.add({});b(true,false);Y(F?[300,680]:[300,700])})})});describe("removing records",function(){describe("fixed width columns",function(){it("should not show a vertical scrollbar if there is no overflow",function(){Z([{width:100},{width:300}],2);b(false,false);I.removeAt(0);b(false,false)});it("should retain a vertical scrollbar if overflow exists",function(){Z([{width:100},{width:300}],V);b(true,false);I.removeAt(0);b(true,false)});it("should not show a vertical scrollbar if removing causes underflow",function(){Z([{width:100},{width:300}],X+1);b(true,false);I.removeAt(0);b(false,false)});A("should not show a vertical scrollbar if triggered by a horizontal scrollbar",function(){Z([{width:600},{width:600}],W+1,{height:null});B.setHeight(B.getHeight()-5);b(true,true);I.removeAt(0);N.el.setDisplayed(false);waits(1);runs(function(){N.el.setDisplayed(true);b(false,true)})});xit("should not show a horizontal scrollbar if triggered by a vertical scrollbar",function(){Z([{width:495},{width:495}],X+1);b(true,true);I.removeAt(0);b(false,false)})});describe("flexed columns",function(){it("should not show a vertical scrollbar if there is no overflow",function(){Z([{flex:1},{flex:1}],2);b(false,false);Y([500,500]);I.removeAt(0);b(false,false);Y([500,500])});it("should retain a vertical scrollbar if overflow exists",function(){Z([{flex:1},{flex:1}],V);b(true,false);Y(F?[490,490]:[500,500]);I.removeAt(0);b(true,false);Y(F?[490,490]:[500,500])});it("should not show a vertical scrollbar if removing causes underflow",function(){Z([{flex:1},{flex:1}],X+1,{height:null});B.setHeight(B.getHeight()-5);b(true,false);Y(F?[490,490]:[500,500]);I.removeAt(0);waits(1);runs(function(){b(false,false);Y([500,500])})})});describe("fixed width + flexed columns",function(){it("should not show a vertical scrollbar if there is no overflow",function(){Z([{width:400},{flex:1}],2);b(false,false);Y([400,600]);I.removeAt(0);b(false,false);Y([400,600])});it("should retain a vertical scrollbar if overflow exists",function(){Z([{width:400},{flex:1}],V);b(true,false);Y(F?[400,580]:[400,600]);I.removeAt(0);b(true,false);Y(F?[400,580]:[400,600])});it("should not show a vertical scrollbar if removing causes underflow",function(){Z([{width:300},{flex:1}],X+1,{height:null});B.setHeight(B.getHeight()-5);b(true,false);Y(F?[300,680]:[300,700]);I.removeAt(0);b(false,false);Y([300,700])})})});describe("updating records with variableRowHeight",function(){describe("fixed width columns",function(){it("should not show a vertical scrollbar if there is no overflow",function(){Z([{width:100,variableRowHeight:true},{width:300}],1);b(false,false);I.first().set("field1",g(2));b(false,false)});it("should retain a vertical scrollbar if overflow exists",function(){Z([{width:100,variableRowHeight:true},{width:300}],V);b(true,false);I.first().set("field1",g(2));b(true,false)});describe("making content larger",function(){it("should show a vertical scrollbar if the update causes an overflow",function(){Z([{width:100,variableRowHeight:true},{width:300}],X);b(false,false);I.first().set("field1",g(2));b(true,false)});A("should show a vertical scrollbar if triggered by a horizontal scrollbar",function(){Z([{width:600,variableRowHeight:true},{width:600}],W,{height:null});B.setHeight(B.getHeight()+5);b(false,true);I.first().set("field1",g(2));b(true,true)});A("should show a horizontal scrollbar if triggered by a vertical scrollbar",function(){Z([{width:495},{width:495}],X);b(false,false);I.first().set("field1",g(2));b(true,true)})});describe("making content smaller",function(){it("should not show a vertical scrollbar if the update causes an underflow",function(){var i=a(X);i[0].field1=g(3);Z([{width:100,variableRowHeight:true},{width:300}],i);b(true,false);I.first().set("field1","1.1");b(false,false)});A("should not show a vertical scrollbar if triggered by a horizontal scrollbar",function(){Z([{width:600,variableRowHeight:true},{width:600}],X,{height:null});B.setHeight(B.getHeight());b(false,true);I.first().set("field1",g(3));b(true,true);I.first().set("field1","1.1");b(false,true)});A("should not show a horizontal scrollbar if triggered by a vertical scrollbar",function(){var i=a(W);i[0].field1=g(3);Z([{width:495},{width:495}],X,{height:null});B.setHeight(B.getHeight()+5);I.first().set("field1",g(3));b(true,true);I.first().set("field1","1.1");N.el.setDisplayed(false);waits(1);runs(function(){N.el.setDisplayed(true);b(false,false)})})})});describe("flexed columns",function(){it("should not show a vertical scrollbar if there is no overflow",function(){Z([{flex:1,variableRowHeight:true},{flex:1}],1);b(false,false);Y([500,500]);I.first().set("field1",g(2));b(false,false)});it("should retain a vertical scrollbar if overflow exists",function(){Z([{flex:1,variableRowHeight:true},{flex:1}],V);b(true,false);Y(F?[490,490]:[500,500]);I.first().set("field1",g(2));b(true,false);Y(F?[490,490]:[500,500])});it("should show a vertical scrollbar if the update causes an overflow",function(){Z([{flex:1,variableRowHeight:true},{flex:1}],X,{height:null});B.setHeight(B.getHeight()+5);b(false,false);Y([500,500]);I.first().set("field1",g(2));b(true,false);Y(F?[490,490]:[500,500])});it("should not show a vertical scrollbar if the update causes an underflow",function(){Z([{flex:1,variableRowHeight:true},{flex:1}],X,{height:null});B.setHeight(B.getHeight()+5);I.first().set("field1",g(2));b(true,false);Y(F?[490,490]:[500,500]);I.first().set("field1","1.1");b(false,false);Y([500,500])})});describe("fixed width + flexed columns",function(){it("should not show a vertical scrollbar if there is no overflow",function(){Z([{width:300,variableRowHeight:true},{flex:1}],1);b(false,false);Y([300,700]);I.first().set("field1",g(2));b(false,false)});it("should retain a vertical scrollbar if overflow exists",function(){Z([{width:300,variableRowHeight:true},{flex:1}],V);b(true,false);Y(F?[300,680]:[300,700]);I.first().set("field1",g(2));b(true,false);Y(F?[300,680]:[300,700])});it("should show a vertical scrollbar if the update causes an overflow",function(){Z([{width:300,variableRowHeight:true},{flex:1}],X,{height:null});B.setHeight(B.getHeight()+5);b(false,false);Y([300,700]);I.first().set("field1",g(2));b(true,false);Y(F?[300,680]:[300,700])});it("should not show a vertical scrollbar if the update causes an underflow",function(){Z([{width:300,variableRowHeight:true},{flex:1}],X,{height:null});B.setHeight(B.getHeight()+5);I.first().set("field1",g(2));b(true,false);Y(F?[300,680]:[300,700]);I.first().set("field1","1.1");b(false,false);Y([300,700])})})});describe("loading new content",function(){describe("fixed width columns",function(){it("should not show a vertical scrollbar if there is no overflow",function(){Z([{width:100},{width:300}],1);b(false,false);I.loadData(a(2));expect(false,false)});it("should retain a vertical scrollbar if overflow exists",function(){Z([{width:100},{width:300}],V);b(true,false);I.loadData(a(V+20));expect(true,false)});it("should not show a vertical scrollbar if the new content does not require it",function(){Z([{width:100},{width:300}],V);b(true,false);I.loadData(a(1));b(false,false)});it("should not show a horizontal and vertical scrollbar if the new content does not require it",function(){Z([{width:495},{width:495}],X-1);b(false,false);I.loadData(a(1));b(false,false)});it("should show a vertical scrollbar if the old content did not require it",function(){Z([{width:100},{width:300}],1);b(false,false);I.loadData(a(V));b(true,false)});it("should show a horizontal and vertical scrollbar if the old content did not require it",function(){Z([{width:495},{width:495}],1);b(false,false);I.loadData(a(V+1));b(true,F)})});describe("flexed columns",function(){it("should not show a vertical scrollbar if there is no overflow",function(){Z([{flex:1},{flex:1}],1);b(false,false);Y([500,500]);I.loadData(a(2));expect(false,false);Y([500,500])});it("should retain a vertical scrollbar if overflow exists",function(){Z([{flex:1},{flex:1}],V);b(true,false);Y(F?[490,490]:[500,500]);I.loadData(a(V+20));expect(true,false);Y(F?[490,490]:[500,500])});it("should not show a vertical scrollbar if the new content does not require it",function(){Z([{flex:1},{flex:1}],V);b(true,false);Y(F?[490,490]:[500,500]);I.loadData(a(1));b(false,false);Y([500,500])});it("should show a vertical scrollbar if the old content did not require it",function(){Z([{flex:1},{flex:1}],1);b(false,false);Y([500,500]);I.loadData(a(V));b(true,false);Y(F?[490,490]:[500,500])})});describe("fixed width + flexed columns",function(){it("should not show a vertical scrollbar if there is no overflow",function(){Z([{width:300},{flex:1}],1);b(false,false);Y([300,700]);I.loadData(a(2));expect(false,false);Y([300,700])});it("should retain a vertical scrollbar if overflow exists",function(){Z([{width:300},{flex:1}],V);b(true,false);Y(F?[300,680]:[300,700]);I.loadData(a(V+20));expect(true,false);Y(F?[300,680]:[300,700])});it("should not show a vertical scrollbar if the new content does not require it",function(){Z([{width:300},{flex:1}],V);b(true,false);Y(F?[300,680]:[300,700]);I.loadData(a(1));b(false,false);Y([300,700])});it("should show a vertical scrollbar if the old content did not require it",function(){Z([{width:300},{flex:1}],1);b(false,false);Y([300,700]);I.loadData(a(V));b(true,false);Y(F?[300,680]:[300,700])})})})});describe("header sizing",function(){function i(j){expect(h.headerCt.getLayout().innerCt.getWidth()).toBe(j)}describe("with no vertical and no horizontal scroll",function(){A("should stretch to the grid size",function(){Z([{width:300}],1);i(1000)})});describe("with no vertical and horizontal scroll",function(){A("it should stretch to the full column size",function(){Z([{width:600},{width:600}],1);i(1200)})});describe("with vertical and no horizontal scroll",function(){A("should stretch to the grid size",function(){Z([{width:300}],100);i(1000)})});describe("with vertical and horizontal scroll",function(){A("should account for the vertical scrollbar",function(){Z([{width:600},{width:600}],100);i(1220)});xdescribe("when the vertical scroll is caused by a horizontal scrollbar",function(){A("should account for the vertical scrollbar",function(){Z([{width:600},{width:600}],X);i(1220)})});describe("when the horizontal scroll is caused by a vertical scrollbar",function(){A("should account for the vertical scrollbar",function(){Z([{width:495},{width:495}],V);i(1010)})})})});if(T){describe("locked side horizontal scroll place holder",function(){function i(j){var k=B.lockedGrid.getView().getScrollable().getX();expect(k).toBe(j?"scroll":true)}it("should show the placeholder when the normal side overflows",function(){Z([{width:600},{width:600}],1);i(F)});it("should not show the placeholder when the normal side does not overflow",function(){Z([{width:100},{width:300}],1);i(false)});it("should show the placeholder when a resize causes an overflow",function(){Z([{width:400},{width:400}],1);i(false);B.setWidth(B.getWidth()-400);i(F)});it("should not show the placeholder when a resize causes an underflow",function(){Z([{width:600},{width:600}],1);i(F);B.setWidth(B.getWidth()+400);i(false)});describe("column operations",function(){it("should show the placeholder when an add causes an overflow",function(){Z([{width:400},{width:400}],1);i(false);B.normalGrid.headerCt.add({width:400,dataIndex:"field3"});i(F)});it("should show the placeholder when a show causes an overflow",function(){Z([{width:400},{width:400},{width:400,hidden:true}],1);i(false);d[2].show();i(F)});it("should not show the placeholder when a remove causes an underflow",function(){Z([{width:400},{width:400},{width:400}],1);i(F);d[2].destroy();i(false)});it("should show the placeholder when a hide causes an underflow",function(){Z([{width:400},{width:400},{width:400}],1);i(F);d[2].hide();i(false)})});describe("store operation",function(){describe("adding",function(){it("should not show the placeholder when the add does not trigger an overflow",function(){Z([{width:495},{width:495}],1);i(false);I.add({});i(false)});it("should retain the placeholder when the add does not trigger an underflow",function(){Z([{width:495},{width:495}],V);i(F);I.add({});i(F)});it("should show the placeholder when an add causes an overflow via a vertical scrollbar",function(){Z([{width:495},{width:495}],X);i(false);I.add({});i(F)})});describe("removing",function(){it("should not show the placeholder when there is no overflow",function(){Z([{width:495},{width:495}],X);i(false);I.removeAt(0);i(false)});it("should retain the placeholder when the remove does not trigger an underflow",function(){Z([{width:495},{width:495}],V);i(F);I.removeAt(0);i(F)});it("should not show the placeholder when a remove causes an underflow via a vertical scrollbar",function(){Z([{width:495},{width:495}],X+1);i(F);I.removeAt(0);i(false)})});describe("update via variableRowHeight",function(){it("should not show the placeholder when there is no overflow",function(){Z([{width:495},{width:495}],1);i(false);I.first().set("field1",g(2));i(false)});it("should retain the placeholder when the update does not cause an overflow",function(){Z([{width:495},{width:495}],X,{height:null,viewConfig:{variableRowHeight:true}});B.setHeight(B.getHeight()+5);I.first().set("field1",g(2));i(F);I.first().set("field1","1.1");i(false)});it("should show the placeholder when an update causes an overflow via a vertical scrollbar",function(){Z([{width:495},{width:495}],X,{height:null,viewConfig:{variableRowHeight:true}});B.setHeight(B.getHeight()+5);i(false);I.first().set("field1",g(2));i(F)});it("should not show the placeholder when an update causes an underflow via a vertical scrollbar",function(){var j=a(X);j[0].field1=g(2);Z([{width:495},{width:495}],X,{height:null,viewConfig:{variableRowHeight:true}});B.setHeight(B.getHeight()+5);I.first().set("field1",g(2));i(F);I.first().set("field1","1.1");i(false)})});describe("loading new content",function(){it("should not show the placeholder if there is no overflow",function(){Z([{width:495},{width:495}],1);i(false);I.loadData(a(2));i(false)});it("should retain the placeholder if there is no underflow",function(){Z([{width:495},{width:495}],V);i(F);I.loadData(a(V+10));i(F)});it("should not show the placeholder when load causes an underflow",function(){Z([{width:495},{width:495}],V);i(F);I.loadData(a(1));i(false)});it("should show the placeholder when load causes an overflow",function(){Z([{width:495},{width:495}],1);i(false);I.loadData(a(V));i(F)})})})});describe("scrollbars caused by height synchronization",function(){beforeEach(function(){c=true});it("should show a vertical scrollbar if the locked content cause overflow",function(){var i=a(X);i[0].field10=g(2);Z([{width:100},{width:300}],i);b(true,false)});it("should show a vertical scrollbar if adding causes overflow",function(){Z([{width:100},{width:300}],X-1);b(false,false);I.add({field10:g(2)});b(true,false)});it("should not show a vertical scrollbar if remving causes underflow",function(){var i=a(X);i[0].field10=g(2);Z([{width:100},{width:300}],i);b(true,false);I.removeAt(0);b(false,false)});it("should show a vertical scrollbar if update causes an overflow",function(){Z([{width:100},{width:300}],X);b(false,false);I.first().set("field10",g(2));b(true,false)});it("should not show a vertical scrollbar if update causes an underflow",function(){var i=a(X);i[0].field10=g(2);Z([{width:100},{width:300}],i);b(true,false);I.first().set("field10","1.1");b(false,false)})})}})}S(false);S(true)});describe("disable/enable grids",function(){it("should disable single grids",function(){R();B.disable();expect(B.isMasked()).toBe(true);expect(B.headerCt.disabled).toBe(true);expect(B.headerCt.isMasked()).toBeFalsy();expect(B.headerCt.el.dom.getAttribute("tabIndex")).toBe("-1");B.enable();expect(B.isMasked()).toBeFalsy();expect(B.headerCt.disabled).toBe(false);expect(B.headerCt.isMasked()).toBeFalsy();expect(B.headerCt.el.dom.getAttribute("tabIndex")).toBe("0")});it("should disable locking grids",function(){R(null,undefined,null,null,true);B.disable();expect(B.isMasked()).toBe(true);expect(B.lockedGrid.isMasked()).toBeFalsy();expect(B.lockedGrid.headerCt.disabled).toBe(true);expect(B.lockedGrid.headerCt.isMasked()).toBeFalsy();expect(B.lockedGrid.headerCt.el.dom.getAttribute("tabIndex")).toBe("-1");expect(B.normalGrid.isMasked()).toBeFalsy();expect(B.normalGrid.headerCt.disabled).toBe(true);expect(B.normalGrid.headerCt.isMasked()).toBeFalsy();expect(B.normalGrid.headerCt.el.dom.getAttribute("tabIndex")).toBe("-1");B.enable();expect(B.isMasked()).toBeFalsy();expect(B.lockedGrid.isMasked()).toBeFalsy();expect(B.lockedGrid.headerCt.disabled).toBe(false);expect(B.lockedGrid.headerCt.isMasked()).toBeFalsy();expect(B.lockedGrid.headerCt.el.dom.getAttribute("tabIndex")).toBe("0");expect(B.normalGrid.isMasked()).toBeFalsy();expect(B.normalGrid.headerCt.disabled).toBe(false);expect(B.normalGrid.headerCt.isMasked()).toBeFalsy();expect(B.normalGrid.headerCt.el.dom.getAttribute("tabIndex")).toBe("0")})});describe("disable/enable grid views",function(){it("should only disable the view when view.disable is called",function(){R();B.view.disable();expect(B.disabled).toBe(false);expect(B.isMasked()).toBeFalsy();expect(B.view.disabled).toBe(true);expect(B.view.isMasked()).toBe(true);B.view.enable();expect(B.disabled).toBe(false);expect(B.isMasked()).toBeFalsy();expect(B.view.disabled).toBe(false);expect(B.view.isMasked()).toBeFalsy()});it("should disable both views in a locking grid when view.disable is alled on a locking grid",function(){R(null,undefined,null,null,true);B.view.disable();expect(B.disabled).toBe(false);expect(B.isMasked()).toBeFalsy();expect(B.normalGrid.disabled).toBe(false);expect(B.normalGrid.isMasked()).toBeFalsy();expect(B.normalGrid.headerCt.disabled).toBe(false);expect(B.normalGrid.headerCt.isMasked()).toBeFalsy();expect(B.lockedGrid.disabled).toBe(false);expect(B.lockedGrid.isMasked()).toBeFalsy();expect(B.lockedGrid.headerCt.disabled).toBe(false);expect(B.lockedGrid.headerCt.isMasked()).toBeFalsy();expect(B.normalGrid.view.disabled).toBe(true);expect(B.normalGrid.view.isMasked()).toBeTruthy();expect(B.lockedGrid.view.disabled).toBe(true);expect(B.lockedGrid.view.isMasked()).toBeTruthy();B.view.enable();expect(B.disabled).toBe(false);expect(B.isMasked()).toBeFalsy();expect(B.normalGrid.disabled).toBe(false);expect(B.normalGrid.isMasked()).toBeFalsy();expect(B.normalGrid.headerCt.disabled).toBe(false);expect(B.normalGrid.headerCt.isMasked()).toBeFalsy();expect(B.lockedGrid.disabled).toBe(false);expect(B.lockedGrid.isMasked()).toBeFalsy();expect(B.lockedGrid.headerCt.disabled).toBe(false);expect(B.lockedGrid.headerCt.isMasked()).toBeFalsy();expect(B.normalGrid.view.disabled).toBe(false);expect(B.normalGrid.view.isMasked()).toBeFalsy();expect(B.lockedGrid.view.disabled).toBe(false);expect(B.lockedGrid.view.isMasked()).toBeFalsy()})})});if(L){describe("cellWrap: true column width changing halfway down buffer rendered large dataset",function(){var R,Q=[],S="Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.",P=S.length,O=P-100,U,M,T,V,N;for(R=0;R<500;R++){Q.push(["Row "+(R+1),S.substr(0,Ext.Number.randomInt(O,P))])}afterEach(function(){Ext.destroy(U,M)});it("should adjust view body position if column width change causes body to move out of view",function(){U=new Ext.data.ArrayStore({data:Q,fields:["row","lorem"]});M=new Ext.grid.Panel({height:300,width:400,title:"Test",store:U,buffered:true,columns:[{text:"Row",dataIndex:"row",width:50},{text:"Lorem",dataIndex:"lorem",flex:1,cellWrap:true}],renderTo:document.body});T=M.view;V=T.bufferedRenderer;V.scrollTo(100);N=spyOn(V,"renderRange").andCallThrough();M.getVisibleColumnManager().getColumns()[0].setWidth(150);M.getVisibleColumnManager().getColumns()[0].setWidth(50);expect(N.callCount).toBe(0);expect(V.bodyTop).toBeLessThan(V.scrollTop);expect(V.bodyTop+T.body.dom.offsetHeight).toBeGreaterThan(V.scrollTop+T.el.dom.clientHeight);U.removeAt(0,498);expect(N.callCount).toBe(0);expect(V.bodyTop).toBe(0)});it("should not refresh if the rendered view is positioned at the start",function(){U=new Ext.data.ArrayStore({data:Q,fields:["row","lorem"]});M=new Ext.grid.Panel({height:300,width:400,title:"Test",store:U,buffered:true,columns:[{text:"Row",dataIndex:"row",width:50},{text:"Lorem",dataIndex:"lorem",flex:1,cellWrap:true}],renderTo:document.body});T=M.view;V=T.bufferedRenderer;N=spyOn(V,"renderRange").andCallThrough();M.getVisibleColumnManager().getColumns()[0].setWidth(150);M.getVisibleColumnManager().getColumns()[0].setWidth(50);expect(V.bodyTop).toBe(0);expect(N.callCount).toBe(0)})})}}C(false);C(true);describe("Locking configuration",function(){var L;function M(N){B=new Ext.grid.Panel(Ext.apply({title:"Test",height:300,width:400,renderTo:document.body,store:L,columns:[{text:"Row",dataIndex:"row",locked:true,width:50},{text:"Lorem",dataIndex:"lorem"}]},N))}beforeEach(function(){L=new Ext.data.ArrayStore({data:[[1,"Lorem"],[2,"Ipsum"],[3,"Dolor"]],fields:["row","lorem"]})});describe("on init",function(){beforeEach(function(){M({enableColumnHide:true,rowLines:true,enableColumnMove:false,normalGridConfig:{enableColumnHide:false},lockedGridConfig:{rowLines:false}})});it("should pass down configs to normalGrid",function(){expect(B.enableColumnMove).toBe(false);expect(B.normalGrid.enableColumnMove).toBe(false)});it("should pass down configs to lockedGrid",function(){expect(B.enableColumnMove).toBe(false);expect(B.lockedGrid.enableColumnMove).toBe(false)});it("should not pass down configs specified in normalGridConfig",function(){expect(B.enableColumnHide).toBe(true);expect(B.normalGrid.enableColumnHide).toBe(false)});it("should not pass down configs specified in lockedGridConfig",function(){expect(B.rowLines).toBe(true);expect(B.lockedGrid.rowLines).toBe(false)})});describe("when stateful",function(){afterEach(function(){Ext.state.Manager.set(B.getStateId(),null)});describe("retaining state across page loads",function(){function P(Q){M({columns:[{text:"Row",dataIndex:"row",locked:true,width:50},{text:"Lorem",stateId:Q||null,dataIndex:"lorem"}],stateful:true,stateId:"foo"})}function O(Q){B.saveState();Ext.destroy(B);P(Q)}function N(R){var Q=!!R?"":"not";describe("when columns are "+Q+" configured with a stateId",function(){function S(T){describe(T+" locking partner",function(){var U=T+"Grid";beforeEach(function(){P(R)});it("should retain column width",function(){B[U].columnManager.getColumns()[0].setWidth(250);O(R);expect(B[U].columnManager.getColumns()[0].getWidth()).toBe(250)});it("should retain column visibility",function(){B[U].columnManager.getColumns()[0].hide();O(R);expect(B[U].columnManager.getColumns()[0].hidden).toBe(true)});it("should retain the column sort",function(){var V=B[U].columnManager.getColumns()[0];V.sort();expect(V.sortState).toBe("ASC");V.sort();O(R);expect(B[U].columnManager.getColumns()[0].sortState).toBe("DESC")})})}S("locked");S("normal")})}N("theOwlHouse");N(null)})})});describe("BufferedStore asynchronous loading timing with rendering and preserveScrollOnReload: true",function(){var T,U,Q,L,S,R,O=Ext.define(null,{extend:"Ext.data.Model",fields:["title","forumtitle","forumid","username",{name:"replycount",type:"int"},{name:"lastpost",mapping:"lastpost",type:"date",dateFormat:"timestamp"},"lastposter","excerpt","threadid"],idProperty:"threadid"});function N(Z,W){var V=Z+W,Y=[],X;for(X=Z;X<V;++X){Y.push({threadid:X,title:"Title"+X})}return Y}function M(W){var Z=Ext.Ajax.mockGetAllRequests(),V,Y,X;while(Z.length){V=Z[0];Y=V.options.params;X=N(Y.start,Y.limit);Ext.Ajax.mockComplete({status:200,responseText:Ext.encode({total:W||5000,data:X})});Z=Ext.Ajax.mockGetAllRequests()}}function P(W,Z){var c=Ext.Ajax.mockGetAllRequests(),X,V,Y,b,a;for(X=0,V=c.length;X<V;X++){Y=c[X];b=Y.options.params;if(Ext.Array.contains(W,b.page)){a=N(b.start,b.limit);Ext.Ajax.mockComplete({status:200,responseText:Ext.encode({total:Z||5000,data:a})},Y.id)}}}beforeEach(function(){MockAjaxManager.addMethods();I=new Ext.data.BufferedStore({model:O,pageSize:50,trailingBufferZone:50,leadingBufferZone:50,proxy:{type:"ajax",url:"fakeUrl",reader:{type:"json",rootProperty:"data"}}});I.loadPage(1);M();S=0;B=new Ext.grid.Panel({columns:[{text:"Title",dataIndex:"title"}],store:I,width:600,height:300,border:false,viewConfig:{preserveScrollOnReload:true,mouseOverOutBuffer:0,listeners:{scroll:function(){S++}}},renderTo:document.body,selModel:{pruneRemoved:false}});T=B.getView();U=T.bufferedRenderer;Q=T.getScrollable();L=(U.viewSize*2+I.leadingBufferZone+I.trailingBufferZone)*U.rowHeight;U.scrollToLoadBuffer=0;R=0});afterEach(function(){MockAjaxManager.removeMethods()});it("should render maintain selection when returning to a page with a previously selected record in it",function(){T.getSelectionModel().select(0);T.getNavigationModel().setPosition(0,0);waitsFor(function(){M();if(S===R){if(!I.data.peekPage(1)){return true}T.scrollBy(null,100);R++}},"Page one to have been purged from the PageCache",20000);runs(function(){S=0;Q.scrollTo(0,0)});waitsFor(function(){return S===1},"A scroll event to fire",20000);runs(function(){M();expect(T.all.item(0).hasCls(Ext.baseCSSPrefix+"grid-item-selected")).toBe(true)})});it("should render page 1, and page 1 should still be in the page cache when returning to page 1 after scrolling down",function(){waitsFor(function(){if(Ext.Ajax.mockGetAllRequests().length>20){return true}if(S===R){T.scrollBy(null,L);R++}});runs(function(){S=0;Q.scrollTo(0,0)});waitsFor(function(){return S===1});runs(function(){M();expect(J(T.body)).toBe(0);expect(I.data.hasPage(1)).toBe(true)})});it("Page 1 should still be rendered, and page 1 should still be in the page cache when returning to page 1 after scrolling down with only buffer zone pages loaded into store during scroll",function(){waitsFor(function(){if(Ext.Ajax.mockGetAllRequests().length>20){return true}if(S===R){T.scrollBy(null,L);R++}});runs(function(){S=0;Q.scrollTo(0,0)});waitsFor(function(){return S===1});runs(function(){P([3,6,7,10,11,13,14,17,18,21,22,25]);expect(J(T.body)).toBe(0);expect(I.data.hasPage(1)).toBe(true)})});it("should refresh the same rendered block on buffered store reload with preserveScrollOnReload: true",function(){var X,Y,W,V;expect(T.refreshCounter).toBe(1);U.scrollTo(1000,{select:true,focus:true,callback:function(){X=true}});waitsFor(function(){M();return X},"scroll to finish");runs(function(){W=T.all.startIndex;V=T.all.endIndex;I.on({refresh:function(){Y=true},single:true});I.reload()});waitsFor(function(){M();return Y},"store to reload");runs(function(){expect(T.refreshCounter).toBe(2);expect(T.all.startIndex).toBe(W);expect(T.all.endIndex).toBe(V)})})});describe("BufferedStore asynchronous loading timing with rendering and preserveScrollOnReload: false",function(){var T,U,Q,L,S,R,O=Ext.define(null,{extend:"Ext.data.Model",fields:["title","forumtitle","forumid","username",{name:"replycount",type:"int"},{name:"lastpost",mapping:"lastpost",type:"date",dateFormat:"timestamp"},"lastposter","excerpt","threadid"],idProperty:"threadid"});function N(Z,W){var V=Z+W,Y=[],X;for(X=Z;X<V;++X){Y.push({threadid:X,title:"Title"+X})}return Y}function M(W){var Z=Ext.Ajax.mockGetAllRequests(),V,Y,X;while(Z.length){V=Z[0];Y=V.options.params;X=N(Y.start,Y.limit);Ext.Ajax.mockComplete({status:200,responseText:Ext.encode({total:W||5000,data:X})});Z=Ext.Ajax.mockGetAllRequests()}}function P(W,Z){var c=Ext.Ajax.mockGetAllRequests(),X,V,Y,b,a;for(X=0,V=c.length;X<V;X++){Y=c[X];b=Y.options.params;if(Ext.Array.contains(W,b.page)){a=N(b.start,b.limit);Ext.Ajax.mockComplete({status:200,responseText:Ext.encode({total:Z||5000,data:a})},Y.id)}}}beforeEach(function(){MockAjaxManager.addMethods();I=new Ext.data.BufferedStore({model:O,pageSize:50,trailingBufferZone:50,leadingBufferZone:50,proxy:{type:"ajax",url:"fakeUrl",reader:{type:"json",rootProperty:"data"}}});I.loadPage(1);M();S=0;B=new Ext.grid.Panel({columns:[{text:"Title",dataIndex:"title"}],store:I,width:600,height:300,border:false,viewConfig:{preserveScrollOnReload:false,mouseOverOutBuffer:0,listeners:{scroll:function(){S++}}},renderTo:document.body,selModel:{pruneRemoved:false}});T=B.getView();U=T.bufferedRenderer;Q=T.getScrollable();L=(U.viewSize*2+I.leadingBufferZone+I.trailingBufferZone)*U.rowHeight;U.scrollToLoadBuffer=0;R=0});afterEach(function(){MockAjaxManager.removeMethods()});it("should refresh from page 1 on buffered store reload with preserveScrollOnReload: false",function(){var X,Y,W,V;expect(T.refreshCounter).toBe(1);U.scrollTo(1000,{select:true,focus:true,callback:function(){X=true}});waitsFor(function(){M();return X},"scroll to finish");runs(function(){W=T.all.startIndex;V=T.all.endIndex;I.on({refresh:function(){Y=true},single:true});I.reload()});waitsFor(function(){M();return Y},"store to reload");runs(function(){expect(T.refreshCounter).toBe(2);expect(T.all.startIndex).toBe(0);expect(T.all.endIndex).toBe(U.viewSize-1)})})});describe("paging grid with buffered renderer",function(){var L;afterEach(function(){L.destroy()});it("should refresh the view on each page change",function(){var M,N;runs(function(){function P(){var R=new Date(1900,0,1).getTime();var Q=new Date().getTime();return new Date(R+Math.random()*(Q-R))}function O(V){var R=["Ed","Tommy","Aaron","Abe"];var W=["Spencer","Maintz","Conran","Elias"];var T=[];for(var U=0;U<V;U++){var Y=P();var S=Math.floor(Math.random()*R.length);var X=Math.floor(Math.random()*W.length);var Q=Ext.String.format("{0} {1}",R[S],W[X]);T.push([Q,Y])}return T}M=Ext.create("Ext.data.Store",{fields:["Name","dob"],autoLoad:true,proxy:{type:"memory",enablePaging:true,data:O(100),reader:{type:"array"}},pageSize:20});L=Ext.create("Ext.grid.Panel",{store:M,columns:[{text:"Name",width:120,dataIndex:"Name"},{text:"dob",flex:1,dataIndex:"dob"}],dockedItems:[N=Ext.create("Ext.toolbar.Paging",{dock:"bottom",store:M})],renderTo:document.body,width:500,height:200,plugins:[{ptype:"bufferedrenderer"}]})});waitsFor(function(){return L.view.all.getCount()===20});runs(function(){var O=L.view.refreshCounter;L.view.scrollTo(0,100);waitsFor(function(){return L.view.bufferedRenderer.scrollTop===100});runs(function(){jasmine.fireMouseEvent(N.down("#next").el,"click");expect(L.view.refreshCounter).toBe(O+1);expect(L.view.all.getCount()).toBe(20);expect(L.view.getScrollY()).toBe(0)})})})});describe("Locking a column when grid configured with enableLocking, but no locked columns",function(){it("should not throw an error, and should maintain scroll position",function(){var L;B=new Ext.grid.Panel({renderTo:Ext.getBody(),width:400,height:400,title:"Lock a column",columns:[{dataIndex:"name",text:"Name"},{dataIndex:"age",text:"Age"}],enableLocking:true,store:{fields:[{name:"name",type:"string"},{name:"age",type:"int"}],data:(function(){var N=[];var M=44;while(M--){N.unshift({name:"User "+M,age:Ext.Number.randomInt(0,100)})}return N})()},bbar:["->",Ext.versions.extjs.version]});B.ensureVisible(100);expect(B.lockedGrid.isVisible()).toBe(false);L=B.normalGrid.view.getScrollY();B.lock(B.getVisibleColumnManager().getColumns()[1]);expect(B.lockedGrid.isVisible()).toBe(true);expect(B.lockedGrid.view.getScrollY()).toBe(L)})})})