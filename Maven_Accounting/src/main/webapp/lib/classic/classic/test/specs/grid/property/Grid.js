describe("Ext.grid.property.Grid",function(){var A;function B(C){A=new Ext.grid.property.Grid({source:C||{stringProp:"foo",numProp:100,boolProp:true,dateProp:new Date(2000,0,1)},renderTo:Ext.getBody()})}afterEach(function(){A=Ext.destroy(A)});describe("property manipulation",function(){beforeEach(function(){B()});describe("getProperty",function(){it("should return the value for the property",function(){expect(A.getProperty("numProp")).toBe(100)});it("should return null when the property doesn't exist",function(){expect(A.getProperty("foo")).toBeNull()})});describe("setProperty",function(){describe("with create: true",function(){it("should set an existing property",function(){A.setProperty("stringProp","bar",true);expect(A.getProperty("stringProp")).toBe("bar")});it("should create a property that doesn't exist",function(){A.setProperty("newStringProp","asdf",true);expect(A.getProperty("newStringProp")).toBe("asdf")})});describe("with create: false",function(){it("should set an existing property",function(){A.setProperty("stringProp","bar",false);expect(A.getProperty("stringProp")).toBe("bar")});it("should not create a property that doesn't exist",function(){A.setProperty("newStringProp","asdf",false);expect(A.getProperty("newStringProp")).toBeNull()})})});describe("removeProperty",function(){it("should remove a property",function(){A.removeProperty("stringProp");expect(A.getProperty("stringProp")).toBeNull()});it("should not cause an exception when removing a non-existent property",function(){expect(function(){A.removeProperty("foo")}).not.toThrow()})})})})