xdescribe("Ext.layout.component.field.Trigger",function(){var D,B,C,A;afterEach(function(){Ext.destroy(D,B);D=B=C=null});describe("shrink wrap",function(){describe("without label",function(){it("should have the same size as a text field with a single trigger",function(){D=new Ext.form.field.Text({renderTo:Ext.getBody(),shrinkWrap:3});B=new Ext.form.field.Trigger({renderTo:Ext.getBody(),shrinkWrap:3});C=D.getWidth();expect(B.getWidth()).toBe(C);expect(B.inputEl.getWidth()).toBe(C-B.getTriggerWidth())});it("should have the same size as a text field with a 3 triggers",function(){D=new Ext.form.field.Text({renderTo:Ext.getBody(),shrinkWrap:3});B=new Ext.form.field.Trigger({renderTo:Ext.getBody(),shrinkWrap:3,trigger1Cls:"foo",trigger2Cls:"bar",trigger3Cls:"baz"});C=D.getWidth();expect(B.getWidth()).toBe(C);expect(B.inputEl.getWidth()).toBe(C-B.getTriggerWidth())});it("should respect an inputWidth",function(){B=new Ext.form.field.Trigger({renderTo:Ext.getBody(),shrinkWrap:3,inputWidth:200});expect(B.getWidth()).toBe(200);expect(B.inputEl.getWidth()).toBe(200-B.getTriggerWidth())})});describe("with label",function(){describe("labelAlign: 'left'",function(){it("should take into account labelWidth",function(){D=new Ext.form.field.Text({renderTo:Ext.getBody(),shrinkWrap:3,labelWidth:150,fieldLabel:"A label"});B=new Ext.form.field.Trigger({renderTo:Ext.getBody(),shrinkWrap:3,labelWidth:150,fieldLabel:"A label"});C=D.getWidth();expect(B.getWidth()).toBe(C);expect(B.inputEl.getWidth()).toBe(C-B.getTriggerWidth()-B.labelWidth-B.labelPad)});it("should take into account labelPad",function(){D=new Ext.form.field.Text({renderTo:Ext.getBody(),shrinkWrap:3,labelPad:20,fieldLabel:"A label"});B=new Ext.form.field.Trigger({renderTo:Ext.getBody(),shrinkWrap:3,labelPad:20,fieldLabel:"A label"});C=D.getWidth();expect(B.getWidth()).toBe(C);expect(B.inputEl.getWidth()).toBe(C-B.getTriggerWidth()-B.labelWidth-B.labelPad)})});describe("labelAlign: 'top'",function(){it("should take ignore labelWidth",function(){D=new Ext.form.field.Text({renderTo:Ext.getBody(),shrinkWrap:3,labelWidth:150,fieldLabel:"A label",labelAlign:"top"});B=new Ext.form.field.Trigger({renderTo:Ext.getBody(),shrinkWrap:3,labelWidth:150,fieldLabel:"A label",labelAlign:"top"});C=D.getWidth();expect(B.getWidth()).toBe(C);expect(B.inputEl.getWidth()).toBe(C-B.getTriggerWidth())});it("should take into account labelPad",function(){D=new Ext.form.field.Text({renderTo:Ext.getBody(),shrinkWrap:3,labelPad:20,fieldLabel:"A label",labelAlign:"top"});B=new Ext.form.field.Trigger({renderTo:Ext.getBody(),shrinkWrap:3,labelPad:20,fieldLabel:"A label",labelAlign:"top"});C=D.getWidth();expect(B.getWidth()).toBe(C);expect(B.inputEl.getWidth()).toBe(C-B.getTriggerWidth())})})})});describe("configured",function(){describe("height",function(){beforeEach(function(){D=new Ext.form.field.Text({renderTo:Ext.getBody(),height:200});B=new Ext.form.field.Trigger({renderTo:Ext.getBody(),height:200});A=D.getHeight()});it("should have the same height as text field",function(){expect(B.getHeight()).toBe(A);expect(B.inputEl.getHeight()).toBe(A)})});describe("width",function(){beforeEach(function(){D=new Ext.form.field.Text({renderTo:Ext.getBody(),width:300});B=new Ext.form.field.Trigger({renderTo:Ext.getBody(),hideTrigger:true,width:300});C=D.getWidth()});it("should have the same width as text field w/o trigger",function(){expect(B.getWidth()).toBe(C);expect(B.inputEl.getWidth()).toBe(C)});it("should have the same overall width as text field w/ trigger",function(){var I=B.getWidth();expect(I).toBe(C);var J=B.inputEl.getWidth(),H=0;for(var F=0,E=B.triggerEl.elements.length;F<E;F++){var G=B.triggerEl.elements[F];H+=G.getWidth()}expect(J+H).toBe(C)})})})})