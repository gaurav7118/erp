describe("Ext.layout.container.Card",function(){var C;function B(F){C=Ext.widget(Ext.apply({xtype:F.xtype||"container",width:100,height:100,layout:{type:"card",deferredRender:F.deferredRender},renderTo:document.body},F));return C}function E(F){return new Ext.panel.Panel({title:F||"Loooooooong text",scrollable:true,items:{xtype:"box",html:D()}})}function A(F){var H=[],G,F;for(G=0,F=F||100;G<F;G++){H.push({id:G,name:"foo_"+G})}return H}function D(){var G=[],F;for(F=0;F<7000;F++){G.push("The Owl House")}return G.join("")}afterEach(function(){C=Ext.destroy(C)});describe("visibility",function(){it("should have the active item as visible",function(){B({defaultType:"component",items:[{itemId:"a"},{itemId:"b"}]});expect(C.down("#a").isVisible()).toBe(true)});it("should have the inactive items as not visible",function(){B({defaultType:"component",items:[{itemId:"a"},{itemId:"b"},{itemId:"c"}]});expect(C.down("#b").isVisible()).toBe(false);expect(C.down("#c").isVisible()).toBe(false)});it("should have child items of inactive items as not visible with deep: true",function(){B({items:[{xtype:"component",itemId:"a"},{xtype:"container",items:{xtype:"component",itemId:"b"}},{xtype:"container",items:{xtype:"component",itemId:"c"}}]});expect(C.down("#b").isVisible(true)).toBe(false);expect(C.down("#c").isVisible(true)).toBe(false)});describe("with an added listener",function(){it("should have child items of inactive items as not visible with deep: true",function(){B({items:[{xtype:"component",itemId:"a"},{xtype:"container",listeners:{added:function(){}},items:{xtype:"component",itemId:"b"}},{xtype:"container",listeners:{added:function(){}},items:{xtype:"component",itemId:"c"}}]});expect(C.down("#b").isVisible(true)).toBe(false);expect(C.down("#c").isVisible(true)).toBe(false)})})});describe("Sizing",function(){it("should size the child using both dimensions",function(){B({items:{xtype:"component"}});expect(C.items.items[0].getWidth()).toEqual(100);expect(C.items.items[0].getHeight()).toEqual(100)});it("should size the child using height and shrinkWrap width",function(){B({height:100,width:undefined,style:"position:absolute",items:{xtype:"component",width:200}});expect(C.items.items[0].getHeight()).toEqual(100);expect(C.getWidth()).toEqual(200)});it("should size the child using width and shrinkWrap height",function(){B({width:100,height:undefined,items:{xtype:"component",height:200}});expect(C.items.items[0].getWidth()).toEqual(100);expect(C.getHeight()).toEqual(200)})});describe("Deferred render",function(){it("should render all children",function(){B({items:[{xtype:"component"},{xtype:"component"}]});expect(C.items.items[0].el).toBeDefined();expect(C.items.items[1].el).toBeDefined()});it("should only render the active item",function(){B({activeItem:1,deferredRender:true,items:[{xtype:"component"},{xtype:"component"}]});expect(C.items.items[0].el).toBeUndefined();expect(C.items.items[1].el).toBeDefined()})});describe("Events",function(){it("should fire beforeactivate and activate on item 1",function(){var F,G;B({activeItem:1,deferredRender:true,items:[{xtype:"component"},{xtype:"component",listeners:{beforeactivate:function(){F=true},activate:function(){G=true}}}]});expect(F).toEqual(true);expect(G).toEqual(true);expect(C.items.items[0].el).toBeUndefined();expect(C.items.items[1].el).toBeDefined()});it("should veto activation of item 1",function(){var F,G;B({activeItem:1,deferredRender:true,items:[{xtype:"component"},{xtype:"component",listeners:{beforeactivate:function(){F=true;return false},activate:function(){G=true}}}]});expect(F).toEqual(true);expect(G).toBeUndefined();expect(C.items.items[0].el).toBeUndefined();expect(C.items.items[1].el).toBeUndefined()})});describe("Active Item",function(){describe("calling getActiveItem()",function(){it("should return a default item when activeItem is set",function(){C=B({activeItem:0,items:{xtype:"component"}});expect(C.layout.getActiveItem()).toBe(C.items.items[0])});it("should return a default item if activeItem is not defined",function(){C=B({items:{xtype:"component"}});expect(C.layout.getActiveItem()).toBe(C.items.items[0])});it("should return a default item if activeItem is undefined",function(){C=B({activeItem:undefined,items:{xtype:"component"}});expect(C.layout.getActiveItem()).toBe(C.items.items[0])});it("should not return a default item if activeItem is null",function(){C=B({activeItem:null,items:{xtype:"component"}});expect(C.layout.getActiveItem()).toBe(null)});it("should return the specified active item",function(){C=B({activeItem:1,items:[{xtype:"component"},{xtype:"component"}]});expect(C.layout.getActiveItem()).toBe(C.items.items[1])});it("should return the specified active item if deferred render",function(){C=B({activeItem:1,deferredRender:true,items:[{xtype:"component"},{xtype:"component"}]});expect(C.layout.getActiveItem()).toBe(C.items.items[1])})});it("should display the first item as active item when active item is not set",function(){var F,G;C=B({items:[{xtype:"component"},{xtype:"component"}]});F=C.items;G=F.getAt(0);expect(G.hidden).toBe(false);expect(F.getAt(1).hidden).toBe(true);expect(C.layout.getActiveItem()).toBe(G)});it("should not display any item as active item when active item is null",function(){var F,G;C=B({activeItem:null,items:[{xtype:"component"},{xtype:"component"}]});F=C.items;expect(F.getAt(0).hidden).toBe(true);expect(F.getAt(1).hidden).toBe(true);expect(C.layout.getActiveItem()).toBe(null)})});describe("scroll position when changing cards",function(){var H,G;function F(){var I=C.layout,J=I.getActiveItem();I.prev();J.destroy()}afterEach(function(){H=G=null});it("should not inherit old scroll positions from previously deleted cards",function(){B({items:[E()]});H=C.layout.setActiveItem(E());H.getScrollable().scrollTo(0,10000);F();H=C.layout.setActiveItem(E());expect(H.getScrollable().getElement().dom.scrollTop).toBe(0)});describe("preserving scroll position",function(){var I;afterEach(function(){I=null});describe("when card items are not nested",function(){it("should keep scroll position, simple layout",function(){B({items:[E("Foo"),{title:"The Owl's Nest Farm"}]});H=C.items.getAt(0);G=H.getScrollable();G.scrollTo(0,2000);I=G.getPosition();C.setActiveItem(1);C.setActiveItem(0);expect(G.getPosition().y).toBe(I.y)})});describe("when card items are nested",function(){it("should keep scroll position, simple layout",function(){B({items:[{title:"The Owl House",xtype:"container",scrollable:true,items:[{id:"BT",xtype:"component",scrollable:true,height:300,html:D()}]},E()]});H=Ext.getCmp("BT");G=H.getScrollable();G.scrollTo(0,2000);I=G.getPosition();C.setActiveItem(1);C.setActiveItem(0);expect(G.getPosition().y).toBe(I.y)})});describe("when items are derived panels",function(){var J=true,M=Ext.data.ProxyStore.prototype.load,K;beforeEach(function(){K=Ext.data.ProxyStore.prototype.load=function(){M.apply(this,arguments);if(J){this.flushLoad.apply(this,arguments)}return this}});afterEach(function(){Ext.data.ProxyStore.prototype.load=M});function L(N,O){describe("buffered = "+N+", locked = "+O,function(){it("should keep scroll position, simple layout",function(){B({height:300,width:300,items:[{xtype:"grid",buffered:N,columns:[{text:"Id",dataIndex:"id",width:100},{text:"Name",dataIndex:"name",locked:O,width:100}],store:{fields:["id","name"],data:A(10000)}},{title:"The Owl's Nest Farm"}]});H=C.items.getAt(0);G=O?H.normalGrid.view.scrollable:H.view.scrollable;G.scrollTo(0,7000);I=G.getPosition();C.setActiveItem(1);C.setActiveItem(0);expect(G.getPosition().y).toBe(I.y)});it("should keep scroll position, complex layout",function(){var P;B({xtype:"tabpanel",region:"west",height:300,width:300,collapsible:true,collapsed:false,renderTo:null,items:[{xtype:"grid",title:"The grid to end all grids",buffered:N,columns:[{text:"Id",dataIndex:"id",width:100},{text:"Name",dataIndex:"name",locked:O,width:100}],store:{fields:["id","name"],data:A(10000)}},{title:"The Owl's Nest Farm"}]});P=new Ext.panel.Panel({width:1000,height:700,title:"Border Layout",layout:"border",items:[{region:"center",xtype:"panel",margin:"5 0 0 5",layout:"fit"},C],renderTo:Ext.getBody()});H=C.items.getAt(0);G=O?H.normalGrid.view.scrollable:H.view.scrollable;G.scrollTo(0,7000);I=G.getPosition();C.setActiveTab(1);C.down("tool").scope.collapse(null,false);C.down("tool").scope.expand(null,false);C.setActiveTab(0);expect(G.getPosition().y).toBe(I.y);P=Ext.destroy(P)})})}L(true,true);L(true,false);L(false,false);L(false,true)})})});describe("hideMode",function(){var F;beforeEach(function(){B({items:[E("Foo"),{title:"The Owl's Nest Farm"}]});F=C.items.getAt(0)});afterEach(function(){F=null});it("should be automatically set to use offsets",function(){expect(F.hideMode).toBe("offsets")});it("should cache the original hideMode value",function(){expect(F.originalHideMode).toBe("display")});it("should restore the original hideMode value when the item is removed from the layout",function(){C.remove(F);expect(F.hideMode).toBe("display")});it("should remove the cached hideMode value when the item is removed from the layout",function(){C.remove(F);expect(F.originalHideMode).toBe(undefined)})});describe("different xtypes as containers",function(){var H,I,F;function J(K){B({xtype:K,items:[E("Foo"),{title:"The Owl's Nest Farm"}]});H=C.items.getAt(0);I=H.scrollable;expect(C.xtype).toBe(K)}afterEach(function(){H=I=F=null});function G(K){describe("should work for "+K+" as the container",function(){it("should set proper hideMode value",function(){J(K);expect(H.hideMode).toBe("offsets")});it("should preserve scroll position",function(){J(K);I.scrollTo(0,7000);F=I.getPosition();C.setActiveItem(1);C.setActiveItem(0);expect(I.getPosition().y).toBe(F.y)})})}G("container");G("panel");G("tabpanel")})})