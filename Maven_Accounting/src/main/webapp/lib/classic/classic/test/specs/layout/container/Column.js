describe("Ext.layout.container.Column",function(){function A(C){var B="Ext.layout.container.Column";if(C){B+=" (shrinkWrap:true)"}describe("wrapping with uneven heights",function(){it("should always wrap back to position zero",function(){var D=new Ext.container.Container({renderTo:document.body,width:300,height:500,layout:{type:"column",columnCount:3},defaultType:"component",defaults:{columnWidth:1/3},items:[{height:110},{height:100},{height:100},{height:100}]}),E=D.items.items[3];expect(E.getX()).toBe(0);D.destroy()})});describe(B,function(){var E,G=Ext.getScrollbarSize(),F=G.width,H=G.height;function D(K,J){var I=[];if(!Ext.isArray(J)){J=[J]}Ext.each(J,function(L){I.push(Ext.apply({xtype:"component",style:"margin: 4px;"},L))});E=Ext.widget(Ext.apply({renderTo:document.body,xtype:"panel",shrinkWrap:C||2,layout:"column",border:0,bodyPadding:"6",items:I},K))}afterEach(function(){E.destroy()});describe("configured width and height",function(){var I={height:100,width:100};describe("child items with columnWidth",function(){beforeEach(function(){D(I,[{height:80,columnWidth:0.25},{height:80,columnWidth:0.25},{height:80,columnWidth:0.5}])});it("should width the child items correctly",function(){expect(E.items.getAt(0).getWidth()).toBe(14);expect(E.items.getAt(1).getWidth()).toBe(14);expect(E.items.getAt(2).getWidth()).toBe(36)})});describe("child items with a combination of width and columnWidth",function(){beforeEach(function(){D(I,[{height:80,columnWidth:0.5},{height:80,columnWidth:0.5},{height:80,width:36}])});it("should width the child items correctly",function(){expect(E.items.getAt(0).getWidth()).toBe(14);expect(E.items.getAt(1).getWidth()).toBe(14);expect(E.items.getAt(2).getWidth()).toBe(36)})});describe("wrapping items",function(){beforeEach(function(){D(I,[{height:36,columnWidth:0.5},{height:36,columnWidth:0.6},{height:36,width:36}])});it("should width the child items correctly",function(){expect(E.items.getAt(0).getWidth()).toBe(14);expect(E.items.getAt(1).getWidth()).toBe(18);expect(E.items.getAt(2).getWidth()).toBe(36)});it("should wrap the last item",function(){expect(E.items.getAt(2).getY()-E.getY()).toBe(54)})});describe("overflow",function(){var J=Ext.apply({},{autoScroll:true},I);describe("vertical",function(){beforeEach(function(){D(J,[{height:36,width:14},{height:180,columnWidth:1},{height:36,width:14}])});it("should width the child items correctly",function(){expect(E.items.getAt(0).getWidth()).toBe(14);expect(E.items.getAt(1).getWidth()).toBe(36-F);expect(E.items.getAt(2).getWidth()).toBe(14)});it("should have the correct scroll height",function(){expect(E.body.dom.scrollHeight).toBe(200)});it("should not have horizontal overflow",function(){expect(E.body.dom.scrollWidth).toBe(E.getWidth()-F)})});describe("vertical overflow that triggers horizontal overflow",function(){beforeEach(function(){D(J,{width:81-F,height:180})});it("should have the correct scroll height",function(){expect(E.body.dom.scrollHeight).toBe(200)});it("should have the correct scroll width",function(){expect(E.body.dom.scrollWidth).toBe(E.getWidth()-F+1)})});describe("horizontal",function(){beforeEach(function(){D(J,{height:80-H,width:180})});it("should have the correct scroll width",function(){expect(E.body.dom.scrollWidth).toBe(200)});it("should not have vertical overflow",function(){expect(E.body.dom.scrollHeight).toBe(E.getHeight()-H)})});describe("horizontal overflow that triggers vertical overflow",function(){beforeEach(function(){D(J,{height:81-H,width:180})});it("should have the correct scroll width",function(){expect(E.body.dom.scrollWidth).toBe(200)});it("should have the correct scroll height",function(){expect(E.body.dom.scrollHeight).toBe(E.getHeight()-H+1)})});describe("vertical and horizontal",function(){beforeEach(function(){D(J,{height:180,width:180})});it("should have the correct scroll height",function(){expect(E.body.dom.scrollHeight).toBe(200)});it("should have the correct scroll width",function(){expect(E.body.dom.scrollWidth).toBe(200)})})});describe("autoScroll with no scrollbars",function(){var J=Ext.apply({},{autoScroll:true},I);beforeEach(function(){D(J,[{height:80,columnWidth:1}])});it("should not reserve space for a vertical scrollbar when sizing the child",function(){expect(E.items.getAt(0).getWidth()).toBe(80)})})});describe("configured height, shrink wrap width",function(){var I={height:100,shrinkWrap:1};describe("child items with columnWidth",function(){beforeEach(function(){D(I,[{height:80,columnWidth:0.2,width:32},{height:80,columnWidth:0.8,html:'<div style="width:40px;"></div>'}])});it("should shrink wrap to the width of the child items",function(){expect(E.getWidth()).toBe(100)});it("should not size the columns to their configured column widths",function(){expect(E.items.getAt(0).getWidth()).toBe(32);expect(E.items.getAt(1).getWidth()).toBe(40)})});describe("child items with columnWidth and container minWidth",function(){beforeEach(function(){D({height:100,shrinkWrap:1,minWidth:212},[{height:80,columnWidth:0.4,width:32},{height:80,columnWidth:0.6,html:'<div style="width:40px;"></div>'}])});it("should size to the min width",function(){expect(E.getWidth()).toBe(212)});it("should size the columns to their configured column widths",function(){expect(E.items.getAt(0).getWidth()).toBe(72);expect(E.items.getAt(1).getWidth()).toBe(112)})})});describe("configured width, shrink wrap height",function(){var I={width:100};describe("child items with columnWidth",function(){beforeEach(function(){D(I,[{height:80,columnWidth:0.5},{height:80,columnWidth:0.25},{height:80,columnWidth:0.25}])});it("should width the child items correctly",function(){expect(E.items.getAt(0).getWidth()).toBe(36);expect(E.items.getAt(1).getWidth()).toBe(14);expect(E.items.getAt(2).getWidth()).toBe(14)});it("should shrink wrap the height",function(){expect(E.getHeight()).toBe(100)})});describe("child items with a combination of width and columnWidth",function(){beforeEach(function(){D(I,[{height:80,columnWidth:0.5},{height:80,width:36},{height:80,columnWidth:0.5}])});it("should width the child items correctly",function(){expect(E.items.getAt(0).getWidth()).toBe(14);expect(E.items.getAt(1).getWidth()).toBe(36);expect(E.items.getAt(2).getWidth()).toBe(14)});it("should shrink wrap the height",function(){expect(E.getHeight()).toBe(100)})});describe("wrapping items",function(){beforeEach(function(){D(I,[{height:36,columnWidth:0.5},{height:36,width:36},{height:36,columnWidth:0.6}])});it("should width the child items correctly",function(){expect(E.items.getAt(0).getWidth()).toBe(14);expect(E.items.getAt(1).getWidth()).toBe(36);expect(E.items.getAt(2).getWidth()).toBe(18)});it("should wrap the last item",function(){expect(E.items.getAt(2).getY()-E.getY()).toBe(54)});xit("should shrink wrap the height",function(){expect(E.getHeight()).toBe(100)})});describe("overflow",function(){var J=Ext.apply({},{autoScroll:true},I);describe("horizontal",function(){beforeEach(function(){D(J,{height:80-H,width:180})});it("should have the correct scroll width",function(){expect(E.body.dom.scrollWidth).toBe(200)});xit("should not have vertical overflow",function(){expect(E.body.dom.scrollHeight).toBe(E.getHeight()-H)})})})});describe("shrink wrap width and height",function(){var I={shrinkWrap:true};describe("child items with columnWidth",function(){beforeEach(function(){D(I,[{height:80,columnWidth:0.2,width:32},{height:80,columnWidth:0.8,html:'<div style="width:40px;"></div>'}])});it("should shrink wrap to the width of the child items",function(){expect(E.getWidth()).toBe(100)});it("should not size the columns to their configured column widths",function(){expect(E.items.getAt(0).getWidth()).toBe(32);expect(E.items.getAt(1).getWidth()).toBe(40)});it("should shrink wrap the height",function(){expect(E.getHeight()).toBe(100)})});describe("child items with columnWidth and container minWidth",function(){beforeEach(function(){D({height:100,shrinkWrap:1,minWidth:212},[{height:80,columnWidth:0.4,width:32},{height:80,columnWidth:0.6,html:'<div style="width:40px;"></div>'}])});it("should size to the min width",function(){expect(E.getWidth()).toBe(212)});it("should size the columns to their configured column widths",function(){expect(E.items.getAt(0).getWidth()).toBe(72);expect(E.items.getAt(1).getWidth()).toBe(112)});it("should shrink wrap the height",function(){expect(E.getHeight()).toBe(100)})})})})}A();A(true);describe("shrink wrap of child items",function(){var B;afterEach(function(){Ext.destroy(B)});it("should shrink wrap children side by side",function(){B=new Ext.container.Container({width:400,height:200,layout:"column",renderTo:Ext.getBody(),defaultType:"component",items:[{html:'<div style="width: 100px;"></div>'},{html:'<div style="width: 100px;"></div>'}]});expect(B.items.first().getWidth()).toBe(100);expect(B.items.last().getWidth()).toBe(100)});it("should should stretch items after shrink wrapping",function(){B=new Ext.container.Container({width:400,height:200,layout:"column",renderTo:Ext.getBody(),defaultType:"component",items:[{html:'<div style="width: 100px;"></div>'},{columnWidth:1}]});expect(B.items.first().getWidth()).toBe(100);expect(B.items.last().getWidth()).toBe(300)})});describe("failure tests",function(){it("should work with a minHeight child",function(){var B=new Ext.container.Container({renderTo:Ext.getBody(),width:200,height:100,layout:"anchor",items:[{minHeight:70,columnWidth:1}]});expect(B.items.first().getHeight()).toBe(70);B.destroy()})});describe("liquid layout",function(){it("should layout with liquidLayout items",function(){var B=Ext.create({xtype:"container",renderTo:Ext.getBody(),width:200,height:100,layout:"column",defaults:{xtype:"button"},items:[{columnWidth:1},{width:50}]});expect(B.items.getAt(0).getWidth()).toBe(150);expect(B.items.getAt(1).getWidth()).toBe(50);B.destroy()})})})