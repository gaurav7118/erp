describe("Ext.layout.container.HBox",function(){var B,C;afterEach(function(){Ext.destroy(B,C);B=C=null});describe("defaults",function(){var D=0,E=Ext.layout.container.HBox.prototype;beforeEach(function(){if(!D){B=new Ext.container.Container({renderTo:Ext.getBody(),layout:"hbox",width:100,height:100});D++}});it("should have align: begin",function(){expect(E.align).toBe("begin")});it("should have constrainAlign: false",function(){expect(E.constrainAlign).toBe(false)});it("should have enableSplitters: true",function(){expect(E.enableSplitters).toBe(true)});it("should have no padding",function(){expect(E.padding).toBe(0)});it("should have pack start",function(){expect(E.pack).toBe("start")})});describe("removing items",function(){it("should clear the left on an item when removing and using in another container",function(){C=new Ext.Component({width:50});B=new Ext.container.Container({renderTo:Ext.getBody(),layout:"hbox",width:100,height:100,items:[{width:50},C]});var D=new Ext.container.Container({renderTo:Ext.getBody(),layout:"fit",width:100,height:100});B.remove(C,false);D.add(C);var E=C.getEl().getStyle("left");if(E==="auto"){E=""}else{if(E=="0px"){E=""}}expect(E).toBe("");D.destroy()});it("should remove an item when the item is not rendered and the item is not destroying",function(){B=new Ext.container.Container({renderTo:Ext.getBody(),collapsed:true,layout:"hbox",width:100,height:100});C=B.add({});expect(function(){B.remove(0,false)}).not.toThrow()})});describe("sizes as percentages",function(){it("should correctly size items using percentages",function(){B=Ext.widget({xtype:"container",layout:"hbox",width:300,height:200,renderTo:Ext.getBody(),items:[{xtype:"component",width:"20%",height:100},{xtype:"component",width:30,height:"75%"},{xtype:"component",flex:1,height:"100%"},{xtype:"component",flex:2,html:'<div style="height:50px"></div>'}]});expect(B).toHaveLayout({el:{w:300,h:200},items:{0:{el:{xywh:"0 0 60 100"}},1:{el:{xywh:"60 0 30 150"}},2:{el:{xywh:"90 0 70 200"}},3:{el:{xywh:"160 0 140 50"}}}})})});describe("nested box layouts",function(){var D={xtype:"component",style:"border: 1px solid blue;",html:"child 1 content"};it("should handle auto width of nested boxes",function(){C=Ext.widget(D);C.render(Ext.getBody());var E=C.getHeight();B=Ext.widget({xtype:"container",layout:"auto",style:"padding: 10px",renderTo:Ext.getBody(),width:500,height:300,items:[{xtype:"container",layout:{type:"hbox",align:"stretchmax"},style:"border: 1px solid yellow",items:[{xtype:"container",itemId:"column1Id",layout:"vbox",style:"border: 1px solid red;",flex:1,items:[Ext.apply({itemId:"child1"},D),{xtype:"component",itemId:"column1Child2Id",style:"border: 1px solid green;",html:"child 2 content"}]},{flex:1,style:"border: 1px solid blue;"}]}]});var F=B.down("#child1");expect(F.getHeight()).toBe(E)})});describe("padding",function(){function D(E){C=new Ext.Component({flex:1});B=new Ext.container.Container({renderTo:Ext.getBody(),width:100,height:80,layout:{type:"hbox",align:"stretch",padding:E},items:C})}it("should not add any padding by default",function(){D(0);expect(C.getWidth()).toBe(100);expect(C.getHeight()).toBe(80)});it("should read a padding number",function(){D(5);expect(C.getWidth()).toBe(90);expect(C.getHeight()).toBe(70)});it("should read a padding string",function(){D("1 2 3 4");expect(C.getWidth()).toBe(94);expect(C.getHeight()).toBe(76)})});it("should apply margin to components",function(){B=new Ext.container.Container({width:200,height:200,renderTo:Ext.getBody(),defaultType:"component",layout:{type:"hbox",align:"stretch"},defaults:{flex:1,margin:5},items:[{},{}]});expect(B.items.first().getY()).toBe(5);expect(B.items.first().getX()).toBe(5);expect(B.items.last().getY()).toBe(5);expect(B.items.last().getX()).toBe(105)});describe("pack",function(){function E(F){B=new Ext.container.Container({defaultType:"component",renderTo:Ext.getBody(),width:600,height:600,layout:{type:"hbox",pack:F},items:[{width:30},{width:40},{width:20}]})}function D(F){return B.items.getAt(F).el.getX()}it("should pack at the left with pack: start",function(){E("start");expect(D(0)).toBe(0);expect(D(1)).toBe(30);expect(D(2)).toBe(70)});it("should pack in the middle with pack: center",function(){E("center");expect(D(0)).toBe(255);expect(D(1)).toBe(285);expect(D(2)).toBe(325)});it("should pack at the right with pack: cend",function(){E("end");expect(D(0)).toBe(510);expect(D(1)).toBe(540);expect(D(2)).toBe(580)})});describe("align",function(){var F,E,D,H,G;beforeEach(function(){G=function(K,I,J){J=J||{};B=new Ext.container.Container({defaultType:"component",renderTo:Ext.getBody(),width:600,height:600,autoScroll:!!J.autoScroll,layout:{type:"hbox",align:K,constrainAlign:!!J.constrainAlign},items:I})};F=function(I){return B.items.getAt(I).getEl().getX()};E=function(I){return B.items.getAt(I).getEl().getY()};D=function(I){return B.items.getAt(I).getWidth()};H=function(I){return B.items.getAt(I).getHeight()}});afterEach(function(){G=F=E=D=H=null});describe("top/middle/bottom",function(){it("should keep items at the top when using align: top",function(){G("top",[{html:"a"},{html:"b"}]);expect(E(0)).toBe(0);expect(E(1)).toBe(0)});it("should align items in the middle when using align: middle",function(){G("middle",[{height:100},{height:300}]);expect(E(0)).toBe(250);expect(E(1)).toBe(150)});it("should keep items to the bottom when using align: bottom",function(){G("bottom",[{html:"a"},{html:"b"}]);expect(E(0)).toBe(600-H(0));expect(E(1)).toBe(600-H(1))});describe("constrainAlign",function(){var I=function(M,J){var K=[],L=0;for(;L<J;++L){K.push(M)}return K.join("<br />")};it("should constrain a shrink wrapped item with align: top",function(){G("top",[{html:I("A",100)}],{constrainAlign:true});expect(H(0)).toBe(600);expect(E(0)).toBe(0)});it("should constrain a shrink wrapped item with align: middle",function(){G("middle",[{html:I("A",100)}],{constrainAlign:true});expect(H(0)).toBe(600);expect(E(0)).toBe(0)});it("should constrain a shrink wrapped item with align: bottom",function(){G("bottom",[{html:I("A",100)}],{constrainAlign:true});expect(H(0)).toBe(600);expect(E(0)).toBe(0)});it("should not constrain a fixed height item",function(){G("top",[{html:"A",height:1000}],{constrainAlign:true});expect(H(0)).toBe(1000)});it("should recalculate the left positions",function(){G("top",[{html:I("A",100)},{html:"B"}],{constrainAlign:true});expect(F(0)).toBe(0);expect(F(1)).toBe(D(0))})})});describe("stretchmax",function(){it("should stretch all items to the size of the largest when using align: stretchmax",function(){C=new Ext.Component({renderTo:Ext.getBody(),html:"a<br />b<br />c"});var I=C.getHeight({floating:true});C.destroy();G("stretchmax",[{html:"a<br />b"},{html:"a<br />b<br />c"},{html:"a<br />b"}]);expect(H(0)).toBe(I);expect(H(1)).toBe(I);expect(H(2)).toBe(I)});it("should always use a stretchmax over a fixed height",function(){G("stretchmax",[{height:30},{html:"a<br />b<br />c"},{html:"a<br />b"}]);C=new Ext.Component({renderTo:Ext.getBody(),html:"a<br />b<br />c",floating:true});var I=C.getHeight();C.destroy();expect(H(0)).toBe(I);expect(H(1)).toBe(I);expect(H(2)).toBe(I)});describe("minHeight",function(){it("should stretch an item with a minHeight",function(){G("stretchmax",[{height:30},{minHeight:5}]);expect(H(0)).toBe(30);expect(H(1)).toBe(30)});it("should stretch to the item with the largest minHeight",function(){G("stretchmax",[{minHeight:30},{minHeight:50}]);expect(H(0)).toBe(50);expect(H(1)).toBe(50)});it("should stretch a single item outside the bounds of the container",function(){G("stretchmax",[{xtype:"panel",title:"Title",minHeight:1000,shrinkWrap:true,shrinkWrapDock:true,html:"Content..."}],{autoScroll:true});expect(H(0)).toBe(1000)})});it("should respect a maxHeight",function(){G("stretchmax",[{height:30},{maxHeight:20}]);expect(H(0)).toBe(30);expect(H(1)).toBe(20)})});it("should stretch all items to the container height",function(){G("stretch",[{},{}]);expect(H(0)).toBe(600);expect(H(1)).toBe(600)})});describe("width",function(){function E(F){B=new Ext.container.Container({renderTo:Ext.getBody(),width:600,height:100,defaultType:"component",layout:{type:"hbox",align:"stretch"},items:F})}function D(F){return B.items.getAt(F).getWidth()}describe("flex only",function(){it("should stretch a single flex item to the width of the container",function(){E({flex:1});expect(D(0)).toBe(600)});it("should stretch 3 equally flexed items equally",function(){E([{flex:1},{flex:1},{flex:1}]);expect(D(0)).toBe(200);expect(D(1)).toBe(200);expect(D(2)).toBe(200)});it("should flex 2 items according to ratio",function(){E([{flex:3},{flex:1}]);expect(D(0)).toBe(450);expect(D(1)).toBe(150)});it("should flex 4 items according to ratio",function(){E([{flex:3},{flex:1},{flex:3},{flex:1}]);expect(D(0)).toBe(225);expect(D(1)).toBe(75);expect(D(2)).toBe(225);expect(D(3)).toBe(75)});it("should use flex as a ratio",function(){E([{flex:5000000},{flex:1000000}]);expect(D(0)).toBe(500);expect(D(1)).toBe(100)})});describe("fixed width only",function(){it("should set the width of a single item",function(){E({width:200});expect(D(0)).toBe(200)});it("should set the width of multiple items",function(){E([{width:500},{width:50}]);expect(D(0)).toBe(500);expect(D(1)).toBe(50)});it("should allow a single item to exceed the container width",function(){E({width:900});expect(D(0)).toBe(900)});it("should allow multiple items to exceed the container width",function(){E([{width:400},{width:400}]);expect(D(0)).toBe(400);expect(D(1)).toBe(400)})});describe("mixed",function(){it("should give any remaining space to a single flexed item",function(){E([{width:200},{flex:1}]);expect(D(0)).toBe(200);expect(D(1)).toBe(400)});it("should flex a single item with 2 fixed",function(){E([{width:100},{flex:1},{width:300}]);expect(D(0)).toBe(100);expect(D(1)).toBe(200);expect(D(2)).toBe(300)});it("should flex 2 items with 1 fixed",function(){E([{flex:2},{width:300},{flex:1}]);expect(D(0)).toBe(200);expect(D(1)).toBe(300);expect(D(2)).toBe(100)});it("should give priority to flex over a fixed width",function(){E([{flex:1,width:200},{flex:1}]);expect(D(0)).toBe(300);expect(D(1)).toBe(300)})});describe("min/max",function(){it("should assign a 0 width if there is no more flex width",function(){E([{flex:1},{width:700}]);expect(D(0)).toBe(0);expect(D(1)).toBe(700)});it("should respect a minWidth on a flex even if there is no more flex width",function(){E([{flex:1,minWidth:50},{width:700}]);expect(D(0)).toBe(50);expect(D(1)).toBe(700)});it("should respect a minWidth on a flex even if there is no excess flex width",function(){E([{flex:1,maxWidth:100},{width:300}]);expect(D(0)).toBe(100);expect(D(1)).toBe(300)});it("should update flex values based on min constraint",function(){var G=new Ext.Component({flex:1,minWidth:500}),F=new Ext.Component({flex:1});E([G,F]);expect(G.getWidth()).toBe(500);expect(F.getWidth()).toBe(100)});it("should handle multiple min constraints",function(){var H=new Ext.Component({flex:1,minWidth:250}),G=new Ext.Component({flex:1,minWidth:250}),F=new Ext.Component({flex:1});E([H,G,F]);expect(H.getWidth()).toBe(250);expect(G.getWidth()).toBe(250);expect(F.getWidth()).toBe(100)});it("should update flex values based on max constraint",function(){var G=new Ext.Component({flex:1,maxWidth:100}),F=new Ext.Component({flex:1});E([G,F]);expect(G.getWidth()).toBe(100);expect(F.getWidth()).toBe(500)});it("should update flex values based on multiple max constraints",function(){var H=new Ext.Component({flex:1,maxWidth:100}),G=new Ext.Component({flex:1,maxWidth:100}),F=new Ext.Component({flex:1});E([H,G,F]);expect(H.getWidth()).toBe(100);expect(G.getWidth()).toBe(100);expect(F.getWidth()).toBe(400)});it("should give precedence to min constraints over flex when the min is the same",function(){var H=new Ext.Component({flex:1,minWidth:200}),G=new Ext.Component({flex:3,minWidth:200}),F=new Ext.Component({flex:1,minWidth:200});E([H,G,F]);expect(H.getWidth()).toBe(200);expect(G.getWidth()).toBe(200);expect(F.getWidth()).toBe(200)});it("should give precedence to max constraints over flex when the max is the same",function(){var H=new Ext.Component({flex:1,maxWidth:100}),G=new Ext.Component({flex:3,maxWidth:100}),F=new Ext.Component({flex:1,maxWidth:100});E([H,G,F]);expect(H.getWidth()).toBe(100);expect(G.getWidth()).toBe(100);expect(F.getWidth()).toBe(100)})})});describe("shrink wrap width",function(){var E="a a",F;function G(H){B=new Ext.container.Container({renderTo:Ext.getBody(),floating:true,shadow:false,height:100,defaultType:"component",style:"font: 50px monospace",layout:{type:"hbox",align:"stretch"},items:H});var I=new Ext.Component({style:"font: 50px monospace",floating:true,html:E,autoShow:true});F=I.getWidth();I.destroy()}function D(H){return B.items.getAt(H).getWidth()}describe("flex only",function(){it("should shrink wrap a single flex item",function(){G({flex:1,html:E});expect(D(0)).toBe(F);expect(B.getWidth()).toBe(F)});it("should shrink wrap 3 flexed items",function(){G([{flex:1,html:E},{flex:1,html:E},{flex:2,html:E}]);expect(D(0)).toBe(F);expect(D(1)).toBe(F);expect(D(2)).toBe(F);expect(B.getWidth()).toBe(F*3)})});describe("fixed width only",function(){it("should set the width of a single item",function(){G({width:200});expect(D(0)).toBe(200);expect(B.getWidth()).toBe(200)});it("should shrink wrap multiple items",function(){G([{width:500},{width:50}]);expect(D(0)).toBe(500);expect(D(1)).toBe(50);expect(B.getWidth()).toBe(550)})});describe("mixed",function(){it("should shrink wrap one flexed item, one auto-width item, and one fixed width item",function(){G([{flex:1,html:E},{html:E},{width:200}]);expect(D(0)).toBe(F);expect(D(1)).toBe(F);expect(D(2)).toBe(200);expect(B.getWidth()).toBe(F*2+200)})})});it("should size correctly with docked items & a configured parallel size & shrinkWrap perpendicular size",function(){B=new Ext.panel.Panel({floating:true,shadow:false,autoShow:true,border:false,layout:"hbox",width:150,dockedItems:[{dock:"left",xtype:"component",html:"X"}],items:[{xtype:"component",html:'<div style="height: 50px;"></div>'}]});expect(B.getWidth()).toBe(150);expect(B.getHeight()).toBe(50)});describe("scrolling",function(){var D=20,Q=600,R;function O(U,T){U=U||{};if(U.items){Ext.Array.forEach(U.items,function(W,V){if(!W.html){W.html=V+1}})}B=new Ext.container.Container(Ext.apply({renderTo:Ext.getBody(),layout:Ext.apply({type:"hbox"},T)},U))}function E(T,U){return{html:N(T,U)}}function N(T,U){T=T||10;U=U||10;return Ext.String.format('<div style="width: {0}px; height: {1}px;"></div>',T,U)}function P(T,U){var V=B.getEl(),W=V.dom;M(T,V,W,V.getStyle("overflow-x"),W.scrollWidth,W.clientWidth);M(U,V,W,V.getStyle("overflow-y"),W.scrollHeight,W.clientHeight)}function M(X,V,Y,U,T,W){if(X!==undefined){if(X){expect(U).not.toBe("hidden");expect(T).toBeGreaterThan(W)}else{if(U==="hidden"){expect(U).toBe("hidden")}else{expect(T).toBeLessThanOrEqual(W)}}}}function H(T){G(T,"getWidth")}function K(T){G(T,"getHeight")}function G(T,U){Ext.Array.forEach(T,function(W,V){expect(B.items.getAt(V)[U]()).toBe(W)})}function S(U){var X=B.getSizeModel().width.shrinkWrap,T=B.getEl(),W=T.dom,V=T.getStyle("overflow-y")!=="hidden"&&W.scrollHeight>W.clientHeight;if(Ext.isIE9&&X&&V){U+=4}expect(B.getWidth()).toBe(U)}function L(T){F(T,"getWidth")}function J(T){var X=B.getSizeModel().height.shrinkWrap,U=B.getEl(),W=U.dom,V=U.getStyle("overflow-x")!=="hidden"&&W.scrollWidth>W.clientWidth;if(Ext.isIE9&&X&&V){T+=4}expect(B.getHeight()).toBe(T)}function I(T){F(T,"getHeight")}function F(T,U){expect(B.getLayout().innerCt[U]()).toBe(T)}beforeEach(function(){R=Ext.getScrollbarSize;Ext.getScrollbarSize=function(){return{width:D,height:D}}});afterEach(function(){Ext.getScrollbarSize=R});describe("limited scrolling",function(){describe("with no scroller",function(){it("should limit the innerCt width to the container width",function(){O({width:Q,height:Q,defaultType:"component",items:[{width:400},{width:400}]});L(Q)})});describe("user scrolling disabled",function(){it("should limit the innerCt width to the container width",function(){O({width:Q,height:Q,defaultType:"component",scrollable:{x:false},items:[{width:400},{width:400}]});L(800)})})});describe("fixed size",function(){function T(V,W,U){O({width:Q,height:Q,defaultType:"component",items:V,scrollable:W!==undefined?W:true},U)}describe("horizontal scrolling",function(){it("should not show a scrollbar when configured to not scroll horizontally",function(){T([{width:400},{width:400}],{x:false});P(false,false);L(800)});describe("with no vertical scrollbar",function(){describe("configured",function(){it("should not show a scrollbar when the total width does not overflow",function(){T([{width:100},{width:100}]);P(false,false);H([100,100]);L(Q)});it("should show a scrollbar when the total width overflows",function(){T([{width:400},{width:400}]);P(true,false);H([400,400]);L(800)})});describe("calculated",function(){it("should not show a scrollbar when using only flex",function(){T([{flex:1},{flex:2}]);P(false,false);H([200,400]);L(Q)});describe("with constraint",function(){it("should not show a scrollbar when the minWidth does not cause an overflow",function(){T([{flex:1},{flex:1,minWidth:300},{flex:1},{flex:1}]);P(false,false);H([100,300,100,100]);L(Q)});it("should show a scrollbar when the minWidth causes an overflow",function(){T([{flex:1,minWidth:400},{flex:1,minWidth:400}]);P(true,false);H([400,400]);L(800)})})});describe("shrinkWrap",function(){it("should not show a scrollbar when the total width does not overflow",function(){T([E(50),E(50)]);P(false,false);H([50,50]);L(Q)});it("should show a scrollbar when the total width overflows",function(){T([E(400),E(400)]);P(true,false);H([400,400]);L(800)});describe("with constraint",function(){it("should not show a scrollbar when the minWidth does not cause an overflow",function(){T([{minWidth:200,html:N(100)},{minWidth:300,html:N(50)}]);P(false,false);H([200,300]);L(Q)});it("should show a scrollbar when the minWidth causes an overflow",function(){T([{minWidth:400,html:N(100)},{minWidth:500,html:N(50)}]);P(true,false);H([400,500]);L(900)})})});describe("configured + calculated",function(){it("should not show a scrollbar when the configured width does not overflow",function(){T([{width:300},{flex:1}]);P(false,false);H([300,300]);L(Q)});it("should show a scrollbar when the configured width overflows",function(){T([{width:700},{flex:1}]);P(true,false);H([700,0]);L(700)});describe("with constraint",function(){it("should not show a scrollbar when the minWidth does not cause an overflow",function(){T([{width:300},{flex:1,minWidth:200}]);P(false,false);H([300,300]);L(Q)});it("should show a scrollbar when the minWidth causes an overflow",function(){T([{width:300},{flex:1,minWidth:500}]);P(true,false);H([300,500]);L(800)})})});describe("configured + shrinkWrap",function(){it("should not show a scrollbar when the total width does not overflow",function(){T([{width:300},E(200)]);P(false,false);H([300,200]);L(Q)});it("should show a scrollbar when the total width overflows",function(){T([{width:400},E(400)]);P(true,false);H([400,400]);L(800)});describe("with constraint",function(){it("should not show a scrollbar when the minWidth does not cause an overflow",function(){T([{width:300},{html:N(100),minWidth:200}]);P(false,false);H([300,200]);L(Q)});it("should show a scrollbar when the minWidth causes an overflow",function(){T([{width:300},{html:N(200),minWidth:500}]);P(true,false);H([300,500]);L(800)})})});describe("calculated + shrinkWrap",function(){it("should not show a scrollbar when the shrinkWrap width does not overflow",function(){T([E(500),{flex:1}]);P(false,false);H([500,100]);L(Q)});it("should show a scrollbar when the shrinkWrap width overflows",function(){T([E(700),{flex:1}]);P(true,false);H([700,0]);L(700)});describe("with constraint",function(){it("should not show a scrollbar when the minWidth does not cause an overflow",function(){T([{html:N(100),minWidth:200},{flex:1,minWidth:300}]);P(false,false);H([200,400]);L(Q)});it("should show a scrollbar when the minWidth causes an overflow",function(){T([{html:N(100),minWidth:350},{flex:1,minWidth:350}]);P(true,false);H([350,350]);L(700)})})})});describe("with a vertical scrollbar",function(){var U=1000;describe("where the vertical scroll can be inferred before the first pass",function(){describe("configured",function(){it("should account for the vertical scrollbar when there is no overflow",function(){T([{width:100,height:U},{width:100}]);P(false,true);H([100,100]);L(Q-D)});it("should account for the vertical scrollbar when there is overflow",function(){T([{width:400,height:U},{width:400}]);P(true,true);H([400,400]);L(800)})});describe("calculated",function(){it("should account for the vertical scrollbar",function(){T([{flex:1,height:U},{flex:1}]);P(false,true);H([290,290]);L(Q-D)});describe("with constraint",function(){it("should account for the vertical scrollbar when the minWidth does not cause overflow",function(){T([{flex:1,minWidth:400,height:U},{flex:1}]);P(false,true);H([400,180]);L(Q-D)});it("should account for the vertical scrollbar when the minWidth causes an overflow",function(){T([{flex:1,minWidth:350,height:U},{flex:1,minWidth:350}]);P(true,true);H([350,350]);L(700)})})});describe("shrinkWrap",function(){it("should account for the vertical scrollbar when there is no overflow",function(){T([{html:N(200),height:U},{html:N(300)}]);P(false,true);H([200,300]);L(Q-D)});it("should account for the vertical scrollbar when there is overflow",function(){T([{html:N(400),height:U},{html:N(400)}]);P(true,true);H([400,400]);L(800)});describe("with constraint",function(){it("should account for the vertical scrollbar when the minWidth does not cause overflow",function(){T([{html:N(100),minWidth:200,height:U},{html:N(100),minWidth:300}]);P(false,true);H([200,300]);L(Q-D)});it("should account for the vertical scrollbar when the minWidth causes an overflow",function(){T([{html:N(100),minWidth:350,height:U},{html:N(200),minWidth:350}]);P(true,true);H([350,350]);L(700)})})});describe("configured + calculated",function(){it("should account for the vertical scrollbar when there is no overflow",function(){T([{width:150,height:U},{flex:1}]);P(false,true);H([150,430]);L(Q-D)});it("should account for the vertical scrollbar when there is overflow",function(){T([{width:800,height:U},{flex:1}]);P(true,true);H([800,0]);L(800)});describe("with constraint",function(){it("should account for the vertical scrollbar when the minWidth does not cause overflow",function(){T([{width:200,height:U},{flex:1,minWidth:200}]);P(false,true);H([200,380]);L(Q-D)});it("should account for the vertical scrollbar when the minWidth causes an overflow",function(){T([{width:200,height:U},{flex:1,minWidth:500}]);P(true,true);H([200,500]);L(700)})})});describe("configured + shrinkWrap",function(){it("should account for the vertical scrollbar when there is no overflow",function(){T([{width:150,height:U},E(300)]);P(false,true);H([150,300]);L(Q-D)});it("should account for the vertical scrollbar when there is overflow",function(){T([{width:350,height:U},E(350)]);P(true,true);H([350,350]);L(700)});describe("with constraint",function(){it("should account for the vertical scrollbar when the minWidth does not cause overflow",function(){T([{width:200,height:U},{html:N(100),minWidth:300}]);P(false,true);H([200,300]);L(Q-D)});it("should account for the vertical scrollbar when the minWidth causes an overflow",function(){T([{width:200,height:U},{html:N(200),minWidth:550}]);P(true,true);H([200,550]);L(750)})})});describe("calculated + shrinkWrap",function(){it("should account for the vertical scrollbar when there is no overflow",function(){T([{html:N(300),height:U},{flex:1}]);P(false,true);H([300,280]);L(Q-D)});it("should account for the vertical scrollbar when there is overflow",function(){T([{html:E(700),height:U},{flex:1}]);P(true,true);H([700,0]);L(700)});describe("with constraint",function(){it("should account for the vertical scrollbar when the minWidth does not cause overflow",function(){T([{html:N(200),height:U},{flex:1,minWidth:300}]);P(false,true);H([200,380]);L(Q-D)});it("should account for the vertical scrollbar when the minWidth causes an overflow",function(){T([{html:N(400),height:U},{flex:1,minWidth:500}]);P(true,true);H([400,500]);L(900)})})})});describe("when the vertical scroll needs to be calculated",function(){describe("configured",function(){it("should account for the vertical scrollbar when there is no overflow",function(){T([{width:100,html:N(10,U)},{width:100}]);P(false,true);H([100,100]);L(Q-D)});it("should account for the vertical scrollbar when there is overflow",function(){T([{width:400,html:N(10,U)},{width:400}]);P(true,true);H([400,400]);L(800)})});describe("calculated",function(){it("should account for the vertical scrollbar",function(){T([{flex:1,html:N(10,U)},{flex:1}]);P(false,true);H([290,290]);L(Q-D)});describe("minWidth",function(){it("should account for the vertical scrollbar when the minWidth does not cause overflow",function(){T([{flex:1,minWidth:400,html:N(10,U)},{flex:1}]);P(false,true);H([400,180]);L(Q-D)});it("should account for the vertical scrollbar when the minWidth causes an overflow",function(){T([{flex:1,minWidth:350,html:N(10,U)},{flex:1,minWidth:350}]);P(true,true);H([350,350]);L(700)})})});describe("shrinkWrap",function(){it("should account for the vertical scrollbar when there is no overflow",function(){T([{html:N(200,U)},{html:N(300)}]);P(false,true);H([200,300]);L(Q-D)});it("should account for the vertical scrollbar when there is overflow",function(){T([{html:N(400,U)},{html:N(400)}]);P(true,true);H([400,400]);L(800)});describe("with constraint",function(){it("should account for the vertical scrollbar when the minWidth does not cause overflow",function(){T([{html:N(100,U),minWidth:200},{html:N(100),minWidth:300}]);P(false,true);H([200,300]);L(Q-D)});it("should account for the vertical scrollbar when the minWidth causes an overflow",function(){T([{html:N(100,U),minWidth:350},{html:N(200),minWidth:350}]);P(true,true);H([350,350]);L(700)})})});describe("configured + calculated",function(){it("should account for the vertical scrollbar when there is no overflow",function(){T([{width:150,html:N(10,U)},{flex:1}]);P(false,true);H([150,430]);L(Q-D)});it("should account for the vertical scrollbar when there is overflow",function(){T([{width:800,html:N(10,U)},{flex:1}]);P(true,true);H([800,0]);L(800)});describe("with constraint",function(){it("should account for the vertical scrollbar when the minWidth does not cause overflow",function(){T([{width:200,html:N(10,U)},{flex:1,minWidth:200}]);P(false,true);H([200,380]);L(Q-D)});it("should account for the vertical scrollbar when the minWidth causes an overflow",function(){T([{width:200,html:N(10,U)},{flex:1,minWidth:500}]);P(true,true);H([200,500]);L(700)})})});describe("configured + shrinkWrap",function(){it("should account for the vertical scrollbar when there is no overflow",function(){T([{width:150,html:N(10,U)},E(300)]);P(false,true);H([150,300]);L(Q-D)});it("should account for the vertical scrollbar when there is overflow",function(){T([{width:350,html:N(10,U)},E(350)]);P(true,true);H([350,350]);L(700)});describe("with constraint",function(){it("should account for the vertical scrollbar when the minWidth does not cause overflow",function(){T([{width:200,html:N(10,U)},{html:N(100),minWidth:300}]);P(false,true);H([200,300]);L(Q-D)});it("should account for the vertical scrollbar when the minWidth causes an overflow",function(){T([{width:200,html:N(10,U)},{html:N(200),minWidth:550}]);P(true,true);H([200,550]);L(750)})})});describe("calculated + shrinkWrap",function(){it("should account for the vertical scrollbar when there is no overflow",function(){T([{html:N(300,U)},{flex:1}]);P(false,true);H([300,280]);L(Q-D)});it("should account for the vertical scrollbar when there is overflow",function(){T([{html:E(700,U)},{flex:1}]);P(true,true);H([700,0]);L(700)});describe("with constraint",function(){it("should account for the vertical scrollbar when the minWidth does not cause overflow",function(){T([{html:N(200,U)},{flex:1,minWidth:300}]);P(false,true);H([200,380]);L(Q-D)});it("should account for the vertical scrollbar when the minWidth causes an overflow",function(){T([{html:N(400,U)},{flex:1,minWidth:500}]);P(true,true);H([400,500]);L(900)})})})});describe("when the vertical scrollbar triggers a horizontal scrollbar",function(){var V=Ext.getScrollbarSize().width>0;describe("configured",function(){it("should account for the vertical scrollbar",function(){T([{width:295,html:N(10,U)},{width:295}]);P(V,true);H([295,295]);L(590)})});describe("shrinkWrap",function(){it("should account for the vertical scrollbar",function(){T([{html:N(295,U)},E(295)]);P(V,true);H([295,295]);L(590)})});describe("configured + shrinkWrap",function(){it("should account for the vertical scrollbar",function(){T([{html:N(295,U)},{width:295}]);P(V,true);H([295,295]);L(590)})})})})});describe("vertical scrolling",function(){it("should not show a scrollbar when configured to not scroll vertically",function(){T([{width:100,height:900},{width:100}],{y:false});P(false,false)});describe("with no horizontal scrollbar",function(){describe("configured height",function(){it("should not show a scrollbar when the largest height does not overflow",function(){T([{width:100,height:300},{width:100,height:400}]);P(false,false);K([300,400]);I(400)});it("should show a scrollbar when the largest height overflows",function(){T([{width:100,height:700},{width:200,height:800}]);P(false,true);K([700,800]);I(800)})});describe("align stretch",function(){it("should not show a scrollbar by default",function(){T([{width:100},{width:100}],true,{align:"stretch"});P(false,false);K([600,600]);I(Q)});describe("with constraint",function(){it("should not show a scrollbar when the minHeight does not cause an overflow",function(){T([{width:100,minHeight:400},{width:100}],true,{align:"stretch"});P(false,false);K([600,600]);I(Q)});it("should show a scrollbar when the minHeight causes an overflow",function(){T([{width:100,minHeight:800},{width:100}],true,{align:"stretch"});P(false,true);K([800,600]);I(800)})})});describe("shrinkWrap height",function(){it("should not show a scrollbar when the largest height does not overflow",function(){T([E(10,300),E(10,200)]);P(false,false);K([300,200]);I(300)});it("should show a scrollbar when the largest height overflows",function(){T([E(10,500),E(10,750)]);P(false,true);K([500,750]);I(750)});describe("with constraint",function(){it("should not show a scrollbar when the minHeight does not cause an overflow",function(){T([{width:100,minHeight:400,html:N(10,10)},{width:100,minHeight:500,html:N(10,10)}]);P(false,false);K([400,500]);I(500)});it("should show a scrollbar when the minHeight causes an overflow",function(){T([{width:100,minHeight:650,html:N(10,50)},{width:100,minHeight:750,html:N(10,50)}]);P(false,true);K([650,750]);I(750)})})})});describe("with a horizontal scrollbar",function(){describe("where the horizontal scroll can be inferred before the first pass",function(){describe("configured height",function(){it("should not show a scrollbar when the largest height does not overflow",function(){T([{width:400,height:300},{width:400,height:400}]);P(true,false);K([300,400]);I(400)});it("should show a scrollbar when the largest height overflows",function(){T([{width:400,height:700},{width:400,height:800}]);P(true,true);K([700,800]);I(800)})});describe("align stretch",function(){it("should not show a scrollbar by default",function(){T([{width:400},{width:400}],true,{align:"stretch"});P(true,false);K([580,580]);I(Q-D)});describe("with constraint",function(){it("should not show a scrollbar when the minHeight does not cause an overflow",function(){T([{width:400,minHeight:400},{width:400}],true,{align:"stretch"});P(true,false);K([580,580]);I(Q-D)});it("should show a scrollbar when the minHeight causes an overflow",function(){T([{width:400,minHeight:800},{width:400}],true,{align:"stretch"});P(true,true);K([800,580]);I(800)})})});describe("shrinkWrap height",function(){it("should not show a scrollbar when the largest height does not overflow",function(){T([{width:400,html:N(10,300)},{width:400,html:N(10,200)}]);P(true,false);K([300,200]);I(300)});it("should show a scrollbar when the largest height overflows",function(){T([{width:400,html:N(10,500)},{width:400,html:N(10,750)}]);P(true,true);K([500,750]);I(750)});describe("with constraint",function(){it("should not show a scrollbar when the minHeight does not cause an overflow",function(){T([{width:400,minHeight:400,html:N(10,10)},{width:400,minHeight:500,html:N(10,10)}]);P(true,false);K([400,500]);I(500)});it("should show a scrollbar when the minHeight causes an overflow",function(){T([{width:400,minHeight:650,html:N(10,50)},{width:400,minHeight:750,html:N(10,50)}]);P(true,true);K([650,750]);I(750)})})})});describe("when the vertical scroll needs to be calculated",function(){describe("configured height",function(){it("should not show a scrollbar when the largest height does not overflow",function(){T([{html:N(400),height:300},{html:N(400),height:400}]);P(true,false);K([300,400]);I(400)});it("should show a scrollbar when the largest height overflows",function(){T([{html:N(400),height:700},{html:N(400),height:800}]);P(true,true);K([700,800]);I(800)})});describe("align stretch",function(){it("should not show a scrollbar by default",function(){T([{html:N(400)},{html:N(400)}],true,{align:"stretch"});P(true,false);K([580,580]);I(Q-D)});describe("with constraint",function(){it("should not show a scrollbar when the minHeight does not cause an overflow",function(){T([{html:N(400),minHeight:400},{html:N(400)}],true,{align:"stretch"});P(true,false);K([580,580]);I(Q-D)});it("should show a scrollbar when the minHeight causes an overflow",function(){T([{html:N(400),minHeight:800},{html:N(400)}],true,{align:"stretch"});P(true,true);K([800,580]);I(800)})})});describe("shrinkWrap height",function(){it("should not show a scrollbar when the largest height does not overflow",function(){T([E(400,300),E(400,200)]);P(true,false);K([300,200]);I(300)});it("should show a scrollbar when the largest height overflows",function(){T([E(400,500),E(400,750)]);P(true,true);K([500,750]);I(750)});describe("with constraint",function(){it("should not show a scrollbar when the minHeight does not cause an overflow",function(){T([{minHeight:400,html:N(400,10)},{minHeight:500,html:N(400,10)}]);P(true,false);K([400,500]);I(500)});it("should show a scrollbar when the minHeight causes an overflow",function(){T([{minHeight:650,html:N(400,50)},{minHeight:750,html:N(400,50)}]);P(true,true);K([650,750]);I(750)})})})})})})});describe("shrinkWrap height",function(){function T(V,W,U){O({floating:true,width:Q,defaultType:"component",items:V,scrollable:W!==undefined?W:true},U)}describe("with no horizontal scrollbar",function(){describe("configured",function(){it("should publish the largest height",function(){T([{width:100,height:400},{width:100,height:500}]);P(false,false);K([400,500]);J(500)})});describe("shrinkWrap",function(){it("should publish the largest height",function(){T([{width:100,html:N(10,250)},{width:100,html:N(10,300)}]);P(false,false);K([250,300]);J(300)});describe("with constraint",function(){it("should publish the largest constrained height",function(){T([{width:100,html:N(10,150),minHeight:300},{width:100,html:N(10,100),minHeight:350}]);P(false,false);K([300,350]);J(350)})})});describe("align: stretch",function(){it("should stretch items & publish the largest height",function(){T([{width:100,html:N(10,200)},{width:100,html:N(10,300)}],true,{align:"stretch"});P(false,false);K([300,300]);J(300)});describe("with constraint",function(){it("should stretch items and publish the largest constrained height",function(){T([{width:100,minHeight:400},{width:100,minHeight:550}],true,{align:"stretch"});P(false,false);K([550,550]);J(550)})})})});describe("with a horizontal scrollbar",function(){var U=1000;describe("where the horizontal scroll can be inferred before the first pass",function(){describe("configured",function(){it("should account for the scrollbar in the total height",function(){T([{width:U,height:400},{height:500}]);P(true,false);K([400,500]);J(520)})});describe("shrinkWrap",function(){it("should account for the scrollbar in the total height",function(){T([{width:U,html:N(10,250)},{html:N(10,300)}]);P(true,false);K([250,300]);J(320)});describe("with constraint",function(){it("should publish the largest constrained height",function(){T([{width:U,html:N(10,150),minHeight:300},{html:N(10,100),minHeight:350}]);P(true,false);K([300,350]);J(370)})})});describe("align: stretch",function(){it("should stretch items & publish the largest height",function(){T([{width:U,html:N(10,200)},{width:100,html:N(10,300)}]);P(true,false);K([200,300]);J(320)});describe("with constraint",function(){it("should stretch items and publish the largest constrained height",function(){T([{width:U,minHeight:400},{width:100,minHeight:550}]);P(true,false);K([400,550]);J(570)})})})});describe("when the horizontal scroll needs to be calculated",function(){describe("configured",function(){it("should account for the scrollbar in the total height",function(){T([{html:N(U,400)},{html:N(10,500)}]);P(true,false);K([400,500]);J(520)})});describe("shrinkWrap",function(){it("should account for the scrollbar in the total height",function(){T([{html:N(U,250)},{html:N(10,300)}]);P(true,false);K([250,300]);J(320)});describe("with constraint",function(){it("should publish the largest constrained height",function(){T([{html:N(U,150),minHeight:300},{html:N(10,100),minHeight:350}]);P(true,false);K([300,350]);J(370)})})});describe("align: stretch",function(){it("should stretch items & publish the largest height",function(){T([{html:N(U,200)},{width:100,html:N(10,300)}],true,{align:"stretch"});P(true,false);K([300,300]);J(320)});describe("with constraint",function(){it("should stretch items and publish the largest constrained height",function(){T([{html:N(U,10),minHeight:400},{minHeight:550}],true,{align:"stretch"});P(true,false);K([550,550]);J(570)})})})})})});describe("shrinkWrap width",function(){function T(V,W,U){O({floating:true,height:Q,defaultType:"component",items:V,scrollable:W!==undefined?W:true},U)}describe("with no vertical scrollbar",function(){describe("configured",function(){it("should publish the total width",function(){T([{width:400},{width:400}]);P(false,false);H([400,400]);S(800)})});describe("shrinkWrap",function(){it("should publish the total width",function(){T([E(400),E(400)]);P(false,false);H([400,400]);S(800)});describe("with constraint",function(){it("should publish the total width",function(){T([{minWidth:350,html:N(200)},{minWidth:400,html:N(300)}]);P(false,false);H([350,400]);S(750)})})});describe("configured + shrinkWrap",function(){it("should publish the total width",function(){T([{width:400},E(400)]);P(false,false);H([400,400]);S(800)});describe("with constraint",function(){it("should publish the total width",function(){T([{width:350},{minWidth:400,html:N(300)}]);P(false,false);H([350,400]);S(750)})})})});describe("with a vertical scrollbar",function(){var U=1000;describe("where the vertical scroll can be inferred before the first pass",function(){describe("configured",function(){it("should account for the scrollbar in the total width",function(){T([{width:400,height:U},{width:400}]);P(false,true);H([400,400]);S(820)})});describe("shrinkWrap",function(){it("should account for the scrollbar in the total width",function(){T([{html:N(400),height:U},E(400)]);P(false,true);H([400,400]);S(820)});describe("with constraint",function(){it("should account for the scrollbar in the total width",function(){T([{minWidth:350,html:N(200),height:U},{minWidth:400,html:N(100)}]);P(false,true);H([350,400]);S(770)})})});describe("configured + shrinkWrap",function(){it("should account for the scrollbar in the total width",function(){T([{width:400,height:U},E(400)]);P(false,true);H([400,400]);S(820)});describe("with constraint",function(){it("should account for the scrollbar in the total width",function(){T([{width:350,height:U},{minWidth:400,html:N(300)}]);P(false,true);H([350,400]);S(770)})})})});describe("when the vertical scroll needs to be calculated",function(){describe("configured",function(){it("should account for the scrollbar in the total width",function(){T([{width:400,html:N(10,U)},{width:400}]);P(false,true);H([400,400]);S(820)})});describe("shrinkWrap",function(){it("should account for the scrollbar in the total width",function(){T([{html:N(400,U)},E(400)]);P(false,true);H([400,400]);S(820)});describe("with constraint",function(){it("should account for the scrollbar in the total width",function(){T([{minWidth:350,html:N(200,U)},{minWidth:400,html:N(100)}]);P(false,true);H([350,400]);S(770)})})});describe("configured + shrinkWrap",function(){it("should account for the scrollbar in the total width",function(){T([{width:400,html:N(10,U)},E(400)]);P(false,true);H([400,400]);S(820)});describe("with constraint",function(){it("should account for the scrollbar in the total width",function(){T([{width:350,html:N(10,U)},{minWidth:400,html:N(300)}]);P(false,true);H([350,400]);S(770)})})})})})});describe("preserving scroll state",function(){it("should restore the horizontal/vertical scroll position with user scrolling",function(){O({width:400,height:400,scrollable:true,items:[{width:300,height:500},{width:300,height:500}]});var U=B.getScrollable();U.scrollTo(50,30);var T=U.getPosition();expect(T).toEqual({x:50,y:30});B.setSize(401,401);var T=U.getPosition();expect(T).toEqual({x:50,y:0})});it("should restore the horizontal/vertical scroll position with programmatic scrolling",function(){O({width:400,height:400,scrollable:{x:false,y:false},items:[{width:300,height:500},{width:300,height:500}]});var U=B.getScrollable();U.scrollTo(50,30);var T=U.getPosition();expect(T).toEqual({x:50,y:30});B.setSize(401,401);var T=U.getPosition();expect(T).toEqual({x:50,y:0})})})});function A(D){describe("parent type: "+D.parentXtype+", child type: "+D.childXtype+", parent layout: "+D.parentLayout,function(){function E(G){var K=G==="width"?"height":"width",J=Ext.getScrollbarSize(),H={xtype:"component",style:"margin: 3px; background-color: green;"},F={xtype:D.childXtype,autoScroll:true,layout:"hbox",items:[H]},I={xtype:D.parentXtype,floating:true,shadow:false,layout:D.parentLayout,items:[F]};H[G]=500;H[K]=90-J[K];F[G]=98;if(D.parentXtype==="container"){I.style="border: 1px solid black"}if(D.childXtype==="container"){F.style="border: 1px solid black"}B=Ext.widget(I);B.show()}describe("horizontal overflow with shrink wrap height",function(){beforeEach(function(){E("width")});it("should include scrollbar size in the height",function(){expect(B.getHeight()).toBe(100)})});describe("vertical overflow with shrink wrap width",function(){beforeEach(function(){E("height")});it("should include scrollbar size in the width",function(){expect(B.getWidth()).toBe(100)})})})}A({parentXtype:"container",childXtype:"container",parentLayout:"auto"});A({parentXtype:"container",childXtype:"container",parentLayout:"hbox"});A({parentXtype:"panel",childXtype:"container",parentLayout:"auto"});A({parentXtype:"panel",childXtype:"container",parentLayout:"hbox"});A({parentXtype:"container",childXtype:"panel",parentLayout:"auto"});A({parentXtype:"container",childXtype:"panel",parentLayout:"hbox"});A({parentXtype:"panel",childXtype:"panel",parentLayout:"auto"});A({parentXtype:"panel",childXtype:"panel",parentLayout:"hbox"});describe("misc overflow",function(){it("should layout with autoScroll + align: stretch + A shrink wrapped parallel item",function(){expect(function(){B=new Ext.container.Container({autoScroll:true,layout:{align:"stretch",type:"hbox"},renderTo:Ext.getBody(),height:600,width:200,items:[{xtype:"component",width:200,html:"Item"},{xtype:"component",html:"Component"}]})}).not.toThrow()})});describe("Parallel overflow",function(){it("should expand shrinkwrap height to accommodate parallel scrollbar when parallel dimension overflows",function(){B=Ext.create("Ext.container.Container",{defaultType:"container",id:"outermost-autoheight",renderTo:document.body,width:200,style:"border: 1px solid black",layout:{type:"hbox",align:"stretchmax"},items:[{id:"overflowX-vbox-container-left",defaultType:"component",style:"background-color:yellow",layout:"hbox",flex:1,overflowX:"auto",items:[{width:500,height:15,id:"top-box-500px-left"}]},{xtype:"splitter",id:"parallel-overflow-test-splitter"},{id:"overflowX-vbox-container-right",defaultType:"component",style:"background-color:yellow",layout:"hbox",flex:1,overflowX:"auto",items:[{width:500,height:15,id:"top-box-500px-right"}]}]});expect(B).toHaveLayout({"el":{"xywh":"0 0 200 "+(15+Ext.getScrollbarSize().height+2)},"items":{"overflowX-vbox-container-left":{"el":{"xywh":"1 1 97 "+(15+Ext.getScrollbarSize().height)},"items":{"top-box-500px-left":{"el":{"xywh":"0 0 500 15"}}}},"parallel-overflow-test-splitter":{"el":{"xywh":"98 1 5 "+(15+Ext.getScrollbarSize().height)}},"overflowX-vbox-container-right":{"el":{"xywh":"103 1 96 "+(15+Ext.getScrollbarSize().height)},"items":{"top-box-500px-right":{"el":{"xywh":"0 0 500 15"}}}}}})})});describe("scroll preserving across layouts",function(){xit("should preserve vertical scroll when an inner fieldset is collapsed",function(){var E=Ext.create("Ext.panel.Panel",{renderTo:document.body,height:100,width:300,autoScroll:true,items:[{xtype:"container",layout:"hbox",items:[{xtype:"component",height:100,html:"scroll down and toggle the fieldset"}]},{id:"myFieldset",xtype:"fieldset",title:"Toggle Me!",collapsible:true,items:[{xtype:"component",width:100,height:20}]}]}),D=Ext.getCmp("myFieldset"),G=E.body.dom,F;D.collapse();G.scrollTop=9999;F=G.scrollTop;D.expand();G.scrollTop=0;expect(F).not.toBe(0);expect(F).not.toBe(9999);G.scrollTop=9999;D.collapse();expect(G.scrollTop).toBe(F);E.destroy()})})})