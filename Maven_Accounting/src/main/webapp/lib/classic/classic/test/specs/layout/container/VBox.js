describe("Ext.layout.container.VBox",function(){var B,D,C;afterEach(function(){Ext.destroy(B,D);B=D=C=null});describe("defaults",function(){var E=0,F=Ext.layout.container.VBox.prototype;beforeEach(function(){if(!E){B=new Ext.container.Container({renderTo:Ext.getBody(),layout:"vbox",width:100,height:100});E++}});it("should have align: begin",function(){expect(F.align).toBe("begin")});it("should have constrainAlign: false",function(){expect(F.constrainAlign).toBe(false)});it("should have enableSplitters: true",function(){expect(F.enableSplitters).toBe(true)});it("should have no padding",function(){expect(F.padding).toBe(0)});it("should have pack start",function(){expect(F.pack).toBe("start")})});describe("restoring scroll state",function(){var H,F,G,E,I;beforeEach(function(){H=new Ext.window.Window({title:"Hello",width:400,height:300,x:10,y:10,layout:"fit",items:[{xtype:"form",autoScroll:true,layout:"vbox",fieldDefaults:{labelAlign:"top",msgTarget:"side"},items:[{xtype:"textfield",text:"ddd"},{xtype:"textfield",text:"ddd"},{xtype:"checkbox",boxLabel:"Checkbox 1"},{xtype:"checkbox",boxLabel:"Checkbox 2"},{xtype:"checkbox",boxLabel:"Checkbox 3"},{xtype:"checkbox",boxLabel:"Checkbox 4"},{xtype:"checkbox",boxLabel:"Checkbox 5"},{xtype:"checkbox",boxLabel:"Checkbox 6"},{xtype:"checkbox",boxLabel:"Checkbox 7"},{xtype:"checkbox",boxLabel:"Checkbox 8"},{xtype:"checkbox",boxLabel:"Checkbox 9"},{xtype:"checkbox",boxLabel:"Checkbox 10"},{xtype:"checkbox",boxLabel:"Checkbox 11"},{xtype:"button",text:"Add"}]}]});F=H.down("form");G=F.child("checkbox:last");H.show();E=F.getScrollable()});afterEach(function(){H.destroy()});it("should restore scroll state after a layout",function(){var J;runs(function(){E.scrollIntoView(G.el,false);J=E.getPosition().y;G.focus()});waitsFor(function(){return G.hasFocus},"last checkbox to gain focus");runs(function(){var K=E.getPosition().y;if(Ext.isIE){expect(K).toBeWithin(1,J)}else{expect(K).toBe(J)}})})});describe("removing items",function(){it("should clear the top on an item when removing and using in another container",function(){D=new Ext.Component({height:50});B=new Ext.container.Container({renderTo:Ext.getBody(),layout:"vbox",width:100,height:100,items:[{height:50},D]});var E=new Ext.container.Container({renderTo:Ext.getBody(),layout:"fit",width:100,height:100});B.remove(D,false);E.add(D);var F=D.getEl().getStyle("top");if(F==="auto"){F=""}else{if(F=="0px"){F=""}}expect(F).toBe("");E.destroy()});it("should remove an item when the item is not rendered and the item is not destroying",function(){B=new Ext.container.Container({renderTo:Ext.getBody(),collapsed:true,layout:"vbox",width:100,height:100});D=B.add({});expect(function(){B.remove(0,false)}).not.toThrow()})});describe("padding",function(){beforeEach(function(){C=function(E){D=new Ext.Component({flex:1});B=new Ext.container.Container({renderTo:Ext.getBody(),width:80,height:100,layout:{type:"vbox",align:"stretch",padding:E},items:D})}});it("should not add any padding by default",function(){C(0);expect(D.getWidth()).toBe(80);expect(D.getHeight()).toBe(100)});it("should read a padding number",function(){C(5);expect(D.getWidth()).toBe(70);expect(D.getHeight()).toBe(90)});it("should read a padding string",function(){C("1 2 3 4");expect(D.getWidth()).toBe(74);expect(D.getHeight()).toBe(96)})});describe("padding and shrinkwrap",function(){beforeEach(function(){C=function(E){B=new Ext.container.Container({renderTo:Ext.getBody(),width:80,padding:100,layout:{type:"vbox",align:"stretch"},defaults:{xtype:"component",height:50,margin:E},items:[{},{}]})}});it("should not add any padding by default",function(){C(0);expect(B.layout.innerCt.getHeight()).toBe(100)});it("should read a padding number",function(){C(5);expect(B.layout.innerCt.getHeight()).toBe(120)});it("should read a padding string",function(){C("1 2 3 4");expect(B.layout.innerCt.getHeight()).toBe(108)})});it("should apply margin to components",function(){B=new Ext.container.Container({width:200,height:200,renderTo:Ext.getBody(),defaultType:"component",layout:{type:"vbox",align:"stretch"},defaults:{flex:1,margin:5},items:[{},{}]});expect(B.items.first().getY()).toBe(5);expect(B.items.first().getX()).toBe(5);expect(B.items.last().getY()).toBe(105);expect(B.items.last().getX()).toBe(5)});describe("pack",function(){var E;beforeEach(function(){C=function(F){B=new Ext.container.Container({defaultType:"component",renderTo:Ext.getBody(),width:600,height:600,layout:{type:"vbox",pack:F},items:[{height:30},{height:40},{height:20}]})};E=function(F){return B.items.getAt(F).el.getY()}});afterEach(function(){E=null});it("should pack at the top with pack: start",function(){C("start");expect(E(0)).toBe(0);expect(E(1)).toBe(30);expect(E(2)).toBe(70)});it("should pack in the middle with pack: center",function(){C("center");expect(E(0)).toBe(255);expect(E(1)).toBe(285);expect(E(2)).toBe(325)});it("should pack at the bottom with pack: cend",function(){C("end");expect(E(0)).toBe(510);expect(E(1)).toBe(540);expect(E(2)).toBe(580)})});describe("align",function(){var G,F,E,H;beforeEach(function(){C=function(K,I,J){J=J||{};B=new Ext.container.Container({defaultType:"component",renderTo:Ext.getBody(),width:600,height:600,autoScroll:!!J.autoScroll,layout:{type:"vbox",align:K,constrainAlign:!!J.constrainAlign},items:I})};G=function(I){return B.items.getAt(I).getEl().getX()};F=function(I){return B.items.getAt(I).getEl().getY()};E=function(I){return B.items.getAt(I).getWidth()};H=function(I){return B.items.getAt(I).getHeight()}});afterEach(function(){G=F=E=H=null});describe("left/center/right",function(){it("should keep items at the left when using align: left",function(){C("left",[{html:"a"},{html:"b"}]);expect(G(0)).toBe(0);expect(G(1)).toBe(0)});it("should align items in the middle when using align: center",function(){C("center",[{width:100},{width:300}]);expect(G(0)).toBe(250);expect(G(1)).toBe(150)});it("should keep items to the right when using align: right",function(){C("right",[{html:"a"},{html:"b"}]);expect(G(0)).toBe(600-E(0));expect(G(1)).toBe(600-E(1))});describe("constrainAlign",function(){var I=function(M,J){var K=[],L=0;for(;L<J;++L){K.push(M)}return K.join(" ")};it("should constrain a shrink wrapped item with align: left",function(){C("left",[{html:I("A",100)}],{constrainAlign:true});expect(E(0)).toBe(600);expect(G(0)).toBe(0)});it("should constrain a shrink wrapped item with align: center",function(){C("center",[{html:I("A",100)}],{constrainAlign:true});expect(E(0)).toBe(600);expect(G(0)).toBe(0)});it("should constrain a shrink wrapped item with align: right",function(){C("center",[{html:I("A",100)}],{constrainAlign:true});expect(E(0)).toBe(600);expect(G(0)).toBe(0)});it("should not constrain a fixed width item",function(){C("left",[{html:"A",width:1000}],{constrainAlign:false});expect(E(0)).toBe(1000)});it("should recalculate the top positions",function(){C("left",[{html:I("A",100)},{html:"B"}],{constrainAlign:true});expect(F(0)).toBe(0);expect(F(1)).toBe(H(0))})})});describe("stretchmax",function(){it("should stretch all items to the size of the largest when using align: stretchmax",function(){C("stretchmax",[{html:"foo"},{html:"foo bar baz"},{html:"foo"}]);D=new Ext.Component({renderTo:Ext.getBody(),html:"foo bar baz",floating:true});var I=D.getWidth();D.destroy();expect(E(0)).toBe(I);expect(E(1)).toBe(I);expect(E(2)).toBe(I)});it("should always use a stretchmax over a fixed width",function(){C("stretchmax",[{width:30},{html:"foo bar baz blah long text"},{html:"foo"}]);D=new Ext.Component({renderTo:Ext.getBody(),html:"foo bar baz blah long text",floating:true});var I=D.getWidth();D.destroy();expect(E(0)).toBe(I);expect(E(1)).toBe(I);expect(E(2)).toBe(I)});describe("minWidth",function(){it("should stretch an item with a minWidth",function(){C("stretchmax",[{width:30},{minWidth:5}]);expect(E(0)).toBe(30);expect(E(1)).toBe(30)});it("should stretch to the item with the largest minWidth",function(){C("stretchmax",[{minWidth:30},{minWidth:50}]);expect(E(0)).toBe(50);expect(E(1)).toBe(50)});it("should stretch a single item outside the bounds of the container",function(){C("stretchmax",[{xtype:"panel",title:"Title",minWidth:1000,shrinkWrap:true,shrinkWrapDock:true,html:"Content..."}],{autoScroll:true});expect(E(0)).toBe(1000)})});it("should respect a maxWidth",function(){C("stretchmax",[{width:30},{maxWidth:20}]);expect(E(0)).toBe(30);expect(E(1)).toBe(20)})});it("should stretch all items to the container width",function(){C("stretch",[{},{}]);expect(E(0)).toBe(600);expect(E(1)).toBe(600)})});describe("height",function(){var E;beforeEach(function(){C=function(F){B=new Ext.container.Container({renderTo:Ext.getBody(),width:100,height:600,defaultType:"component",layout:{type:"vbox",align:"stretch"},items:F})};E=function(F){return B.items.getAt(F).getHeight()}});afterEach(function(){E=null});describe("flex only",function(){it("should stretch a single flex item to the height of the container",function(){C({flex:1});expect(E(0)).toBe(600)});it("should stretch 3 equally flexed items equally",function(){C([{flex:1},{flex:1},{flex:1}]);expect(E(0)).toBe(200);expect(E(1)).toBe(200);expect(E(2)).toBe(200)});it("should flex 2 items according to ratio",function(){C([{flex:3},{flex:1}]);expect(E(0)).toBe(450);expect(E(1)).toBe(150)});it("should flex 4 items according to ratio",function(){C([{flex:3},{flex:1},{flex:3},{flex:1}]);expect(E(0)).toBe(225);expect(E(1)).toBe(75);expect(E(2)).toBe(225);expect(E(3)).toBe(75)});it("should use flex as a ratio",function(){C([{flex:5000000},{flex:1000000}]);expect(E(0)).toBe(500);expect(E(1)).toBe(100)})});describe("fixed height only",function(){it("should set the height of a single item",function(){C({height:200});expect(E(0)).toBe(200)});it("should set the height of multiple items",function(){C([{height:500},{height:50}]);expect(E(0)).toBe(500);expect(E(1)).toBe(50)});it("should allow a single item to exceed the container height",function(){C({height:900});expect(E(0)).toBe(900)});it("should allow multiple items to exceed the container height",function(){C([{height:400},{height:400}]);expect(E(0)).toBe(400);expect(E(1)).toBe(400)})});describe("mixed",function(){it("should give any remaining space to a single flexed item",function(){C([{height:200},{flex:1}]);expect(E(0)).toBe(200);expect(E(1)).toBe(400)});it("should flex a single item with 2 fixed",function(){C([{height:100},{flex:1},{height:300}]);expect(E(0)).toBe(100);expect(E(1)).toBe(200);expect(E(2)).toBe(300)});it("should flex 2 items with 1 fixed",function(){C([{flex:2},{height:300},{flex:1}]);expect(E(0)).toBe(200);expect(E(1)).toBe(300);expect(E(2)).toBe(100)});it("should give priority to flex over a fixed height",function(){C([{flex:1,height:200},{flex:1}]);expect(E(0)).toBe(300);expect(E(1)).toBe(300)})});describe("min/max",function(){it("should assign a 0 height if there is no more flex height",function(){C([{flex:1,style:"line-height:0"},{height:700}]);expect(E(0)).toBe(0);expect(E(1)).toBe(700)});it("should respect a minWidth on a flex even if there is no more flex width",function(){C([{flex:1,minHeight:50},{height:700}]);expect(E(0)).toBe(50);expect(E(1)).toBe(700)});it("should respect a minWidth on a flex even if there is no excess flex width",function(){C([{flex:1,maxHeight:100},{height:300}]);expect(E(0)).toBe(100);expect(E(1)).toBe(300)});it("should update flex values based on min constraint",function(){var G=new Ext.Component({flex:1,minHeight:500}),F=new Ext.Component({flex:1});C([G,F]);expect(G.getHeight()).toBe(500);expect(F.getHeight()).toBe(100)});it("should handle multiple min constraints",function(){var H=new Ext.Component({flex:1,minHeight:250}),G=new Ext.Component({flex:1,minHeight:250}),F=new Ext.Component({flex:1});C([H,G,F]);expect(H.getHeight()).toBe(250);expect(G.getHeight()).toBe(250);expect(F.getHeight()).toBe(100)});it("should update flex values based on max constraint",function(){var G=new Ext.Component({flex:1,maxHeight:100}),F=new Ext.Component({flex:1});C([G,F]);expect(G.getHeight()).toBe(100);expect(F.getHeight()).toBe(500)});it("should update flex values based on multiple max constraints",function(){var H=new Ext.Component({flex:1,maxHeight:100}),G=new Ext.Component({flex:1,maxHeight:100}),F=new Ext.Component({flex:1});C([H,G,F]);expect(H.getHeight()).toBe(100);expect(G.getHeight()).toBe(100);expect(F.getHeight()).toBe(400)});it("should give precedence to min constraints over flex when the min is the same",function(){var H=new Ext.Component({flex:1,minHeight:200}),G=new Ext.Component({flex:3,minHeight:200}),F=new Ext.Component({flex:1,minHeight:200});C([H,G,F]);expect(H.getHeight()).toBe(200);expect(G.getHeight()).toBe(200);expect(F.getHeight()).toBe(200)});it("should give precedence to max constraints over flex when the max is the same",function(){var H=new Ext.Component({flex:1,maxHeight:100}),G=new Ext.Component({flex:3,maxHeight:100}),F=new Ext.Component({flex:1,maxHeight:100});C([H,G,F]);expect(H.getHeight()).toBe(100);expect(G.getHeight()).toBe(100);expect(F.getHeight()).toBe(100)})})});it("should align:center when box layouts are nested",function(){var F=Ext.widget({xtype:"component",autoEl:"span",html:"Some informative title",renderTo:document.body}),H=F.el.getWidth(),G=Ext.isIE9?H+1:H,I=20,J=0,E=[90,92];F.destroy();B=Ext.create("Ext.container.Container",{renderTo:document.body,style:"background-color:yellow",width:300,height:200,layout:{type:"vbox",align:"stretch"},items:{id:"l1",xtype:"container",style:"background-color:red",layout:{type:"vbox",align:"center"},items:{id:"l2",style:"background-color:blue;color:white",xtype:"component",html:"Some informative title",height:20}}});expect(B).toHaveLayout({"el":{"xywh":"0 0 300 200"},"items":{"l1":{"el":{"xywh":"0 0 300 20"},"items":{"l2":{"el":{x:E,y:J,w:[G-1,G+1],h:[I-1,I+1]}}}}}})});it("should include horizontal scroller in reported shrinkwrap height",function(){B=Ext.create("Ext.container.Container",{renderTo:document.body,width:200,style:"border: 1px solid black",layout:"hbox",items:[{itemId:"ct1",defaultType:"component",style:"background-color:yellow",xtype:"container",layout:"vbox",flex:1,overflowX:"auto",items:[{itemId:"cmp1",width:500,style:"background-color:red",html:"child 1 content asdf asdf asdf asdf asdf asdf asdf asdf asdf asdf asdf asdf asdf asdf asdf asdf asdf",margin:"0 3 0 0"},{itemId:"cmp2",style:"background-color:blue",html:"child 2 content",margin:"0 0 0 2"}]}]});var I=B.child("#ct1"),G=I.child("#cmp1"),E=I.child("#cmp2"),F=G.getHeight(),H=E.getHeight();expect(F).toBeGreaterThanOrEqual((H*2)-1);expect(F).toBeLessThanOrEqual((H*2)+1);expect(I.el.getHeight()).toEqual(F+H+Ext.getScrollbarSize().height);expect(B.el.getHeight()).toEqual(F+H+Ext.getScrollbarSize().height+2)});it("should size correctly with docked items & a configured parallel size & shrinkWrap perpendicular size",function(){B=new Ext.panel.Panel({floating:true,shadow:false,autoShow:true,border:false,layout:"vbox",height:150,dockedItems:[{dock:"top",xtype:"component",html:"X"}],items:[{xtype:"component",html:'<div style="width: 50px;"></div>'}]});expect(B.getWidth()).toBe(50);expect(B.getHeight()).toBe(150)});describe("scrolling",function(){var E=20,R=600,S;function P(V,U){V=V||{};if(V.items){Ext.Array.forEach(V.items,function(X,W){if(!X.html){X.html=W+1}})}B=new Ext.container.Container(Ext.apply({renderTo:Ext.getBody(),layout:Ext.apply({type:"vbox"},U)},V))}function F(V,U){return{html:O(V,U)}}function O(V,U){V=V||10;U=U||10;return Ext.String.format('<div style="height: {0}px; width: {1}px;"></div>',V,U)}function Q(V,U){var W=B.getEl(),X=W.dom;N(V,W,X,W.getStyle("overflow-y"),X.scrollHeight,X.clientHeight);N(U,W,X,W.getStyle("overflow-x"),X.scrollWidth,X.clientWidth)}function N(Y,W,Z,V,U,X){if(Y!==undefined){if(Y){expect(V).not.toBe("hidden");expect(U).toBeGreaterThan(X)}else{if(V==="hidden"){expect(V).toBe("hidden")}else{expect(U).toBeLessThanOrEqual(X)}}}}function I(U){H(U,"getWidth")}function L(U){H(U,"getHeight")}function H(U,V){Ext.Array.forEach(U,function(X,W){expect(B.items.getAt(W)[V]()).toBe(X)})}function T(V){var Y=B.getSizeModel().width.shrinkWrap,U=B.getEl(),X=U.dom,W=U.getStyle("overflow-y")!=="hidden"&&X.scrollHeight>X.clientHeight;if(Ext.isIE9&&Y&&W){V+=4}expect(B.getWidth()).toBe(V)}function M(U){G(U,"getWidth")}function K(U){var Y=B.getSizeModel().height.shrinkWrap,V=B.getEl(),X=V.dom,W=V.getStyle("overflow-x")!=="hidden"&&X.scrollWidth>X.clientWidth;if(Ext.isIE9&&Y&&W){U+=4}expect(B.getHeight()).toBe(U)}function J(U){G(U,"getHeight")}function G(U,V){expect(B.getLayout().innerCt[V]()).toBe(U)}beforeEach(function(){S=Ext.getScrollbarSize;Ext.getScrollbarSize=function(){return{width:E,height:E}}});afterEach(function(){Ext.getScrollbarSize=S});describe("limited scrolling",function(){describe("with no scroller",function(){it("should limit the innerCt height to the container height",function(){P({width:R,height:R,defaultType:"component",items:[{height:400},{height:400}]});J(R)})});describe("user scrolling disabled",function(){it("should limit the innerCt height to the container height",function(){P({width:R,height:R,defaultType:"component",scrollable:{x:false},items:[{height:400},{height:400}]});J(800)})})});describe("fixed size",function(){function U(W,X,V){P({width:R,height:R,defaultType:"component",items:W,scrollable:X!==undefined?X:true},V)}describe("vertical scrolling",function(){it("should not show a scrollbar when configured to not scroll vertically",function(){U([{height:400},{height:400}],{y:false});Q(false,false);J(800)});describe("with no horizontal scrollbar",function(){describe("configured",function(){it("should not show a scrollbar when the total height does not overflow",function(){U([{height:100},{height:100}]);Q(false,false);L([100,100]);J(R)});it("should show a scrollbar when the total height overflows",function(){U([{height:400},{height:400}]);Q(true,false);L([400,400]);J(800)})});describe("calculated",function(){it("should not show a scrollbar when using only flex",function(){U([{flex:1},{flex:2}]);Q(false,false);L([200,400]);J(R)});describe("with constraint",function(){it("should not show a scrollbar when the minHeight does not cause an overflow",function(){U([{flex:1},{flex:1,minHeight:300},{flex:1},{flex:1}]);Q(false,false);L([100,300,100,100]);J(R)});it("should show a scrollbar when the minHeight causes an overflow",function(){U([{flex:1,minHeight:400},{flex:1,minHeight:400}]);Q(true,false);L([400,400]);J(800)})})});describe("shrinkWrap",function(){it("should not show a scrollbar when the total height does not overflow",function(){U([F(50),F(50)]);Q(false,false);L([50,50]);J(R)});it("should show a scrollbar when the total width overflows",function(){U([F(400),F(400)]);Q(true,false);L([400,400]);J(800)});describe("with constraint",function(){it("should not show a scrollbar when the minHeight does not cause an overflow",function(){U([{minHeight:200,html:O(100)},{minHeight:300,html:O(50)}]);Q(false,false);L([200,300]);J(R)});it("should show a scrollbar when the minHeight causes an overflow",function(){U([{minHeight:400,html:O(100)},{minHeight:500,html:O(50)}]);Q(true,false);L([400,500]);J(900)})})});describe("configured + calculated",function(){it("should not show a scrollbar when the configured height does not overflow",function(){U([{height:300},{flex:1}]);Q(false,false);L([300,300]);J(R)});it("should show a scrollbar when the configured height overflows",function(){U([{height:700},{flex:1}]);Q(true,false);L([700,0]);J(700)});describe("with constraint",function(){it("should not show a scrollbar when the minHeight does not cause an overflow",function(){U([{height:300},{flex:1,minHeight:200}]);Q(false,false);L([300,300]);J(R)});it("should show a scrollbar when the minHeight causes an overflow",function(){U([{height:300},{flex:1,minHeight:500}]);Q(true,false);L([300,500]);J(800)})})});describe("configured + shrinkWrap",function(){it("should not show a scrollbar when the total height does not overflow",function(){U([{height:300},F(200)]);Q(false,false);L([300,200]);J(R)});it("should show a scrollbar when the total height overflows",function(){U([{height:400},F(400)]);Q(true,false);L([400,400]);J(800)});describe("with constraint",function(){it("should not show a scrollbar when the minHeight does not cause an overflow",function(){U([{height:300},{html:O(100),minHeight:200}]);Q(false,false);L([300,200]);J(R)});it("should show a scrollbar when the minHeight causes an overflow",function(){U([{height:300},{html:O(200),minHeight:500}]);Q(true,false);L([300,500]);J(800)})})});describe("calculated + shrinkWrap",function(){it("should not show a scrollbar when the shrinkWrap height does not overflow",function(){U([F(500),{flex:1}]);Q(false,false);L([500,100]);J(R)});it("should show a scrollbar when the shrinkWrap height overflows",function(){U([F(700),{flex:1}]);Q(true,false);L([700,0]);J(700)});describe("with constraint",function(){it("should not show a scrollbar when the minHeight does not cause an overflow",function(){U([{html:O(100),minHeight:200},{flex:1,minHeight:300}]);Q(false,false);L([200,400]);J(R)});it("should show a scrollbar when the minHeight causes an overflow",function(){U([{html:O(100),minHeight:350},{flex:1,minHeight:350}]);Q(true,false);L([350,350]);J(700)})})})});describe("with a horizontal scrollbar",function(){var V=1000;describe("where the horizontal scroll can be inferred before the first pass",function(){describe("configured",function(){it("should account for the horizontal scrollbar when there is no overflow",function(){U([{height:100,width:V},{height:100}]);Q(false,true);L([100,100]);J(R-E)});it("should account for the horizontal scrollbar when there is overflow",function(){U([{height:400,width:V},{height:400}]);Q(true,true);L([400,400]);J(800)})});describe("calculated",function(){it("should account for the horizontal scrollbar",function(){U([{flex:1,width:V},{flex:1}]);Q(false,true);L([290,290]);J(R-E)});describe("minWidth",function(){it("should account for the horizontal scrollbar when the minHeight does not cause overflow",function(){U([{flex:1,minHeight:400,width:V},{flex:1}]);Q(false,true);L([400,180]);J(R-E)});it("should account for the horizontal scrollbar when the minHeight causes an overflow",function(){U([{flex:1,minHeight:350,width:V},{flex:1,minHeight:350}]);Q(true,true);L([350,350]);J(700)})})});describe("shrinkWrap",function(){it("should account for the horizontal scrollbar when there is no overflow",function(){U([{html:O(200),width:V},{html:O(300)}]);Q(false,true);L([200,300]);J(R-E)});it("should account for the horizontal scrollbar when there is overflow",function(){U([{html:O(400),width:V},{html:O(400)}]);Q(true,true);L([400,400]);J(800)});describe("with constraint",function(){it("should account for the horizontal scrollbar when the minHeight does not cause overflow",function(){U([{html:O(100),minHeight:200,width:V},{html:O(100),minHeight:300}]);Q(false,true);L([200,300]);J(R-E)});it("should account for the horizontal scrollbar when the minHeight causes an overflow",function(){U([{html:O(100),minHeight:350,width:V},{html:O(200),minHeight:350}]);Q(true,true);L([350,350]);J(700)})})});describe("configured + calculated",function(){it("should account for the horizontal scrollbar when there is no overflow",function(){U([{height:150,width:V},{flex:1}]);Q(false,true);L([150,430]);J(R-E)});it("should account for the horizontal scrollbar when there is overflow",function(){U([{height:800,width:V},{flex:1}]);Q(true,true);L([800,0]);J(800)});describe("with constraint",function(){it("should account for the horizontal scrollbar when the minHeight does not cause overflow",function(){U([{height:200,width:V},{flex:1,minHeight:200}]);Q(false,true);L([200,380]);J(R-E)});it("should account for the horizontal scrollbar when the minHeight causes an overflow",function(){U([{height:200,width:V},{flex:1,minHeight:500}]);Q(true,true);L([200,500]);J(700)})})});describe("configured + shrinkWrap",function(){it("should account for the horizontal scrollbar when there is no overflow",function(){U([{height:150,width:V},F(300)]);Q(false,true);L([150,300]);J(R-E)});it("should account for the horizontal scrollbar when there is overflow",function(){U([{height:350,width:V},F(350)]);Q(true,true);L([350,350]);J(700)});describe("with constraint",function(){it("should account for the horizontal scrollbar when the minHeight does not cause overflow",function(){U([{height:200,width:V},{html:O(100),minHeight:300}]);Q(false,true);L([200,300]);J(R-E)});it("should account for the horizontal scrollbar when the minHeight causes an overflow",function(){U([{height:200,width:V},{html:O(200),minHeight:550}]);Q(true,true);L([200,550]);J(750)})})});describe("calculated + shrinkWrap",function(){it("should account for the horizontal scrollbar when there is no overflow",function(){U([{html:O(300),width:V},{flex:1}]);Q(false,true);L([300,280]);J(R-E)});it("should account for the horizontal scrollbar when there is overflow",function(){U([{html:F(700),width:V},{flex:1}]);Q(true,true);L([700,0]);J(700)});describe("with constraint",function(){it("should account for the horizontal scrollbar when the minHeight does not cause overflow",function(){U([{html:O(200),width:V},{flex:1,minHeight:300}]);Q(false,true);L([200,380]);J(R-E)});it("should account for the horizontal scrollbar when the minHeight causes an overflow",function(){U([{html:O(400),width:V},{flex:1,minHeight:500}]);Q(true,true);L([400,500]);J(900)})})})});describe("when the horizontal scroll needs to be calculated",function(){describe("configured",function(){it("should account for the horizontal scrollbar when there is no overflow",function(){U([{height:100,html:O(10,V)},{height:100}]);Q(false,true);L([100,100]);J(R-E)});it("should account for the horizontal scrollbar when there is overflow",function(){U([{height:400,html:O(10,V)},{height:400}]);Q(true,true);L([400,400]);J(800)})});describe("calculated",function(){it("should account for the horizontal scrollbar",function(){U([{flex:1,html:O(10,V)},{flex:1}]);Q(false,true);L([290,290]);J(R-E)});describe("with constraint",function(){it("should account for the horizontal scrollbar when the minHeight does not cause overflow",function(){U([{flex:1,minHeight:400,html:O(10,V)},{flex:1}]);Q(false,true);L([400,180]);J(R-E)});it("should account for the horizontal scrollbar when the minHeight causes an overflow",function(){U([{flex:1,minHeight:350,html:O(10,V)},{flex:1,minHeight:350}]);Q(true,true);L([350,350]);J(700)})})});describe("shrinkWrap",function(){it("should account for the horizontal scrollbar when there is no overflow",function(){U([{html:O(200,V)},{html:O(300)}]);Q(false,true);L([200,300]);J(R-E)});it("should account for the horizontal scrollbar when there is overflow",function(){U([{html:O(400,V)},{html:O(400)}]);Q(true,true);L([400,400]);J(800)});describe("with constraint",function(){it("should account for the horizontal scrollbar when the minHeight does not cause overflow",function(){U([{html:O(100,V),minHeight:200},{html:O(100),minHeight:300}]);Q(false,true);L([200,300]);J(R-E)});it("should account for the horizontal scrollbar when the minHeight causes an overflow",function(){U([{html:O(100,V),minHeight:350},{html:O(200),minHeight:350}]);Q(true,true);L([350,350]);J(700)})})});describe("configured + calculated",function(){it("should account for the horizontal scrollbar when there is no overflow",function(){U([{height:150,html:O(10,V)},{flex:1}]);Q(false,true);L([150,430]);J(R-E)});it("should account for the horizontal scrollbar when there is overflow",function(){U([{height:800,html:O(10,V)},{flex:1}]);Q(true,true);L([800,0]);J(800)});describe("with constraint",function(){it("should account for the horizontal scrollbar when the minHeight does not cause overflow",function(){U([{height:200,html:O(10,V)},{flex:1,minHeight:200}]);Q(false,true);L([200,380]);J(R-E)});it("should account for the horizontal scrollbar when the minHeight causes an overflow",function(){U([{height:200,html:O(10,V)},{flex:1,minHeight:500}]);Q(true,true);L([200,500]);J(700)})})});describe("configured + shrinkWrap",function(){it("should account for the horizontal scrollbar when there is no overflow",function(){U([{height:150,html:O(10,V)},F(300)]);Q(false,true);L([150,300]);J(R-E)});it("should account for the horizontal scrollbar when there is overflow",function(){U([{height:350,html:O(10,V)},F(350)]);Q(true,true);L([350,350]);J(700)});describe("with constraint",function(){it("should account for the horizontal scrollbar when the minHeight does not cause overflow",function(){U([{height:200,html:O(10,V)},{html:O(100),minHeight:300}]);Q(false,true);L([200,300]);J(R-E)});it("should account for the horizontal scrollbar when the minHeight causes an overflow",function(){U([{height:200,html:O(10,V)},{html:O(200),minHeight:550}]);Q(true,true);L([200,550]);J(750)})})});describe("calculated + shrinkWrap",function(){it("should account for the horizontal scrollbar when there is no overflow",function(){U([{html:O(300,V)},{flex:1}]);Q(false,true);L([300,280]);J(R-E)});it("should account for the horizontal scrollbar when there is overflow",function(){U([{html:F(700,V)},{flex:1}]);Q(true,true);L([700,0]);J(700)});describe("with constraint",function(){it("should account for the horizontal scrollbar when the minHeight does not cause overflow",function(){U([{html:O(200,V)},{flex:1,minHeight:300}]);Q(false,true);L([200,380]);J(R-E)});it("should account for the horizontal scrollbar when the minHeight causes an overflow",function(){U([{html:O(400,V)},{flex:1,minHeight:500}]);Q(true,true);L([400,500]);J(900)})})})});describe("when the horizontal scrollbar triggers a vertical scrollbar",function(){var W=Ext.getScrollbarSize().height>0;describe("configured",function(){it("should account for the horizontal scrollbar",function(){U([{height:295,html:O(10,V)},{height:295}]);Q(W,true);L([295,295]);J(590)})});describe("shrinkWrap",function(){it("should account for the horizontal scrollbar",function(){U([{html:O(295,V)},F(295)]);Q(W,true);L([295,295]);J(590)})});describe("configured + shrinkWrap",function(){it("should account for the horizontal scrollbar",function(){U([{html:O(295,V)},{height:295}]);Q(W,true);L([295,295]);J(590)})})})})});describe("horizontal scrolling",function(){it("should not show a scrollbar when configured to not scroll horizontally",function(){U([{height:100,width:900},{height:100}],{x:false});Q(false,false)});describe("with no vertical scrollbar",function(){describe("configured width",function(){it("should not show a scrollbar when the largest width does not overflow",function(){U([{height:100,width:300},{height:100,width:400}]);Q(false,false);I([300,400]);M(400)});it("should show a scrollbar when the largest width overflows",function(){U([{height:100,width:700},{height:200,width:800}]);Q(false,true);I([700,800]);M(800)})});describe("align stretch",function(){it("should not show a scrollbar by default",function(){U([{height:100},{height:100}],true,{align:"stretch"});Q(false,false);I([600,600]);M(R)});describe("with constraint",function(){it("should not show a scrollbar when the minWidth does not cause an overflow",function(){U([{height:100,minWidth:400},{height:100}],true,{align:"stretch"});Q(false,false);I([600,600]);M(R)});it("should show a scrollbar when the minWidth causes an overflow",function(){U([{height:100,minWidth:800},{height:100}],true,{align:"stretch"});Q(false,true);I([800,600]);M(800)})})});describe("shrinkWrap width",function(){it("should not show a scrollbar when the largest width does not overflow",function(){U([F(10,300),F(10,200)]);Q(false,false);I([300,200]);M(300)});it("should show a scrollbar when the largest width overflows",function(){U([F(10,500),F(10,750)]);Q(false,true);I([500,750]);M(750)});describe("with constraint",function(){it("should not show a scrollbar when the minWidth does not cause an overflow",function(){U([{height:100,minWidth:400,html:O(10,10)},{height:100,minWidth:500,html:O(10,10)}]);Q(false,false);I([400,500]);M(500)});it("should show a scrollbar when the minWidth causes an overflow",function(){U([{height:100,minWidth:650,html:O(10,50)},{height:100,minWidth:750,html:O(10,50)}]);Q(false,true);I([650,750]);M(750)})})})});describe("with a vertical scrollbar",function(){describe("where the vertical scroll can be inferred before the first pass",function(){describe("configured width",function(){it("should not show a scrollbar when the largest width does not overflow",function(){U([{height:400,width:300},{height:400,width:400}]);Q(true,false);I([300,400]);M(400)});it("should show a scrollbar when the largest width overflows",function(){U([{height:400,width:700},{height:400,width:800}]);Q(true,true);I([700,800]);M(800)})});describe("align stretch",function(){it("should not show a scrollbar by default",function(){U([{height:400},{height:400}],true,{align:"stretch"});Q(true,false);I([580,580]);M(R-E)});describe("with constraint",function(){it("should not show a scrollbar when the minWidth does not cause an overflow",function(){U([{height:400,minWidth:400},{height:400}],true,{align:"stretch"});Q(true,false);I([580,580]);M(R-E)});it("should should a scrollbar when the minWidth causes an overflow",function(){U([{height:400,minWidth:800},{height:400}],true,{align:"stretch"});Q(true,true);I([800,580]);M(800)})})});describe("shrinkWrap width",function(){it("should not show a scrollbar when the largest width does not overflow",function(){U([{height:400,html:O(10,300)},{height:400,html:O(10,200)}]);Q(true,false);I([300,200]);M(300)});it("should show a scrollbar when the largest width overflows",function(){U([{height:400,html:O(10,500)},{height:400,html:O(10,750)}]);Q(true,true);I([500,750]);M(750)});describe("with constraint",function(){it("should not show a scrollbar when the minWidth does not cause an overflow",function(){U([{height:400,minWidth:400,html:O(10,10)},{height:400,minWidth:500,html:O(10,10)}]);Q(true,false);I([400,500]);M(500)});it("should should a scrollbar when the minWidth causes an overflow",function(){U([{height:400,minWidth:650,html:O(10,50)},{height:400,minWidth:750,html:O(10,50)}]);Q(true,true);I([650,750]);M(750)})})})});describe("when the horizontal scroll needs to be calculated",function(){describe("configured width",function(){it("should not show a scrollbar when the largest width does not overflow",function(){U([{html:O(400),width:300},{html:O(400),width:400}]);Q(true,false);I([300,400]);M(400)});it("should show a scrollbar when the largest width overflows",function(){U([{html:O(400),width:700},{html:O(400),width:800}]);Q(true,true);I([700,800]);M(800)})});describe("align stretch",function(){it("should not show a scrollbar by default",function(){U([{html:O(400)},{html:O(400)}],true,{align:"stretch"});Q(true,false);I([580,580]);M(R-E)});describe("with constraint",function(){it("should not show a scrollbar when the minWidth does not cause an overflow",function(){U([{html:O(400),minWidth:400},{html:O(400)}],true,{align:"stretch"});Q(true,false);I([580,580]);M(R-E)});it("should show a scrollbar when the minWidth causes an overflow",function(){U([{html:O(400),minWidth:800},{html:O(400)}],true,{align:"stretch"});Q(true,true);I([800,580]);M(800)})})});describe("shrinkWrap height",function(){it("should not show a scrollbar when the largest width does not overflow",function(){U([F(400,300),F(400,200)]);Q(true,false);I([300,200]);M(300)});it("should show a scrollbar when the largest width overflows",function(){U([F(400,500),F(400,750)]);Q(true,true);I([500,750]);M(750)});describe("with constraint",function(){it("should not show a scrollbar when the minWidth does not cause an overflow",function(){U([{minWidth:400,html:O(400,10)},{minWidth:500,html:O(400,10)}]);Q(true,false);I([400,500]);M(500)});it("should show a scrollbar when the minWidth causes an overflow",function(){U([{minWidth:650,html:O(400,50)},{minWidth:750,html:O(400,50)}]);Q(true,true);I([650,750]);M(750)})})})})})})});describe("shrinkWrap width",function(){function U(W,X,V){P({floating:true,height:R,defaultType:"component",items:W,scrollable:X!==undefined?X:true},V)}describe("with no vertical scrollbar",function(){describe("configured",function(){it("should publish the largest width",function(){U([{height:100,width:400},{height:100,width:500}]);Q(false,false);I([400,500]);T(500)})});describe("shrinkWrap",function(){it("should publish the largest width",function(){U([{height:100,html:O(10,250)},{height:100,html:O(10,300)}]);Q(false,false);I([250,300]);T(300)});describe("with constraint",function(){it("should publish the largest constrained width",function(){U([{height:100,html:O(10,150),minWidth:300},{height:100,html:O(10,100),minWidth:350}]);Q(false,false);I([300,350]);T(350)})})});describe("align: stretch",function(){it("should stretch items & publish the largest width",function(){U([{height:100,html:O(10,200)},{height:100,html:O(10,300)}],true,{align:"stretch"});Q(false,false);I([300,300]);T(300)});describe("with constraint",function(){it("should stretch items and publish the largest constrained width",function(){U([{height:100,minWidth:400},{height:100,minWidth:550}],true,{align:"stretch"});Q(false,false);I([550,550]);T(550)})})})});describe("with a vertical scrollbar",function(){var V=1000;describe("where the vertical scroll can be inferred before the first pass",function(){describe("configured",function(){it("should account for the scrollbar in the total width",function(){U([{height:V,width:400},{width:500}]);Q(true,false);I([400,500]);T(520)})});describe("shrinkWrap",function(){it("should account for the scrollbar in the total width",function(){U([{height:V,html:O(10,250)},{html:O(10,300)}]);Q(true,false);I([250,300]);T(320)});describe("with constraint",function(){it("should publish the largest constrained width",function(){U([{height:V,html:O(10,150),minWidth:300},{html:O(10,100),minWidth:350}]);Q(true,false);I([300,350]);T(370)})})});describe("align: stretch",function(){it("should stretch items & publish the largest width",function(){U([{height:V,html:O(10,200)},{height:100,html:O(10,300)}]);Q(true,false);I([200,300]);T(320)});describe("with constraint",function(){it("should stretch items and publish the largest constrained width",function(){U([{height:V,minWidth:400},{height:100,minWidth:550}]);Q(true,false);I([400,550]);T(570)})})})});describe("when the vertical scroll needs to be calculated",function(){describe("configured",function(){it("should account for the scrollbar in the total width",function(){U([{html:O(V,400)},{html:O(10,500)}]);Q(true,false);I([400,500]);T(520)})});describe("shrinkWrap",function(){it("should account for the scrollbar in the total width",function(){U([{html:O(V,250)},{html:O(10,300)}]);Q(true,false);I([250,300]);T(320)});describe("with constraint",function(){it("should publish the largest constrained width",function(){U([{html:O(V,150),minWidth:300},{html:O(10,100),minWidth:350}]);Q(true,false);I([300,350]);T(370)})})});describe("align: stretch",function(){it("should stretch items & publish the largest width",function(){U([{html:O(V,200)},{height:100,html:O(10,300)}],true,{align:"stretch"});Q(true,false);I([300,300]);T(320)});describe("with constraint",function(){it("should stretch items and publish the largest constrained width",function(){U([{html:O(V,10),minWidth:400},{minWidth:550}],true,{align:"stretch"});Q(true,false);I([550,550]);T(570)})})})})})});describe("shrinkWrap height",function(){function U(W,X,V){P({floating:true,width:R,defaultType:"component",items:W,scrollable:X!==undefined?X:true},V)}describe("with no horizontal scrollbar",function(){describe("configured",function(){it("should publish the total height",function(){U([{height:400},{height:400}]);Q(false,false);L([400,400]);K(800)})});describe("shrinkWrap",function(){it("should publish the total height",function(){U([F(400),F(400)]);Q(false,false);L([400,400]);K(800)});describe("with constraint",function(){it("should publish the total height",function(){U([{minHeight:350,html:O(200)},{minHeight:400,html:O(300)}]);Q(false,false);L([350,400]);K(750)})})});describe("configured + shrinkWrap",function(){it("should publish the total height",function(){U([{height:400},F(400)]);Q(false,false);L([400,400]);K(800)});describe("with constraint",function(){it("should publish the total height",function(){U([{height:350},{minHeight:400,html:O(300)}]);Q(false,false);L([350,400]);K(750)})})})});describe("with a horizontal scrollbar",function(){var V=1000;describe("where the horizontal scroll can be inferred before the first pass",function(){describe("configured",function(){it("should account for the scrollbar in the total height",function(){U([{height:400,width:V},{height:400}]);Q(false,true);L([400,400]);K(820)})});describe("shrinkWrap",function(){it("should account for the scrollbar in the total height",function(){U([{html:O(400),width:V},F(400)]);Q(false,true);L([400,400]);K(820)});describe("with constraint",function(){it("should account for the scrollbar in the total height",function(){U([{minHeight:350,html:O(200),width:V},{minHeight:400,html:O(100)}]);Q(false,true);L([350,400]);K(770)})})});describe("configured + shrinkWrap",function(){it("should account for the scrollbar in the total height",function(){U([{height:400,width:V},F(400)]);Q(false,true);L([400,400]);K(820)});describe("with constraint",function(){it("should account for the scrollbar in the total height",function(){U([{height:350,width:V},{minHeight:400,html:O(300)}]);Q(false,true);L([350,400]);K(770)})})})});describe("when the horizontal scroll needs to be calculated",function(){describe("configured",function(){it("should account for the scrollbar in the total height",function(){U([{height:400,html:O(10,V)},{height:400}]);Q(false,true);L([400,400]);K(820)})});describe("shrinkWrap",function(){it("should account for the scrollbar in the total height",function(){U([{html:O(400,V)},F(400)]);Q(false,true);L([400,400]);K(820)});describe("with constraint",function(){it("should account for the scrollbar in the total height",function(){U([{minHeight:350,html:O(200,V)},{minHeight:400,html:O(100)}]);Q(false,true);L([350,400]);K(770)})})});describe("configured + shrinkWrap",function(){it("should account for the scrollbar in the total height",function(){U([{height:400,html:O(10,V)},F(400)]);Q(false,true);L([400,400]);K(820)});describe("with constraint",function(){it("should account for the scrollbar in the total height",function(){U([{height:350,html:O(10,V)},{minHeight:400,html:O(300)}]);Q(false,true);L([350,400]);K(770)})})})})})});describe("preserving scroll state",function(){it("should restore the horizontal/vertical scroll position with user scrolling",function(){P({height:400,width:400,scrollable:true,items:[{height:300,width:500},{height:300,width:500}]});var V=B.getScrollable();V.scrollTo(50,30);var U=V.getPosition();expect(U).toEqual({x:50,y:30});B.setSize(401,401);var U=V.getPosition();expect(U).toEqual({x:0,y:30})});it("should restore the horizontal/vertical scroll position with programmatic scrolling",function(){P({height:400,width:400,scrollable:{y:false,x:false},items:[{height:300,width:500},{height:300,width:500}]});var V=B.getScrollable();V.scrollTo(50,30);var U=V.getPosition();expect(U).toEqual({x:50,y:30});B.setSize(401,401);var U=V.getPosition();expect(U).toEqual({x:0,y:30})})})});function A(E){describe("parent type: "+E.parentXtype+", child type: "+E.childXtype+", parent layout: "+E.parentLayout,function(){function F(H){var L=H==="width"?"height":"width",K=Ext.getScrollbarSize(),I={xtype:"component",style:"margin: 3px; background-color: green;"},G={xtype:E.childXtype,autoScroll:true,layout:"vbox",items:[I]},J={xtype:E.parentXtype,floating:true,shadow:false,layout:E.parentLayout,items:[G]};I[H]=500;I[L]=90-K[L];G[H]=98;if(E.parentXtype==="container"){J.style="border: 1px solid black"}if(E.childXtype==="container"){G.style="border: 1px solid black"}B=Ext.widget(J);B.show()}describe("horizontal overflow with shrink wrap height",function(){beforeEach(function(){F("width")});it("should include scrollbar size in the height",function(){expect(B.getHeight()).toBe(100)})});describe("vertical overflow with shrink wrap width",function(){beforeEach(function(){F("height")});it("should include scrollbar size in the width",function(){expect(B.getWidth()).toBe(100)})})})}A({parentXtype:"container",childXtype:"container",parentLayout:"auto"});A({parentXtype:"container",childXtype:"container",parentLayout:"vbox"});A({parentXtype:"panel",childXtype:"container",parentLayout:"auto"});A({parentXtype:"panel",childXtype:"container",parentLayout:"vbox"});A({parentXtype:"container",childXtype:"panel",parentLayout:"auto"});A({parentXtype:"container",childXtype:"panel",parentLayout:"vbox"});A({parentXtype:"panel",childXtype:"panel",parentLayout:"auto"});A({parentXtype:"panel",childXtype:"panel",parentLayout:"vbox"});describe("misc overflow",function(){it("should layout with autoScroll + align: stretch + A shrink wrapped parallel item",function(){expect(function(){B=new Ext.container.Container({autoScroll:true,layout:{align:"stretch",type:"vbox"},renderTo:Ext.getBody(),width:600,height:200,items:[{xtype:"component",height:200,html:"Item"},{xtype:"component",html:"Component"}]})}).not.toThrow()})})})