describe("Ext.menu.DatePicker",function(){var B=jasmine.expectFocused,D=jasmine.asyncPressKey,C;function A(E){E=Ext.apply({floating:true,},E);C=new Ext.menu.DatePicker(E);return C}afterEach(function(){if(C){C.destroy()}C=null});describe("pickerCfg",function(){beforeEach(function(){A({pickerCfg:{foo:"bar"},blerg:"throbbe"})});it("should apply pickerCfg",function(){expect(C.picker.foo).toBe("bar")});it("should not apply other configs",function(){expect(C.picker.blerg).not.toBeDefined()})});describe("no pickerCfg",function(){it("should apply config",function(){A({frobbe:"gurgle"});expect(C.picker.frobbe).toBe("gurgle")})});describe("keyboard interaction",function(){var E,F;beforeEach(function(){E=new Ext.button.Button({renderTo:Ext.getBody(),text:"foo",menu:[{text:"no submenu"},{text:"date",menu:{xtype:"datemenu"}}]});E.showMenu();F=E.menu.down("[text=date]");F.focus();F.expandMenu(null,0);C=F.menu});afterEach(function(){if(E){E.destroy()}E=null});it("should focus the picker eventEl on open",function(){B(C.picker.eventEl,false)});it("should close the date menu on Esc key",function(){D(C.picker.eventEl,"esc");waitsFor(function(){return !C.isVisible()},"Date menu to hide",1000);runs(function(){expect(C.isVisible()).toBeFalsy()})});it("should focus the owner menu item on Esc key",function(){D(C.picker.eventEl,"esc");B(F)})})})