describe("Ext.picker.Date",function(){var C,B,A;beforeEach(function(){B=function(D){C=new Ext.picker.Date(Ext.applyIf({renderTo:Ext.getBody()},D))};A=function(G,D){var E=[],F=G;for(;F<=D;++F){E.push(F)}return E}});afterEach(function(){if(C){C.destroy()}C=B=A=null});describe("rendering",function(){it("should respect the showToday config",function(){B({showToday:false});expect(C.footerEl).toBeFalsy()});it("should respect the padding config",function(){B({padding:10});expect(C.getWidth()).toBe(197)});it("should be able to be configured as disabled",function(){expect(function(){B({disabled:true})}).not.toThrow()})});describe("restrictions",function(){var D;beforeEach(function(){D=function(G,L){var I=0,H=C.cells.elements,F=G.length,E,K,J=L!==null;for(;I<F;++I){E=H[G[I]];K=E.getAttribute("data-qtip");if(E.className.indexOf(C.disabledCellCls)===-1||(J&&K!==L)){return false}}return true}});afterEach(function(){D=null});describe("max date",function(){it("should not have any max date set if not specified",function(){B({value:new Date(2010,10,4)});for(var E=0;E<10;++E){C.showNextYear()}expect(C.el.select('td[title="'+C.maxText+'"]').getCount()).toEqual(0)});it("should set the class and title on elements over the max date 1",function(){B({value:new Date(2010,10,4),maxDate:new Date(2010,10,18)});expect(D(A(19,41),C.maxText)).toBeTruthy()});it("should set the class and title on elements over the max date 2",function(){B({value:new Date(2007,4,3),maxDate:new Date(2007,4,7)});expect(D(A(9,41),C.maxText)).toBeTruthy()});it("should not set the class/title if the max date isn't on the current page",function(){B({value:new Date(2007,4,3),maxDate:new Date(2010,4,7)});var F=C.cells,E=F.getCount(),G=0;for(;G<E;++G){expect(F.item(G).dom.title).toNotEqual(C.maxText);expect(F.item(G).dom.className).toNotEqual(C.disabledCellCls)}});it("should update the class/title if required when changing the active 'page'",function(){B({value:new Date(2007,4,3),maxDate:new Date(2007,5,15)});C.showNextMonth();expect(D(A(20,41),C.maxText)).toBeTruthy()})});describe("min date",function(){it("should not have any min date set if not specified",function(){B({value:new Date(2010,10,4)});for(var E=0;E<10;++E){C.showPrevYear()}expect(C.el.select('td[title="'+C.minText+'"]').getCount()).toEqual(0)});it("should set the class and title on elements under the min date 1",function(){B({value:new Date(2010,8,18),minDate:new Date(2010,8,4)});expect(D(A(0,5),C.minText)).toBeTruthy()});it("should set the class and title on elements over the min date 2",function(){B({value:new Date(2006,2,3),minDate:new Date(2006,2,7)});expect(D(A(0,8),C.minText)).toBeTruthy()});it("should not set the class/title if the min date isn't on the current page",function(){B({minDate:new Date(2007,2,3),value:new Date(2010,2,7)});var F=C.cells,E=F.getCount(),G=0;for(;G<E;++G){expect(F.item(G).dom.title).toNotEqual(C.minText);expect(F.item(G).dom.className).toNotEqual(C.disabledCellCls)}});it("should update the class/title if required when changing the active 'page'",function(){B({minDate:new Date(2007,4,3),value:new Date(2007,5,15)});C.showPrevMonth();expect(D(A(0,3),C.minText)).toBeTruthy()})});describe("disabledDays",function(){it("should not disabled anything if there any no disabledDays",function(){B();expect(C.el.select("."+C.disabledCellCls).getCount()).toEqual(0)});it("should disable the appropriate days 1",function(){B({value:new Date(2010,10,4),disabledDays:[0,6]});expect(D([0,6,7,13,14,20,21,27,28,34,35],C.disabledDaysText)).toBeTruthy()});it("should disable the appropriate days 2",function(){B({value:new Date(2010,10,4),disabledDays:[1,5]});expect(D([1,5,8,12,15,19,22,26,29,33,36,40],C.disabledDaysText)).toBeTruthy()})});describe("disabledDates",function(){it("should disabled specific dates",function(){B({value:new Date(2010,10,4),format:"Y/m/d",disabledDates:["2010/11/07","2010/11/14"]});expect(D([7,14],null)).toBeTruthy()});it("should disabled specific dates according to regex - year",function(){var F=new Date(2010,10,4),E=A(0,41);B({value:F,format:"Y/m/d",disabledDates:["2010/*"]});while(F.getFullYear()===2010){if(F.getMonth()>0){expect(D(E,null)).toBeTruthy()}else{expect(D(A(5,41),null)).toBeTruthy()}F=Ext.Date.add(F,Ext.Date.MONTH,-1);C.showPrevMonth()}});it("should disabled specific dates according to regex - month",function(){B({value:new Date(2010,10,4),format:"Y/m/d",disabledDates:["2010/11/*"]});expect(D(A(1,30),null)).toBeTruthy();C.showPrevMonth();expect(D(A(0,35),null)).toBeFalsy()});it("should disabled specific dates according to regex - day",function(){B({value:new Date(2010,10,4),format:"Y/m/d",disabledDates:["2010/11/1*"]});expect(D(A(14,23),null)).toBeTruthy()})})});describe("showing month picker",function(){var E,D;beforeEach(function(){E=new Ext.form.field.Date({renderTo:Ext.getBody(),disableAnim:true});E.focus();jasmine.waitForFocus(E)});afterEach(function(){E.destroy();E=D=null});it("should show the month picker on click of the button",function(){runs(function(){E.expand();D=E.getPicker();jasmine.fireMouseEvent(D.monthBtn.el,"click")});waitsFor(function(){return !!D.monthPicker.isVisible()},"for month picker to show",1000);waits(100);runs(function(){expect(D.isVisible()).toBe(true);expect(D.monthPicker.isVisible()).toBe(true)})})})})