describe("Ext.picker.Month",function(){var C,B;function A(K,G){var I,H,D,E,F,J;if(document.getElementsByClassName){return K.getElementsByClassName(G)}J=new RegExp("(^|\\s)"+G+"(\\s|$)");I=K.getElementsByTagName("*");H=I.length;D=[];for(E=0;E<H;E++){F=I[E];if(J.test(F.className)){D.push(F)}}return D}beforeEach(function(){B=function(D){D=D||{};D=Ext.applyIf({renderTo:Ext.getBody()},D);C=new Ext.picker.Month(D)}});afterEach(function(){if(C){C.destroy()}C=B=null});describe("initial value",function(){it("should not default any value",function(){B();expect(C.getValue()).toEqual([null,null])});it("should accept a date as the value config",function(){B({value:new Date(2009,3,3)});expect(C.getValue()).toEqual([3,2009])});it("should accept an array as the value",function(){B({value:[4,1984]});expect(C.getValue()).toEqual([4,1984])})});describe("setting value",function(){it("should accept a date when setting a value",function(){B();C.setValue(new Date(2004,1,12));expect(C.getValue()).toEqual([1,2004])});it("should accept an array when setting a value",function(){B();C.setValue([9,2001]);expect(C.getValue()).toEqual([9,2001])});it("should be able to null out certain values",function(){B({value:[3,2010]});C.setValue([null,2010]);expect(C.getValue()).toEqual([null,2010])})});describe("rendering",function(){it("should respect the padding config",function(){B({padding:10});expect(C.getWidth()).toBe(197)});it("should not show buttons if showButtons is false",function(){B({showButtons:false});expect(A(C.el.dom,"x-monthpicker-buttons").length).toEqual(0)});describe("year range",function(){var E,D;beforeEach(function(){E=function(){return A(C.el.dom,"x-monthpicker-year")};D=function(G,F){return G[F].firstChild.innerHTML}});afterEach(function(){E=null});it("should use the current year if none is provided",function(){B();var F=E(),G=(new Date()).getFullYear();expect(D(F,0)).toEqual((G-4).toString());expect(D(F,F.length-1)).toEqual((G+5).toString())});it("should use the value year as the active year if passed",function(){B({value:[0,1970]});var F=E();expect(D(F,0)).toEqual("1966");expect(D(F,F.length-1,0)).toEqual("1975")});it("should change the year range if a new value is set",function(){B();C.setValue([0,1980]);var F=E();expect(D(F,0)).toEqual("1976");expect(D(F,F.length-1,0)).toEqual("1985")});it("it should not change the range if the value is within the current range",function(){B();var G=new Date().getFullYear();C.setValue([0,G+1]);var F=E();expect(D(F,0)).toEqual((G-4).toString());expect(D(F,F.length-1,0)).toEqual((G+5).toString())})})});describe("selection",function(){var D;beforeEach(function(){D=function(I){var F=A(C.el.dom,"x-monthpicker-"+(I?"month":"year")),E=F.length,G=0,H;for(;G<E;++G){H=F[G];if(H.firstChild.className.indexOf("x-monthpicker-selected")>-1){return H.firstChild}}return null}});afterEach(function(){D=null});it("should have no selections if no value is specified",function(){B();expect(D()).toBeNull();expect(D(true)).toBeNull()});it("should only have a month selection for a month-only value",function(){B({value:[3,null]});expect(D()).toBeNull();expect(D(true)).hasHTML("Apr")});it("should only have a year selection for a year-only value",function(){B({value:[null,2000]});expect(D()).hasHTML("2000");expect(D(true)).toBeNull()});it("should select have selections when both items are selected",function(){B({value:[0,2004]});expect(D()).hasHTML("2004");expect(D(true)).hasHTML("Jan")});it("should remove any selection if it's not valid for the range",function(){var E=new Date();B({value:E});expect(D()).hasHTML(E.getFullYear().toString());C.adjustYear(-10);expect(D()).toBeNull()})})})