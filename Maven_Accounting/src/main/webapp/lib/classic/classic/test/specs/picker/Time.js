describe("Ext.picker.Time",function(){var C,A;beforeEach(function(){A=function(D){D=Ext.applyIf(D||{},{renderTo:Ext.getBody()});C=new Ext.picker.Time(D)}});function B(){return C.rendered&&C.all.elements.length}afterEach(function(){if(C){C.destroy()}C=A=null});it("should extend Ext.BoundList",function(){A();expect(C instanceof Ext.BoundList).toBe(true)});describe("defaults",function(){beforeEach(function(){A()});it("should have minValue = undefined",function(){expect(C.minValue).not.toBeDefined()});it("should have maxValue = undefined",function(){expect(C.maxValue).not.toBeDefined()});it("should have increment = 15",function(){expect(C.increment).toEqual(15)});it("should have format = 'g:i A'",function(){expect(C.format).toEqual("g:i A")});it("should have componentCls = 'x-timepicker'",function(){expect(C.componentCls).toEqual("x-timepicker")})});describe("rendering",function(){it("should render items",function(){A();waitsFor(B);runs(function(){expect(C.getNodes().length).toEqual(96)})});it("should render formatted times into the items",function(){A();waitsFor(B);runs(function(){var D=C.getNodes();expect(D[0]).hasHTML("12:00 AM");expect(D[D.length-1]).hasHTML("11:45 PM")})});it("should honor the 'format' config when rendering the times",function(){A({format:"G,i,s"});waitsFor(B);runs(function(){expect(C.getNode(0)).hasHTML("0,00,00")})})});describe("increment",function(){it("should set the number of minutes between times in the list",function(){A({increment:30});waitsFor(B);runs(function(){var D=C.getNodes();expect(D.length).toEqual(48);expect(D[1]).hasHTML("12:30 AM");expect(D[D.length-1]).hasHTML("11:30 PM")})})});describe("minValue",function(){it("should be used as the minimum time in the list",function(){var D=new Date("1/1/2011 06:30:00");if(jasmine.browser.isOpera){D.setSeconds(0);D.setMilliseconds(0)}A({minValue:D});waitsFor(B);runs(function(){var E=C.getNodes();expect(E[0]).hasHTML("6:30 AM")})});describe("setMinValue method",function(){it("should set the minValue config",function(){A({minValue:new Date("1/1/2011 06:30:00")});var D=new Date("1/1/2011 08:45:00");C.setMinValue(D);expect(C.minValue).toEqual(D)});it("should update the list to match the new minValue",function(){A({minValue:new Date("1/1/2011 06:30:00")});var D=new Date("1/1/2011 08:45:00");if(jasmine.browser.isOpera){D.setSeconds(0);D.setMilliseconds(0)}C.setMinValue(D);expect(C.getNodes().length).toEqual(61);expect(C.getNode(0)).hasHTML("8:45 AM")})})});describe("maxValue",function(){it("should be used as the maximum time in the list",function(){A({maxValue:new Date("1/1/2011 21:30:00")});waitsFor(B);runs(function(){var D=C.getNodes();expect(D[D.length-1]).hasHTML("9:30 PM")})});describe("setMaxValue method",function(){it("should set the maxValue config",function(){A({maxValue:new Date("1/1/2011 21:30:00")});var D=new Date("1/1/2011 13:15:00");C.setMaxValue(D);expect(C.maxValue).toEqual(D)});it("should update the list to match the new maxValue",function(){A({maxValue:new Date("1/1/2011 21:30:00")});var D=new Date("1/1/2011 13:15:00");C.setMaxValue(D);var E=C.getNodes();expect(E.length).toEqual(54);expect(E[E.length-1]).hasHTML("1:15 PM")})})})})