describe("Ext.selection.CellModel",function(){var C,A,B,H,D;function G(K,M,L,J,I,O){var N=F(M,L);jasmine.fireMouseEvent(N,K,I,O,J)}function F(J,I){return C.getView().getCellInclusive({row:J,column:I},true)}function E(L,I,N){Ext.define("spec.CellModel",{extend:"Ext.data.Model",fields:["field1","field2","field3"]});H=new Ext.selection.CellModel(N||{});var M=[],J=[],K;if(!L){for(K=1;K<=5;++K){J.push({name:"F"+K,dataIndex:"field"+K})}}for(K=1;K<=10;++K){M.push({field1:K+"."+1,field2:K+"."+2,field3:K+"."+3,field4:K+"."+4,field5:K+"."+5})}B=new Ext.data.Store({model:spec.CellModel,data:M});C=new Ext.grid.Panel(Ext.apply({columns:L||J,store:B,selModel:H,width:1000,height:500,renderTo:Ext.getBody()},I));A=C.getView();H=C.getSelectionModel();D=C.getColumnManager().getColumns()}afterEach(function(){Ext.destroy(C,B);H=C=B=A=null;Ext.undefine("spec.CellModel");Ext.data.Model.schema.clear()});it("should select when right-clicking",function(){E();G("click",0,0,3);expect(H.getSelection().length).toBe(1)});describe("deselectOnContainerClick",function(){it("should default to false",function(){E();expect(H.deselectOnContainerClick).toBe(false)});describe("deselectOnContainerClick: false",function(){it("should not deselect when clicking the container",function(){E(null,null,{deselectOnContainerClick:false});H.selectByPosition({row:0,column:0});jasmine.fireMouseEvent(A.getEl(),"click",800,200);var I=H.getPosition();expect(I.record).toBe(B.getAt(0));expect(I.column).toBe(D[0])})});describe("deselectOnContainerClick: true",function(){it("should deselect when clicking the container",function(){E(null,null,{deselectOnContainerClick:true});H.selectByPosition({row:0,column:0});jasmine.fireMouseEvent(A.getEl(),"click",800,200);expect(H.getPosition()).toBeNull()})})});describe("hidden columns",function(){it("should take a hidden column into account on click",function(){E([{dataIndex:"field1"},{dataIndex:"field2",hidden:true},{dataIndex:"field3"}]);G("click",0,2);var I=H.getPosition();expect(I.column).toBe(D[2]);expect(I.record).toBe(C.getStore().getAt(0))})});describe("store actions",function(){it("should have no selection when clearing the store",function(){E();H.selectByPosition({row:1,column:0});B.removeAll();expect(H.getPosition()).toBeNull()});it("should update the position when removing records",function(){E();var I=B.getAt(8);H.selectByPosition({column:1,row:8});B.removeAt(0);B.removeAt(0);B.removeAt(0);B.removeAt(0);var J=H.getPosition();expect(J.column).toBe(D[1]);expect(J.record).toBe(I)});it("should update the position on inserting records",function(){E();var I=B.getAt(1);H.selectByPosition({column:2,row:1});B.insert(0,{});B.insert(0,{});B.insert(0,{});B.insert(0,{});var J=H.getPosition();expect(J.column).toBe(D[2]);expect(J.record).toBe(I)})});it("should render cells with the x-grid-cell-selected cls (EXTJSIV-11254)",function(){E();H.select(0);C.getStore().sort([{property:"name",direction:"DESC"}]);var I=C.getColumnManager().getHeaderAtIndex(0);expect(C.getView().getCell(0,I)).toHaveCls("x-grid-cell-selected")});describe("column move",function(){it("should have the correct position after moving column",function(){E();G("click",0,0);C.headerCt.move(0,3);var I=H.getCurrentPosition();expect(I.column).toBe(3);expect(I.row).toBe(0);expect(I.record).toBe(C.getStore().getAt(0));expect(I.columnHeader).toBe(D[0])});it("should not fire a change event",function(){E();G("click",0,0);var I=jasmine.createSpy();H.on("selectionchange",I);C.headerCt.move(0,3);expect(I).not.toHaveBeenCalled()})});describe("with DD",function(){it("should start dragging",function(){E(null,{viewConfig:{plugins:{ptype:"gridviewdragdrop",dragText:"Drag and drop to reorganize"}}});var I=C.view.findPlugin("gridviewdragdrop");runs(function(){G("mousedown",0,0,null,10,30);jasmine.fireMouseEvent(document.body,"mousemove",20,20)});waitsFor(function(){return I.dragZone.proxy.el.isVisible()});runs(function(){var J;J=I.dragZone.proxy.el.down("."+Ext.baseCSSPrefix+"grid-dd-wrap",true);expect(J).not.toBeFalsy();C.destroy();jasmine.fireMouseEvent(document.body,"mousemove",40,40)})})})})