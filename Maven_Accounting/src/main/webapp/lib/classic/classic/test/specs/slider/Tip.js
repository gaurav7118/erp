describe("Ext.slider.Tip",function(){var D,E,A,C,B=function(F){E=new Ext.slider.Tip();spyOn(E,"show").andCallThrough();spyOn(E,"update").andCallThrough();C=Ext.getBody().createChild({});C.setHeight(100);D=new Ext.slider.Single(Ext.apply({renderTo:Ext.getBody(),name:"test",width:205,labelWidth:0,minValue:0,maxValue:100,useTips:false,plugins:[E],animate:false},F));A=D.thumbs[0]};afterEach(function(){if(D){D.destroy()}C.destroy();D=null});describe("when thumb is dragged",function(){var I,F,H,G;beforeEach(function(){B();var J=A.el.getXY();jasmine.fireMouseEvent(A.el,"mousedown",J[0],J[1]+5);jasmine.fireMouseEvent(A.el,"mousemove",J[0]+50,J[1]+5);waitsFor(function(){return E.el});runs(function(){H=E.el.getXY();G=E.el.getSize();I=A.el.getXY();F=A.el.getSize();jasmine.fireMouseEvent(A.el,"mouseup",J[0]+50,J[1]+5)})});it("should show the tooltip",function(){expect(E.show).toHaveBeenCalled()});it("should update the tooltip text",function(){expect(E.update).toHaveBeenCalledWith(E.getText(A))});it("should align the tip to t-b?",function(){expect(H[0]<I[0]).toBe(true);expect(H[0]+G.width>I[0]+F.width).toBe(true);expect(H[1]-E.offsets[1]+G.height).toBe(I[1])})})})