describe("Ext.tip.ToolTip",function(){var B,D;function A(E){E=Ext.apply({},E,{target:D,width:50,height:50,html:"X"});B=new Ext.tip.ToolTip(E);return B}beforeEach(function(){D=Ext.getBody().insertHtml("beforeEnd",'<a href="#" id="tipTarget" style="position:absolute; left:100px; top:100px; width: 50px; height: 50px;">x</a>',true)});afterEach(function(){if(B){B.destroy();B=null}D.destroy()});function C(){jasmine.fireMouseEvent(D,"mouseover",D.getX(),D.getY())}describe("basic",function(){it("should extend Ext.tip.Tip",function(){expect(A() instanceof Ext.tip.Tip).toBeTruthy()});it("should accept an id for the 'target' config",function(){A({target:"tipTarget"});expect(B.target.dom).toBe(D.dom)});it("should accept an Ext.Element for the 'target' config",function(){A({target:D});expect(B.target.dom).toBe(D.dom)});it("should accept an HTMLElement for the 'target' config",function(){A({target:D.dom});expect(B.target.dom).toBe(D.dom)})});describe("disable",function(){it("should not show when not using a delay",function(){A({target:"tipTarget",showDelay:0});B.disable();C();expect(B.isVisible()).toBe(false)});it("should not show when disabled during a delay and not rendered",function(){A({target:"tipTarget",showDelay:1000});C();B.disable();var E=jasmine.createSpy();B.on("show",E);waits(1500);runs(function(){expect(E).not.toHaveBeenCalled()})});it("should not show when disabled during a delay and already rendered",function(){A({target:"tipTarget",showDelay:1000,renderTo:Ext.getBody()});B.hide();C();B.disable();var E=jasmine.createSpy();B.on("show",E);waits(1500);runs(function(){expect(E).not.toHaveBeenCalled()})})});describe("show/hide",function(){it("should show the tooltip after mousing over the target element",function(){runs(function(){A({showDelay:1});var E=spyOn(B,"delayShow").andCallThrough();expect(B.isVisible()).toBeFalsy();C();expect(E).toHaveBeenCalled()});waitsFor(function(){return B.isVisible()},"ToolTip was never shown")});it("should hide the tooltip after mousing out of the target element",function(){runs(function(){A({showDelay:1,hideDelay:15});C()});waitsFor(function(){return B.isVisible()},"ToolTip was never shown");runs(function(){jasmine.fireMouseEvent(D,"mouseout",D.getX(),D.getY())});waitsFor(function(){return !B.isVisible()},"ToolTip was never hidden")});it("should hide the tooltip after a delay",function(){runs(function(){A({showDelay:1,dismissDelay:15});C()});waitsFor(function(){return B.isVisible()},"ToolTip was never shown");waitsFor(function(){return !B.isVisible()},"ToolTip was never hidden")});it("should prevent the tooltip from automatically hiding if autoHide is false",function(){runs(function(){A({showDelay:1,autoHide:false});this.spy=spyOn(B,"hide");C()});waitsFor(function(){return B.isVisible()},"ToolTip was never shown");waits(100);runs(function(){expect(this.spy).not.toHaveBeenCalled()})});it("should allow clicking outside the tip to close it if autoHide is false",function(){runs(function(){A({showDelay:1,autoHide:false});C()});waitsFor(function(){return B.isVisible()},"ToolTip was never shown");runs(function(){this.spy=spyOn(B,"hide").andCallThrough();jasmine.fireMouseEvent(Ext.getBody(),"mousedown",0,0);expect(this.spy).toHaveBeenCalled()})})});describe("mouseOffset",function(){it("should display the tooltip [15,18] from the mouse pointer by default",function(){runs(function(){A({showDelay:1});C()});waitsFor(function(){return B.isVisible()},"ToolTip was never shown");runs(function(){expect(B.el).toBePositionedAt(D.getX()+15,D.getY()+18)})});it("should allow configuring the mouseOffset",function(){runs(function(){A({showDelay:1,mouseOffset:[20,30]});C()});waitsFor(function(){return B.isVisible()},"ToolTip was never shown");runs(function(){expect(B.el).toBePositionedAt(D.getX()+35,D.getY()+48)})})});describe("showAt",function(){it("should at the specified position",function(){A();B.showAt([100,100]);expect(B.el).toBePositionedAt(100,100)})});describe("trackMouse",function(){it("should move the tooltip along with the mouse if 'trackMouse' is true",function(){var E=D.getX(),F=D.getY();runs(function(){A({showDelay:1,trackMouse:true});jasmine.fireMouseEvent(D,"mouseover",E,F)});waitsFor(function(){return B.isVisible()},"ToolTip was never shown");runs(function(){expect(B.el).toBePositionedAt(E+15,F+18);for(var G=0;G<5;G++){jasmine.fireMouseEvent(D,"mousemove",++E,++F);expect(B.el).toBePositionedAt(E+15,F+18)}})});describe("caching coords",function(){var E,G,F=0;beforeEach(function(){E=D.getX();G=D.getY();runs(function(){A({showDelay:1,trackMouse:F?true:false});spyOn(B,"show").andCallThrough();jasmine.fireMouseEvent(D,"mouseover",E,G);F++});waitsFor(function(){return B.isVisible()},"ToolTip was never shown")});it("should cache xy coords when trackMouse=false",function(){runs(function(){expect(B.show.mostRecentCall.args[0]).toBe(undefined)});waits(10);runs(function(){jasmine.fireMouseEvent(D,"mouseover",E,G);expect(B.show.mostRecentCall.args[0]).toEqual([115,118])})});it("should not cache xy coords when trackMouse=true",function(){runs(function(){expect(B.show.mostRecentCall.args[0]).toBeFalsy()});waits(10);runs(function(){jasmine.fireMouseEvent(D,"mouseover",E,G);expect(B.show.mostRecentCall.args[0]).toBeFalsy()})})})});describe("anchor",function(){it("should allow anchoring the top of the tooltip to the target",function(){A({anchor:"top"});B.show();var E=D.getXY();expect(B.el).toBePositionedAt(E[0],E[1]+D.getHeight()+9)});it("should allow anchoring the right of the tooltip to the target",function(){A({anchor:"right"});B.show();var E=D.getXY();expect(B.el).toBePositionedAt(E[0]-B.el.getWidth()-13,E[1])});it("should allow anchoring the bottom of the tooltip to the target",function(){A({anchor:"bottom"});B.show();var E=D.getXY();expect(B.el).toBePositionedAt(E[0],E[1]-B.el.getHeight()-13)});it("should allow anchoring the left of the tooltip to the target",function(){A({anchor:"left"});B.show();var E=D.getXY();expect(B.el).toBePositionedAt(E[0]+D.getWidth()+9,E[1])});it("should flip from top to bottom if not enough space below the target",function(){D.setY(Ext.Element.getViewportHeight()-75);A({anchor:"top",constrainPosition:true});B.show();var E=D.getXY();expect(B.el).toBePositionedAt(E[0],E[1]-B.el.getHeight()-13)});it("should flip from bottom to top if not enough space above the target",function(){D.setY(25);A({anchor:"bottom",constrainPosition:true});B.show();var E=D.getXY();expect(B.el).toBePositionedAt(E[0],E[1]+D.getHeight()+9)});it("should flip from right to left if not enough space to the left of the target",function(){D.setX(25);A({anchor:"right",constrainPosition:true});B.show();var E=D.getXY();expect(B.el).toBePositionedAt(E[0]+D.getWidth()+9,E[1])});it("should flip from left to right if not enough space to the right of the target",function(){D.setX(Ext.Element.getViewportWidth()-75);A({anchor:"left",constrainPosition:true});B.show();var E=D.getXY();expect(B.el).toBePositionedAt(E[0]-B.el.getWidth()-13,E[1])})});describe("anchorToTarget=false",function(){it("should allow anchoring the top of the tooltip to the mouse pointer",function(){var E=D.getXY();runs(function(){A({showDelay:1,anchorToTarget:false,anchor:"top"});jasmine.fireMouseEvent(D,"mouseover",E[0],E[1])});waitsFor(function(){return B.isVisible()},"ToolTip was never shown");runs(function(){expect(B.el).toBePositionedAt(E[0]-15,E[1]+30)})});it("should allow anchoring the right of the tooltip to the mouse pointer",function(){var E=D.getXY();runs(function(){A({showDelay:1,anchorToTarget:false,anchor:"right"});jasmine.fireMouseEvent(D,"mouseover",E[0],E[1])});waitsFor(function(){return B.isVisible()},"ToolTip was never shown");runs(function(){expect(B.el).toBePositionedAt(E[0]-B.el.getWidth()-15,E[1]-13)})});it("should allow anchoring the bottom of the tooltip to the mouse pointer",function(){var E=D.getXY();runs(function(){A({showDelay:1,anchorToTarget:false,anchor:"bottom"});jasmine.fireMouseEvent(D,"mouseover",E[0],E[1])});waitsFor(function(){return B.isVisible()},"ToolTip was never shown");runs(function(){expect(B.el).toBePositionedAt(E[0]-19,E[1]-B.el.getHeight()-13)})});it("should allow anchoring the left of the tooltip to the mouse pointer",function(){var E=D.getXY();runs(function(){A({showDelay:1,anchorToTarget:false,anchor:"left"});jasmine.fireMouseEvent(D,"mouseover",E[0],E[1])});waitsFor(function(){return B.isVisible()},"ToolTip was never shown");runs(function(){expect(B.el).toBePositionedAt(E[0]+25,E[1]-13)})})});describe("anchorOffset",function(){it("should move the anchor arrow horizontally when anchor is top",function(){A({anchor:"top",anchorOffset:25});B.show();var E=B.el.getXY(),F=B.anchorEl.getXY();expect(F[0]).toEqual(E[0]+15+25)});it("should move the anchor arrow horizontally when anchor is bottom",function(){A({anchor:"bottom",anchorOffset:25});B.show();var E=B.el.getXY(),F=B.anchorEl.getXY();expect(F[0]).toEqual(E[0]+15+25)});it("should move the anchor arrow vertically when anchor is left",function(){A({anchor:"left",anchorOffset:25});B.show();var E=B.el.getXY(),F=B.anchorEl.getXY();expect(F[1]).toEqual(E[1]+7+25)});it("should move the anchor arrow vertically when anchor is right",function(){A({anchor:"right",anchorOffset:25});B.show();var E=B.el.getXY(),F=B.anchorEl.getXY();expect(F[1]).toEqual(E[1]+7+25)})});describe("delegate",function(){var E;beforeEach(function(){D.insertHtml("beforeEnd",'<span class="hasTip" id="delegatedTarget">x</span><span class="noTip">x</span>');E=Ext.get("delegatedTarget")});afterEach(function(){E.destroy()});it("should show the tooltip for descendants matching the selector",function(){A({delegate:".hasTip"});var F=spyOn(B,"delayShow");jasmine.fireMouseEvent(E,"mouseover",E.getX(),E.getY());expect(F).toHaveBeenCalled()});it("should not show the tooltip for descendants that do not match the selector",function(){A({delegate:".hasTip"});var F=spyOn(B,"delayShow");C();expect(F).not.toHaveBeenCalled()});it("should set the triggerElement property to the active descendant element when shown",function(){A({delegate:".hasTip"});jasmine.fireMouseEvent(E,"mouseover",E.getX(),E.getY());expect(B.triggerElement).toBe(E.dom)});it("should unset the triggerElement property when hiding",function(){A({delegate:".hasTip"});jasmine.fireMouseEvent(E,"mouseover",E.getX(),E.getY());B.hide();expect(B.triggerElement).not.toBeDefined()})})})