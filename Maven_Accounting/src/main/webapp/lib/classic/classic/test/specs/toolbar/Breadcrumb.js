describe("Ext.toolbar.Breadcrumb",function(){var H,B,J;function F(K){spyOn(Ext.log,"warn");spyOn(Ext.log,"error");B=Ext.widget(Ext.apply({xtype:"breadcrumb",renderTo:Ext.getBody(),store:H},K))}function I(O){var K=B.items.getAt(O),M=K.el,L=K.btnEl,N=M.getRight()-L.getRight();K.menu.menuClickBuffer=0;jasmine.fireMouseEvent(M,"click",M.getX()+M.getWidth()-(N/2),M.getY()+(M.getHeight()/2))}function G(O){var K=B.items.getAt(O),M=K.el,L=K.btnEl,N=L.getRight()-M.getX();K.menu.menuClickBuffer=0;jasmine.fireMouseEvent(M,"click",M.getX()+(N/2),M.getY()+(M.getHeight()/2))}function E(L,K){var M=B.items.getAt(L).menu;jasmine.fireMouseEvent(M.items.getAt(K).itemEl,"click")}function A(O,K){var M=(K||H).getNodeById(O),L=B.items,N=(L.getCount()===M.get("depth")+1);expect(N).toBe(true);if(N){M.bubble(function(Q){var P=L.getAt(Q.get("depth"));expect(P.getText()).toBe(Q.get("text"));expect(P.getArrowVisible()).toBe(Q.hasChildNodes())})}}function D(O){var M=H.getNodeById(O),L=B.items.getAt(M.get("depth")),K=L.menu.items,N=M.childNodes;if(M.hasChildNodes()){expect(K.getCount()).toBe(N.length);Ext.each(N,function(Q,P){expect(K.getAt(P).text).toBe(Q.get("text"))})}else{expect(K.getCount()).toBe(0)}}function C(K,L){expect(B.items.getAt(K).menu.isVisible()).toBe(L)}beforeEach(function(){J={text:"SSD",id:"/SSD",children:[{text:"bin",id:"/SSD/bin",children:[{id:"/SSD/bin/cp",text:"cp",leaf:true},{id:"/SSD/bin/mv",text:"mv",leaf:true},{id:"/SSD/bin/rm",text:"rm",leaf:true}]},{text:"etc",id:"/SSD/etc",children:[{id:"/SSD/etc/apache2",text:"apache2",leaf:true},{id:"/SSD/etc/bashrc",text:"bashrc",leaf:true},{id:"/SSD/etc/hosts",text:"hosts",leaf:true}]},{text:"usr",id:"/SSD/usr",children:[{text:"bin",id:"/SSD/usr/bin",children:[{id:"/SSD/usr/bin/awk",text:"awk",leaf:true},{id:"/SSD/usr/bin/grep",text:"grep",leaf:true},{id:"/SSD/usr/bin/ssh",text:"ssh",leaf:true}]},{text:"lib",id:"/SSD/usr/lib",children:[{id:"/SSD/usr/lib/java",text:"java",leaf:true},{id:"/SSD/usr/lib/python",text:"python",leaf:true},{id:"/SSD/usr/lib/ruby",text:"ruby",leaf:true}]}]}]};H=new Ext.data.TreeStore({root:J})});afterEach(function(){Ext.destroy(B,H);H=B=J=null});describe("initial selection",function(){it("should render with root node initially selected",function(){F();A("/SSD")});it("should render with root node initially selected if selection is 'root'",function(){F({selection:"root"});A("/SSD")});it("should render with no selection if selection is null",function(){F({selection:null});expect(B.items.getCount()).toBe(0)})});describe("store",function(){it("should accept a store instance",function(){F();expect(B.getStore()).toBe(H)});it("should accept a store config",function(){H.destroy();F({store:{type:"tree",root:J}});expect(B.getStore().getRoot().get("text")).toBe("SSD")});it("should accept a store id",function(){H.destroy();H=new Ext.data.TreeStore({root:J,storeId:"foo"});F({store:"foo"});expect(B.getStore()).toBe(H)});it("should be able to be created with no store",function(){H.destroy();expect(function(){F({store:null})}).not.toThrow()});it("should be able to set the store later",function(){F({store:null});B.setStore(H);B.setSelection(H.getRoot().firstChild.firstChild);B.setSelection(H.getRoot().firstChild);A("/SSD/bin")});it("should be able to bind a new store",function(){F();var K=H;H=new Ext.data.TreeStore({root:{text:"Root",id:"/root",children:[{text:"Child1",id:"/root/c1",leaf:true},{text:"Child2",id:"/root/c2",leaf:true},{text:"Child3",id:"/root/c3",leaf:true}]}});B.setStore(H);K.destroy();A("/root");B.setSelection(H.getRoot().childNodes[1]);A("/root/c2")})});describe("navigation",function(){beforeEach(function(){F()});describe("using setSelection()",function(){it("should select a node deeper in the hierarchy",function(){var K=H.getRoot().firstChild.childNodes[1];B.setSelection(K);A("/SSD/bin/mv")});it("should select a node above the currently selected node",function(){B.setSelection(H.getRoot().firstChild.firstChild);B.setSelection(H.getRoot().firstChild);A("/SSD/bin")});it("should select a node from a different branch of the heirarchy",function(){B.setSelection(H.getRoot().firstChild.childNodes[1]);B.setSelection(H.getRoot().childNodes[2].childNodes[1].childNodes[1]);A("/SSD/usr/lib/python")});it("should select a node at a higher level than the selected node but in a different branch of the hierarchy",function(){B.setSelection(H.getRoot().childNodes[2].childNodes[1].childNodes[1]);B.setSelection(H.getRoot().childNodes[1]);A("/SSD/etc")});it("should set a null selection",function(){B.setSelection(H.getRoot().childNodes[1]);A("/SSD/etc");B.setSelection(null);expect(B.items.getCount()).toBe(0)});it("should mantain selections correctly when changing parents",function(){B.setSelection(H.getNodeById("/SSD/bin/cp"));A("/SSD/bin/cp");B.setSelection(H.getNodeById("/SSD/etc"));A("/SSD/etc");B.setSelection(H.getNodeById("/SSD/bin/cp"));A("/SSD/bin/cp")})});describe("using the UI",function(){var K=Ext.button.Button.prototype,L;beforeEach(function(){L=K.menuClickBuffer;K.menuClickBuffer=0});afterEach(function(){K.menuClickBuffer=L});it("should navigate using the UI",function(){I(0);C(0,true);D("/SSD");E(0,2);C(0,false);A("/SSD/usr");I(1);C(1,true);D("/SSD/usr");E(1,1);C(1,false);A("/SSD/usr/lib");I(2);C(2,true);D("/SSD/usr/lib");E(2,0);C(2,false);A("/SSD/usr/lib/java");G(2);A("/SSD/usr/lib");I(2);C(2,true);D("/SSD/usr/lib");E(2,2);C(2,false);A("/SSD/usr/lib/ruby");G(1);A("/SSD/usr");I(0);C(0,true);D("/SSD");E(0,1);C(0,false);A("/SSD/etc");I(1);C(1,true);D("/SSD/etc");E(1,0);C(1,false);A("/SSD/etc/apache2");I(0);C(0,true);D("/SSD");E(0,2);C(0,false);A("/SSD/usr");I(1);C(1,true);D("/SSD/usr");E(1,0);C(1,false);A("/SSD/usr/bin");I(2);C(2,true);D("/SSD/usr/bin");E(2,0);C(2,false);A("/SSD/usr/bin/awk");G(0);A("/SSD")})});it("should fire selectionchange when a node is selected",function(){var K=jasmine.createSpy(),L=H.getRoot().childNodes[1].childNodes[1];B.on("selectionchange",K);B.setSelection(L);expect(K).toHaveBeenCalledWith(B,L,H.getRoot())});it("should fire change when a node is selected",function(){var K=jasmine.createSpy(),L=H.getRoot().childNodes[1].childNodes[1];B.on("change",K);B.setSelection(L);expect(K).toHaveBeenCalledWith(B,L,H.getRoot())})});describe("selectionchange vs. change event",function(){var L,K;beforeEach(function(){L=jasmine.createSpy();K=jasmine.createSpy();F({listeners:{selectionchange:L,change:K}})});it("should fire selectionchange on render, but not change",function(){expect(L.callCount).toBe(1);expect(K.callCount).toBe(0)})});describe("view model selection",function(){var K,L;beforeEach(function(){L=jasmine.createSpy();K=new Ext.app.ViewModel()});afterEach(function(){K=null});function M(O){var N=null;H.getRoot().cascadeBy(function(P){if(P.id===O){N=P;return false}});return N}describe("reference",function(){beforeEach(function(){F({viewModel:K,reference:"navigation"});K.bind("{navigation.selection}",L);K.notify()});it("should publish the root by default",function(){var N=L.mostRecentCall.args;expect(N[0]).toBe(M("/SSD"));expect(N[1]).toBeUndefined()});it("should publish when the selection is changed",function(){var O=M("/SSD/bin/cp");B.setSelection(O);K.notify();var N=L.mostRecentCall.args;expect(N[0]).toBe(O);expect(N[1]).toBe(M("/SSD"))});it("should publish when the selection is cleared",function(){B.setSelection(null);K.notify();var N=L.mostRecentCall.args;expect(N[0]).toBeNull();expect(N[1]).toBe(M("/SSD"))})});describe("two way binding",function(){beforeEach(function(){F({viewModel:K,bind:{selection:"{foo}"}});K.bind("{foo}",L);K.notify()});describe("changing the selection",function(){it("should trigger the binding when adding a selection",function(){B.setSelection(null);K.notify();L.reset();var O=M("/SSD/bin/cp");B.setSelection(O);K.notify();var N=L.mostRecentCall.args;expect(N[0]).toBe(O);expect(N[1]).toBeNull()});it("should trigger the binding when changing the selection",function(){var O=M("/SSD/bin/cp");B.setSelection(O);K.notify();var N=L.mostRecentCall.args;expect(N[0]).toBe(O);expect(N[1]).toBe(M("/SSD"))});it("should trigger the binding when an item is deselected",function(){B.setSelection(null);K.notify();var N=L.mostRecentCall.args;expect(N[0]).toBeNull();expect(N[1]).toBe(M("/SSD"))})});describe("changing the viewmodel value",function(){it("should select the record when setting the value",function(){var N=M("/SSD/bin/cp");B.setSelection(null);K.notify();K.set("foo",N);K.notify();expect(B.getSelection()).toBe(N)});it("should select the record when updating the value",function(){var N=M("/SSD/bin/cp");K.set("foo",N);K.notify();expect(B.getSelection()).toBe(N)});it("should deselect when clearing the value",function(){K.set("foo",null);K.notify();expect(B.getSelection()).toBeNull()})})})});describe("reconfiguring the store",function(){var K;beforeEach(function(){K=new Ext.data.TreeStore({root:{text:"Root",id:"/Root",children:[{text:"child",id:"/Root/child",children:[{id:"/Root/child/grandchild",text:"grandchild",leaf:true}]}]}})});it("should update the breadcrumb bar to be backed by the new store",function(){F();B.setSelection(H.getRoot().firstChild.childNodes[2]);A("/SSD/bin/rm");B.setStore(K);expect(B.getStore()).toBe(K);A("/Root",K);B.setSelection(K.getRoot().firstChild.firstChild);A("/Root/child/grandchild",K)})});describe("displayField",function(){beforeEach(function(){H=new Ext.data.TreeStore({root:{name:"Root",id:"/Root",children:[{name:"child1",id:"/Root/child1",leaf:true},{name:"child2",id:"/Root/child2",leaf:true}]}});F({displayField:"name"})});it("should use the displayField as the button text",function(){expect(B.items.getAt(0).text).toBe("Root")});it("should use the displayField as the menu item text",function(){I(0);var K=B.items.getAt(0).menu.items;expect(K.getAt(0).text).toBe("child1");expect(K.getAt(1).text).toBe("child2")})});describe("useSplitButtons: false",function(){beforeEach(function(){F({useSplitButtons:false})});it("should use menu buttons instead of split buttons",function(){expect(B.items.getAt(0).xtype).toBe("button")});it("should not navigate when the button is clicked",function(){B.setSelection(H.getRoot().firstChild.firstChild);A("/SSD/bin/cp");G(0);A("/SSD/bin/cp")});it("should show the menu when the button is clicked",function(){G(0);C(0,true)});it("should not show the menu for leaf nodes",function(){B.setSelection(H.getRoot().childNodes[1].childNodes[1]);A("/SSD/etc/bashrc");G(2);C(2,false)})});describe("showIcons",function(){var K="resources/images/bar.gif";beforeEach(function(){H=new Ext.data.TreeStore({root:{name:"Root",id:"/Root",children:[{text:"child1",id:"/Root/child1",iconCls:"foo",children:[{text:"grandchild1",leaf:true,icon:K}]},{text:"child2",id:"/Root/child2",children:[{text:"grandchild2",leaf:true}]}]}})});describe("null",function(){beforeEach(function(){F()});it("should show user defined icons",function(){var L=H.getRoot().firstChild.firstChild;B.setSelection(L);expect(B.items.getAt(1).iconCls).toBe("foo");expect(B.items.getAt(1).icon).toBeFalsy();expect(B.items.getAt(2).iconCls).toBeFalsy();expect(B.items.getAt(2).icon).toBe(K)});it("should not show default icons",function(){var L=H.getRoot().childNodes[1].firstChild;B.setSelection(L);expect(B.items.getAt(0).iconCls).toBeFalsy();expect(B.items.getAt(1).iconCls).toBeFalsy();expect(B.items.getAt(2).iconCls).toBeFalsy()})});describe("true",function(){beforeEach(function(){F({showIcons:true})});it("should show user defined icons",function(){var L=H.getRoot().firstChild.firstChild;B.setSelection(L);expect(B.items.getAt(1).iconCls).toBe("foo");expect(B.items.getAt(1).icon).toBeFalsy();expect(B.items.getAt(2).iconCls).toBeFalsy();expect(B.items.getAt(2).icon).toBe(K)});it("should show default icons",function(){var L=H.getRoot().childNodes[1].firstChild;B.setSelection(L);expect(B.items.getAt(0).iconCls).toBe("x-breadcrumb-icon-folder-default");expect(B.items.getAt(1).iconCls).toBe("x-breadcrumb-icon-folder-default");expect(B.items.getAt(2).iconCls).toBe("x-breadcrumb-icon-leaf-default")})});describe("false",function(){beforeEach(function(){F({showIcons:false})});it("should not show user defined icons",function(){var L=H.getRoot().firstChild.firstChild;B.setSelection(L);expect(B.items.getAt(1).iconCls).toBeFalsy();expect(B.items.getAt(2).icon).toBeFalsy()});it("should not show default icons",function(){var L=H.getRoot().childNodes[1].firstChild;B.setSelection(L);expect(B.items.getAt(0).iconCls).toBeFalsy();expect(B.items.getAt(1).iconCls).toBeFalsy();expect(B.items.getAt(2).iconCls).toBeFalsy()})})});describe("overflow",function(){it("should use scroller overflow",function(){F({overflowHandler:"scroller"});expect(B.layout.overflowHandler instanceof Ext.layout.container.boxOverflow.Scroller).toBe(true)});it("should not throw an exception when clicking on the scrollers",function(){H.destroy();var M=[],L,N,K;for(L=0;L<200;++L){M.push({text:"Child "+L,id:"child"+L})}H=new Ext.data.TreeStore({root:{text:"Root",children:M}});F({overflowHandler:"scroller"});N=B.items.getAt(0);N.showMenu();K=N.getMenu().getEl().down(".x-box-scroller-bottom");if(!K){this.fail("Unable to find scroller element")}expect(function(){jasmine.fireMouseEvent(K,"click")}).not.toThrow()})})})