describe("Ext.toolbar.Paging",function(){var F=Ext.supports.SpecialKeyDownRepeat?"keydown":"keypress",D,H,E=Ext.isIE9||Ext.isIE10?xdescribe:describe,K=true,C=Ext.data.ProxyStore.prototype.load,G;function J(L,M){L=L||{};if(!M){L.renderTo=Ext.getBody()}if(L.store===undefined){L.store=A()}D=new Ext.toolbar.Paging(L)}function A(L){H=new Ext.data.Store({model:"spec.PagingToolbarModel",storeId:"pagingToolbarStore",pageSize:L||5,proxy:{type:"ajax",url:"fakeUrl",reader:{type:"json",rootProperty:"data",totalProperty:"total"}}});return H}function I(N,P,L){var O=[],M;if(L===undefined){L=P+H.pageSize}for(M=P;M<L;++M){O.push({name:"Item "+(M+1)})}return Ext.encode({data:O,total:N})}function B(M,L){Ext.Ajax.mockComplete({status:L||200,responseText:M})}beforeEach(function(){G=Ext.data.ProxyStore.prototype.load=function(){C.apply(this,arguments);if(K){this.flushLoad.apply(this,arguments)}return this};Ext.define("spec.PagingToolbarModel",{extend:"Ext.data.Model",fields:["name"]});MockAjaxManager.addMethods()});afterEach(function(){Ext.data.ProxyStore.prototype.load=C;MockAjaxManager.removeMethods();Ext.destroy(D);if(H){H.destroy()}Ext.undefine("spec.PagingToolbarModel");Ext.data.Model.schema.clear();D=H=null});describe("store",function(){it("should be able to create without a store",function(){expect(function(){J({store:null})}).not.toThrow()});it("should accept a store instance",function(){H=A();J({store:H});expect(D.getStore()).toBe(H)});it("should accept a store config",function(){J({store:{model:"spec.PagingToolbarModel"}});expect(D.getStore().model).toBe(spec.PagingToolbarModel)});it("should accept a store id",function(){H=A();J({store:"pagingToolbarStore"});expect(D.getStore()).toBe(H)});it("should update the toolbar info if the store is already loaded at render time",function(){H=A();H.loadPage(2);B(I(20,5));J({store:H});expect(D.down("#inputItem").getValue()).toBe(2)});it("should display the correct number of total pages",function(){H=A();H.loadPage(1);B(I(20,10));J({store:H});expect(D.down("#afterTextItem").el.dom.innerHTML).toBe("of 4")});it("should update the toolbar info when binding a new store",function(){J();H=A();H.loadPage(3);B(I(20,10));D.bindStore(H);expect(D.down("#inputItem").getValue()).toBe(3)})});describe("child items",function(){it("should add items after the default buttons",function(){J({items:[{xtype:"button",itemId:"foo"}]});expect(D.items.last().getItemId()).toBe("foo")});it("should add items before the default buttons with prependButtons: true",function(){J({prependButtons:true,items:[{xtype:"button",itemId:"foo"}]});expect(D.items.first().getItemId()).toBe("foo")});it("should add the info display if displayInfo is true",function(){J({displayInfo:true});var L=D.items;expect(L.getAt(L.getCount()-2).isXType("tbfill")).toBe(true);expect(L.last().getItemId()).toBe("displayItem")})});describe("disabling/enabling items",function(){function L(O){N(O,false)}function M(O){N(O,true)}function N(P,O){expect(D.child("#"+P).disabled).toBe(O)}it("should disable everything except refresh when the store hasn't been loaded",function(){J();M("first");M("prev");M("inputItem");M("next");M("last");L("refresh")});describe("store loads before render",function(){it("should set the state if the store is loaded",function(){J({},true);H.load();B(I(20,0));D.render(Ext.getBody());M("first");M("prev");L("inputItem");L("next");L("last");L("refresh")})});describe("store loads after render",function(){it("should set the state if the store is loaded",function(){J();H.load();B(I(20,0));M("first");M("prev");L("inputItem");L("next");L("last");L("refresh")})});describe("based on current page",function(){it("should disable first/prev buttons on the first page",function(){J();H.loadPage(1);B(I(20,0));M("first");M("prev");L("inputItem");L("next");L("last");L("refresh")});it("should disable next/last buttons on the last page",function(){J();H.loadPage(4);B(I(20,0));L("first");L("prev");L("inputItem");M("next");M("last");L("refresh")});it("should enable all buttons when the page is not first or last",function(){J();H.loadPage(2);B(I(20,0));L("first");L("prev");L("inputItem");L("next");L("last");L("refresh")})});describe("refresh icon",function(){it("should disable the refresh icon if the store is loading during construction",function(){A();H.load();J({store:H});M("refresh")});it("should disable the refresh icon during a load",function(){J();H.load();M("refresh")})});describe("empty store",function(){it("should disable the inputItem & buttons",function(){J();H.load();B(I(0,0,0));M("first");M("prev");M("inputItem");M("next");M("last");L("refresh")})})});describe("move/refresh methods",function(){var L;beforeEach(function(){J();H.load();B(I(20,0));L=jasmine.createSpy()});afterEach(function(){L=null});describe("moveFirst",function(){it("should fire the beforechange event with the toolbar & the new page",function(){D.on("beforechange",L);D.moveFirst();expect(L.mostRecentCall.args[0]).toBe(D);expect(L.mostRecentCall.args[1]).toBe(1)});it("should return false if the beforechange event is vetoed",function(){D.on("beforechange",L.andReturn(false));expect(D.moveFirst()).toBe(false)});it("should return true & load the store with the first page",function(){spyOn(H,"loadPage");expect(D.moveFirst()).toBe(true);expect(H.loadPage.mostRecentCall.args[0]).toBe(1)})});describe("movePrevious",function(){it("should fire the beforechange event with the toolbar & the new page",function(){D.on("beforechange",L);H.loadPage(3);B(I(20,10));D.movePrevious();expect(L.mostRecentCall.args[0]).toBe(D);expect(L.mostRecentCall.args[1]).toBe(2)});it("should return false if moving to the previous page is not valid, the change event should not fire",function(){D.on("beforechange",L);expect(D.movePrevious()).toBe(false);expect(L).not.toHaveBeenCalled()});it("should return false if the beforechange event is vetoed",function(){D.on("beforechange",L.andReturn(false));expect(D.movePrevious()).toBe(false)});it("should return true & load the store with the previous page",function(){spyOn(H,"previousPage");H.loadPage(3);B(I(20,10));expect(D.movePrevious()).toBe(true);expect(H.previousPage).toHaveBeenCalled()})});describe("moveNext",function(){it("should fire the beforechange event with the toolbar & the new page",function(){D.on("beforechange",L);D.moveNext();expect(L.mostRecentCall.args[0]).toBe(D);expect(L.mostRecentCall.args[1]).toBe(2)});it("should return false if moving to the next page is not valid, the change event should not fire",function(){D.on("beforechange",L);H.loadPage(4);B(I(20,15));expect(D.moveNext()).toBe(false);expect(L).not.toHaveBeenCalled()});it("should return false if the beforechange event is vetoed",function(){D.on("beforechange",L.andReturn(false));expect(D.moveNext()).toBe(false)});it("should return true & load the store with the next page",function(){spyOn(H,"nextPage");expect(D.moveNext()).toBe(true);expect(H.nextPage).toHaveBeenCalled()})});describe("moveLast",function(){it("should fire the beforechange event with the toolbar & the new page",function(){D.on("beforechange",L);D.moveLast();expect(L.mostRecentCall.args[0]).toBe(D);expect(L.mostRecentCall.args[1]).toBe(4)});it("should return false if the beforechange event is vetoed",function(){D.on("beforechange",L.andReturn(false));expect(D.moveLast()).toBe(false)});it("should return true & load the store with the last page",function(){spyOn(H,"loadPage");expect(D.moveLast()).toBe(true);expect(H.loadPage.mostRecentCall.args[0]).toBe(4)})});describe("doRefresh",function(){it("should fire the beforechange event with the toolbar & the current page",function(){D.on("beforechange",L);D.doRefresh();expect(L.mostRecentCall.args[0]).toBe(D);expect(L.mostRecentCall.args[1]).toBe(1)});it("should return false if the beforechange event is vetoed",function(){D.on("beforechange",L.andReturn(false));expect(D.doRefresh()).toBe(false)});it("should return true & load the store with the last page",function(){spyOn(H,"loadPage");expect(D.doRefresh()).toBe(true);expect(H.loadPage.mostRecentCall.args[0]).toBe(1)})})});describe("change event",function(){var L;beforeEach(function(){L=jasmine.createSpy()});afterEach(function(){L=null});it("should fire the change event on load with the toolbar & pageData",function(){J();D.on("change",L);H.loadPage(3);B(I(20,10));expect(L.mostRecentCall.args[0]).toBe(D);expect(L.mostRecentCall.args[1]).toEqual({total:20,currentPage:3,pageCount:4,fromRecord:11,toRecord:15})});it("should not fire if configured with an empty store",function(){J(undefined,true);D.on("change",L);D.render(Ext.getBody());expect(L).not.toHaveBeenCalled()});it("should provide empty pageData when a store loads empty",function(){J();D.on("change",L);H.load();B("[]");expect(L.mostRecentCall.args[0]).toBe(D);expect(L.mostRecentCall.args[1]).toEqual({total:0,currentPage:0,pageCount:0,fromRecord:0,toRecord:0})})});(Ext.isOpera?xdescribe:describe)("inputItem",function(){var U=9,O=13,N=27,S=33,L=34,V=35,R=36,M=37,W=38,Q=39,T=40;function P(X){var Y=D.down("#inputItem").inputEl.dom;Y.focus();jasmine.fireKeyEvent(Y,F,X)}it("should set the value to the new page on load",function(){J();H.loadPage(3);B(I(20,10));expect(D.getInputItem().getValue()).toBe(3)});it("should set the value to the current page on blur",function(){J();var X=D.getInputItem();X.enable();X.focus();waitsFor(function(){return X.hasFocus});runs(function(){X.setValue(4);X.blur()});waitsFor(function(){return X.getValue()===1})});describe("reconfiguring a grid using buffered rendering and grouping",function(){var X;afterEach(function(){X.destroy();X=null});it("should update the input item when paging",function(){X=Ext.create("Ext.grid.Panel",{width:100,height:100,store:A(),features:[{ftype:"grouping"}],columns:[{text:"Name",dataIndex:"name",width:100}],bbar:J(undefined,true),renderTo:Ext.getBody()});X.reconfigure(H);H.loadPage(3);B(I(20,10));expect(D.getInputItem().getValue()).toBe(3)})});describe("keypress",function(){it("should set the value to the first page on home",function(){J();H.loadPage(3);B(I(100,10));P(R);expect(D.getInputItem().getValue()).toBe(1)});it("should set the value to the last page on end",function(){J();H.loadPage(1);B(I(20,0));P(V);expect(D.getInputItem().getValue()).toBe(4)});describe("down",function(){it("should set the value to the previous page on pagedown",function(){J();H.loadPage(3);B(I(20,10));P(L);expect(D.getInputItem().getValue()).toBe(2)});it("should set the value to the previous page on down",function(){J();H.loadPage(3);B(I(20,10));P(T);expect(D.getInputItem().getValue()).toBe(2)});describe("shift",function(){it("should not change the page if it will go over the limit with pagedown",function(){J();H.loadPage(3);B(I(20,10));var X=spyOn(D,"processKeyEvent").andCallFake(function(Z,Y){Y.shiftKey=true;Ext.toolbar.Paging.prototype.processKeyEvent.call(D,Z,Y)});P(L);expect(D.getInputItem().getValue()).toBe(3)});it("should not change the page if it will go over the limit with down",function(){J();H.loadPage(3);B(I(20,10));spyOn(D,"processKeyEvent").andCallFake(function(Y,X){X.shiftKey=true;Ext.toolbar.Paging.prototype.processKeyEvent.call(D,Y,X)});P(T);expect(D.getInputItem().getValue()).toBe(3)});it("should decrement by 10 when using shift + pagedown",function(){J();H.loadPage(15);B(I(100,75));spyOn(D,"processKeyEvent").andCallFake(function(Y,X){X.shiftKey=true;Ext.toolbar.Paging.prototype.processKeyEvent.call(D,Y,X)});P(L);expect(D.getInputItem().getValue()).toBe(5)});it("should decrement by 10 when using shift + down",function(){J();H.loadPage(15);B(I(100,75));spyOn(D,"processKeyEvent").andCallFake(function(Y,X){X.shiftKey=true;Ext.toolbar.Paging.prototype.processKeyEvent.call(D,Y,X)});P(T);expect(D.getInputItem().getValue()).toBe(5)})})});describe("up",function(){it("should set the value to the next page on pageup",function(){J();H.loadPage(3);B(I(20,10));P(S);expect(D.getInputItem().getValue()).toBe(4)});it("should set the value to the next page on up",function(){J();H.loadPage(3);B(I(20,10));P(W);expect(D.getInputItem().getValue()).toBe(4)});describe("shift",function(){it("should not change the page if it will go over the limit with pageup",function(){J();H.loadPage(1);B(I(20,0));var X=spyOn(D,"processKeyEvent").andCallFake(function(Z,Y){Y.shiftKey=true;Ext.toolbar.Paging.prototype.processKeyEvent.call(D,Z,Y)});P(S);expect(D.getInputItem().getValue()).toBe(1)});it("should not change the page if it will go over the limit with up",function(){J();H.loadPage(1);B(I(20,0));spyOn(D,"processKeyEvent").andCallFake(function(Y,X){X.shiftKey=true;Ext.toolbar.Paging.prototype.processKeyEvent.call(D,Y,X)});P(W);expect(D.getInputItem().getValue()).toBe(1)});it("should increment by 10 when using shift + pageup",function(){J();H.loadPage(1);B(I(100,0));spyOn(D,"processKeyEvent").andCallFake(function(Y,X){X.shiftKey=true;Ext.toolbar.Paging.prototype.processKeyEvent.call(D,Y,X)});P(S);expect(D.getInputItem().getValue()).toBe(11)});it("should increment by 10 when using shift + up",function(){J();H.loadPage(1);B(I(100,0));spyOn(D,"processKeyEvent").andCallFake(function(Y,X){X.shiftKey=true;Ext.toolbar.Paging.prototype.processKeyEvent.call(D,Y,X)});P(W);expect(D.getInputItem().getValue()).toBe(11)})})});E("enter",function(){it("should load the page in the field",function(){J();H.loadPage(1);B(I(20,0));D.getInputItem().setRawValue(3);spyOn(H,"loadPage");P(O);expect(H.loadPage.mostRecentCall.args[0]).toBe(3)});it("should do nothing if the value isn't valid",function(){J();H.loadPage(1);B(I(20,0));D.getInputItem().setRawValue("foo");spyOn(H,"loadPage");P(O);expect(H.loadPage).not.toHaveBeenCalled()});it("should do nothing if the page hasn't changed",function(){J();H.loadPage(1);B(I(20,0));D.getInputItem().setRawValue(1);spyOn(H,"loadPage");P(O);expect(H.loadPage).not.toHaveBeenCalled()});it("should pull the value up to the minimum",function(){J();H.loadPage(2);B(I(20,5));D.getInputItem().setRawValue(-2);spyOn(H,"loadPage");P(O);expect(H.loadPage.mostRecentCall.args[0]).toBe(1)});it("should limit the value up to the maximum",function(){J();H.loadPage(1);B(I(20,H.pageSize));D.getInputItem().setRawValue(50);spyOn(H,"loadPage");P(O);expect(H.loadPage.mostRecentCall.args[0]).toBe(4)});it("should fire the beforechange event with the toolbar & the new page",function(){J();H.loadPage(1);B(I(20,0));D.getInputItem().setRawValue(3);var X=jasmine.createSpy();D.on("beforechange",X);P(O);expect(X.mostRecentCall.args[0]).toBe(D);expect(X.mostRecentCall.args[1]).toBe(3)});it("should not call load if vetoing the event",function(){J();H.loadPage(1);B(I(20,0));D.getInputItem().setRawValue(3);spyOn(H,"loadPage");D.on("beforechange",function(){return false});P(O);expect(H.loadPage).not.toHaveBeenCalled()})})})});describe("after invalid load",function(){it("should load the largest available page when we've gone outside the dataset",function(){var L=jasmine.createSpy();J();H.loadPage(5);B(I(25,20));D.on("change",L);D.doRefresh();spyOn(H,"loadPage");B(I(10,5));expect(L).not.toHaveBeenCalled();expect(H.loadPage.mostRecentCall.args[0]).toBe(2)})})})