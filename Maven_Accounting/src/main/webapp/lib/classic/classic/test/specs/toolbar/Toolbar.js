describe("Ext.toolbar.Toolbar",function(){var C=jasmine.expectAriaAttr,A=jasmine.expectNoAriaAttr,B;function D(E){B=new Ext.toolbar.Toolbar(Ext.apply({width:200,renderTo:Ext.getBody()},E||{}))}afterEach(function(){Ext.destroy(B);B=null});it("should default to using a hbox layout",function(){D();expect(B.getLayout() instanceof Ext.layout.container.HBox)});describe("enableOverflow",function(){describe("when false",function(){it("should not create a menu",function(){D({enableOverflow:false});expect(B.layout.overflowHandler).toBeNull()})});describe("when true",function(){it("should create an overflow menu",function(){D({enableOverflow:true});expect(B.layout.overflowHandler.menu).toBeDefined()});it('should create an overflow menu with type "menu"',function(){D({enableOverflow:true});expect(B.layout.overflowHandler.type).toBe("menu")})})});describe("defaultButtonUI",function(){it("should use the defaultButtonUI for child buttons with no ui configured on the instance",function(){spyOn(Ext.log,"error");D({height:30,defaultButtonUI:"foo",items:[{text:"Bar"}]});expect(B.items.getAt(0).ui).toBe("foo-small")});it("should not use the defaultButtonUI for child buttons with ui configured on the instance",function(){spyOn(Ext.log,"error");D({height:30,defaultButtonUI:"foo",items:[{text:"Bar",ui:"bar"}]});expect(B.items.getAt(0).ui).toBe("bar-small")});it("should not use the defaultButtonUI for child buttons with ui of 'default' configured on the instance",function(){D({defaultButtonUI:"foo",items:[{text:"Bar",ui:"default"}]});expect(B.items.getAt(0).ui).toBe("default-small")});it("should use the defaultButtonUI for segmented buttons with no defaultUI configured on the instance",function(){D({defaultButtonUI:"foo",items:[{xtype:"segmentedbutton",items:[{text:"Bar"}]}]});expect(B.items.getAt(0).getDefaultUI()).toBe("foo");expect(B.items.getAt(0).items.getAt(0).ui).toBe("foo-small")});it("should not use the defaultButtonUI for segmented buttons with defaultUI configured on the instance",function(){D({defaultButtonUI:"foo",items:[{xtype:"segmentedbutton",defaultUI:"bar",items:[{text:"Bar"}]}]});expect(B.items.getAt(0).getDefaultUI()).toBe("bar");expect(B.items.getAt(0).items.getAt(0).ui).toBe("bar-small")});it("should not use the defaultButtonUI for segmented buttons with defaultUI of 'default' configured on the instance",function(){D({defaultButtonUI:"foo",items:[{xtype:"segmentedbutton",defaultUI:"default",items:[{text:"Bar"}]}]});expect(B.items.getAt(0).getDefaultUI()).toBe("default");expect(B.items.getAt(0).items.getAt(0).ui).toBe("default-small")})});describe("defaultFieldUI",function(){it("should use the defaultFieldUI for child fields with no ui configured on the instance",function(){D({defaultFieldUI:"foo",items:[{xtype:"textfield"}]});expect(B.items.getAt(0).ui).toBe("foo")});it("should not use the defaultFieldUI for child fields with ui configured on the instance",function(){D({defaultFieldUI:"foo",items:[{xtype:"textfield",ui:"bar"}]});expect(B.items.getAt(0).ui).toBe("bar")});it("should not use the defaultFieldUI for child fields with ui of 'default' configured on the instance",function(){D({defaultFieldUI:"foo",items:[{xtype:"textfield",ui:"default"}]});expect(B.items.getAt(0).ui).toBe("default")})});describe("FocusableContainer",function(){it("should be on with buttons",function(){D({items:[{xtype:"button"},{xtype:"button"}]});C(B,"tabIndex","0")});it("should be off with input fields",function(){D({items:[{xtype:"button"},{xtype:"textfield"}]});A(B,"tabIndex")});it("should be off with sliders",function(){D({items:[{xtype:"button"},{xtype:"slider"}]});A(B,"tabIndex")})})})