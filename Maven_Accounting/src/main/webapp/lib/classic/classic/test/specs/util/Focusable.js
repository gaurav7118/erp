describe("Ext.util.Focusable",function(){var A=jasmine.focusAndWait,J=jasmine.waitAWhile,F=jasmine.expectFocused,H,B;function D(K){return Ext.apply({xtype:"component",renderTo:Ext.getBody(),width:100,height:100,focusable:true,tabIndex:0,getFocusEl:function(){return this.el}},K)}function G(K){var L=D(K);H=new Ext.Component(L);return H}function I(K){B=new Ext.container.Container(Ext.apply({renderTo:Ext.getBody(),width:100,height:200},K))}function E(K,L){return jasmine.expectAriaAttr(H,K,L)}function C(K){return jasmine.expectNoAriaAttr(H,K)}afterEach(function(){if(B){B.destroy()}if(H){H.destroy()}H=B=null});describe("tabIndex handling",function(){describe("component not focusable",function(){it("should not render tabindex attribute when tabIndex property is undefined",function(){G({focusable:undefined,tabIndex:undefined});C("tabIndex")});it("should not render tabindex attribute when tabIndex property is defined",function(){G({focusable:undefined,tabIndex:0});C("tabIndex")})});describe("component is focusable",function(){it("should not render tabindex attribute when tabIndex property is undefined",function(){G({focusable:true,tabIndex:undefined});C("tabIndex")});it("should render tabindex attribute when tabIndex property is defined",function(){G({focusable:true,tabIndex:0});E("tabIndex","0")})})});describe("isFocusable",function(){describe("component",function(){describe("not rendered",function(){beforeEach(function(){G({renderTo:undefined})});it("should return false",function(){expect(H.isFocusable()).toBe(false)})});describe("rendered",function(){beforeEach(function(){G()});describe("focusable === true",function(){it("should return true when visible",function(){expect(H.isFocusable()).toBe(true)});it("should return false when disabled",function(){H.disable();expect(H.isFocusable()).toBe(false)});it("should return false when invisible",function(){H.hide();expect(H.isFocusable()).toBe(false)});it("should return false when destroyed",function(){H.destroy();expect(H.isFocusable()).toBe(false);H=null})});describe("focusable === false",function(){beforeEach(function(){H.focusable=false});it("should return false",function(){expect(H.isFocusable()).toBe(false)});it("should disregard deep parameter",function(){spyOn(H,"getFocusEl").andCallThrough();expect(H.isFocusable(true)).toBe(false);expect(H.getFocusEl).not.toHaveBeenCalled()})})})});describe("container",function(){describe("not rendered",function(){beforeEach(function(){I({renderTo:undefined,items:[D({renderTo:undefined})]})});it("should return false with deep === false",function(){expect(B.isFocusable()).toBe(false)});it("should return false with deep === true",function(){expect(B.isFocusable(true)).toBe(false)})});describe("rendered",function(){var K;beforeEach(function(){I({items:[D({renderTo:undefined,itemId:"foo"})],focusable:true,tabIndex:0});K=B.down("#foo")});describe("deep === false",function(){describe("focusable === false",function(){beforeEach(function(){B.focusable=false});it("should return false",function(){expect(B.isFocusable()).toBe(false)})});describe("focusable === true, no tabIndex",function(){beforeEach(function(){B.setTabIndex(undefined)});it("should return false",function(){expect(B.isFocusable()).toBe(false)})});describe("focusable === true, tabIndex === 0",function(){it("should return true when container is visible",function(){expect(B.isFocusable()).toBe(true)});it("should return false when container is hidden",function(){B.hide();expect(B.isFocusable()).toBe(false)});it("should return false when container is disabled",function(){B.disable();expect(B.isFocusable()).toBe(false)});it("should return false when container is destroyed",function(){B.destroy();expect(B.isFocusable()).toBe(false);B=null})})});describe("deep === true",function(){beforeEach(function(){B.defaultFocus="#foo"});describe("container not focusable",function(){beforeEach(function(){B.focusable=false});it("should return true when delegate is focusable",function(){expect(B.isFocusable(true)).toBe(true)});it("should return false when delegate is not focusable",function(){K.focusable=false;expect(B.isFocusable(true)).toBe(false)});it("should return false when delegate is hidden",function(){K.hide();expect(B.isFocusable(true)).toBe(false)});it("should return false when delegate is disabled",function(){K.disable();expect(B.isFocusable(true)).toBe(false)});it("should return false when delegate is destroyed",function(){K.destroy();expect(B.isFocusable(true)).toBe(false)});describe("dynamic delegate",function(){beforeEach(function(){B.remove(K);K.destroy();K=null});it("should return false when delegate is removed",function(){expect(B.isFocusable(true)).toBe(false)});it("should return true when matching delegate is added",function(){B.add(D({renderTo:undefined,itemId:"foo"}));expect(B.isFocusable(true)).toBe(true)})})});describe("container is focusable",function(){it("should return true",function(){expect(B.isFocusable(true)).toBe(true)})})})})})});describe("getTabIndex",function(){beforeEach(function(){G({renderTo:undefined,tabIndex:42})});it("should return undefined when !focusable",function(){H.focusable=false;expect(H.getTabIndex()).toBe(undefined)});it("should return configured tabIndex when component is not rendered",function(){expect(H.rendered).toBe(false);expect(H.getTabIndex()).toBe(42)});it("should return actual tabIndex when component is rendered",function(){H.render(Ext.getBody());H.el.set({tabIndex:1});expect(H.rendered).toBe(true);expect(H.getTabIndex()).toBe(1)})});describe("setTabIndex",function(){beforeEach(function(){G({renderTo:undefined,tabIndex:43})});it("should do nothing when !focusable",function(){H.focusable=false;H.setTabIndex(-1);expect(H.tabIndex).toBe(43)});it("should set tabIndex property when not rendered",function(){H.setTabIndex(-1);expect(H.tabIndex).toBe(-1)});it("should set tabIndex property when el is a string",function(){H.el="foo";H.setTabIndex(-1);expect(H.tabIndex).toBe(-1)});it("should set el tabindex when rendered",function(){H.render(Ext.getBody());H.setTabIndex(-1);var K=H.el.getAttribute("tabIndex")-0;expect(K).toBe(-1)})});describe("container delegated getTabIndex/setTabIndex",function(){beforeEach(function(){I({focusable:true,items:[G({renderTo:undefined,tabIndex:1})],getFocusEl:function(){return this.child()}})});it("should return child's tabIndex",function(){expect(B.getTabIndex()).toBe(1)});it("should set child's tabIndex",function(){B.setTabIndex(88);var K=H.el.getAttribute("tabIndex")-0;expect(K).toBe(88)})});describe("focusCls handling",function(){beforeEach(function(){G({renderTpl:['<div id="{id}-focusClsEl" data-ref="focusClsEl">foo</div>'],childEls:["focusClsEl"],getFocusClsEl:function(){return this.focusClsEl}});A(H)});describe("focusing",function(){it("should add focusCls to focusClsEl",function(){expect(H.focusClsEl.hasCls("x-focus")).toBe(true)});it("should not add focusCls to el",function(){expect(H.el.hasCls("x-focus")).toBe(false)})});describe("blurring",function(){beforeEach(function(){H.blur();J()});it("should remove focusCls from focusClsEl",function(){expect(H.focusClsEl.hasCls("x-focus")).toBe(false)})});describe("disabling",function(){beforeEach(function(){H.disable()});it("should remove focusCls from focusClsEl",function(){expect(H.focusClsEl.hasCls("x-focus")).toBe(false)})})});describe("blur/focus",function(){var K=Ext.baseCSSPrefix+"focus";beforeEach(function(){G({autoEl:"button",focusCls:"focus"})});it("should look up focused Component",function(){H.focus();waitsFor(function(){return H.el.hasCls(K)},"CSS class to be added",100);runs(function(){var L=Ext.ComponentManager.getActiveComponent();expect(L).toEqual(H)})});it("should cancel previous delayed focus",function(){var L=new Ext.Component({renderTo:Ext.getBody(),autoEl:"button",focusCls:"focus",focusable:true,getFocusEl:function(){return this.el}});spyOn(Ext.focusTask,"delay");spyOn(Ext.focusTask,"cancel");H.focus(false,true);expect(Ext.focusTask.delay).toHaveBeenCalled();L.focus();expect(Ext.focusTask.cancel).toHaveBeenCalled();Ext.destroy(L)});describe("focus delegation",function(){var M,L;beforeEach(function(){I({height:200,items:[D({itemId:"foo",renderTo:undefined}),D({itemId:"bar",renderTo:undefined})]});M=B.down("#foo");L=B.down("#bar")});it("should focus foo",function(){B.defaultFocus="component";A(B,M);F(M)});it("should focus bar",function(){B.defaultFocus="#bar";A(B,L);F(L)})});describe("events",function(){it("should fire the focus event",function(){var L;runs(function(){H.on("focus",function(){L=true});H.focus()});waitsFor(function(){return L},"Event to fire",100);runs(function(){expect(L).toBe(true)})});it("should not fire the focus event if the component has focus",function(){var L=0;runs(function(){H.on("focus",function(){++L});H.focus();H.focus()});waitsFor(function(){return L>0},"Event to fire",100);waits(50);runs(function(){expect(L).toBe(1)})});it("should fire the blur event",function(){var L;runs(function(){H.on("blur",function(){L=true});H.focus();H.blur()});waitsFor(function(){return L},"Event to fire",100);runs(function(){expect(L).toBe(true)})})})});describe("enable/disable tabbing",function(){describe("simple component",function(){beforeEach(function(){G();H.disableTabbing()});it("should disable tabbing",function(){expect(H.el.isTabbable()).toBe(false)});it("should re-enable tabbing",function(){H.enableTabbing();expect(H.el.isTabbable()).toBe(true)})});describe("non-focusable container with delegate",function(){var K;beforeEach(function(){I({defaultFocus:"foo",items:[D({itemId:"foo"})]});K=B.down("#foo");B.disableTabbing()});it("should disable tabbing",function(){expect(K.el.isTabbable()).toBe(false)});it("should re-enable tabbing",function(){B.enableTabbing();expect(K.el.isTabbable()).toBe(true)})});describe("focusable container with delegate",function(){var K;beforeEach(function(){I({floating:true,focusable:true,tabIndex:0,defaultFocus:"bar",items:[D({itemId:"bar"})]});K=B.down("#bar");B.disableTabbing()});it("should disable tabbing on container",function(){expect(B.el.isTabbable()).toBe(false)});it("should disable tabbing on delegate",function(){expect(K.el.isTabbable()).toBe(false)});describe("re-enable",function(){beforeEach(function(){B.enableTabbing()});it("should enable tabbing on container",function(){expect(B.el.isTabbable()).toBe(true)});it("should enable tabbing on delegate",function(){expect(K.el.isTabbable()).toBe(true)})})});describe("focusEl outside of component DOM",function(){beforeEach(function(){H=new Ext.form.field.File({renderTo:Ext.getBody()});H.disableTabbing()});it("should disable tabbing",function(){expect(H.button.fileInputEl.isTabbable()).toBe(false)});it("should re-enable tabbing",function(){H.enableTabbing();expect(H.button.fileInputEl.isTabbable()).toBe(true)})})});describe("Focus and state changes",function(){var N,L,M,K,P,O;beforeEach(function(){N=new Ext.panel.Panel({renderTo:document.body,items:[{xtype:"textfield",id:"textfield1",},{xtype:"fieldset",id:"fieldset",items:[{xtype:"textfield",id:"textfield2"}]}],bbar:{xtype:"container",items:[{xtype:"button",id:"button1",text:"Button 1"},{xtype:"button",id:"button2",text:"Button 2"}]}});L=N.down("#fieldset");M=N.down("#textfield1");K=N.down("#textfield2");P=N.down("#button1");O=N.down("#button2")});afterEach(function(){N.destroy();N=L=M=K=P=O=null});describe("disabling focused component",function(){it("should move focus to next sibling",function(){A(P);runs(function(){P.disable()});F(O)});it("should move focus to previous sibling",function(){A(O);runs(function(){O.disable()});F(P)});it("should move focus to a relation in parent container",function(){A(O);runs(function(){P.disable();O.disable()})})});describe("focusing disabled component",function(){it("should move focus to next sibling",function(){runs(function(){P.disable()});jasmine.waitAWhile();runs(function(){P.focus()});F(O)});it("should move focus to previous sibling",function(){runs(function(){O.disable()});jasmine.waitAWhile();runs(function(){O.focus()});F(P)});it("should move focus to a relation in parent container",function(){runs(function(){P.disable();O.disable()});jasmine.waitAWhile();runs(function(){P.focus()});F(M)})});describe("hiding component that contains focus",function(){it("should move focus to a relation or the previously focused component",function(){A(P);A(K);runs(function(){P.disable()});jasmine.waitAWhile();runs(function(){L.hide()});F(O)})})});describe("Wrapping a Component which contains focus",function(){var K=jasmine.waitForFocus,M=jasmine.expectFocused,L,N,O;beforeEach(function(){L=new Ext.Container({items:{xtype:"textfield"},renderTo:document.body});N=L.child();spyOn(L,"onFocusEnter").andCallThrough();spyOn(L,"onFocusLeave").andCallThrough();spyOn(N,"onFocusEnter").andCallThrough();spyOn(N,"onFocusLeave").andCallThrough();if(Ext.isIE8){+N.el.dom.offsetHeight}N.focus();K(N)});afterEach(function(){Ext.destroy(L,O);L=N=O=null});describe("wrapping",function(){beforeEach(function(){L.onFocusEnter.reset();L.onFocusLeave.reset();N.onFocusEnter.reset();N.onFocusLeave.reset();O=L.el.wrap();waits(100)});it("should retain focus on the Component",function(){M(N,true)});it("should retain hasFocus flag on the Component",function(){expect(N.hasFocus).toBe(true)});it("should retain containsFocus flag on the container",function(){expect(L.containsFocus).toBe(true)});it("should not call onFocusEnter on the container",function(){expect(L.onFocusEnter).not.toHaveBeenCalled()});it("should not call onFocusLeave on the container",function(){expect(L.onFocusLeave).not.toHaveBeenCalled()});it("should not call onFocusEnter on the Component",function(){expect(N.onFocusEnter).not.toHaveBeenCalled()});it("should not call onFocusLeave on the Component",function(){expect(N.onFocusLeave).not.toHaveBeenCalled()});describe("unwrapping",function(){beforeEach(function(){L.el.unwrap();waits(100)});it("should retain focus on the Component",function(){M(N,true)});it("should retain hasFocus flag on the Component",function(){expect(N.hasFocus).toBe(true)});it("should retain containsFocus flag on the container",function(){expect(L.containsFocus).toBe(true)});it("should not call onFocusEnter on the container",function(){expect(L.onFocusEnter).not.toHaveBeenCalled()});it("should not call onFocusLeave on the container",function(){expect(L.onFocusLeave).not.toHaveBeenCalled()});it("should not call onFocusEnter on the Component",function(){expect(N.onFocusEnter).not.toHaveBeenCalled()});it("should not call onFocusLeave on the Component",function(){expect(N.onFocusLeave).not.toHaveBeenCalled()})})})})})