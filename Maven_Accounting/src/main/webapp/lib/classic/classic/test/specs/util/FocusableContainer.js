describe("Ext.util.FocusableContainer",function(){var I=true,O=false,K=0,A=jasmine.focusAndWait,N=jasmine.pressTabKey,G=jasmine.pressArrowKey,J=jasmine.waitForFocus,H=jasmine.expectFocused,F=jasmine.expectAriaAttr,B=jasmine.expectNoAriaAttr,E,D,C;function M(P){P=P||{};Ext.applyIf(P,{id:(P.text||"button")+"-"+ ++K,renderTo:Ext.getBody()});var Q=new Ext.button.Button(P);return Q}function L(R){var Q,S,P,T;R=Ext.apply({id:"focusableContainer-"+ ++K,width:1000,height:50,style:{"background-color":"green"},layout:"hbox",defaults:{xtype:"button"},renderTo:Ext.getBody()},R);Q=R.items;if(Q){for(S=0,P=Q.length;S<P;S++){T=Q[S];if(T.xtype==="button"){T.id=(T.text||"button")+"-"+ ++K}}}D=new E(R);C=D.getFocusableContainerEl();return D}beforeEach(function(){E=Ext.define("spec.FocusableContainer",{extend:"Ext.container.Container",mixins:["Ext.util.FocusableContainer"]})});afterEach(function(){if(D){D.destroy()}Ext.undefine("spec.FocusableContainer");E=D=C=null});describe("init/destroy",function(){var S,T,R,Q;function P(U){U=Ext.apply({activeChildTabIndex:42,items:[{xtype:"button",itemId:"first",text:"first"},{xtype:"button",itemId:"second",text:"second",disabled:true},{xtype:"button",itemId:"third",text:"third",tabIndex:-10}]},U);L(U);T=D.down("#first");R=D.down("#second");Q=D.down("#third");return D}beforeEach(function(){S=E.prototype;spyOn(S,"doInitFocusableContainer").andCallThrough();spyOn(S,"doDestroyFocusableContainer").andCallThrough()});afterEach(function(){S=T=R=Q=null});describe("enableFocusableContainer === true (default)",function(){describe("enableFocusableContainer stays true",function(){beforeEach(function(){P()});it("should call init",function(){expect(D.doInitFocusableContainer).toHaveBeenCalled()});it("should place tabindex on container el",function(){F(D,"tabIndex","42")});it("should create keyNav",function(){expect(D.focusableKeyNav).toBeDefined()});it("should set tabindex on the first child",function(){F(T,"tabIndex","-1")});it("should NOT set tabindex on the second child",function(){B(R,"tabIndex")});it("should set tabindex on the third child",function(){F(Q,"tabIndex","-1")});it("should call destroy",function(){D.destroy();expect(D.doDestroyFocusableContainer).toHaveBeenCalled()})});describe("enableFocusableContainer stays true with no enabled children",function(){beforeEach(function(){P({renderTo:undefined});T.disable();Q.disable();D.render(Ext.getBody())});it("should call init",function(){expect(D.doInitFocusableContainer).toHaveBeenCalled()});it("should NOT set tabindex on container el",function(){B(D,"tabIndex")});it("should create keyNav",function(){expect(D.focusableKeyNav).toBeDefined()});it("should not set tabindex on the first child",function(){B(T,"tabIndex")});it("should not set tabindex on the second child",function(){B(R,"tabIndex")});it("should not set tabindex on the third child",function(){B(Q,"tabIndex")});it("should call destroy",function(){D.destroy();expect(D.doDestroyFocusableContainer).toHaveBeenCalled()})});describe("enableFocusableContainer changes to false before rendering",function(){beforeEach(function(){P({renderTo:undefined});D.enableFocusableContainer=false;D.render(Ext.getBody())});it("should not call init",function(){expect(D.doInitFocusableContainer).not.toHaveBeenCalled()});it("should not place tabindex on container el",function(){B(D,"tabIndex")});it("should not create keyNav",function(){expect(D.focusableKeyNav).not.toBeDefined()});it("should not add tabindex to second child",function(){B(R,"tabIndex")});it("should not alter tabindex on last child",function(){F(Q,"tabIndex","-10")});it("should not call destroy",function(){D.destroy();expect(D.doDestroyFocusableContainer).not.toHaveBeenCalled()})})});describe("enableFocusableContainer === false",function(){beforeEach(function(){P({enableFocusableContainer:false})});it("should not call init",function(){expect(D.doInitFocusableContainer).not.toHaveBeenCalled()});it("should not place tabindex on container el",function(){B(D,"tabIndex")});it("should not create keyNav",function(){expect(D.focusableKeyNav).not.toBeDefined()});it("should not alter tabindex on first child",function(){F(T,"tabIndex","0")});it("should not add tabindex to second child",function(){B(R,"tabIndex")});it("should not alter tabindex on last child",function(){F(Q,"tabIndex","-10")});it("should not call destroy",function(){D.destroy();expect(D.doDestroyFocusableContainer).not.toHaveBeenCalled()})})});describe("show",function(){beforeEach(function(){L({items:[{xtype:"button",text:"OK"}]})});it("should reactivate FC el upon show",function(){D.hide();D.el.set({tabIndex:-1});D.show();expect(D.el.dom.getAttribute("tabIndex")).toBe("0")})});describe("predicates",function(){describe("isFocusableContainerActive",function(){var Q;function P(S){var R=D.isFocusableContainerActive();expect(R).toBe(S)}beforeEach(function(){L({items:[{text:"foo"}]});Q=D.down("button")});afterEach(function(){Q=null});it("should return true by default",function(){P(true)});it("should return false when container el is not tabbable",function(){C.dom.removeAttribute("tabIndex");P(false)});describe("after activating a child",function(){beforeEach(function(){A(Q)});it("should return true when child is focused",function(){P(true)});it("should return false if active child is not tabbable",function(){Q.getFocusEl().dom.removeAttribute("tabIndex");P(false)})})})});describe("child lookup",function(){describe("first/last child",function(){function P(R,Q){describe(R,function(){var T,S;beforeEach(function(){L(Q);T=D.down("button[text=fooBtn]");S=D.down("button[text=barBtn]")});it("finds foo going forward",function(){var U=D.findNextFocusableChild({step:true});expect(U).toBe(T)});it("finds bar going backward",function(){var U=D.findNextFocusableChild({step:false});expect(U).toBe(S)})})}P("focusable child",{items:[{xtype:"button",text:"fooBtn"},{xtype:"button",text:"barBtn"}]});P("non-focusable child",{items:[{xtype:"tbtext",text:"text1"},{xtype:"button",text:"fooBtn"},{xtype:"button",text:"barBtn"},{xtype:"tbtext",text:"text2"}]});P("focusable but disabled child",{items:[{xtype:"button",text:"disabled1",disabled:true},{xtype:"button",text:"fooBtn"},{xtype:"button",text:"barBtn"},{xtype:"button",text:"disabled2",disabled:true}]});P("focusable/disabled AND non-focusable child",{items:[{xtype:"tbtext",text:"text1"},{xtype:"button",text:"disabled1",disabled:true},{xtype:"button",text:"fooBtn"},{xtype:"button",text:"barBtn"},{xtype:"tbtext",text:"text2"},{xtype:"button",text:"disabled2",disabled:true}]})});describe("from existing child",function(){var S,Q,V,R,U,T;function P(W,X,Y){var Z=D.findNextFocusableChild({child:X,step:Y});expect(Z).toBe(W)}beforeEach(function(){L({items:[{xtype:"tbtext",text:"text1"},{xtype:"button",text:"disabled1",disabled:true},{xtype:"button",text:"fooBtn"},{xtype:"tbseparator"},{xtype:"textfield",fieldLabel:"foo field"},{xtype:"button",text:"disabled2",disabled:true},{xtype:"button",text:"barBtn"},{xtype:"tbfill"},{xtype:"combobox",fieldLabel:"bar combo"}]});S=D.down("button[text=fooBtn]");Q=D.down("button[text=barBtn]");U=D.down("button[text=disabled1]");T=D.down("button[text=disabled2]");V=D.down("textfield");R=D.down("combobox")});afterEach(function(){S=Q=V=R=U=T=null});describe("forward",function(){describe("disabled buttons not changed",function(){it("finds fooBtn as the first item",function(){P(S,null,I)});it("finds fooInput from fooBtn",function(){P(V,S,I)});it("finds barBtn from fooInput",function(){P(Q,V,I)});it("finds barInput from barBtn",function(){P(R,Q,I)});it("finds fooBtn from barInput (wraps over)",function(){P(S,R,I)})});describe("disabled1 state changed",function(){beforeEach(function(){U.enable()});it("finds disabled1 as the first item",function(){P(U,null,I)});it("finds fooBtn from disabled1",function(){P(S,U,I)});it("finds fooInput from fooBtn",function(){P(V,S,I)});it("finds barBtn from fooInput",function(){P(Q,V,I)});it("finds barInput from barBtn",function(){P(R,Q,I)});it("finds disabled1 from barInput (wraps over)",function(){P(U,R,I)})});describe("disabled2 state changed",function(){beforeEach(function(){T.enable()});it("finds fooBtn as the first item",function(){P(S,null,I)});it("finds fooInput from fooBtn",function(){P(V,S,I)});it("finds disabled2 from fooInput",function(){P(T,V,I)});it("finds barBtn from disabled2",function(){P(Q,T,I)});it("finds barInput from barBtn",function(){P(R,Q,I)});it("finds fooBtn from barInput (wraps over)",function(){P(S,R,I)})})});describe("backward",function(){describe("disabled buttons not changed",function(){it("finds barInput as the first item",function(){P(R,null,O)});it("finds barBtn from barInput",function(){P(Q,R,O)});it("finds fooInput from barBtn",function(){P(V,Q,O)});it("finds fooBtn from fooInput",function(){P(S,V,O)});it("finds barInput from fooBtn (wraps over)",function(){P(R,S,O)})});describe("disabled1 state changed",function(){beforeEach(function(){U.enable()});it("finds barInput as the first item",function(){P(R,null,O)});it("finds barBtn from barInput",function(){P(Q,R,O)});it("finds fooInput from barBtn",function(){P(V,Q,O)});it("finds fooBtn from fooInput",function(){P(S,V,O)});it("finds disabled1 from fooBtn",function(){P(U,S,O)});it("finds barInput from disabled1 (wraps over)",function(){P(R,U,O)})});describe("disabled2 state changed",function(){beforeEach(function(){T.enable()});it("finds barInput as the first item",function(){P(R,null,O)});it("finds barBtn from barInput",function(){P(Q,R,O)});it("finds disabled2 from barBtn",function(){P(T,Q,O)});it("finds fooInput from disabled2",function(){P(V,T,O)});it("finds fooBtn from fooInput",function(){P(S,V,O)});it("finds barInput from fooBtn (wraps over)",function(){P(R,S,O)})})})})});describe("child state handling",function(){var Q,P;afterEach(function(){Q=P=null});describe("initially enabled children",function(){beforeEach(function(){L({items:[{itemId:"first",text:"first"},{itemId:"second",text:"second"}]});Q=D.down("#first");P=D.down("#second")});it("should activate container el",function(){F(D,"tabIndex","0")});it("should deactivate container el when all children become disabled",function(){Q.disable();P.disable();B(D,"tabIndex")})});describe("initially disabled children",function(){beforeEach(function(){L({items:[{itemId:"first",text:"first",disabled:true},{itemId:"second",text:"second",disabled:true}]});Q=D.down("#first");P=D.down("#second")});it("should not activate container el",function(){B(D,"tabIndex")});it("should activate container el when one child becomes enabled",function(){Q.enable();F(D,"tabIndex","0")})});describe("child state changes",function(){beforeEach(function(){L({items:[{itemId:"first",text:"first"},{itemId:"second",text:"second"}]});Q=D.down("#first");P=D.down("#second")});it("should set lastFocusedChild when child is focused",function(){A(Q);runs(function(){expect(D.lastFocusedChild).toBe(Q)})});describe("children become disabled, none focused",function(){beforeEach(function(){Q.disable();P.disable()});it("should deactivate container el",function(){B(D,"tabIndex")});it("should not reset first child tabIndex",function(){B(Q,"tabIndex")});it("should not reset second child tabIndex",function(){B(P,"tabIndex")});describe("one child becoming enabled",function(){beforeEach(function(){P.enable()});it("should activate container el",function(){F(D,"tabIndex","0")});it("should not reset first child tabIndex",function(){B(Q,"tabIndex")});it("should reset second child tabIndex",function(){F(P,"tabIndex","-1")})});describe("both children become enabled",function(){beforeEach(function(){Q.enable();P.enable()});it("should activate container el",function(){F(D,"tabIndex","0")});it("should reset first child tabIndex",function(){F(Q,"tabIndex","-1")});it("should reset second child tabIndex",function(){F(P,"tabIndex","-1")})})});describe("last focusable child becoming disabled",function(){beforeEach(function(){runs(function(){Q.disable()});A(P);runs(function(){P.disable()})});it("should not reset lastFocusedChild when child is disabled",function(){expect(D.lastFocusedChild).toBe(P)});it("should deactivate container el",function(){B(D,"tabIndex")});it("should not reset tabIndex on the child",function(){B(P,"tabIndex")});describe("becoming enabled again",function(){beforeEach(function(){P.tabIndex=42;P.enable()});it("should not activate container el",function(){B(D,"tabIndex")});it("should not interfere with child tabIndex",function(){F(P,"tabIndex","42")})});describe("all children become enabled",function(){beforeEach(function(){Q.tabIndex=101;P.tabIndex=102;P.enable();Q.enable()});it("should not activate container el",function(){B(D,"tabIndex")});it("should reset first child tabIndex",function(){F(Q,"tabIndex","-1")});it("should not interfere with second child tabIndex",function(){F(P,"tabIndex","102")})})})})});describe("focus handling",function(){var R,Q,P;beforeEach(function(){R=M({text:"beforeBtn"})});afterEach(function(){if(R){R.destroy()}R=null});describe("have focusables",function(){beforeEach(function(){L({items:[{xtype:"button",text:"fooBtn"},{xtype:"button",text:"barBtn"}]});Q=D.down("button[text=fooBtn]");P=D.down("button[text=barBtn]")});describe("focusing container el",function(){beforeEach(function(){A(C,Q)});describe("in FocusableContainer",function(){it("should focus first child",function(){H(Q)});it("should make first child tabbable",function(){F(Q,"tabIndex","0")});it("should make itself untabbable",function(){B(D,"tabIndex")})});describe("out of FocusableContainer",function(){beforeEach(function(){A(R)});it("should keep first child tabbable",function(){F(Q,"tabIndex","0")});it("should not make itself tabbable",function(){B(D,"tabIndex")})})});describe("focusing children",function(){beforeEach(function(){A(Q)});describe("into FocusableContainer",function(){it("should not prevent the child from getting focus",function(){H(Q)});it("should make the child tabbable",function(){F(Q,"tabIndex","0")});it("should make its el untabbable",function(){B(D,"tabIndex")})});describe("out of FocusableContainer",function(){beforeEach(function(){A(R)});it("should not prevent focus from leaving",function(){H(R)});it("should keep the child tabbable",function(){F(Q,"tabIndex","0")});it("should keep its el untabbable",function(){B(D,"tabIndex")})})});describe("disabling currently focused child",function(){beforeEach(function(){A(Q)});describe("when there are other focusable children remaining",function(){beforeEach(function(){Q.disable()});it("should focus next child",function(){H(P)});it("should not make container el focusable",function(){B(C,"tabIndex")});it("should update lastFocusedChild",function(){expect(D.lastFocusedChild).toBe(P)})});describe("when there are no focusable children remaining",function(){beforeEach(function(){P.disable();Q.findFocusTarget=function(){return R};Q.disable()});it("should focus findFocusTarget result",function(){H(R)});it("should deactivate container el",function(){B(D,"tabIndex")});it("should not update lastFocusedChild",function(){expect(D.lastFocusedChild).toBe(Q)})})})})});describe("mouse event handling",function(){var R,S,Q,P;beforeEach(function(){R=M({text:"beforeBtn"});L({style:{"margin-left":"100px"},items:[{xtype:"tbtext",text:"****"},{xtype:"button",text:"fooBtn"},{xtype:"textfield",fieldLabel:"fooInput"}]});S=D.down("tbtext");Q=D.down("button");P=D.down("textfield")});afterEach(function(){R.destroy();R=null});it("should ignore left click on container body el",function(){A(R);runs(function(){jasmine.fireMouseEvent(D.el,"click")});H(R)});it("should ignore right click on container body el",function(){A(R);runs(function(){jasmine.fireMouseEvent(D.el,"click",null,null,1)});H(R)});it("should not react to clicks in non-focusable children",function(){A(R);runs(function(){jasmine.fireMouseEvent(S.el,"click")});H(R)});describe("clicks on focusable child",function(){var T;beforeEach(function(){T=jasmine.createSpy("click");Q.on("click",T);Q.el.on("mousedown",T)});it("should not block left click",function(){runs(function(){jasmine.fireMouseEvent(Q.el,"click")});waitsForSpy(T,"left click",100);runs(function(){expect(T).toHaveBeenCalled()})});it("should not block right click",function(){runs(function(){jasmine.fireMouseEvent(Q.el,"click",null,null,1)});waitsForSpy(T,"right click",100);runs(function(){expect(T).toHaveBeenCalled()})})})});describe("keyboard event handling",function(){var V=true,b=false,Y,U,a,T,W,X,S,R,Q;function P(f,d,e,c){N(f,d);H(e)}function Z(e,c,d){G(e,c);H(d)}describe("preventing parent scroll",function(){var d,e,c,f;beforeEach(function(){L({renderTo:undefined,items:[{xtype:"button",text:"fooBtn"},{xtype:"button",text:"barBtn"}]});a=D.down("button[text=fooBtn]");T=D.down("button[text=barBtn]");d=spyOn(D,"onFocusableContainerUpKey").andCallThrough();e=spyOn(D,"onFocusableContainerDownKey").andCallThrough();c=spyOn(D,"onFocusableContainerRightKey").andCallThrough();f=spyOn(D,"onFocusableContainerLeftKey").andCallThrough();D.render(Ext.getBody())});afterEach(function(){a=T=null;d=e=c=f=null});it("should preventDefault on the Up arrow key",function(){G(T,"up");J(a);runs(function(){expect(d.mostRecentCall.args[0].defaultPrevented).toBe(true)})});it("should preventDefault on the Down arrow key",function(){G(a,"down");J(T);runs(function(){expect(e.mostRecentCall.args[0].defaultPrevented).toBe(true)})});it("should preventDefault on the Right arrow key",function(){G(a,"right");J(T);runs(function(){expect(c.mostRecentCall.args[0].defaultPrevented).toBe(true)})});it("should preventDefault on the Left arrow key",function(){G(T,"left");J(a);runs(function(){expect(f.mostRecentCall.args[0].defaultPrevented).toBe(true)})})});describe("enableFocusableContainer === true",function(){beforeEach(function(){runs(function(){Y=M({text:"beforeBtn"});L({items:[{xtype:"tbtext",text:"**"},{xtype:"button",text:"disabledBtn1",disabled:true},{xtype:"button",text:"fooBtn"},{xtype:"tbseparator"},{xtype:"textfield",id:"fooInput-"+ ++K},{xtype:"tbseparator"},{xtype:"slider",id:"slider-"+ ++K,value:50,width:100,animate:false},{xtype:"tbseparator"},{xtype:"tbfill"},{xtype:"tbseparator"},{xtype:"button",text:"barBtn"},{xtype:"button",text:"disabledBtn2",disabled:true},{xtype:"combobox",id:"barInput-"+ ++K},{xtype:"tbtext",text:"***"}]});a=D.down("button[text=fooBtn]");T=D.down("button[text=barBtn]");W=D.down("textfield");X=D.down("combobox");S=D.down("slider");R=D.down("button[text=disabledBtn1]");Q=D.down("button[text=disabledBtn2]");U=M({text:"afterBtn"})});jasmine.waitAWhile()});afterEach(function(){Y.destroy();U.destroy()});describe("tabbing",function(){describe("clean state in/out",function(){it("should tab from beforeBtn to fooBtn",function(){P(Y,V,a)});it("should shift-tab from fooBtn fo beforeBtn",function(){P(a,b,Y)});it("should tab from fooBtn to afterBtn",function(){P(a,V,U)});it("should shift-tab from afterBtn to fooBtn",function(){P(U,b,a)})});describe("needArrowKeys children",function(){it("should tab from fooInput to slider",function(){P(W,V,S)});it("should tab from slider to barBtn",function(){P(S,V,T)});it("should tab from barInput to afterBtn",function(){P(X,V,U)});it("should shift-tab from barInput to barBtn",function(){P(X,b,T)});it("should shift-tab from slider to fooInput",function(){P(S,b,W)});it("should shift-tab from fooInput to fooBtn",function(){P(W,b,a)})});describe("last focused child",function(){it("should shift-tab back into barInput from afterBtn",function(){P(X,V,U);P(U,b,X)});it("should shift-tab back to barBtn from afterBtn",function(){P(T,V,U);P(U,b,T)});describe("disabled state changes",function(){it("should choose fooBtn when shift-tabbing from afterBtn",function(){P(T,V,U);runs(function(){T.disable()});P(U,b,a)});it("should choose disabledBtn1 when tabbing from beforeBtn",function(){P(T,b,Y);runs(function(){T.disable();R.enable()});P(Y,V,R)})})})});describe("arrow keys",function(){describe("simple children (buttons, etc)",function(){it("should go right from fooBtn to fooInput",function(){Z(a,"right",W)});it("should go down from fooBtn to fooInput",function(){Z(a,"down",W)});it("should wrap over left from fooBtn to barInput",function(){Z(a,"left",X)});it("should wrap over up from fooBtn to barInput",function(){Z(a,"up",X)});it("should go left from barBtn to slider",function(){Z(T,"left",S)});it("should go up from barBtn to slider",function(){Z(T,"up",S)})});describe("needArrowKeys children",function(){describe("slider",function(){function c(d){it("should not block "+d+" arrow key",function(){var e=false;runs(function(){S.on("change",function(){e=true})});G(S,d);runs(function(){expect(e).toBeTruthy()})})}c("left");c("right");c("up");c("down")});describe("combo box",function(){beforeEach(function(){Ext.apply(X,{queryMode:"local",displayField:"name"});var c=new Ext.data.Store({fields:["name"],data:[{name:"foo"}]});X.setStore(c)});it("should not block down arrow key",function(){G(X,"down");runs(function(){expect(X.isExpanded).toBeTruthy()})})})})})});describe("enableFocusableContainer === false",function(){beforeEach(function(){runs(function(){Y=M({text:"beforeBtn"});L({renderTo:undefined,items:[{xtype:"tbtext",text:"**"},{xtype:"button",text:"disabledBtn1",disabled:true},{xtype:"button",text:"fooBtn"},{xtype:"tbseparator"},{xtype:"textfield",id:"fooInput-"+ ++K},{xtype:"tbseparator"},{xtype:"slider",id:"slider-"+ ++K,value:50,width:100,animate:false},{xtype:"tbseparator"},{xtype:"tbfill"},{xtype:"tbseparator"},{xtype:"button",text:"barBtn"},{xtype:"button",text:"disabledBtn2",disabled:true},{xtype:"combobox",id:"barInput-"+ ++K},{xtype:"tbtext",text:"***"}]});a=D.down("button[text=fooBtn]");T=D.down("button[text=barBtn]");W=D.down("textfield");X=D.down("combobox");S=D.down("slider");R=D.down("button[text=disabledBtn1]");Q=D.down("button[text=disabledBtn2]");D.enableFocusableContainer=false;D.render(Ext.getBody());U=M({text:"afterBtn"})});jasmine.waitAWhile()});afterEach(function(){Y.destroy();U.destroy()});describe("tabbing",function(){it("should tab from beforeBtn to fooBtn",function(){P(Y,V,a)});it("should shift-tab from fooBtn to beforeBtn",function(){P(a,b,Y)});it("should tab from fooBtn to fooInput",function(){P(a,V,W)});it("should shift-tab from fooInput to fooBtn",function(){P(W,b,a)});it("should tab from fooInput to slider",function(){P(W,V,S)});it("should shift-tab from slider to fooInput",function(){P(S,b,W)});it("should tab from slider to barBtn",function(){P(S,V,T)});it("should shift-tab from barBtn to slider",function(){P(T,b,S)});it("should tab from barBtn to barInput",function(){P(T,V,X)});it("should shift-tab from barInput to barBtn",function(){P(X,b,T)});it("should tab from barInput to afterBtn",function(){P(X,V,U)});it("should shift-tab from afterBtn to barInput",function(){P(U,b,X)});describe("disabled state changes",function(){beforeEach(function(){R.enable();Q.enable()});it("should tab from beforeBtn to disabledBtn1",function(){P(Y,V,R)});it("should shift-tab from disabledBtn1 to beforeBtn",function(){P(R,b,Y)});it("should tab from disabledBtn1 to fooBtn",function(){P(R,V,a)});it("should shift-tab from fooBtn to disabledBtn1",function(){P(a,b,R)});it("should tab from barBtn to disabledBtn2",function(){P(T,V,Q)});it("should shift-tab from disabledBtn2 to barBtn",function(){P(Q,b,T)});it("should tab from disabledBtn2 to barInput",function(){P(Q,V,X)});it("should shift-tab from barInput to disabledBtn2",function(){P(X,b,Q)})})});describe("arrow keys",function(){describe("fooBtn",function(){it("should stay focused on left arrow",function(){Z(a,"left",a)});it("should stay focused on right arrow",function(){Z(a,"right",a)});it("should stay focused on up arrow",function(){Z(a,"up",a)});it("should stay focused on down arrow",function(){Z(a,"down",a)})});describe("slider",function(){function c(d){it("should not block "+d+" arrow key",function(){var e=false;runs(function(){S.on("change",function(){e=true})});G(S,d);runs(function(){expect(e).toBeTruthy()})})}c("left");c("right");c("up");c("down")});describe("combo box",function(){beforeEach(function(){Ext.apply(X,{queryMode:"local",displayField:"name"});var c=new Ext.data.Store({fields:["name"],data:[{name:"foo"}]});X.setStore(c)});it("should not block down arrow key",function(){G(X,"down");runs(function(){expect(X.isExpanded).toBeTruthy()})})})})})})})