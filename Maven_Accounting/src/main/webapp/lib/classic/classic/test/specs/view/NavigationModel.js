describe("Ext.view.NavigationModel",function(){var A,D,C;var F=Ext.define(null,{extend:"Ext.data.Model",fields:["id","name"]});function B(G){var I=[];for(var H=1;H<=G;++H){I.push({id:H,name:"Item"+H})}return I}function E(G,I,H){if(H){if(typeof H==="number"){B(H)}}else{H=B(20)}C=new Ext.data.Store({model:F,data:H});A=new Ext.view.View({renderTo:Ext.getBody(),store:C,itemTpl:"{name}"});D=A.getNavigationModel()}afterEach(function(){A=D=Ext.destroy(A)});describe("filter changes",function(){it("should focus the item correctly when making the dataset smaller",function(){E();var H=C.getById(10);D.setPosition(H);expect(D.getPosition()).toBe(9);C.filterBy(function(I){return I.id%2===0});var G=A.getNode(H);expect(Ext.dom.Element.getActiveElement()).toBe(G);expect(G).toHaveCls(D.focusCls);expect(D.getPosition()).toBe(4)});it("should focus the item correctly when making the dataset larger",function(){E();var H=C.getById(10);C.filterBy(function(I){return I.id%2===0});D.setPosition(H);expect(D.getPosition()).toBe(4);C.getFilters().removeAll();var G=A.getNode(H);expect(Ext.dom.Element.getActiveElement()).toBe(G);expect(G).toHaveCls(D.focusCls);expect(D.getPosition()).toBe(9)})})})