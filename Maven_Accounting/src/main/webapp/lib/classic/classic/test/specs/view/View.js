describe("Ext.view.View",function(){var J,K,G,B,N=true,F=Ext.data.ProxyStore.prototype.load,I;G=Ext.define(null,{extend:"Ext.data.Model",fields:["name","size"]});function E(O,P){O=O||{};if(O.store===undefined){O.store=D(P)}K=O.store;J=new Ext.view.View(O);B=J.getNavigationModel()}function D(O){if(typeof O==="number"){O=M(O)}else{if(!O&&O!==null){O=[{name:"Item1"}]}}return new Ext.data.Store({model:G,data:O})}function M(O){var P=[],Q=1;for(;Q<=O;++Q){P.push({name:"Item "+Q})}return P}function H(O){var P=[],Q=1;for(;Q<=O;++Q){P.push({id:Q,name:"Item "+Q})}return P}function C(O){if(!Ext.isObject(O)){O={name:O}}return new G(O)}function L(O){return K.getAt(K.findExact("name",O))}function A(P,O){Ext.Ajax.mockComplete({status:O||200,responseText:Ext.encode(P||[])})}beforeEach(function(){I=Ext.data.ProxyStore.prototype.load=function(){F.apply(this,arguments);if(N){this.flushLoad.apply(this,arguments)}return this};MockAjaxManager.addMethods()});afterEach(function(){Ext.data.ProxyStore.prototype.load=F;J=K=Ext.destroy(K,J);Ext.data.Model.schema.clear();MockAjaxManager.removeMethods()});describe("template with extra markup",function(){function O(S){var Q=J.getEl().dom.childNodes,R,P;expect(Q.length).toBe(S.length);for(R=0,P=S.length;R<P;++R){expect(Q[R].className).toBe(S[R])}}beforeEach(function(){E({renderTo:Ext.getBody(),selModel:{enableInitialSelection:false},itemSelector:".foo",tpl:'<div class="header"></div><tpl for="."><div class="foo">{name}</div></tpl><div class="footer"></div>'},M(3))});it("should render the entire tpl",function(){O(["header","foo","foo","foo","footer"])});it("should not repeat nodes outside data on refresh",function(){J.refresh();O(["header","foo","foo","foo","footer"]);J.refresh();O(["header","foo","foo","foo","footer"]);J.refresh();O(["header","foo","foo","foo","footer"])})});describe("selection",function(){var O;describe("classes",function(){beforeEach(function(){E({renderTo:Ext.getBody(),itemTpl:"{name}"});O=J.getSelectionModel()});afterEach(function(){O=null});it("should add the selectedItemCls when selecting",function(){O.select(0);expect(J.getNode(0)).toHaveCls(J.selectedItemCls)});it("should remove the selectedItemCls when deselecting",function(){O.select(0);O.deselect(0);expect(J.getNode(0)).not.toHaveCls(J.selectedItemCls)});it("should retain the selectedItemCls when updating",function(){O.select(0);K.getAt(0).set("name","Foo");expect(J.getNode(0)).toHaveCls(J.selectedItemCls)});it("should retain the selectedItemCls when refreshing",function(){O.select(0);J.refresh();expect(J.getNode(0)).toHaveCls(J.selectedItemCls)});it("should retain the selectedItemCls when reloading the store",function(){K.removeAll();K.load();A(H(4));O.select(1);K.load();A(H(4));expect(J.getNode(1)).toHaveCls(J.selectedItemCls)})});describe("cleanup",function(){it("should unbind the store form the selection model",function(){E({renderTo:Ext.getBody(),itemTpl:"{name}"});O=J.getSelectionModel();J.destroy();expect(O.getStore()).toBeNull()})});describe("disableSelection",function(){function P(R,Q){var S=Q?new Ext.selection.Model():"rowmodel";afterEach(function(){S=null});it("when disableSelection = "+R+", config.selModel.isSelectionModel = "+!!Q,function(){E({renderTo:Ext.getBody(),disableSelection:R,selModel:S,itemSelector:".foo",tpl:"{name}"});O=J.getSelectionModel();O.select(0);expect(!!O.getSelection().length).toBe(!R)})}P(false,false);P(true,false);P(true,true);P(false,true)})});describe("accessors",function(){function O(P,Q){P=Ext.apply({renderTo:Ext.getBody(),itemTpl:"{name}"},P);E(P,Q||M(5))}describe("getNode",function(){describe("param types",function(){it("should accept a node id and return a DOM element",function(){O();var P=J.getNodes()[2],Q=Ext.id(P);expect(J.getNode(Q)).toBe(P)});it("should accept an index and return a DOM element",function(){O();expect(J.getNode(1)).toBe(J.getNodes()[1])});it("should accept a record",function(){O();expect(J.getNode(K.getAt(3))).toBe(J.getNodes()[3])});it("should accept an event object and return a DOM element",function(){O();var R=J.getNodes()[1],P=jasmine.createSpy(),Q;J.on("itemclick",P);jasmine.fireMouseEvent(R,"click");Q=P.mostRecentCall.args[4];expect(J.getNode(Q)).toBe(R)});it("should accept an HTMLElement that is the child of an item and return a DOM element",function(){O({itemTpl:'<div class="bleh">{name}</div>'});var P=J.getNodes()[1];expect(J.getNode(P.firstChild)).toBe(P)})});describe("in response to updates",function(){beforeEach(function(){O()});it("should return the correct node after an add",function(){K.insert(0,{name:"X"});expect(J.getNode(0)).hasHTML("X")});it("should return the correct node after an update",function(){K.first().set("name","Foo");expect(J.getNode(0)).hasHTML("Foo")});it("should return the correct node after a remove",function(){K.removeAt(0);expect(J.getNode(0)).hasHTML("Item 2")});it("should return the correct node after a refresh",function(){K.loadData([{name:"Foo"},{name:"Bar"}]);expect(J.getNode(0)).hasHTML("Foo")});it("should return null after a removeAll",function(){K.removeAll();expect(J.getNode(0)).toBeNull()})});describe("returning null for invalid items",function(){it("should return null when not rendered",function(){O({renderTo:null});expect(J.getNode(0)).toBeNull()});it("should return null if the index is out of bounds",function(){O();expect(J.getNode(-1)).toBeNull();expect(J.getNode(5)).toBeNull()});it("should return null if the id doesn't exist",function(){O();expect(J.getNode("foo")).toBeNull()});it("should return null if the model does not exist in the store",function(){O();expect(J.getNode(new G())).toBeNull()})})});describe("getNodes",function(){it("should be empty when not rendered",function(){O({renderTo:null});expect(J.getNodes()).toEqual([])});it("should return an empty array when there are no records",function(){O();K.removeAll();expect(J.getNodes()).toEqual([])});describe("in response to updates",function(){beforeEach(function(){O({},M(3))});it("should return the correct nodes after an add",function(){K.insert(1,{name:"Foo"});var P=J.getNodes();expect(P.length).toBe(4);expect(P[0]).hasHTML("Item 1");expect(P[1]).hasHTML("Foo");expect(P[2]).hasHTML("Item 2");expect(P[3]).hasHTML("Item 3")});it("should return the correct node after an update",function(){K.first().set("name","Foo");var P=J.getNodes();expect(P.length).toBe(3);expect(P[0]).hasHTML("Foo");expect(P[1]).hasHTML("Item 2");expect(P[2]).hasHTML("Item 3")});it("should return the correct node after a remove",function(){K.removeAt(0);var P=J.getNodes();expect(P[0]).hasHTML("Item 2");expect(P[1]).hasHTML("Item 3")});it("should return the correct node after a refresh",function(){K.loadData([{name:"Foo"},{name:"Bar"}]);var P=J.getNodes();expect(P[0]).hasHTML("Foo");expect(P[1]).hasHTML("Bar")});it("should return null after a removeAll",function(){K.removeAll();expect(J.getNodes()).toEqual([])})});describe("with start & end",function(){it("should return all items from the start if no end is specified",function(){O();var P=J.getNodes(2);expect(P.length).toBe(3);expect(P[0]).hasHTML("Item 3");expect(P[1]).hasHTML("Item 4");expect(P[2]).hasHTML("Item 5")});it("should limit to the end (inclusive)",function(){O();var P=J.getNodes(1,3);expect(P.length);expect(P[0]).hasHTML("Item 2");expect(P[1]).hasHTML("Item 3");expect(P[2]).hasHTML("Item 4")})})});describe("getRecord",function(){it("should accept a DOM element",function(){O();var P=J.getNode(3);expect(J.getRecord(P)).toBe(K.getAt(3))});it("should accept an Ext.dom.Element",function(){O();var P=Ext.get(J.getNode(1));expect(J.getRecord(P)).toBe(K.getAt(1))});it("should return null if no item could be found",function(){O();var P=Ext.getBody().createChild();expect(J.getRecord(P)).toBeNull();P.destroy()})});describe("indexOf",function(){describe("param types",function(){it("should accept a node id",function(){O();var P=Ext.id(J.getNodes()[2]);expect(J.indexOf(P)).toBe(2)});it("should accept a record",function(){O();expect(J.indexOf(K.getAt(3))).toBe(3)});it("should accept an event object",function(){O();var R=J.getNodes()[1],P=jasmine.createSpy(),Q;J.on("itemclick",P);jasmine.fireMouseEvent(R,"click");Q=P.mostRecentCall.args[4];expect(J.indexOf(Q)).toBe(1)});it("should accept an HTMLElement that is the child of an item",function(){O({itemTpl:'<div class="bleh">{name}</div>'});var P=J.getNodes()[1];expect(J.indexOf(P.firstChild)).toBe(1)})});describe("in response to updates",function(){beforeEach(function(){O()});it("should return the correct index after an add",function(){K.insert(0,{name:"X"});expect(J.indexOf(J.getNodes()[0])).toBe(0)});it("should return the correct node after an update",function(){K.first().set("name","Foo");expect(J.indexOf(J.getNodes()[1])).toBe(1)});it("should return the correct node after a remove",function(){K.removeAt(0);expect(J.indexOf(J.getNodes()[1])).toBe(1)});it("should return the correct node after a refresh",function(){K.loadData([{name:"Foo"},{name:"Bar"}]);expect(J.indexOf(K.getAt(1))).toBe(1)});it("should return -1 after a removeAll",function(){var P=K.first();K.removeAll();expect(J.indexOf(P)).toBe(-1)})})})});describe("cleanup",function(){it("should detach all store listeners",function(){function P(){var Q=K.hasListeners,S={},R;for(R in Q){if(Q.hasOwnProperty(R)){S[R]=Q[R]}}return S}K=D();var O=P();E({renderTo:Ext.getBody(),itemTpl:"{name}",store:K});J.destroy();expect(P()).toEqual(O)});it("should unbind from the store",function(){E({renderTo:Ext.getBody(),itemTpl:"{name}"});expect(J.getStore()).toBe(K);J.destroy();expect(J.getStore()).toBeNull()});it("should destroy a load mask",function(){var O=Ext.ComponentManager,P=O.getCount();E({renderTo:Ext.getBody(),itemTpl:"{name}"});J.destroy();expect(O.getCount()).toBe(P)})});describe("modifying the store",function(){var R,P;function Q(T){E({renderTo:Ext.getBody(),itemTpl:"{name}"},T)}function O(T){E({renderTo:Ext.getBody(),itemSelector:"li",tpl:["<ul>",'<tpl for=".">',"<li>{name}</li>","</tpl>","</ul>"]},T)}function S(){return J.getEl().down("ul",true)}beforeEach(function(){R=jasmine.createSpy()});describe("adding",function(){describe("a single record",function(){describe("with a simple view",function(){it("should be able to add to an empty view",function(){Q([]);K.add(C("Item1"));var T=J.getNodes();expect(T.length).toBe(1);expect(T[0]).hasHTML("Item1")});it("should be able to add to the end of a view",function(){Q();K.add(C("Item2"));var T=J.getNodes();expect(T.length).toBe(2);expect(T[1]).hasHTML("Item2")});it("should be able to insert a node at the start of the view",function(){Q();K.insert(0,C("Item2"));var T=J.getNodes();expect(T.length).toBe(2);expect(T[0]).hasHTML("Item2")});it("should be able to insert a node in the middle of the view",function(){Q([{name:"Item1"},{name:"Item2"},{name:"Item3"},{name:"Item4"}]);K.insert(2,C("new"));var T=J.getNodes();expect(T.length).toBe(5);expect(T[2]).hasHTML("new")})});describe("with a container element",function(){it("should be able to add to an empty view",function(){O([]);K.add(C("Item1"));var T=J.getNodes();expect(T.length).toBe(1);expect(T[0]).hasHTML("Item1");expect(T[0].parentNode).toBe(S())});it("should be able to add to the end of a view",function(){O();K.add(C("Item2"));var T=J.getNodes();expect(T.length).toBe(2);expect(T[1]).hasHTML("Item2");expect(T[1].parentNode).toBe(S())});it("should be able to insert a node at the start of the view",function(){O();K.insert(0,C("Item2"));var T=J.getNodes();expect(T.length).toBe(2);expect(T[0]).hasHTML("Item2");expect(T[0].parentNode).toBe(S())});it("should be able to insert a node in the middle of the view",function(){O([{name:"Item1"},{name:"Item2"},{name:"Item3"},{name:"Item4"}]);K.insert(2,C("new"));var T=J.getNodes();expect(T.length).toBe(5);expect(T[2]).hasHTML("new");expect(T[2].parentNode).toBe(S())})});describe("events",function(){it("should fire the itemadd event and pass the records, the index & the nodes",function(){Q();J.on("itemadd",R);K.add(C("foo"));expect(R.callCount).toBe(1);P=R.mostRecentCall.args;expect(P[0]).toEqual([K.getAt(1)]);expect(P[1]).toBe(1);expect(P[2]).toEqual([J.getNodes()[1]])});it("should fire the itemadd event when adding to an empty view",function(){Q([]);J.on("itemadd",R);K.add(C("foo"));expect(R.callCount).toBe(1)})})});describe("multiple records",function(){describe("contiguous range",function(){describe("with a simple view",function(){it("should be able to add to an empty view",function(){Q([]);K.add(C("Item1"),C("Item2"));var T=J.getNodes();expect(T.length).toBe(2);expect(T[0]).hasHTML("Item1");expect(T[1]).hasHTML("Item2")});it("should be able to add to the end of a view",function(){Q();K.add(C("Item2"),C("Item3"));var T=J.getNodes();expect(T.length).toBe(3);expect(T[1]).hasHTML("Item2");expect(T[2]).hasHTML("Item3")});it("should be able to insert at the start of the view",function(){Q();K.insert(0,[C("Item2"),C("Item3")]);var T=J.getNodes();expect(T.length).toBe(3);expect(T[0]).hasHTML("Item2");expect(T[1]).hasHTML("Item3")});it("should be able to insert in the middle of the view",function(){Q([{name:"Item1"},{name:"Item2"},{name:"Item3"},{name:"Item4"}]);K.insert(2,[C("new1"),C("new2")]);var T=J.getNodes();expect(T.length).toBe(6);expect(T[2]).hasHTML("new1");expect(T[3]).hasHTML("new2")})});describe("with a container element",function(){it("should be able to add to an empty view",function(){O([]);K.add(C("Item1"),C("Item2"));var T=J.getNodes();expect(T.length).toBe(2);expect(T[0]).hasHTML("Item1");expect(T[1]).hasHTML("Item2");expect(T[0].parentNode).toBe(S());expect(T[1].parentNode).toBe(S())});it("should be able to add to the end of a view",function(){O();K.add(C("Item2"),C("Item3"));var T=J.getNodes();expect(T.length).toBe(3);expect(T[1]).hasHTML("Item2");expect(T[2]).hasHTML("Item3");expect(T[1].parentNode).toBe(S());expect(T[2].parentNode).toBe(S())});it("should be able to insert at the start of the view",function(){O();K.insert(0,[C("Item2"),C("Item3")]);var T=J.getNodes();expect(T.length).toBe(3);expect(T[0]).hasHTML("Item2");expect(T[1]).hasHTML("Item3");expect(T[0].parentNode).toBe(S());expect(T[1].parentNode).toBe(S())});it("should be able to insert in the middle of the view",function(){O([{name:"Item1"},{name:"Item2"},{name:"Item3"},{name:"Item4"}]);K.insert(2,[C("new1"),C("new2")]);var T=J.getNodes();expect(T.length).toBe(6);expect(T[2]).hasHTML("new1");expect(T[3]).hasHTML("new2");expect(T[2].parentNode).toBe(S());expect(T[3].parentNode).toBe(S())})});describe("events",function(){it("should fire the itemadd event and pass the records, the index & the nodes",function(){Q();J.on("itemadd",R);K.add(C("foo1"),C("foo2"),C("foo3"));expect(R.callCount).toBe(1);P=R.mostRecentCall.args;expect(P[0]).toEqual([K.getAt(1),K.getAt(2),K.getAt(3)]);expect(P[1]).toBe(1);var T=J.getNodes();expect(P[2]).toEqual([T[1],T[2],T[3]])})})});describe("discontiguous range",function(){describe("with a simple view",function(){it("should be able to add nodes",function(){Q([C("e"),C("j"),C("o")]);K.sort("name");K.add(C("a"),C("b"),C("f"),C("g"),C("k"),C("l"),C("m"),C("p"));var T=J.getNodes();expect(T.length).toBe(11);expect(T[0]).hasHTML("a");expect(T[1]).hasHTML("b");expect(T[2]).hasHTML("e");expect(T[3]).hasHTML("f");expect(T[4]).hasHTML("g");expect(T[5]).hasHTML("j");expect(T[6]).hasHTML("k");expect(T[7]).hasHTML("l");expect(T[8]).hasHTML("m");expect(T[9]).hasHTML("o");expect(T[10]).hasHTML("p")})});describe("with a container element",function(){it("should be able to add nodes",function(){O([C("e"),C("j"),C("o")]);K.sort("name");K.add(C("a"),C("b"),C("f"),C("g"),C("k"),C("l"),C("m"),C("p"));var T=J.getNodes(),V=S(),U;expect(T.length).toBe(11);expect(T[0]).hasHTML("a");expect(T[1]).hasHTML("b");expect(T[2]).hasHTML("e");expect(T[3]).hasHTML("f");expect(T[4]).hasHTML("g");expect(T[5]).hasHTML("j");expect(T[6]).hasHTML("k");expect(T[7]).hasHTML("l");expect(T[8]).hasHTML("m");expect(T[9]).hasHTML("o");expect(T[10]).hasHTML("p");for(U=0;U<T.length;++U){expect(T[U].parentNode).toBe(V)}})});describe("events",function(){it("should fire the itemadd event for each chunk",function(){Q([C("e"),C("j"),C("o")]);K.sort("name");J.on("itemadd",R);K.add(C("a"),C("b"),C("f"),C("g"),C("k"),C("l"),C("m"),C("p"));var T=J.getNodes();P=R.calls[0].args;expect(P[0]).toEqual([K.getAt(0),K.getAt(1)]);expect(P[1]).toBe(0);expect(P[2]).toEqual([T[0],T[1]]);P=R.calls[1].args;expect(P[0]).toEqual([K.getAt(3),K.getAt(4)]);expect(P[1]).toBe(3);expect(P[2]).toEqual([T[3],T[4]]);P=R.calls[2].args;expect(P[0]).toEqual([K.getAt(6),K.getAt(7),K.getAt(8)]);expect(P[1]).toBe(6);expect(P[2]).toEqual([T[6],T[7],T[8]]);P=R.calls[3].args;expect(P[0]).toEqual([K.getAt(10)]);expect(P[1]).toBe(10);expect(P[2]).toEqual([T[10]])})})})})});describe("updating",function(){var T;beforeEach(function(){Q();T=K.first()});it("should update the node content",function(){T.set("name","foo");var U=J.getNodes();expect(U.length).toBe(1);expect(U[0]).hasHTML("foo")});describe("events",function(){it("should fire the itemupdate event and pass the record, index & node",function(){var V=jasmine.createSpy();J.on("itemupdate",V);T.set("name","foo");expect(V.callCount).toBe(1);var U=V.mostRecentCall.args;expect(U[0]).toBe(T);expect(U[1]).toBe(0);expect(U[2]).toEqual(J.getNodes()[0])})})});describe("removing",function(){describe("a single record",function(){it("should be able to remove the only node in the view",function(){Q();K.removeAt(0);var T=J.getNodes();expect(T.length).toBe(0)});it("should be remove a node from the end of a view",function(){Q([C("a"),C("b"),C("c"),C("d")]);K.removeAt(3);var T=J.getNodes();expect(T.length).toBe(3);expect(T[0]).hasHTML("a");expect(T[1]).hasHTML("b");expect(T[2]).hasHTML("c")});it("should be able to remove a node from the start of the view",function(){Q([C("a"),C("b"),C("c"),C("d")]);K.removeAt(0);var T=J.getNodes();expect(T.length).toBe(3);expect(T[0]).hasHTML("b");expect(T[1]).hasHTML("c");expect(T[2]).hasHTML("d")});it("should be able to remove a node from the middle of the view",function(){Q([C("a"),C("b"),C("c"),C("d")]);K.removeAt(1);var T=J.getNodes();expect(T.length).toBe(3);expect(T[0]).hasHTML("a");expect(T[1]).hasHTML("c");expect(T[2]).hasHTML("d")});describe("events",function(){it("should fire the itemremove event and pass the records, the index & the nodes",function(){Q([C("a"),C("b"),C("c"),C("d")]);var T=J.getNode(1),U=K.getAt(1);J.on("itemremove",R);K.removeAt(1);expect(R.callCount).toBe(1);P=R.mostRecentCall.args;expect(P[0]).toEqual([U]);expect(P[1]).toBe(1);expect(P[2]).toEqual([T])});it("should fire the itemremove event when removing the last record",function(){Q([C("foo")]);J.on("itemremove",R);K.removeAt(0);expect(R.callCount).toBe(1)})})});describe("multiple records",function(){beforeEach(function(){Q([C("a"),C("b"),C("c"),C("d"),C("e"),C("f"),C("g"),C("h"),C("i"),C("j"),C("k"),C("l"),C("m"),C("n"),C("o"),C("p")])});describe("contiguous range",function(){it("should be able to remove the only nodes in the view",function(){K.remove(K.getRange());expect(J.getNodes().length).toBe(0)});it("should be able to remove at the end of a view",function(){K.remove([L("n"),L("o"),L("p")]);var T=J.getNodes();expect(T.length).toBe(13);expect(T[11]).hasHTML("l");expect(T[12]).hasHTML("m")});it("should be able to remove at the start of the view",function(){K.remove([L("a"),L("b")]);var T=J.getNodes();expect(T.length).toBe(14);expect(T[0]).hasHTML("c");expect(T[1]).hasHTML("d")});it("should be able to remove in the middle of the view",function(){K.remove([L("f"),L("g"),L("h"),L("i")]);var T=J.getNodes();expect(T.length).toBe(12);expect(T[4]).hasHTML("e");expect(T[5]).hasHTML("j")});describe("events",function(){it("should fire the itemremove event and pass the records, the index & the nodes",function(){J.on("itemremove",R);var W=L("c"),V=L("d"),U=L("e"),T=J.getNodes();K.remove([W,V,U]);expect(R.callCount).toBe(1);P=R.mostRecentCall.args;expect(P[0]).toEqual([W,V,U]);expect(P[1]).toBe(2);expect(P[2]).toEqual([T[2],T[3],T[4]])})})});describe("discontiguous range",function(){it("should be able to remove  nodes",function(){K.remove([L("b"),L("c"),L("f"),L("g"),L("h"),L("m"),L("n")]);var T=J.getNodes();expect(T.length).toBe(9);expect(T[0]).hasHTML("a");expect(T[1]).hasHTML("d");expect(T[2]).hasHTML("e");expect(T[3]).hasHTML("i");expect(T[4]).hasHTML("j");expect(T[5]).hasHTML("k");expect(T[6]).hasHTML("l");expect(T[7]).hasHTML("o");expect(T[8]).hasHTML("p")});describe("events",function(){it("should fire the itemremove event for each chunk in reverse order",function(){J.on("itemremove",R);var U=J.getNodes(),T=K.getRange();K.remove([L("b"),L("c"),L("f"),L("g"),L("h"),L("m"),L("n")]);P=R.calls[0].args;expect(P[0]).toEqual([T[12],T[13]]);expect(P[1]).toBe(12);expect(P[2]).toEqual([U[12],U[13]]);P=R.calls[1].args;expect(P[0]).toEqual([T[5],T[6],T[7]]);expect(P[1]).toBe(5);expect(P[2]).toEqual([U[5],U[6],U[7]]);P=R.calls[2].args;expect(P[0]).toEqual([T[1],T[2]]);expect(P[1]).toBe(1);expect(P[2]).toEqual([U[1],U[2]])})})})})})});describe("shrink wrap",function(){describe("width",function(){function O(P,Q){E({renderTo:Ext.getBody(),floating:true,shrinkWrap:true,tpl:P||'<tpl for="."><div class="x-tpl-item" style="float: left; width: 10px;">{name}</div></tpl>',itemSelector:".x-tpl-item"},Q||[C("a"),C("b"),C("c"),C("d"),C("e"),C("f"),C("g"),C("h"),C("i"),C("j")])}it("should set the width on refresh",function(){O();var P=J.getStore();P.suspendEvents();P.removeAll();for(var Q=1;Q<=5;++Q){P.add({name:"Item "+Q})}P.resumeEvents();J.refresh();expect(J.getWidth()).toBe(50)});it("should update the width when a new item is added",function(){O();expect(J.getWidth()).toBe(100);J.getStore().add({name:"Item 2"});expect(J.getWidth()).toBe(110)});it("should update the width when an item is removed",function(){O();J.getStore().removeAt(1);expect(J.getWidth()).toBe(90)});it("should update the width when an item is modified causing the width to change",function(){O('<tpl for="."><div class="x-tpl-item" style="float: left; width: {size}px;">{name}</div></tpl>',[C({name:"a",size:10})]);expect(J.getWidth()).toBe(10);J.getStore().first().set("size",100);expect(J.getWidth()).toBe(100)})});describe("height",function(){function O(P,Q){E({renderTo:Ext.getBody(),tpl:P||'<tpl for="."><div class="x-tpl-item" style="height: 10px;">{name}</div></tpl>',itemSelector:".x-tpl-item"},Q||[C("a"),C("b"),C("c"),C("d"),C("e"),C("f"),C("g"),C("h"),C("i"),C("j")])}it("should set the height on refresh",function(){O();var P=J.getStore();P.suspendEvents();P.removeAll();for(var Q=1;Q<=5;++Q){P.add({name:"Item "+Q})}P.resumeEvents();J.refresh();expect(J.getHeight()).toBe(50)});it("should update the height when a new item is added",function(){O();expect(J.getHeight()).toBe(100);J.getStore().add({name:"Item 2"});expect(J.getHeight()).toBe(110)});it("should update the height when an item is removed",function(){O();J.getStore().removeAt(1);expect(J.getHeight()).toBe(90)});it("should update the height when an item is modified causing the height to change",function(){O('<tpl for="."><div class="x-tpl-item" style="height: {size}px;">{name}</div></tpl>',[C({name:"a",size:10})]);expect(J.getHeight()).toBe(10);J.getStore().first().set("size",100);expect(J.getHeight()).toBe(100)})});it("should only trigger a single layout when adding multiple ranges",function(){E({renderTo:Ext.getBody(),itemTpl:"{name}"},[C("a"),C("b"),C("d"),C("e"),C("g"),C("h"),C("j")]);J.getStore().sort("name");var P=J.getStore(),O=J.componentLayoutCounter;P.add(C("c"),C("f"),C("i"));expect(J.componentLayoutCounter).toBe(O+1)});it("should only trigger a single layout when removing multiple ranges",function(){E({renderTo:Ext.getBody(),itemTpl:"{name}"},[C("a"),C("b"),C("c"),C("d"),C("e"),C("f"),C("g"),C("h"),C("i"),C("j")]);var P=J.getStore(),O=J.componentLayoutCounter;P.remove([L("a"),L("b"),L("e"),L("f"),L("i")]);expect(J.componentLayoutCounter).toBe(O+1)})});describe("emptyText",function(){function O(Q,P){E({renderTo:Ext.getBody(),deferEmptyText:Q,itemTpl:"{name}",emptyText:"Foo"},P)}describe("with deferEmptyText: false",function(){it("should show the empty text immediately when the store is empty",function(){O(false,null);expect(J.getEl().dom).hasHTML("Foo")});it("should not contain the empty text if there are nodes",function(){O(false);expect(J.getEl().dom).not.hasHTML("Foo")})});describe("with deferEmptyText: true",function(){it("should not show the empty text immediately when the store is empty",function(){O(true,null);expect(J.getEl().dom).hasHTML("")});it("should show the empty text after a second refresh if the store is empty",function(){O(true,null);J.refresh();expect(J.getEl().dom).hasHTML("Foo")});it("should not contain the empty text if there are nodes",function(){O(true);expect(J.getEl().dom).not.hasHTML("Foo")});it("should show the empty text if the store had loaded before render",function(){K=new Ext.data.Store({model:G,proxy:{type:"ajax",url:"foo"}});E({deferEmptyText:true,itemTpl:"{name}",emptyText:"Foo",store:K});K.load();A([]);J.render(Ext.getBody());expect(J.getEl().dom).hasHTML("Foo")})});describe("store modifications",function(){it("should clear the empty text when adding a record",function(){O(false,[]);K.add(C("Item1"));expect(J.getEl().dom).not.hasHTML("Foo")});it("should clear the empty text when loading several records",function(){O(false,[]);K.loadData([{name:"Item1"},{name:"Item2"},{name:"Item3"}]);expect(J.getEl().dom).not.hasHTML("Foo")});it("should add the empty text when removing the last element",function(){O(false);K.removeAt(0);expect(J.getEl().dom).hasHTML("Foo")});it("should add the empty text when loading an empty data set",function(){O(false);K.loadData([]);expect(J.getEl().dom).hasHTML("Foo")})})});describe("refreshNode",function(){var O;function P(Q){E({itemTpl:new Ext.XTemplate("{name:this.doRender}",{doRender:function(R){return O?O(R):R}})},Q)}it("should not throw when the view is not rendered",function(){P();expect(function(){J.refreshNode(K.first())}).not.toThrow()});it("should not throw when the record is not in the store",function(){var Q=new G();P();J.render(Ext.getBody());expect(function(){J.refreshNode(Q)}).not.toThrow()});it("should not throw if the index is not in the view",function(){P();J.render(Ext.getBody());expect(function(){J.refreshNode(100)}).not.toThrow()});it("should update the view contents when passing a model",function(){var Q=100;O=function(R){return Q+R};P();J.render(Ext.getBody());expect(J.getNodes()[0]).hasHTML("100Item1");Q=200;J.refreshNode(K.first());expect(J.getNodes()[0]).hasHTML("200Item1")});it("should only update the specified record",function(){var R=100;O=function(S){return R+S};P([{name:"Foo"},{name:"Bar"},{name:"Baz"}]);J.render(Ext.getBody());var Q=J.getNodes();expect(Q[0]).hasHTML("100Foo");expect(Q[1]).hasHTML("100Bar");expect(Q[2]).hasHTML("100Baz");R=200;J.refreshNode(K.getAt(1));Q=J.getNodes();expect(Q[0]).hasHTML("100Foo");expect(Q[1]).hasHTML("200Bar");expect(Q[2]).hasHTML("100Baz")});it("should update the view contents when passing an index",function(){var Q=100;O=function(R){return Q+R};P();J.render(Ext.getBody());expect(J.getNodes()[0]).hasHTML("100Item1");Q=200;J.refreshNode(K.first());expect(J.getNodes()[0]).hasHTML("200Item1")});it("should only update the specified index",function(){var R=100;O=function(S){return R+S};P([{name:"Foo"},{name:"Bar"},{name:"Baz"}]);J.render(Ext.getBody());var Q=J.getNodes();expect(Q[0]).hasHTML("100Foo");expect(Q[1]).hasHTML("100Bar");expect(Q[2]).hasHTML("100Baz");R=200;J.refreshNode(1);Q=J.getNodes();expect(Q[0]).hasHTML("100Foo");expect(Q[1]).hasHTML("200Bar");expect(Q[2]).hasHTML("100Baz")})});describe("selection",function(){var Q,Z,Y,X,V,U,T,R;function W(a){E({renderTo:a?Ext.getBody():undefined,itemTpl:"{name}",multiSelect:true},[Z=C("a"),Y=C("b"),X=C("c"),V=C("d"),U=C("e"),T=C("f"),R=C("g")]);Q=J.getSelectionModel()}afterEach(function(){Z=Y=X=V=U=T=R=Q=null});function O(b){var c=J.getNode(b),a=J.selectedItemCls;return Ext.fly(c).hasCls(a)}function S(a){expect(O(a)).toBe(true)}function P(a){expect(O(a)).toBe(false)}describe("before render",function(){beforeEach(function(){W(false)});it("should add the selected cls to a selected record",function(){Q.select(Z);J.render(Ext.getBody());S(Z);P(Y);P(X);P(V);P(U);P(T);P(R)});it("should add the selected cls to multiple selected records",function(){Q.select([Z,V,T,R]);J.render(Ext.getBody());S(Z);P(Y);P(X);S(V);P(U);S(T);S(R)});it("should not add the selected cls to deselected records",function(){Q.select(Z);Q.deselect(Z);J.render(Ext.getBody());P(Z)})});describe("after render",function(){beforeEach(function(){W(true)});it("should add the selected cls to a selected record",function(){Q.select(Z);S(Z);P(Y);P(X);P(V);P(U);P(T);P(R)});it("should add the selected cls to multiple selected records",function(){Q.select([Z,V,T,R]);S(Z);P(Y);P(X);S(V);P(U);S(T);S(R)});it("should not add the selected cls to deselected records",function(){Q.select(Z);Q.deselect(Z);P(Z)})});it("should maintain the selected cls after being updated",function(){W(true);Q.select(Z);Z.set("name","Foo");S(Z)});it("should maintain the selected cls after being sorted",function(){W(true);Q.select(Z);K.sort("name","ASC");S(Z)})});describe("highlighting",function(){beforeEach(function(){E({itemCls:"foo",renderTo:Ext.getBody(),itemTpl:"{name}",overItemCls:"over"},M(10))});it("should apply the highlight class to a node",function(){J.highlightItem(J.getNode(0));var O=J.getEl().select(".foo");expect(O.item(0).hasCls(J.overItemCls)).toBe(true)});it("should remove the highlight on an item",function(){J.highlightItem(J.getNode(0));J.clearHighlight(J.getNode(0));var O=J.getEl().select(".foo");expect(O.item(0).hasCls(J.overItemCls)).toBe(false)});it("should only have at most one item highlighted",function(){J.highlightItem(J.getNode(0));J.highlightItem(J.getNode(1));var O=J.getEl().select(".foo");expect(O.item(0).hasCls(J.overItemCls)).toBe(false);expect(O.item(1).hasCls(J.overItemCls)).toBe(true)});it("should keep highlight on an item when updated",function(){J.highlightItem(J.getNode(0));J.getStore().getAt(0).set("name","New");var O=J.getEl().select(".foo");expect(O.item(0).hasCls(J.overItemCls)).toBe(true)});it("should clear all highlights on refresh",function(){J.highlightItem(J.getNode(0));J.refresh();var O=J.getEl().select(".foo");expect(O.item(0).hasCls(J.overItemCls)).toBe(false)})});describe("focusing a node within the view",function(){it("should not scroll to top of dataview when descendant node is selected and focused, dataview only",function(){var O;E({tpl:new Ext.XTemplate('<tpl for=".">','<p style="margin: 0;" class="foo">{name}</p>',"</tpl>"),itemSelector:"p.foo",height:100,autoScroll:true,renderTo:Ext.getBody()},M(50));O=J.getNode(49);J.scrollBy(Ext.fly(O).getXY());jasmine.fireMouseEvent(O,"click");expect(J.el.dom.scrollTop).not.toBe(0)});it("should not scroll to top of dataview when descendant node is selected and focused, dataview in a parent container",function(){var O,P;E({tpl:new Ext.XTemplate('<tpl for=".">','<p style="margin: 0;" class="foo">{name}</p>',"</tpl>"),itemSelector:"p.foo"},M(50));O=new Ext.container.Container({height:300,autoScroll:true,items:J,renderTo:Ext.getBody()});P=J.getNode(49);O.scrollBy(Ext.fly(P).getXY());jasmine.fireMouseEvent(P,"click");expect(O.el.dom.scrollTop).not.toBe(0);O.destroy();O=null})});describe("bindStore",function(){var O;afterEach(function(){O=Ext.destroy(O)});it("should only refresh once when binding a new store",function(){E({renderTo:Ext.getBody(),itemTpl:"{name}",store:null});expect(J.getNodes().length).toBe(0);var P=J.refreshCounter;K=new Ext.data.Store({model:G,data:[{name:"NewItem"}]});J.bindStore(K);expect(J.refreshCounter).toBe(P+1);expect(J.getNodes().length).toBe(1)});it("should only refresh once when binding over an existing store",function(){E({renderTo:Ext.getBody(),itemTpl:"{name}"},M(5));expect(J.getNodes().length).toBe(5);var P=J.refreshCounter;O=new Ext.data.Store({model:G,data:[{name:"NewItem"}]});J.bindStore(O);expect(J.refreshCounter).toBe(P+1);expect(J.getNodes().length).toBe(1)});it("should defer the refresh until the store loads",function(){E({renderTo:Ext.getBody(),itemTpl:"{name}"},M(10));expect(J.getNodes().length).toBe(10);var P=J.refreshCounter;O=new Ext.data.Store({model:G,proxy:{type:"ajax",url:"fakeUrl"}});O.load();J.bindStore(O);expect(P).toBe(P);A(M(3));expect(J.refreshCounter).toBe(P+1);expect(J.getNodes().length).toBe(3)});it("should not cause an exception with a selection",function(){E({renderTo:Ext.getBody(),itemTpl:"{name}"},M(3));J.getSelectionModel().select(K.getAt(0));O=new Ext.data.Store({model:G,data:M(3)});expect(function(){J.bindStore(O)}).not.toThrow()});it("should remain selected with a matching record",function(){E({renderTo:Ext.getBody(),itemTpl:"{name}"},H(3));var P=J.getSelectionModel();P.select(K.getAt(0));O=new Ext.data.Store({model:G,data:H(3)});J.bindStore(O);expect(P.isSelected(O.getAt(0))).toBe(true);expect(J.getNode(0)).toHaveCls(J.selectedItemCls)})});describe("setStore",function(){var O;afterEach(function(){O=Ext.destroy(O)});it("should only refresh once when binding a new store",function(){E({renderTo:Ext.getBody(),itemTpl:"{name}",store:null});expect(J.getNodes().length).toBe(0);var P=J.refreshCounter;K=new Ext.data.Store({model:G,data:[{name:"NewItem"}]});J.setStore(K);expect(J.refreshCounter).toBe(P+1);expect(J.getNodes().length).toBe(1)});it("should only refresh once when binding over an existing store",function(){E({renderTo:Ext.getBody(),itemTpl:"{name}"},M(5));expect(J.getNodes().length).toBe(5);var P=J.refreshCounter;O=new Ext.data.Store({model:G,data:[{name:"NewItem"}]});J.setStore(O);expect(J.refreshCounter).toBe(P+1);expect(J.getNodes().length).toBe(1)});it("should defer the refresh until the store loads",function(){E({renderTo:Ext.getBody(),itemTpl:"{name}"},M(10));expect(J.getNodes().length).toBe(10);var P=J.refreshCounter;O=new Ext.data.Store({model:G,proxy:{type:"ajax",url:"fakeUrl"}});O.load();J.setStore(O);expect(P).toBe(P);A(M(3));expect(J.refreshCounter).toBe(P+1);expect(J.getNodes().length).toBe(3)});it("should not cause an exception with a selection",function(){E({renderTo:Ext.getBody(),itemTpl:"{name}"},M(3));J.getSelectionModel().select(K.getAt(0));O=new Ext.data.Store({model:G,data:M(3)});expect(function(){J.setStore(O)}).not.toThrow()});it("should remain selected with a matching record",function(){E({renderTo:Ext.getBody(),itemTpl:"{name}"},H(3));var P=J.getSelectionModel();P.select(K.getAt(0));O=new Ext.data.Store({model:G,data:H(3)});J.setStore(O);expect(P.isSelected(O.getAt(0))).toBe(true);expect(J.getNode(0)).toHaveCls(J.selectedItemCls)})});describe("viewmodel binding",function(){var O;beforeEach(function(){O=new Ext.app.ViewModel()});afterEach(function(){O=Ext.destroy(O)});describe("store",function(){it("should be able to bind the store",function(){O.setStores({things:{model:G,data:M(5)}});E({renderTo:Ext.getBody(),itemTpl:"{name}",store:null,bind:"{things}",viewModel:O});expect(J.getNodes().length).toBe(0);O.notify();expect(J.getNodes().length).toBe(5)})});describe("selection",function(){var S,Q,P,W,U,R;function T(X){Q=C({id:1,name:"a"});P=C({id:2,name:"b"});W=C({id:3,name:"c"});U=C({id:4,name:"d"});E(Ext.apply({renderTo:Ext.getBody(),itemTpl:"{name}",viewModel:O},X),[Q,P,W,U]);R=J.getSelectionModel()}beforeEach(function(){S=jasmine.createSpy()});afterEach(function(){Q=P=W=U=S=R=null});function V(X){R.select(X);O.notify()}describe("reference",function(){beforeEach(function(){T({reference:"userList"});O.bind("{userList.selection}",S);O.notify()});it("should publish null by default",function(){var X=S.mostRecentCall.args;expect(X[0]).toBeNull();expect(X[1]).toBeUndefined()});it("should publish the value when selected",function(){V(P);var X=S.mostRecentCall.args;expect(X[0]).toBe(P);expect(X[1]).toBeNull()});it("should publish when the selection is changed",function(){V(P);S.reset();V(U);var X=S.mostRecentCall.args;expect(X[0]).toBe(U);expect(X[1]).toBe(P)});it("should publish when an item is deselected",function(){V(P);S.reset();R.deselect(P);O.notify();var X=S.mostRecentCall.args;expect(X[0]).toBeNull();expect(X[1]).toBe(P)})});describe("two way binding",function(){beforeEach(function(){T({bind:{selection:"{foo}"}});O.bind("{foo}",S);O.notify()});describe("changing the selection",function(){it("should trigger the binding when adding a selection",function(){V(W);var X=S.mostRecentCall.args;expect(X[0]).toBe(W);expect(X[1]).toBeUndefined()});it("should trigger the binding when changing the selection",function(){V(W);S.reset();V(Q);var X=S.mostRecentCall.args;expect(X[0]).toBe(Q);expect(X[1]).toBe(W)});it("should trigger the binding when an item is deselected",function(){V(W);S.reset();R.deselect(W);O.notify();var X=S.mostRecentCall.args;expect(X[0]).toBeNull();expect(X[1]).toBe(W)})});describe("changing the viewmodel value",function(){it("should select the record when setting the value",function(){O.set("foo",Q);O.notify();expect(R.isSelected(Q)).toBe(true)});it("should select the record when updating the value",function(){O.set("foo",Q);O.notify();O.set("foo",P);O.notify();expect(R.isSelected(Q)).toBe(false);expect(R.isSelected(P)).toBe(true)});it("should deselect when clearing the value",function(){O.set("foo",Q);O.notify();O.set("foo",null);O.notify();expect(R.isSelected(Q)).toBe(false)})});describe("reloading the store",function(){beforeEach(function(){V(Q);S.reset();K.setProxy({type:"ajax",url:"fake"});K.load()});describe("when the selected record is in the result set",function(){it("should trigger the selection binding",function(){A(H(2));O.notify();expect(S.callCount).toBe(1);expect(S.mostRecentCall.args[0]).toBe(K.getAt(0))})});describe("when the selected record is not in the result set",function(){it("should trigger the selection binding",function(){A([]);O.notify();expect(S.callCount).toBe(1);expect(S.mostRecentCall.args[0]).toBeNull()})})})})})});describe("masking",function(){describe("mask configurations",function(){});describe("mask visibility",function(){describe("static stores",function(){var O;function P(Q){K=D([]);if(Q){K.load()}E({renderTo:Ext.getBody(),mask:true,itemTpl:"{name}",store:K},[]);O=J.loadMask}afterEach(function(){O=null});it("should show a mask when the configured store is loading",function(){P(true);expect(O.isVisible()).toBe(true);A();expect(O.isVisible()).toBe(false)});it("should show the mask when beforeload fires",function(){P();K.load();expect(O.isVisible()).toBe(true);A()});it("should hide the mask when a successful request returns",function(){P();K.load();expect(O.isVisible()).toBe(true);A();expect(O.isVisible()).toBe(false)});it("should hide the mask when an unsuccessful request returns",function(){P();K.load();expect(O.isVisible()).toBe(true);A(null,500);expect(O.isVisible()).toBe(false)});it("should show a mask when using a chained store with a source that loads",function(){P();var Q=new Ext.data.ChainedStore({source:K});J.bindStore(Q);K.load();expect(O.isVisible()).toBe(true);A();expect(O.isVisible()).toBe(false)})});describe("binding store dynamically",function(){beforeEach(function(){E({renderTo:Ext.getBody(),mask:true,itemTpl:"{name}",store:null});K=D([])});it("should show a mask when a new store is bound",function(){K.load();J.bindStore(K);var O=J.loadMask;expect(O.isVisible()).toBe(true);A();expect(O.isVisible()).toBe(false)});it("should show a mask when the store is loading when bound",function(){J.bindStore(K);K.load();var O=J.loadMask;expect(O.isVisible()).toBe(true);A();expect(O.isVisible()).toBe(false)});it("should show a mask when a source is loading when a chained store is bound",function(){var P=new Ext.data.ChainedStore({source:K});K.load();J.bindStore(P);var O=J.loadMask;expect(O.isVisible()).toBe(true);A();expect(O.isVisible()).toBe(false)})})});describe("as a child reference",function(){it("should include the mask in the ref items",function(){E({renderTo:Ext.getBody(),mask:true,itemTpl:"{name}"});var O=J.getRefItems()[0];expect(O instanceof Ext.LoadMask)});it("should not return the mask if not created",function(){E({mask:true,itemTpl:"{name}"});expect(J.getRefItems().length).toBe(0)})})});describe("focusing",function(){beforeEach(function(){E({renderTo:Ext.getBody(),itemTpl:"{name}"},10)});it("should restore focus when the view is refreshed",function(){var O,P;B.setPosition(1);O=Ext.get(J.all.item(1,true));expect(J.el.query("."+B.focusCls).length).toBe(1);expect(O.hasCls(B.focusCls)).toBe(true);K.fireEvent("refresh",K);P=J.all.item(1);expect(P.dom!==O.dom).toBe(true);expect(J.el.query("."+B.focusCls).length).toBe(1);expect(P.hasCls(B.focusCls)).toBe(true)})});describe("destruction",function(){it("should leave the layout counter intact if destroyed during a begin/endUpdate",function(){var O=Ext.Component.layoutSuspendCount;E({renderTo:Ext.getBody(),itemTpl:"{name}"});K.beginUpdate();J.destroy();expect(Ext.Component.layoutSuspendCount).toBe(O)})})})