Ext.define("Ext.direct.AmfRemotingProvider",{alias:"direct.amfremotingprovider",extend:"Ext.direct.Provider",requires:["Ext.util.MixedCollection","Ext.util.DelayedTask","Ext.direct.Transaction","Ext.direct.RemotingMethod","Ext.data.amf.XmlEncoder","Ext.data.amf.XmlDecoder","Ext.data.amf.Encoder","Ext.data.amf.Packet","Ext.data.amf.RemotingMessage","Ext.direct.ExceptionEvent"],binary:false,maxRetries:1,timeout:undefined,constructor:function(A){var B=this;B.callParent(arguments);B.namespace=(Ext.isString(B.namespace))?Ext.ns(B.namespace):B.namespace||window;B.transactions=new Ext.util.MixedCollection();B.callBuffer=[]},initAPI:function(){var G=this.actions,E=this.namespace,F,B,C,D,A,H;for(F in G){if(G.hasOwnProperty(F)){B=E[F];if(!B){B=E[F]={}}C=G[F];for(D=0,A=C.length;D<A;++D){H=new Ext.direct.RemotingMethod(C[D]);B[H.name]=this.createHandler(F,H)}}}},createHandler:function(C,D){var B=this,A;if(!D.formHandler){A=function(){B.configureRequest(C,D,Array.prototype.slice.call(arguments,0))}}else{A=function(F,G,E){B.configureFormRequest(C,D,F,G,E)}}A.directCfg={action:C,method:D};return A},isConnected:function(){return !!this.connected},connect:function(){var A=this;if(A.url){A.clientId=Ext.data.amf.XmlEncoder.generateFlexUID();A.initAPI();A.connected=true;A.fireEvent("connect",A);A.DSId=null}else{if(!A.url){Ext.raise("Error initializing RemotingProvider, no url configured.")}}},disconnect:function(){var A=this;if(A.connected){A.connected=false;A.fireEvent("disconnect",A)}},runCallback:function(E,B){var D=!!B.status,C=D?"success":"failure",F,A;if(E&&E.callback){F=E.callback;A=Ext.isDefined(B.result)?B.result:B.data;if(Ext.isFunction(F)){F(A,B,D)}else{Ext.callback(F[C],F.scope,[A,B,D]);Ext.callback(F.callback,F.scope,[A,B,D])}}},onData:function(J,H,C){var F=this,D=0,E,I,A,B,G;if(H){I=F.createEvents(C);for(E=I.length;D<E;++D){A=I[D];B=F.getTransaction(A);F.fireEvent("data",F,A);if(B){F.runCallback(B,A,true);Ext.direct.Manager.removeTransaction(B)}}}else{G=[].concat(J.transaction);for(E=G.length;D<E;++D){B=F.getTransaction(G[D]);if(B&&B.retryCount<F.maxRetries){B.retry()}else{A=new Ext.direct.ExceptionEvent({data:null,transaction:B,code:Ext.direct.Manager.exceptions.TRANSPORT,message:"Unable to connect to the server.",xhr:C});F.fireEvent("data",F,A);if(B){F.runCallback(B,A,false);Ext.direct.Manager.removeTransaction(B)}}}}},getTransaction:function(A){return A&&A.tid?Ext.direct.Manager.getTransaction(A.tid):null},configureRequest:function(D,A,F){var G=this,C=A.getCallData(F),E=C.data,H=C.callback,I=C.scope,B;B=new Ext.direct.Transaction({provider:G,args:F,action:D,method:A.name,data:E,callback:I&&Ext.isFunction(H)?Ext.Function.bind(H,I):H});if(G.fireEvent("beforecall",G,B,A)!==false){Ext.direct.Manager.addTransaction(B);G.queueTransaction(B);G.fireEvent("call",G,B,A)}},getCallData:function(A){if(this.binary){return{targetUri:A.action+"."+A.method,responseUri:"/"+A.id,body:A.data||[]}}else{return new Ext.data.amf.RemotingMessage({body:A.data||[],clientId:this.clientId,destination:A.action,headers:{DSEndpoint:this.endpoint,DSId:this.DSId||"nil"},messageId:Ext.data.amf.XmlEncoder.generateFlexUID(A.id),operation:A.method,timestamp:0,timeToLive:0})}},sendRequest:function(D){var I=this,C={url:I.url,callback:I.onData,scope:I,transaction:D,timeout:I.timeout},A,E=0,G,B,J,H=[],F=[];if(Ext.isArray(D)){if(!I.binary){Ext.raise("Mutltiple messages in the same call are not supported in AMFX")}for(G=D.length;E<G;++E){H.push(I.getCallData(D[E]))}}else{H.push(I.getCallData(D))}if(I.binary){J=new Ext.data.amf.Encoder({format:0});J.writeAmfPacket(F,H);C.binaryData=J.bytes;C.binary=true;C.headers={"Content-Type":"application/x-amf"}}else{J=new Ext.data.amf.XmlEncoder();J.writeAmfxRemotingPacket(H[0]);C.xmlData=J.body}Ext.Ajax.request(C)},queueTransaction:function(C){var B=this,A=false;if(C.form){B.sendFormRequest(C);return }B.callBuffer.push(C);if(A){if(!B.callTask){B.callTask=new Ext.util.DelayedTask(B.combineAndSend,B)}B.callTask.delay(Ext.isNumber(A)?A:10)}else{B.combineAndSend()}},combineAndSend:function(){var B=this.callBuffer,A=B.length;if(A>0){this.sendRequest(A==1?B[0]:B);this.callBuffer=[]}},configureFormRequest:function(C,E,B,D,A){Ext.raise("Form requests are not supported for AmfRemoting")},sendFormRequest:function(A){Ext.raise("Form requests are not supported for AmfRemoting")},createEvents:function(C){var D=null,F=[],I=[],A,E=0,G,B;try{if(this.binary){B=new Ext.data.amf.Packet();D=B.decode(C.responseBytes)}else{B=new Ext.data.amf.XmlDecoder();D=B.readAmfxMessage(C.responseText)}}catch(H){A=new Ext.direct.ExceptionEvent({data:H,xhr:C,code:Ext.direct.Manager.exceptions.PARSE,message:"Error parsing AMF response: \n\n "+D});return[A]}if(this.binary){for(E=0;E<D.messages.length;E++){I.push(this.createEvent(D.messages[E]))}}else{I.push(this.createEvent(D))}return I},createEvent:function(C){var B=C.targetURI.split("/"),G,E,F,A,D=this;if(D.binary){G=B[1];A=2}else{G=Ext.data.amf.XmlDecoder.decodeTidFromFlexUID(C.message.correlationId);A=1}if(B[A]=="onStatus"){F={tid:G,data:(D.binary?C.body:C.message)};E=Ext.create("direct.exception",F)}else{if(B[A]=="onResult"){F={tid:G,data:(D.binary?C.body:C.message.body)};E=Ext.create("direct.rpc",F)}else{Ext.raise("Unknown AMF return status: "+B[A])}}return E}})