Ext.define("Ext.chart.axis.Axis",{xtype:"axis",mixins:{observable:"Ext.mixin.Observable"},requires:["Ext.chart.axis.sprite.Axis","Ext.chart.axis.segmenter.*","Ext.chart.axis.layout.*"],isAxis:true,config:{position:"bottom",fields:[],label:undefined,grid:false,limits:null,renderer:null,chart:null,style:null,margin:0,titleMargin:4,background:null,minimum:NaN,maximum:NaN,reconcileRange:false,minZoom:1,maxZoom:10000,layout:"continuous",segmenter:"numeric",hidden:false,majorTickSteps:0,minorTickSteps:0,adjustByMajorUnit:true,title:null,increment:0.5,length:0,center:null,radius:null,totalAngle:Math.PI,rotation:null,labelInSpan:null,visibleRange:[0,1],needHighPrecision:false,linkedTo:null,floating:null},titleOffset:0,spriteAnimationCount:0,prevMin:0,prevMax:1,boundSeries:[],sprites:null,surface:null,range:null,xValues:[],yValues:[],masterAxis:null,applyRotation:function(B){var A=Math.PI*2;return(B%A+Math.PI)%A-Math.PI},updateRotation:function(B){var C=this.getSprites(),A=this.getPosition();if(!this.getHidden()&&A==="angular"&&C[0]){C[0].setAttributes({baseRotation:B})}},applyTitle:function(C,B){var A;if(Ext.isString(C)){C={text:C}}if(!B){B=Ext.create("sprite.text",C);if((A=this.getSurface())){A.add(B)}}else{B.setAttributes(C)}return B},applyFloating:function(B,A){if(B===null){B={value:null,alongAxis:null}}else{if(Ext.isNumber(B)){B={value:B,alongAxis:null}}}if(Ext.isObject(B)){if(A&&A.alongAxis){delete this.getChart().getAxis(A.alongAxis).floatingAxes[this.getId()]}return B}return A},constructor:function(A){var B=this,C;B.sprites=[];B.labels=[];B.floatingAxes={};A=A||{};if(A.position==="angular"){A.style=A.style||{};A.style.estStepSize=1}if("id" in A){C=A.id}else{if("id" in B.config){C=B.config.id}else{C=B.getId()}}B.setId(C);B.mixins.observable.constructor.apply(B,arguments)},getAlignment:function(){switch(this.getPosition()){case"left":case"right":return"vertical";case"top":case"bottom":return"horizontal";case"radial":return"radial";case"angular":return"angular"}},getGridAlignment:function(){switch(this.getPosition()){case"left":case"right":return"horizontal";case"top":case"bottom":return"vertical";case"radial":return"circular";case"angular":return"radial"}},getSurface:function(){var E=this,D=E.getChart();if(D&&!E.surface){var B=E.surface=D.getSurface(E.getId(),"axis"),C=E.gridSurface=D.getSurface("main"),A=E.getSprites()[0],F=E.getGridAlignment();C.waitFor(B);E.getGrid();if(E.getLimits()&&F){F=F.replace("3d","");E.limits={surface:D.getSurface("overlay"),lines:new Ext.chart.Markers(),titles:new Ext.draw.sprite.Instancing()};E.limits.lines.setTemplate({xclass:"grid."+F});E.limits.lines.getTemplate().setAttributes({strokeStyle:"black"},true);E.limits.surface.add(E.limits.lines);A.bindMarker(F+"-limit-lines",E.limits.lines);E.limitTitleTpl=new Ext.draw.sprite.Text();E.limits.titles.setTemplate(E.limitTitleTpl);E.limits.surface.add(E.limits.titles);D.on("redraw",E.renderLimits,E)}}return E.surface},applyGrid:function(A){if(A===true){return{}}return A},updateGrid:function(B){var E=this,D=E.getChart();if(!D){E.on({chartattached:Ext.bind(E.updateGrid,E,[B]),single:true});return }var C=E.gridSurface,A=E.getSprites()[0],F=E.getGridAlignment(),G;if(B){G=E.gridSpriteEven;if(!G){G=E.gridSpriteEven=new Ext.chart.Markers();G.setTemplate({xclass:"grid."+F});C.add(G);A.bindMarker(F+"-even",G)}if(Ext.isObject(B)){G.getTemplate().setAttributes(B);if(Ext.isObject(B.even)){G.getTemplate().setAttributes(B.even)}}G=E.gridSpriteOdd;if(!G){G=E.gridSpriteOdd=new Ext.chart.Markers();G.setTemplate({xclass:"grid."+F});C.add(G);A.bindMarker(F+"-odd",G)}if(Ext.isObject(B)){G.getTemplate().setAttributes(B);if(Ext.isObject(B.odd)){G.getTemplate().setAttributes(B.odd)}}}},renderLimits:function(){this.getSprites()[0].renderLimits()},getCoordFor:function(C,D,A,B){return this.getLayout().getCoordFor(C,D,A,B)},applyPosition:function(A){return A.toLowerCase()},applyLength:function(B,A){return B>0?B:A},applyLabel:function(B,A){if(!A){A=new Ext.draw.sprite.Text({})}if(this.limitTitleTpl){this.limitTitleTpl.setAttributes(B)}A.setAttributes(B);return A},applyLayout:function(B,A){B=Ext.factory(B,null,A,"axisLayout");B.setAxis(this);return B},applySegmenter:function(A,B){A=Ext.factory(A,null,B,"segmenter");A.setAxis(this);return A},updateMinimum:function(){this.range=null},updateMaximum:function(){this.range=null},hideLabels:function(){this.getSprites()[0].setDirty(true);this.setLabel({hidden:true})},showLabels:function(){this.getSprites()[0].setDirty(true);this.setLabel({hidden:false})},renderFrame:function(){this.getSurface().renderFrame()},updateChart:function(D,B){var C=this,A;if(B){B.unregister(C);B.un("serieschange",C.onSeriesChange,C);B.un("redraw",C.renderLimits,C);C.linkAxis();C.fireEvent("chartdetached",B,C)}if(D){D.on("serieschange",C.onSeriesChange,C);C.surface=null;A=C.getSurface();C.getLabel().setSurface(A);A.add(C.getSprites());A.add(C.getTitle());D.register(C);C.fireEvent("chartattached",D,C)}},applyBackground:function(A){var B=Ext.ClassManager.getByAlias("sprite.rect");return B.def.normalize(A)},processData:function(){this.getLayout().processData();this.range=null},getDirection:function(){return this.getChart().getDirectionForAxis(this.getPosition())},isSide:function(){var A=this.getPosition();return A==="left"||A==="right"},applyFields:function(A){return Ext.Array.from(A)},applyVisibleRange:function(A,C){this.getChart();if(A[0]>A[1]){var B=A[0];A[0]=A[1];A[0]=B}if(A[1]===A[0]){A[1]+=1/this.getMaxZoom()}if(A[1]>A[0]+1){A[0]=0;A[1]=1}else{if(A[0]<0){A[1]-=A[0];A[0]=0}else{if(A[1]>1){A[0]-=A[1]-1;A[1]=1}}}if(C&&A[0]===C[0]&&A[1]===C[1]){return undefined}return A},updateVisibleRange:function(A){this.fireEvent("visiblerangechange",this,A)},onSeriesChange:function(E){var F=this,B=E.getSeries(),I="get"+F.getDirection()+"Axis",G=[],C,D=B.length,A,H;for(C=0;C<D;C++){if(this===B[C][I]()){G.push(B[C])}}F.boundSeries=G;A=F.getLinkedTo();H=!Ext.isEmpty(A)&&E.getAxis(A);if(H){F.linkAxis(H)}else{F.getLayout().processData()}},linkAxis:function(A){var C=this;function B(F,D,E){E.getLayout()[F]("datachange","onDataChange",D);E[F]("rangechange","onMasterAxisRangeChange",D)}if(C.masterAxis){B("un",C,C.masterAxis);C.masterAxis=null}if(A){if(A.type!==this.type){Ext.Error.raise("Linked axes must be of the same type.")}B("on",C,A);C.onDataChange(A.getLayout().labels);C.onMasterAxisRangeChange(A,A.range);C.setStyle(Ext.apply({},C.config.style,A.config.style));C.setTitle(Ext.apply({},C.config.title,A.config.title));C.setLabel(Ext.apply({},C.config.label,A.config.label));C.masterAxis=A}},onDataChange:function(A){this.getLayout().labels=A},onMasterAxisRangeChange:function(B,A){this.range=A},applyRange:function(A){if(!A){return this.dataRange.slice(0)}else{return[A[0]===null?this.dataRange[0]:A[0],A[1]===null?this.dataRange[1]:A[1]]}},getRange:function(){var L=this;if(L.range){return L.range}else{if(L.masterAxis){return L.masterAxis.range}}if(Ext.isNumber(L.getMinimum()+L.getMaximum())){return L.range=[L.getMinimum(),L.getMaximum()]}var D=Infinity,M=-Infinity,N=L.boundSeries,H=L.getLayout(),K=L.getSegmenter(),O=L.getVisibleRange(),B="get"+L.getDirection()+"Range",A,I,G,F,E,J;for(E=0,J=N.length;E<J;E++){F=N[E];var C=F[B]();if(C){if(C[0]<D){D=C[0]}if(C[1]>M){M=C[1]}}}if(!isFinite(M)){M=L.prevMax}if(!isFinite(D)){D=L.prevMin}if(L.getLabelInSpan()||D===M){M+=L.getIncrement();D-=L.getIncrement()}if(Ext.isNumber(L.getMinimum())){D=L.getMinimum()}else{L.prevMin=D}if(Ext.isNumber(L.getMaximum())){M=L.getMaximum()}else{L.prevMax=M}L.range=[Ext.Number.correctFloat(D),Ext.Number.correctFloat(M)];if(L.getReconcileRange()){L.reconcileRange()}if(L.getAdjustByMajorUnit()&&K.adjustByMajorUnit&&!L.getMajorTickSteps()){I=Ext.Object.chain(L.getSprites()[0].attr);I.min=L.range[0];I.max=L.range[1];I.visibleMin=O[0];I.visibleMax=O[1];A={attr:I,segmenter:K};H.calculateLayout(A);G=A.majorTicks;if(G){K.adjustByMajorUnit(G.step,G.unit.scale,L.range);I.min=L.range[0];I.max=L.range[1];delete A.majorTicks;H.calculateLayout(A);G=A.majorTicks;K.adjustByMajorUnit(G.step,G.unit.scale,L.range)}else{if(!L.hasClearRangePending){L.hasClearRangePending=true;L.getChart().on("layout","clearRange",L)}}}if(!Ext.Array.equals(L.range,L.oldRange||[])){L.fireEvent("rangechange",L,L.range);L.oldRange=L.range}return L.range},clearRange:function(){delete this.hasClearRangePending;this.range=null},reconcileRange:function(){var E=this,G=E.getChart().getAxes(),F=E.getDirection(),B,D,C,A;if(!G){return }for(B=0,D=G.length;B<D;B++){C=G[B];A=C.getRange();if(C===E||C.getDirection()!==F||!A||!C.getReconcileRange()){continue}if(A[0]<E.range[0]){E.range[0]=A[0]}if(A[1]>E.range[1]){E.range[1]=A[1]}}},applyStyle:function(C,B){var A=Ext.ClassManager.getByAlias("sprite."+this.seriesType);if(A&&A.def){C=A.def.normalize(C)}B=Ext.apply(B||{},C);return B},themeOnlyIfConfigured:{grid:true},updateTheme:function(D){var I=this,K=D.getAxis(),E=I.getPosition(),O=I.getInitialConfig(),C=I.defaultConfig,G=I.getConfigurator().configs,A=K.defaults,N=K[E],H=I.themeOnlyIfConfigured,L,J,P,B,M,F;K=Ext.merge({},A,N);for(L in K){J=K[L];F=G[L];if(J!==null&&J!==undefined&&F){M=O[L];P=Ext.isObject(J);B=M===C[L];if(P){if(B&&H[L]){continue}J=Ext.merge({},J,M)}if(B||P){I[F.names.set](J)}}}},updateCenter:function(B){var E=this.getSprites(),A=E[0],D=B[0],C=B[1];if(A){A.setAttributes({centerX:D,centerY:C})}if(this.gridSpriteEven){this.gridSpriteEven.getTemplate().setAttributes({translationX:D,translationY:C,rotationCenterX:D,rotationCenterY:C})}if(this.gridSpriteOdd){this.gridSpriteOdd.getTemplate().setAttributes({translationX:D,translationY:C,rotationCenterX:D,rotationCenterY:C})}},getSprites:function(){if(!this.getChart()){return }var I=this,E=I.getRange(),F=I.getPosition(),G=I.getChart(),C=G.getAnimation(),D,A,B=I.getLength(),H=I.superclass;if(C===false){C={duration:0}}if(E){A=Ext.applyIf({position:F,axis:I,min:E[0],max:E[1],length:B,grid:I.getGrid(),hidden:I.getHidden(),titleOffset:I.titleOffset,layout:I.getLayout(),segmenter:I.getSegmenter(),totalAngle:I.getTotalAngle(),label:I.getLabel()},I.getStyle());if(!I.sprites.length){while(!H.xtype){H=H.superclass}D=Ext.create("sprite."+H.xtype,A);D.fx.setCustomDurations({baseRotation:0});D.fx.on("animationstart","onAnimationStart",I);D.fx.on("animationend","onAnimationEnd",I);D.setLayout(I.getLayout());D.setSegmenter(I.getSegmenter());D.setLabel(I.getLabel());I.sprites.push(D);I.updateTitleSprite()}else{D=I.sprites[0];D.setAnimation(C);D.setAttributes(A)}if(I.getRenderer()){D.setRenderer(I.getRenderer())}}return I.sprites},updateTitleSprite:function(){var F=this,B=F.getLength();if(!F.sprites[0]||!Ext.isNumber(B)){return }var H=this.sprites[0].thickness,A=F.getSurface(),G=F.getTitle(),E=F.getPosition(),C=F.getMargin(),I=F.getTitleMargin(),D=A.roundPixel(B/2);if(G){switch(E){case"top":G.setAttributes({x:D,y:C+I/2,textBaseline:"top",textAlign:"center"},true);G.applyTransformations();F.titleOffset=G.getBBox().height+I;break;case"bottom":G.setAttributes({x:D,y:H+I/2,textBaseline:"top",textAlign:"center"},true);G.applyTransformations();F.titleOffset=G.getBBox().height+I;break;case"left":G.setAttributes({x:C+I/2,y:D,textBaseline:"top",textAlign:"center",rotationCenterX:C+I/2,rotationCenterY:D,rotationRads:-Math.PI/2},true);G.applyTransformations();F.titleOffset=G.getBBox().width+I;break;case"right":G.setAttributes({x:H-C+I/2,y:D,textBaseline:"bottom",textAlign:"center",rotationCenterX:H+I/2,rotationCenterY:D,rotationRads:Math.PI/2},true);G.applyTransformations();F.titleOffset=G.getBBox().width+I;break}}},onThicknessChanged:function(){this.getChart().onThicknessChanged()},getThickness:function(){if(this.getHidden()){return 0}return(this.sprites[0]&&this.sprites[0].thickness||1)+this.titleOffset+this.getMargin()},onAnimationStart:function(){this.spriteAnimationCount++;if(this.spriteAnimationCount===1){this.fireEvent("animationstart",this)}},onAnimationEnd:function(){this.spriteAnimationCount--;if(this.spriteAnimationCount===0){this.fireEvent("animationend",this)}},getItemId:function(){return this.getId()},getAncestorIds:function(){return[this.getChart().getId()]},isXType:function(A){return A==="axis"},resolveListenerScope:function(E){var D=this,A=Ext._namedScopes[E],C=D.getChart(),B;if(!A){B=C?C.resolveListenerScope(E,false):(E||D)}else{if(A.isThis){B=D}else{if(A.isController){B=C?C.resolveListenerScope(E,false):D}else{if(A.isSelf){B=C?C.resolveListenerScope(E,false):D;if(B===C&&!C.getInheritedConfig("defaultListenerScope")){B=D}}}}}return B},destroy:function(){var A=this;A.setChart(null);A.surface.destroy();A.surface=null;A.callParent()}})