Ext.define("Ext.chart.axis.layout.Discrete",{extend:"Ext.chart.axis.layout.Layout",alias:"axisLayout.discrete",isDiscrete:true,processData:function(){var F=this,D=F.getAxis(),C=D.boundSeries,G=D.getDirection(),B,E,A;F.labels=[];F.labelMap={};for(B=0,E=C.length;B<E;B++){A=C[B];if(A["get"+G+"Axis"]()===D){A["coordinate"+G]()}}D.getSprites()[0].setAttributes({data:F.labels});F.fireEvent("datachange",F.labels)},calculateLayout:function(A){A.data=this.labels;this.callParent([A])},calculateMajorTicks:function(A){var G=this,F=A.attr,D=A.data,E=F.max-F.min,J=E/Math.max(1,F.length)*(F.visibleMax-F.visibleMin),I=F.min+E*F.visibleMin,B=F.min+E*F.visibleMax,H=F.estStepSize*J;var C=G.snapEnds(A,Math.max(0,F.min),Math.min(F.max,D.length-1),H);if(C){G.trimByRange(A,C,I,B);A.majorTicks=C}},snapEnds:function(E,D,A,B){B=Math.ceil(B);var C=Math.floor((A-D)/B),F=E.data;return{min:D,max:A,from:D,to:C*B+D,step:B,steps:C,unit:1,getLabel:function(G){return F[this.from+this.step*G]},get:function(G){return this.from+this.step*G}}},trimByRange:function(B,F,H,A){var I=F.unit,G=Math.ceil((H-F.from)/I)*I,D=Math.floor((A-F.from)/I)*I,C=Math.max(0,Math.ceil(G/F.step)),E=Math.min(F.steps,Math.floor(D/F.step));if(E<F.steps){F.to=E}if(F.max>A){F.max=F.to}if(F.from<H&&F.step>0){F.from=F.from+C*F.step*I;while(F.from<H){C++;F.from+=F.step*I}}if(F.min<H){F.min=F.from}F.steps=E-C},getCoordFor:function(C,D,A,B){this.labels.push(C);return this.labels.length-1}})