Ext.define("Ext.chart.axis.layout.Layout",{mixins:{observable:"Ext.mixin.Observable"},config:{axis:null},constructor:function(A){this.mixins.observable.constructor.call(this,A)},processData:function(B){var E=this,C=E.getAxis(),F=C.getDirection(),G=C.boundSeries,A,D;if(B){B["coordinate"+F]()}else{for(A=0,D=G.length;A<D;A++){G[A]["coordinate"+F]()}}},calculateMajorTicks:function(A){var F=this,E=A.attr,D=E.max-E.min,I=D/Math.max(1,E.length)*(E.visibleMax-E.visibleMin),H=E.min+D*E.visibleMin,B=E.min+D*E.visibleMax,G=E.estStepSize*I,C=F.snapEnds(A,E.min,E.max,G);if(C){F.trimByRange(A,C,H,B);A.majorTicks=C}},calculateMinorTicks:function(A){if(this.snapMinorEnds){A.minorTicks=this.snapMinorEnds(A)}},calculateLayout:function(B){var C=this,A=B.attr;if(A.length===0){return null}if(A.majorTicks){C.calculateMajorTicks(B);if(A.minorTicks){C.calculateMinorTicks(B)}}},snapEnds:Ext.emptyFn,trimByRange:function(B,F,I,A){var G=B.segmenter,J=F.unit,H=G.diff(F.from,I,J),D=G.diff(F.from,A,J),C=Math.max(0,Math.ceil(H/F.step)),E=Math.min(F.steps,Math.floor(D/F.step));if(E<F.steps){F.to=G.add(F.from,E*F.step,J)}if(F.max>A){F.max=F.to}if(F.from<I){F.from=G.add(F.from,C*F.step,J);while(F.from<I){C++;F.from=G.add(F.from,F.step,J)}}if(F.min<I){F.min=F.from}F.steps=E-C}})