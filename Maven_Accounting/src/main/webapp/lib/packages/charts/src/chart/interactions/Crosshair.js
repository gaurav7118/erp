Ext.define("Ext.chart.interactions.Crosshair",{extend:"Ext.chart.interactions.Abstract",requires:["Ext.chart.grid.HorizontalGrid","Ext.chart.grid.VerticalGrid","Ext.chart.CartesianChart","Ext.chart.axis.layout.Discrete"],type:"crosshair",alias:"interaction.crosshair",config:{axes:{top:{label:{},rect:{}},right:{label:{},rect:{}},bottom:{label:{},rect:{}},left:{label:{},rect:{}}},lines:{horizontal:{strokeStyle:"black",lineDash:[5,5]},vertical:{strokeStyle:"black",lineDash:[5,5]}},gesture:"drag"},applyAxes:function(B,A){return Ext.merge(A||{},B)},applyLines:function(A,B){return Ext.merge(B||{},A)},updateChart:function(A){if(A&&!A.isCartesian){Ext.raise("Crosshair interaction can only be used on cartesian charts.")}this.callParent(arguments)},getGestures:function(){var A=this,B={};B[A.getGesture()]="onGesture";B[A.getGesture()+"start"]="onGestureStart";B[A.getGesture()+"end"]="onGestureEnd";return B},onGestureStart:function(l){var K=this,m=K.getChart(),X=m.getTheme().getAxis(),W,b=m.getSurface("overlay"),Q=m.getInnerRect(),L=Q[2],k=Q[3],P=m.getEventXY(l),Z=P[0],Y=P[1],a=m.getAxes(),S=K.getAxes(),G=K.getLines(),O,T,B,D,I,V,c,j,g,M,f,U,J,E,N,H,R,A,F,d,C,h;if(Z>0&&Z<L&&Y>0&&Y<k){K.lockEvents(K.getGesture());d=Ext.apply({xclass:"Ext.chart.grid.HorizontalGrid",x:0,y:Y,width:L},G.horizontal);C=Ext.apply({xclass:"Ext.chart.grid.VerticalGrid",x:Z,y:0,height:k},G.vertical);K.axesLabels=K.axesLabels||{};for(h=0;h<a.length;h++){O=a[h];T=O.getSurface();B=T.getRect();U=O.getSprites()[0];D=B[2];I=B[3];V=O.getPosition();c=O.getAlignment();R=O.getTitle();A=R&&R.attr.text!==""&&R.getBBox();J=U.attr;E=U.thickness;N=J.axisLine?J.lineWidth:0;H=N/2;f=Math.max(J.majorTickSize,J.minorTickSize)+N;j=K.axesLabels[V]=T.add({type:"composite"});j.labelRect=j.add(Ext.apply({type:"rect",fillStyle:"white",x:V==="right"?N:0,y:V==="bottom"?N:0,width:D-N-(c==="vertical"&&A?A.width:0),height:I-N-(c==="horizontal"&&A?A.height:0),translationX:V==="left"&&A?A.width:0,translationY:V==="top"&&A?A.height:0},S.rect||S[V].rect));if(c==="vertical"&&!C.strokeStyle){C.strokeStyle=J.strokeStyle}if(c==="horizontal"&&!d.strokeStyle){d.strokeStyle=J.strokeStyle}W=Ext.merge({},X.defaults,X[V]);g=Ext.apply({},O.config.label,W.label);M=S.label||S[V].label;j.labelText=j.add(Ext.apply(g,M,{type:"text",x:(function(){switch(V){case"left":F=A?A.x+A.width:0;return F+(D-F-f)/2-H;case"right":F=A?D-A.x:0;return f+(D-f-F)/2+H;default:return 0}})(),y:(function(){switch(V){case"top":F=A?A.y+A.height:0;return F+(I-F-f)/2-H;case"bottom":F=A?I-A.y:0;return f+(I-f-F)/2+H;default:return 0}})()}))}K.horizontalLine=b.add(d);K.verticalLine=b.add(C);return false}},onGesture:function(c){var h=this;if(h.getLocks()[h.getGesture()]!==h){return }var S=h.getChart(),V=S.getSurface("overlay"),A=Ext.Array.slice(S.getInnerRect()),P=S.getInnerPadding(),R=P.left,O=P.top,a=A[2],E=A[3],D=S.getEventXY(c),I=D[0],H=D[1],Z=S.getAxes(),C,G,K,N,g,U,f,d,Q,B,Y,F,T,L,J,W,b,M,X;if(I<0){I=0}else{if(I>a){I=a}}if(H<0){H=0}else{if(H>E){H=E}}I+=R;H+=O;for(X=0;X<Z.length;X++){C=Z[X];G=C.getPosition();K=C.getAlignment();N=C.getSurface();g=C.getSprites()[0];U=g.attr.matrix;Y=g.attr.textPadding*2;Q=h.axesLabels[G];f=g.getLayoutContext();d=C.getSegmenter();if(Q){if(K==="vertical"){T=U.getYY();J=U.getDY();b=(H-J-O)/T;if(C.getLayout() instanceof Ext.chart.axis.layout.Discrete){H=Math.round(b)*T+J+O;b=d.from(Math.round(b));b=g.attr.data[b]}else{b=d.from(b)}M=d.renderer(b,f);Q.setAttributes({translationY:H-O});Q.labelText.setAttributes({text:M});B=Q.labelText.getBBox();Q.labelRect.setAttributes({height:B.height+Y,y:-(B.height+Y)/2});N.renderFrame()}else{F=U.getXX();L=U.getDX();W=(I-L-R)/F;if(C.getLayout() instanceof Ext.chart.axis.layout.Discrete){I=Math.round(W)*F+L+R;W=d.from(Math.round(W));W=g.attr.data[W]}else{W=d.from(W)}M=d.renderer(W,f);Q.setAttributes({translationX:I-R});Q.labelText.setAttributes({text:M});B=Q.labelText.getBBox();Q.labelRect.setAttributes({width:B.width+Y,x:-(B.width+Y)/2});N.renderFrame()}}}h.horizontalLine.setAttributes({y:H,strokeStyle:g.attr.strokeStyle});h.verticalLine.setAttributes({x:I,strokeStyle:g.attr.strokeStyle});V.renderFrame();return false},onGestureEnd:function(G){var J=this,I=J.getChart(),A=I.getSurface("overlay"),H=I.getAxes(),C,F,D,B,E;A.remove(J.verticalLine);A.remove(J.horizontalLine);for(E=0;E<H.length;E++){C=H[E];F=C.getPosition();D=C.getSurface();B=J.axesLabels[F];if(B){delete J.axesLabels[F];D.remove(B)}D.renderFrame()}A.renderFrame();J.unlockEvents(J.getGesture())}})