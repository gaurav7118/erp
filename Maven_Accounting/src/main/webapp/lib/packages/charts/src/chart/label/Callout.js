Ext.define("Ext.chart.label.Callout",{extend:"Ext.draw.modifier.Modifier",prepareAttributes:function(A){if(!A.hasOwnProperty("calloutOriginal")){A.calloutOriginal=Ext.Object.chain(A);A.calloutOriginal.prototype=A}if(this._previous){this._previous.prepareAttributes(A.calloutOriginal)}},setAttrs:function(E,H){var D=E.callout,I=E.calloutOriginal,L=E.bbox.plain,C=(L.width||0)+E.labelOverflowPadding,M=(L.height||0)+E.labelOverflowPadding,P,O;if("callout" in H){D=H.callout}if("callout" in H||"calloutPlaceX" in H||"calloutPlaceY" in H||"x" in H||"y" in H){var N="rotationRads" in H?I.rotationRads=H.rotationRads:I.rotationRads,G="x" in H?(I.x=H.x):I.x,F="y" in H?(I.y=H.y):I.y,B="calloutPlaceX" in H?H.calloutPlaceX:E.calloutPlaceX,A="calloutPlaceY" in H?H.calloutPlaceY:E.calloutPlaceY,K="calloutVertical" in H?H.calloutVertical:E.calloutVertical,J;N%=Math.PI*2;if(Math.cos(N)<0){N=(N+Math.PI)%(Math.PI*2)}if(N>Math.PI){N-=Math.PI*2}if(K){N=N*(1-D)-Math.PI/2*D;J=C;C=M;M=J}else{N=N*(1-D)}H.rotationRads=N;H.x=G*(1-D)+B*D;H.y=F*(1-D)+A*D;P=B-G;O=A-F;if(Math.abs(O*C)>Math.abs(P*M)){if(O>0){H.calloutEndX=H.x-(M/2)*(P/O)*D;H.calloutEndY=H.y-(M/2)*D}else{H.calloutEndX=H.x+(M/2)*(P/O)*D;H.calloutEndY=H.y+(M/2)*D}}else{if(P>0){H.calloutEndX=H.x-C/2;H.calloutEndY=H.y-(C/2)*(O/P)*D}else{H.calloutEndX=H.x+C/2;H.calloutEndY=H.y+(C/2)*(O/P)*D}}if(H.calloutStartX&&H.calloutStartY){H.calloutHasLine=(P>0&&H.calloutStartX<H.calloutEndX)||(P<=0&&H.calloutStartX>H.calloutEndX)||(O>0&&H.calloutStartY<H.calloutEndY)||(O<=0&&H.calloutStartY>H.calloutEndY)}else{H.calloutHasLine=true}}return H},pushDown:function(A,B){B=this.callParent([A.calloutOriginal,B]);return this.setAttrs(A,B)},popUp:function(A,B){A=A.prototype;B=this.setAttrs(A,B);if(this._next){return this._next.popUp(A,B)}else{return Ext.apply(A,B)}}})