Ext.define("Ext.chart.series.Radar",{extend:"Ext.chart.series.Polar",type:"radar",seriesType:"radar",alias:"series.radar",requires:["Ext.chart.series.sprite.Radar"],themeColorCount:function(){return 1},isStoreDependantColorCount:false,themeMarkerCount:function(){return 1},updateAngularAxis:function(A){A.processData(this)},updateRadialAxis:function(A){A.processData(this)},coordinateX:function(){return this.coordinate("X",0,2)},coordinateY:function(){return this.coordinate("Y",1,2)},updateCenter:function(A){this.setStyle({translationX:A[0]+this.getOffsetX(),translationY:A[1]+this.getOffsetY()});this.doUpdateStyles()},updateRadius:function(A){this.setStyle({endRho:A});this.doUpdateStyles()},updateRotation:function(A){this.setStyle({rotationRads:A});this.doUpdateStyles()},updateTotalAngle:function(A){this.processData()},getItemForPoint:function(J,I){var H=this,L=H.sprites&&H.sprites[0],F=L.attr,G=F.dataX,A=G.length,K=H.getStore(),E=H.getMarker(),B,N,O,D,M,C;if(H.getHidden()){return null}if(L&&E){C=L.getMarker("markers");for(D=0;D<A;D++){M=C.getBBoxFor(D);B=(M.width+M.height)*0.25;O=L.getDataPointXY(D);if(Math.abs(O[0]-J)<B&&Math.abs(O[1]-I)<B){N={series:H,sprite:L,index:D,category:"markers",record:K.getData().items[D],field:H.getYField()};return N}}}return H.callParent(arguments)},getDefaultSpriteConfig:function(){var A=this.callParent(),B={customDurations:{translationX:0,translationY:0,rotationRads:0,dataMinX:0,dataMaxX:0}};if(A.fx){Ext.apply(A.fx,B)}else{A.fx=B}return A},getSprites:function(){var D=this,C=D.getChart(),E=D.getAnimation()||C&&C.getAnimation(),B=D.sprites[0],A;if(!C){return[]}if(!B){B=D.createSprite()}if(E){A=B.getMarker("markers");if(A){A.getTemplate().setAnimation(E)}B.setAnimation(E)}return D.sprites},provideLegendInfo:function(D){var B=this,A=B.getSubStyleWithTheme(),C=A.fillStyle;if(Ext.isArray(C)){C=C[0]}D.push({name:B.getTitle()||B.getYField()||B.getId(),mark:(Ext.isObject(C)?C.stops&&C.stops[0].color:C)||A.strokeStyle||"black",disabled:B.getHidden(),series:B.getId(),index:0})}})