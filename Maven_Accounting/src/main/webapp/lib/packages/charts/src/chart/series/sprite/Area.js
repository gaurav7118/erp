Ext.define("Ext.chart.series.sprite.Area",{alias:"sprite.areaSeries",extend:"Ext.chart.series.sprite.StackedCartesian",inheritableStatics:{def:{processors:{step:"bool"},defaults:{step:false}}},renderClipped:function(P,R,X){var Y=this,O=Y.attr,K=O.dataX,I=O.dataY,Z=O.dataStartY,S=O.matrix,H,G,U,F,D,W,V,E=S.elements[0],L=S.elements[4],N=S.elements[3],J=S.elements[5],C=Y.surfaceMatrix,M={},Q=Math.min(X[0],X[2]),T=Math.max(X[0],X[2]),B=Math.max(0,this.binarySearch(Q)),A=Math.min(K.length-1,this.binarySearch(T)+1);R.beginPath();W=K[B]*E+L;V=I[B]*N+J;R.moveTo(W,V);if(O.step){D=V;for(U=B;U<=A;U++){H=K[U]*E+L;G=I[U]*N+J;R.lineTo(H,D);R.lineTo(H,D=G)}}else{for(U=B;U<=A;U++){H=K[U]*E+L;G=I[U]*N+J;R.lineTo(H,G)}}if(Z){if(O.step){F=K[A]*E+L;for(U=A;U>=B;U--){H=K[U]*E+L;G=Z[U]*N+J;R.lineTo(F,G);R.lineTo(F=H,G)}}else{for(U=A;U>=B;U--){H=K[U]*E+L;G=Z[U]*N+J;R.lineTo(H,G)}}}else{R.lineTo(K[A]*E+L,G);R.lineTo(K[A]*E+L,J);R.lineTo(W,J);R.lineTo(W,I[U]*N+J)}if(O.transformFillStroke){O.matrix.toContext(R)}R.fill();if(O.transformFillStroke){O.inverseMatrix.toContext(R)}R.beginPath();R.moveTo(W,V);if(O.step){for(U=B;U<=A;U++){H=K[U]*E+L;G=I[U]*N+J;R.lineTo(H,D);R.lineTo(H,D=G);M.translationX=C.x(H,G);M.translationY=C.y(H,G);Y.putMarker("markers",M,U,!O.renderer)}}else{for(U=B;U<=A;U++){H=K[U]*E+L;G=I[U]*N+J;R.lineTo(H,G);M.translationX=C.x(H,G);M.translationY=C.y(H,G);Y.putMarker("markers",M,U,!O.renderer)}}if(O.transformFillStroke){O.matrix.toContext(R)}R.stroke()}})