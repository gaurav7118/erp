Ext.define("Ext.chart.series.sprite.Bar3D",{extend:"Ext.chart.series.sprite.Bar",alias:"sprite.bar3dSeries",requires:["Ext.draw.gradient.Linear"],inheritableStatics:{def:{processors:{depthWidthRatio:"number",saturationFactor:"number",brightnessFactor:"number",colorSpread:"number"},defaults:{depthWidthRatio:1/3,saturationFactor:1,brightnessFactor:1,colorSpread:1,transformFillStroke:true},triggers:{groupCount:"panzoom"},updaters:{panzoom:function(C){var G=this,E=C.visibleMaxX-C.visibleMinX,D=C.visibleMaxY-C.visibleMinY,B=C.flipXY?C.innerHeight:C.innerWidth,H=!C.flipXY?C.innerHeight:C.innerWidth,A=G.getSurface(),F=A?A.getInherited().rtl:false;if(F&&!C.flipXY){C.translationX=B+C.visibleMinX*B/E}else{C.translationX=-C.visibleMinX*B/E}C.translationY=-C.visibleMinY*(H-G.depth)/D;C.scalingX=(F&&!C.flipXY?-1:1)*B/E;C.scalingY=(H-G.depth)/D;C.scalingCenterX=0;C.scalingCenterY=0;G.applyTransformations(true)}}}},config:{showStroke:false},depth:0,drawBar:function(P,B,D,C,L,O,A,H){var K=this,I=K.attr,N={},J=I.renderer,M,G,F,E;N.x=(C+O)*0.5;N.y=L;N.width=(O-C)*0.75;N.height=A-L;N.depth=G=N.width*I.depthWidthRatio;N.orientation=I.flipXY?"horizontal":"vertical";N.saturationFactor=I.saturationFactor;N.brightnessFactor=I.brightnessFactor;N.colorSpread=I.colorSpread;if(G!==K.depth){K.depth=G;F=K.getSeries();F.fireEvent("depthchange",F,G)}if(J){E=[K,N,{store:K.getStore()},H];M=Ext.callback(J,null,E,0,K.getSeries());Ext.apply(N,M)}K.putMarker("items",N,H,!J)}})