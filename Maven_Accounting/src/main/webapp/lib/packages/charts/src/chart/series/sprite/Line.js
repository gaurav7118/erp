Ext.define("Ext.chart.series.sprite.Line",{alias:"sprite.lineSeries",extend:"Ext.chart.series.sprite.Aggregative",inheritableStatics:{def:{processors:{smooth:"bool",fillArea:"bool",step:"bool",preciseStroke:"bool",xAxis:"default",yCap:"default"},defaults:{smooth:false,fillArea:false,step:false,preciseStroke:true,xAxis:null,yCap:Math.pow(2,20),yJump:50},triggers:{dataX:"dataX,bbox,smooth",dataY:"dataY,bbox,smooth",smooth:"smooth"},updaters:{smooth:function(A){var C=A.dataX,B=A.dataY;if(A.smooth&&C&&B&&C.length>2&&B.length>2){this.smoothX=Ext.draw.Draw.spline(C);this.smoothY=Ext.draw.Draw.spline(B)}else{delete this.smoothX;delete this.smoothY}}}}},list:null,updatePlainBBox:function(D){var B=this.attr,C=Math.min(0,B.dataMinY),A=Math.max(0,B.dataMaxY);D.x=B.dataMinX;D.y=C;D.width=B.dataMaxX-B.dataMinX;D.height=A-C},drawStrip:function(A,C){A.moveTo(C[0],C[1]);for(var B=2,D=C.length;B<D;B+=2){A.lineTo(C[B],C[B+1])}},drawStraightStroke:function(O,P,E,D,T,H){var V=this,N=V.attr,M=N.renderer,G=N.step,A=true,K={type:"line",smooth:false,step:G},L=[],K,W,U,F,J,I,S,C,R,B,Q;for(Q=3;Q<T.length;Q+=3){S=T[Q-3];C=T[Q-2];J=T[Q];I=T[Q+1];R=T[Q+3];B=T[Q+4];if(M){K.x=J;K.y=I;K.x0=S;K.y0=C;U=[V,K,V.rendererData,E+Q/3];W=Ext.callback(M,null,U,0,V.getSeries())}if(Ext.isNumber(J+I+S+C)){if(A){P.beginPath();P.moveTo(S,C);L.push(S,C);F=S;A=false}}else{continue}if(G){P.lineTo(J,C);L.push(J,C)}P.lineTo(J,I);L.push(J,I);if(W||!(Ext.isNumber(R+B))){P.save();Ext.apply(P,W);if(N.fillArea){P.lineTo(J,H);P.lineTo(F,H);P.closePath();P.fill()}P.beginPath();V.drawStrip(P,L);L=[];P.stroke();P.restore();P.beginPath();A=true}}},calculateScale:function(C,A){var B=0,D=C;while(D<A&&C>0){B++;D+=C>>B}return Math.pow(2,B>0?B-1:B)},drawSmoothStroke:function(S,T,C,B,Y,F){var c=this,R=c.attr,D=R.step,V=R.matrix,Q=R.renderer,E=V.getXX(),N=V.getYY(),K=V.getDX(),I=V.getDY(),P=c.smoothX,O=c.smoothY,e=c.calculateScale(R.dataX.length,B),M,b,L,a,H,G,X,A,W,U,d,Z,J={type:"line",smooth:true,step:D};T.beginPath();T.moveTo(P[C*3]*E+K,O[C*3]*N+I);for(W=0,U=C*3+1;W<Y.length-3;W+=3,U+=3*e){M=P[U]*E+K;b=O[U]*N+I;L=P[U+1]*E+K;a=O[U+1]*N+I;H=S.roundPixel(Y[W+3]);G=Y[W+4];X=S.roundPixel(Y[W]);A=Y[W+1];if(Q){J.x0=X;J.y0=A;J.cx1=M;J.cy1=b;J.cx2=L;J.cy2=a;J.x=H;J.y=G;Z=[c,J,c.rendererData,C+W/3+1];d=Ext.callback(Q,null,Z,0,c.getSeries());T.save();Ext.apply(T,d)}if(R.fillArea){T.moveTo(X,A);T.bezierCurveTo(M,b,L,a,H,G);T.lineTo(H,F);T.lineTo(X,F);T.lineTo(X,A);T.closePath();T.fill();T.beginPath()}T.moveTo(X,A);T.bezierCurveTo(M,b,L,a,H,G);T.stroke();T.moveTo(X,A);T.closePath();if(Q){T.restore()}T.beginPath();T.moveTo(H,G)}T.beginPath()},drawLabel:function(K,I,H,O,A){var Q=this,N=Q.attr,E=Q.getMarker("labels"),D=E.getTemplate(),M=Q.labelCfg||(Q.labelCfg={}),C=Q.surfaceMatrix,G,F,J=N.labelOverflowPadding,L,B,R,P,S;M.x=C.x(I,H);M.y=C.y(I,H);if(N.flipXY){M.rotationRads=Math.PI*0.5}else{M.rotationRads=0}M.text=K;if(D.attr.renderer){P=[K,E,M,Q.rendererData,O];R=Ext.callback(D.attr.renderer,null,P,0,Q.getSeries());if(typeof R==="string"){M.text=R}else{if(typeof R==="object"){if("text" in R){M.text=R.text}S=true}}}B=Q.getMarkerBBox("labels",O,true);if(!B){Q.putMarker("labels",M,O);B=Q.getMarkerBBox("labels",O,true)}L=B.height/2;G=I;switch(D.attr.display){case"under":F=H-L-J;break;case"rotate":G+=J;F=H-J;M.rotationRads=-Math.PI/4;break;default:F=H+L+J}M.x=C.x(G,F);M.y=C.y(G,F);if(S){Ext.apply(M,R)}Q.putMarker("labels",M,O)},drawMarker:function(J,H,D){var G=this,E=G.attr,F=E.renderer,C=G.surfaceMatrix,B={},I,A;if(F&&G.getMarker("markers")){B.type="marker";B.x=J;B.y=H;A=[G,B,G.rendererData,D];I=Ext.callback(F,null,A,0,G.getSeries());if(I){Ext.apply(B,I)}}B.translationX=C.x(J,H);B.translationY=C.y(J,H);delete B.x;delete B.y;G.putMarker("markers",B,D,!F)},drawStroke:function(A,C,H,B,F,E){var D=this,G=D.attr.smooth&&D.smoothX&&D.smoothY;if(G){D.drawSmoothStroke(A,C,H,B,F,E)}else{D.drawStraightStroke(A,C,H,B,F,E)}},renderAggregates:function(Y,V,K,l,N,f,a){var L=this,J=L.attr,R=J.dataX,Q=J.dataY,H=J.labels,U=J.xAxis,A=J.yCap,G=J.smooth&&L.smoothX&&L.smoothY,D=H&&L.getMarker("labels"),S=L.getMarker("markers"),b=J.matrix,T=l.devicePixelRatio,Z=b.getXX(),F=b.getYY(),C=b.getDX(),B=b.getDY(),P=L.list||(L.list=[]),c=Y.minX,E=Y.maxX,I=Y.minY,n=Y.maxY,s=Y.startIdx,q=true,o,r,j,h,p,d;L.rendererData={store:L.getStore()};P.length=0;for(p=V;p<K;p++){var m=c[p],O=E[p],k=I[p],M=n[p];if(m<O){P.push(m*Z+C,k*F+B,s[p]);P.push(O*Z+C,M*F+B,s[p])}else{if(m>O){P.push(O*Z+C,M*F+B,s[p]);P.push(m*Z+C,k*F+B,s[p])}else{P.push(O*Z+C,M*F+B,s[p])}}}if(P.length){for(p=0;p<P.length;p+=3){j=P[p];h=P[p+1];if(Ext.isNumber(j+h)){if(h>A){h=A}else{if(h<-A){h=-A}}P[p+1]=h}else{q=false;continue}d=P[p+2];if(S){L.drawMarker(j,h,d)}if(D&&H[d]){L.drawLabel(H[d],j,h,d,a)}}L.isContinuousLine=q;if(G&&!q){Ext.raise("Line smoothing in only supported for gapless data, where all data points are finite numbers.")}if(U){r=U.getAlignment()==="vertical";if(Ext.isNumber(U.floatingAtCoord)){o=(r?a[2]:a[3])-U.floatingAtCoord}else{o=r?a[0]:a[1]}}else{o=J.flipXY?a[0]:a[1]}if(J.preciseStroke){if(J.fillArea){N.fill()}if(J.transformFillStroke){J.inverseMatrix.toContext(N)}L.drawStroke(l,N,V,K,P,o);if(J.transformFillStroke){J.matrix.toContext(N)}N.stroke()}else{L.drawStroke(l,N,V,K,P,o);if(q&&G&&J.fillArea&&!J.renderer){var X=R[R.length-1]*Z+C+T,W=Q[Q.length-1]*F+B,g=R[0]*Z+C-T,e=Q[0]*F+B;N.lineTo(X,W);N.lineTo(X,o-J.lineWidth);N.lineTo(g,o-J.lineWidth);N.lineTo(g,e)}if(J.transformFillStroke){J.matrix.toContext(N)}if(J.fillArea){N.fillStroke(J,true)}else{N.stroke(true)}}}}})