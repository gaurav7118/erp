Ext.define("Ext.draw.Container",{extend:"Ext.draw.ContainerBase",alternateClassName:"Ext.draw.Component",xtype:"draw",defaultType:"surface",isDrawContainer:true,requires:["Ext.draw.Surface","Ext.draw.engine.Svg","Ext.draw.engine.Canvas","Ext.draw.gradient.GradientDefinition"],engine:"Ext.draw.engine.Canvas",config:{cls:Ext.baseCSSPrefix+"draw-container",resizeHandler:null,sprites:null,gradients:[]},defaultDownloadServerUrl:"http://svg.sencha.io",supportedFormats:["png","pdf","jpeg","gif"],supportedOptions:{version:Ext.isNumber,data:Ext.isString,format:function(A){return Ext.Array.indexOf(this.supportedFormats,A)>=0},filename:Ext.isString,width:Ext.isNumber,height:Ext.isNumber,scale:Ext.isNumber,pdf:Ext.isObject,jpeg:Ext.isObject},initAnimator:function(){this.frameCallbackId=Ext.draw.Animator.addFrameCallback("renderFrame",this)},applyGradients:function(B){var A=[],C,F,D,E;if(!Ext.isArray(B)){return A}for(C=0,F=B.length;C<F;C++){D=B[C];if(!Ext.isObject(D)){continue}if(typeof D.type!=="string"){D.type="linear"}if(D.angle){D.degrees=D.angle;delete D.angle}if(Ext.isObject(D.stops)){D.stops=(function(I){var G=[],H;for(E in I){H=I[E];H.offset=E/100;G.push(H)}return G})(D.stops)}A.push(D)}Ext.draw.gradient.GradientDefinition.add(A);return A},applySprites:function(F){if(!F){return }F=Ext.Array.from(F);var E=F.length,B=[],D,A,C;for(D=0;D<E;D++){C=F[D];A=C.surface;if(!(A&&A.isSurface)){if(Ext.isString(A)){A=this.getSurface(A)}else{A=this.getSurface("main")}}C=A.add(C);B.push(C)}return B},onBodyResize:function(){var B=this.element,A;if(!B){return }A=B.getSize();if(A.width&&A.height){this.setBodySize(A)}},setBodySize:function(C){var D=this,B=D.getResizeHandler()||D.defaultResizeHandler,A;D.fireEvent("bodyresize",D,C);A=B.call(D,C);if(A!==false){D.renderFrame()}},defaultResizeHandler:function(A){this.getItems().each(function(B){B.setRect([0,0,A.width,A.height])})},getSurface:function(D){D=this.getId()+"-"+(D||"main");var C=this,B=C.getItems(),A=B.get(D);if(!A){A=C.add({xclass:C.engine,id:D});C.onBodyResize()}return A},renderFrame:function(){var E=this,A=E.getItems(),B,D,C;for(B=0,D=A.length;B<D;B++){C=A.items[B];if(C.isSurface){C.renderFrame()}}},getImage:function(I){var J=this.innerElement.getSize(),A=Array.prototype.slice.call(this.items.items),D,G,C=this.surfaceZIndexes,F,E,B,H;for(E=1;E<A.length;E++){B=A[E];H=C[B.type];F=E-1;while(F>=0&&C[A[F].type]>H){A[F+1]=A[F];F--}A[F+1]=B}D=A[0].flatten(J,A);if(I==="image"){G=new Image();G.src=D.data;D.data=G;return D}if(I==="stream"){D.data=D.data.replace(/^data:image\/[^;]+/,"data:application/octet-stream");return D}return D},download:function(D){var E=this,A=[],B,C,F;D=Ext.apply({version:2,data:E.getImage().data},D);for(C in D){if(D.hasOwnProperty(C)){F=D[C];if(C in E.supportedOptions){if(E.supportedOptions[C].call(E,F)){A.push({tag:"input",type:"hidden",name:C,value:Ext.String.htmlEncode(Ext.isObject(F)?Ext.JSON.encode(F):F)})}else{Ext.log.error('Invalid value for image download option "'+C+'": '+F)}}else{Ext.log.error('Invalid image download option: "'+C+'"')}}}B=Ext.dom.Helper.markup({tag:"html",children:[{tag:"head"},{tag:"body",children:[{tag:"form",method:"POST",action:D.url||E.defaultDownloadServerUrl,children:A},{tag:"script",type:"text/javascript",children:'document.getElementsByTagName("form")[0].submit();'}]}]});window.open("","ImageDownload_"+Date.now()).document.write(B)},destroy:function(){var A=this.frameCallbackId;if(A){Ext.draw.Animator.removeFrameCallback(A)}this.callParent()}},function(){if(location.search.match("svg")){Ext.draw.Container.prototype.engine="Ext.draw.engine.Svg"}else{if((Ext.os.is.BlackBerry&&Ext.os.version.getMajor()===10)||(Ext.browser.is.AndroidStock4&&(Ext.os.version.getMinor()===1||Ext.os.version.getMinor()===2||Ext.os.version.getMinor()===3))){Ext.draw.Container.prototype.engine="Ext.draw.engine.Svg"}}})