Ext.define("Ext.draw.Matrix",{isMatrix:true,statics:{createAffineMatrixFromTwoPair:function(D,O,C,N,G,K,E,F){var Q=C-D,P=N-O,B=E-G,M=F-K,A=1/(Q*Q+P*P),L=Q*B+P*M,J=B*P-Q*M,I=-L*D-J*O,H=J*D-L*O;return new this(L*A,-J*A,J*A,L*A,I*A+G,H*A+K)},createPanZoomFromTwoPair:function(Q,E,P,C,H,R,N,G){if(arguments.length===2){return this.createPanZoomFromTwoPair.apply(this,Q.concat(E))}var K=P-Q,J=C-E,D=(Q+P)*0.5,B=(E+C)*0.5,O=N-H,A=G-R,F=(H+N)*0.5,L=(R+G)*0.5,M=K*K+J*J,I=O*O+A*A,S=Math.sqrt(I/M);return new this(S,0,0,S,F-S*D,L-S*B)},fly:(function(){var A=null,B=function(C){A.elements=C;return A};return function(C){if(!A){A=new Ext.draw.Matrix()}A.elements=C;Ext.draw.Matrix.fly=B;return A}})(),create:function(A){if(A instanceof this){return A}return new this(A)}},constructor:function(E,D,A,F,C,B){if(E&&E.length===6){this.elements=E.slice()}else{if(E!==undefined){this.elements=[E,D,A,F,C,B]}else{this.elements=[1,0,0,1,0,0]}}},prepend:function(A,L,H,G,M,K){var B=this.elements,D=B[0],J=B[1],E=B[2],C=B[3],I=B[4],F=B[5];B[0]=A*D+H*J;B[1]=L*D+G*J;B[2]=A*E+H*C;B[3]=L*E+G*C;B[4]=A*I+H*F+M;B[5]=L*I+G*F+K;return this},prependMatrix:function(A){return this.prepend.apply(this,A.elements)},append:function(A,L,H,G,M,K){var B=this.elements,D=B[0],J=B[1],E=B[2],C=B[3],I=B[4],F=B[5];B[0]=A*D+L*E;B[1]=A*J+L*C;B[2]=H*D+G*E;B[3]=H*J+G*C;B[4]=M*D+K*E+I;B[5]=M*J+K*C+F;return this},appendMatrix:function(A){return this.append.apply(this,A.elements)},set:function(F,E,A,G,C,B){var D=this.elements;D[0]=F;D[1]=E;D[2]=A;D[3]=G;D[4]=C;D[5]=B;return this},inverse:function(C){var A=this.elements,I=A[0],G=A[1],F=A[2],E=A[3],D=A[4],B=A[5],H=1/(I*E-G*F);I*=H;G*=H;F*=H;E*=H;if(C){C.set(E,-G,-F,I,F*B-E*D,G*D-I*B);return C}else{return new Ext.draw.Matrix(E,-G,-F,I,F*B-E*D,G*D-I*B)}},translate:function(A,C,B){if(B){return this.prepend(1,0,0,1,A,C)}else{return this.append(1,0,0,1,A,C)}},scale:function(F,E,C,A,B){var D=this;if(E==null){E=F}if(C===undefined){C=0}if(A===undefined){A=0}if(B){return D.prepend(F,0,0,E,C-C*F,A-A*E)}else{return D.append(F,0,0,E,C-C*F,A-A*E)}},rotate:function(G,E,C,B){var D=this,F=Math.cos(G),A=Math.sin(G);E=E||0;C=C||0;if(B){return D.prepend(F,A,-A,F,E-F*E+C*A,C-F*C-E*A)}else{return D.append(F,A,-A,F,E-F*E+C*A,C-F*C-E*A)}},rotateFromVector:function(A,G,C){var D=this,F=Math.sqrt(A*A+G*G),E=A/F,B=G/F;if(C){return D.prepend(E,B,-B,E,0,0)}else{return D.append(E,B,-B,E,0,0)}},clone:function(){return new Ext.draw.Matrix(this.elements)},flipX:function(){return this.append(-1,0,0,1,0,0)},flipY:function(){return this.append(1,0,0,-1,0,0)},skewX:function(A){return this.append(1,0,Math.tan(A),1,0,0)},skewY:function(A){return this.append(1,Math.tan(A),0,1,0,0)},shearX:function(A){return this.append(1,0,A,1,0,0)},shearY:function(A){return this.append(1,A,0,1,0,0)},reset:function(){return this.set(1,0,0,1,0,0)},precisionCompensate:function(J,G){var C=this.elements,F=C[0],E=C[1],I=C[2],H=C[3],D=C[4],B=C[5],A=E*I-F*H;G.b=J*E/F;G.c=J*I/H;G.d=J;G.xx=F/J;G.yy=H/J;G.dx=(B*F*I-D*F*H)/A/J;G.dy=(D*E*H-B*F*H)/A/J},precisionCompensateRect:function(J,G){var B=this.elements,F=B[0],E=B[1],I=B[2],H=B[3],C=B[4],A=B[5],D=I/F;G.b=J*E/F;G.c=J*D;G.d=J*H/F;G.xx=F/J;G.yy=F/J;G.dx=(A*I-C*H)/(E*D-H)/J;G.dy=-(A*F-C*E)/(E*D-H)/J},x:function(A,C){var B=this.elements;return A*B[0]+C*B[2]+B[4]},y:function(A,C){var B=this.elements;return A*B[1]+C*B[3]+B[5]},get:function(B,A){return +this.elements[B+A*2].toFixed(4)},transformPoint:function(B){var C=this.elements,A,D;if(B.isPoint){A=B.x;D=B.y}else{A=B[0];D=B[1]}return[A*C[0]+D*C[2]+C[4],A*C[1]+D*C[3]+C[5]]},transformBBox:function(O,H,I){var B=this.elements,D=O.x,P=O.y,G=O.width*0.5,M=O.height*0.5,A=B[0],Q=B[1],L=B[2],J=B[3],E=D+G,C=P+M,N,F,K;if(H){G-=H;M-=H;K=[Math.sqrt(B[0]*B[0]+B[2]*B[2]),Math.sqrt(B[1]*B[1]+B[3]*B[3])];N=Math.abs(G*A)+Math.abs(M*L)+Math.abs(K[0]*H);F=Math.abs(G*Q)+Math.abs(M*J)+Math.abs(K[1]*H)}else{N=Math.abs(G*A)+Math.abs(M*L);F=Math.abs(G*Q)+Math.abs(M*J)}if(!I){I={}}I.x=E*A+C*L+B[4]-N;I.y=E*Q+C*J+B[5]-F;I.width=N+N;I.height=F+F;return I},transformList:function(E){var B=this.elements,A=B[0],H=B[2],K=B[4],J=B[1],G=B[3],I=B[5],F=E.length,C,D;for(D=0;D<F;D++){C=E[D];E[D]=[C[0]*A+C[1]*H+K,C[0]*J+C[1]*G+I]}return E},isIdentity:function(){var A=this.elements;return A[0]===1&&A[1]===0&&A[2]===0&&A[3]===1&&A[4]===0&&A[5]===0},isEqual:function(A){var C=A&&A.isMatrix?A.elements:A,B=this.elements;return B[0]===C[0]&&B[1]===C[1]&&B[2]===C[2]&&B[3]===C[3]&&B[4]===C[4]&&B[5]===C[5]},equals:function(A){return this.isEqual(A)},toArray:function(){var A=this.elements;return[A[0],A[2],A[4],A[1],A[3],A[5]]},toVerticalArray:function(){return this.elements.slice()},toString:function(){var A=this;return[A.get(0,0),A.get(0,1),A.get(1,0),A.get(1,1),A.get(2,0),A.get(2,1)].join(",")},toContext:function(A){A.transform.apply(A,this.elements);return this},toSvg:function(){var A=this.elements;return"matrix("+A[0].toFixed(9)+","+A[1].toFixed(9)+","+A[2].toFixed(9)+","+A[3].toFixed(9)+","+A[4].toFixed(9)+","+A[5].toFixed(9)+")"},getScaleX:function(){var A=this.elements;return Math.sqrt(A[0]*A[0]+A[2]*A[2])},getScaleY:function(){var A=this.elements;return Math.sqrt(A[1]*A[1]+A[3]*A[3])},getXX:function(){return this.elements[0]},getXY:function(){return this.elements[1]},getYX:function(){return this.elements[2]},getYY:function(){return this.elements[3]},getDX:function(){return this.elements[4]},getDY:function(){return this.elements[5]},split:function(){var B=this.elements,D=B[0],C=B[1],E=B[3],A={translateX:B[4],translateY:B[5]};A.rotate=A.rotation=Math.atan2(C,D);A.scaleX=D/Math.cos(A.rotate);A.scaleY=E/D*A.scaleX;return A}},function(){function B(E,C,D){E[C]={get:function(){return this.elements[D]},set:function(F){this.elements[D]=F}}}if(Object.defineProperties){var A={};B(A,"a",0);B(A,"b",1);B(A,"c",2);B(A,"d",3);B(A,"e",4);B(A,"f",5);Object.defineProperties(this.prototype,A)}this.prototype.multiply=this.prototype.appendMatrix})