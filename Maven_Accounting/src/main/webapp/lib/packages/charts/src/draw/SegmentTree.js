Ext.define("Ext.draw.SegmentTree",{config:{strategy:"double"},time:function(L,K,M,C,d,D,E){var F=0,N,Z,R=new Date(M[L.startIdx[0]]),W=new Date(M[L.endIdx[K-1]]),c=Ext.Date,T=[[c.MILLI,1,"ms1",null],[c.MILLI,2,"ms2","ms1"],[c.MILLI,5,"ms5","ms1"],[c.MILLI,10,"ms10","ms5"],[c.MILLI,50,"ms50","ms10"],[c.MILLI,100,"ms100","ms50"],[c.MILLI,500,"ms500","ms100"],[c.SECOND,1,"s1","ms500"],[c.SECOND,10,"s10","s1"],[c.SECOND,30,"s30","s10"],[c.MINUTE,1,"mi1","s10"],[c.MINUTE,5,"mi5","mi1"],[c.MINUTE,10,"mi10","mi5"],[c.MINUTE,30,"mi30","mi10"],[c.HOUR,1,"h1","mi30"],[c.HOUR,6,"h6","h1"],[c.HOUR,12,"h12","h6"],[c.DAY,1,"d1","h12"],[c.DAY,7,"d7","d1"],[c.MONTH,1,"mo1","d1"],[c.MONTH,3,"mo3","mo1"],[c.MONTH,6,"mo6","mo3"],[c.YEAR,1,"y1","mo3"],[c.YEAR,5,"y5","y1"],[c.YEAR,10,"y10","y5"],[c.YEAR,100,"y100","y10"]],Y,B,J=F,e=K,I=false,Q=L.startIdx,H=L.endIdx,V=L.minIdx,b=L.maxIdx,A=L.open,X=L.close,G=L.minX,P=L.minY,O=L.maxX,a=L.maxY,U,S;for(Y=0;K>F+1&&Y<T.length;Y++){R=new Date(M[Q[0]]);B=T[Y];R=c.align(R,B[0],B[1]);if(c.diff(R,W,B[0])>M.length*2*B[1]){continue}if(B[3]&&L.map["time_"+B[3]]){N=L.map["time_"+B[3]][0];Z=L.map["time_"+B[3]][1]}else{N=J;Z=e}F=K;S=R;I=true;Q[K]=Q[N];H[K]=H[N];V[K]=V[N];b[K]=b[N];A[K]=A[N];X[K]=X[N];G[K]=G[N];P[K]=P[N];O[K]=O[N];a[K]=a[N];S=Ext.Date.add(S,B[0],B[1]);for(U=N+1;U<Z;U++){if(M[H[U]]<+S){H[K]=H[U];X[K]=X[U];if(a[U]>a[K]){a[K]=a[U];O[K]=O[U];b[K]=b[U]}if(P[U]<P[K]){P[K]=P[U];G[K]=G[U];V[K]=V[U]}}else{K++;Q[K]=Q[U];H[K]=H[U];V[K]=V[U];b[K]=b[U];A[K]=A[U];X[K]=X[U];G[K]=G[U];P[K]=P[U];O[K]=O[U];a[K]=a[U];S=Ext.Date.add(S,B[0],B[1])}}if(K>F){L.map["time_"+B[2]]=[F,K]}}},"double":function(H,T,I,A,S,B,C){var E=0,J,F=1,M,D,U,G,R,K,L,Q,P,O,N;while(T>E+1){J=E;E=T;F+=F;for(M=J;M<E;M+=2){if(M===E-1){D=H.startIdx[M];U=H.endIdx[M];G=H.minIdx[M];R=H.maxIdx[M];K=H.open[M];L=H.close[M];Q=H.minX[M];P=H.minY[M];O=H.maxX[M];N=H.maxY[M]}else{D=H.startIdx[M];U=H.endIdx[M+1];K=H.open[M];L=H.close[M];if(H.minY[M]<=H.minY[M+1]){G=H.minIdx[M];Q=H.minX[M];P=H.minY[M]}else{G=H.minIdx[M+1];Q=H.minX[M+1];P=H.minY[M+1]}if(H.maxY[M]>=H.maxY[M+1]){R=H.maxIdx[M];O=H.maxX[M];N=H.maxY[M]}else{R=H.maxIdx[M+1];O=H.maxX[M+1];N=H.maxY[M+1]}}H.startIdx[T]=D;H.endIdx[T]=U;H.minIdx[T]=G;H.maxIdx[T]=R;H.open[T]=K;H.close[T]=L;H.minX[T]=Q;H.minY[T]=P;H.maxX[T]=O;H.maxY[T]=N;T++}H.map["double_"+F]=[E,T]}},none:Ext.emptyFn,aggregateData:function(H,A,Q,C,D){var B=H.length,E=[],R=[],F=[],P=[],I=[],O=[],M=[],N=[],L=[],J=[],G={startIdx:E,endIdx:R,minIdx:F,maxIdx:P,open:I,minX:O,minY:M,maxX:N,maxY:L,close:J},K;for(K=0;K<B;K++){E[K]=K;R[K]=K;F[K]=K;P[K]=K;I[K]=A[K];O[K]=H[K];M[K]=C[K];N[K]=H[K];L[K]=Q[K];J[K]=D[K]}G.map={original:[0,B]};if(B){this[this.getStrategy()](G,B,H,A,Q,C,D)}return G},binarySearchMin:function(C,G,A,E){var B=this.dataX;if(E<=B[C.startIdx[0]]){return G}if(E>=B[C.startIdx[A-1]]){return A-1}while(G+1<A){var D=(G+A)>>1,F=B[C.startIdx[D]];if(F===E){return D}else{if(F<E){G=D}else{A=D}}}return G},binarySearchMax:function(C,G,A,E){var B=this.dataX;if(E<=B[C.endIdx[0]]){return G}if(E>=B[C.endIdx[A-1]]){return A-1}while(G+1<A){var D=(G+A)>>1,F=B[C.endIdx[D]];if(F===E){return D}else{if(F<E){G=D}else{A=D}}}return A},constructor:function(A){this.initConfig(A)},setData:function(D,A,B,C,E){if(!B){E=C=B=A}this.dataX=D;this.dataOpen=A;this.dataHigh=B;this.dataLow=C;this.dataClose=E;if(D.length===B.length&&D.length===C.length){this.cache=this.aggregateData(D,A,B,C,E)}},getAggregation:function(D,K,I){if(!this.cache){return null}var C=Infinity,G=this.dataX[this.dataX.length-1]-this.dataX[0],L=this.cache.map,M=L.original,A,E,J,B,F,H;for(A in L){E=L[A];J=E[1]-E[0]-1;B=G/J;if(I<=B&&B<C){M=E;C=B}}F=Math.max(this.binarySearchMin(this.cache,M[0],M[1],D),M[0]);H=Math.min(this.binarySearchMax(this.cache,M[0],M[1],K)+1,M[1]);return{data:this.cache,start:F,end:H}}})