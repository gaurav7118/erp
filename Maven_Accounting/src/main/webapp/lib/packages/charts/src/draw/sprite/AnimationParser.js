Ext.define("Ext.draw.sprite.AnimationParser",function(){function A(D,C,B){return D+(C-D)*B}return{singleton:true,attributeRe:/^url\(#([a-zA-Z\-]+)\)$/,requires:["Ext.draw.Color"],color:{parseInitial:function(C,B){if(Ext.isString(C)){C=Ext.draw.Color.create(C)}if(Ext.isString(B)){B=Ext.draw.Color.create(B)}if((C instanceof Ext.draw.Color)&&(B instanceof Ext.draw.Color)){return[[C.r,C.g,C.b,C.a],[B.r,B.g,B.b,B.a]]}else{return[C||B,B||C]}},compute:function(D,C,B){if(!Ext.isArray(D)||!Ext.isArray(C)){return C||D}else{return[A(D[0],C[0],B),A(D[1],C[1],B),A(D[2],C[2],B),A(D[3],C[3],B)]}},serve:function(C){var B=Ext.draw.Color.fly(C[0],C[1],C[2],C[3]);return B.toString()}},number:{parse:function(B){return B===null?null:+B},compute:function(D,C,B){if(!Ext.isNumber(D)||!Ext.isNumber(C)){return C||D}else{return A(D,C,B)}}},angle:{parseInitial:function(C,B){if(B-C>Math.PI){B-=Math.PI*2}else{if(B-C<-Math.PI){B+=Math.PI*2}}return[C,B]},compute:function(D,C,B){if(!Ext.isNumber(D)||!Ext.isNumber(C)){return C||D}else{return A(D,C,B)}}},path:{parseInitial:function(K,L){var C=K.toStripes(),M=L.toStripes(),E,D,I=C.length,N=M.length,H,F,B,G=M[N-1],J=[G[G.length-2],G[G.length-1]];for(E=I;E<N;E++){C.push(C[I-1].slice(0))}for(E=N;E<I;E++){M.push(J.slice(0))}B=C.length;M.path=L;M.temp=new Ext.draw.Path();for(E=0;E<B;E++){H=C[E];F=M[E];I=H.length;N=F.length;M.temp.commands.push("M");for(D=N;D<I;D+=6){F.push(J[0],J[1],J[0],J[1],J[0],J[1])}G=M[M.length-1];J=[G[G.length-2],G[G.length-1]];for(D=I;D<N;D+=6){H.push(J[0],J[1],J[0],J[1],J[0],J[1])}for(E=0;E<F.length;E++){F[E]-=H[E]}for(E=2;E<F.length;E+=6){M.temp.commands.push("C")}}return[C,M]},compute:function(C,J,K){if(K>=1){return J.path}var E=0,F=C.length,D=0,B,I,H,L=J.temp.params,G=0;for(;E<F;E++){I=C[E];H=J[E];B=I.length;for(D=0;D<B;D++){L[G++]=H[D]*K+I[D]}}return J.temp}},data:{compute:function(G,H,I,F){var K=G.length-1,B=H.length-1,E=Math.max(K,B),D,J,C;if(!F||F===G){F=[]}F.length=E+1;for(C=0;C<=E;C++){D=G[Math.min(C,K)];J=H[Math.min(C,B)];if(Ext.isNumber(D)){if(!Ext.isNumber(J)){J=0}F[C]=(J-D)*I+D}else{F[C]=J}}return F}},text:{compute:function(D,C,B){return D.substr(0,Math.round(D.length*(1-B)))+C.substr(Math.round(C.length*(1-B)))}},limited:"number",limited01:"number"}})