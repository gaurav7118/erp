Ext.define("Ext.draw.sprite.Composite",{extend:"Ext.draw.sprite.Sprite",alias:"sprite.composite",type:"composite",isComposite:true,config:{sprites:[]},constructor:function(){this.sprites=[];this.sprites.map={};this.callParent(arguments)},add:function(C){if(!C){return null}if(!C.isSprite){C=Ext.create("sprite."+C.type,C);C.setParent(this);C.setSurface(this.getSurface())}var D=this,A=D.attr,B=C.applyTransformations;C.applyTransformations=function(){if(C.attr.dirtyTransform){A.dirtyTransform=true;A.bbox.plain.dirty=true;A.bbox.transform.dirty=true}B.call(C)};D.sprites.push(C);D.sprites.map[C.id]=C.getId();A.bbox.plain.dirty=true;A.bbox.transform.dirty=true;return C},updateSurface:function(A){for(var B=0,C=this.sprites.length;B<C;B++){this.sprites[B].setSurface(A)}},addAll:function(B){if(B.isSprite||B.type){this.add(B)}else{if(Ext.isArray(B)){var A=0;while(A<B.length){this.add(B[A++])}}}},updatePlainBBox:function(G){var E=this,B=Infinity,H=-Infinity,F=Infinity,A=-Infinity,I,J,C,D;for(C=0,D=E.sprites.length;C<D;C++){I=E.sprites[C];I.applyTransformations();J=I.getBBox();if(B>J.x){B=J.x}if(H<J.x+J.width){H=J.x+J.width}if(F>J.y){F=J.y}if(A<J.y+J.height){A=J.y+J.height}}G.x=B;G.y=F;G.width=H-B;G.height=A-F},render:function(A,B,F){var D=this.attr.matrix,C,E;D.toContext(B);for(C=0,E=this.sprites.length;C<E;C++){A.renderSprite(this.sprites[C],F)}},destroy:function(){var C=this,D=C.sprites,B=D.length,A;C.callParent();for(A=0;A<B;A++){D[A].destroy()}D.length=0}})