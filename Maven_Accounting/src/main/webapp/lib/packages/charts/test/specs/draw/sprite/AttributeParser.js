describe("Ext.draw.sprite.AttributeParser",function(){var A=Ext.draw.sprite.AttributeParser;describe("angle",function(){it("should normalize -Math.PI and Math.PI to the same value",function(){var C=A.angle(-Math.PI),B=A.angle(Math.PI);expect(C).toEqual(B)});it("should make normalized values lie within [-Math.PI, Math.PI) interval",function(){var C=A.angle(-Math.PI),B=A.angle(Math.PI),I=A.angle(-Math.PI*3),H=A.angle(Math.PI*4),G=A.angle(-Math.PI*2.75),F=A.angle(Math.PI*3.25),E=A.angle(Math.PI*0.25),D=A.angle(-Math.PI*0.75);expect(C).toBeGreaterThanOrEqual(-Math.PI);expect(C).toBeLessThan(Math.PI);expect(B).toBeGreaterThanOrEqual(-Math.PI);expect(B).toBeLessThan(Math.PI);expect(I).toBeGreaterThanOrEqual(-Math.PI);expect(I).toBeLessThan(Math.PI);expect(H).toBeGreaterThanOrEqual(-Math.PI);expect(H).toBeLessThan(Math.PI);expect(G).toBeGreaterThanOrEqual(-Math.PI);expect(G).toBeLessThan(Math.PI);expect(F).toBeGreaterThanOrEqual(-Math.PI);expect(F).toBeLessThan(Math.PI);expect(E).toBeGreaterThanOrEqual(-Math.PI);expect(E).toBeLessThan(Math.PI);expect(D).toBeGreaterThanOrEqual(-Math.PI);expect(D).toBeLessThan(Math.PI)})})})