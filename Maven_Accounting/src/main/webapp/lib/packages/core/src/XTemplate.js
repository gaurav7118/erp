Ext.define("Ext.XTemplate",{extend:"Ext.Template",requires:["Ext.util.XTemplateCompiler"],isXTemplate:true,emptyObj:{},fn:null,strict:false,apply:function(A,B,C,D){return this.applyOut(A,[],B,C,D).join("")},applyOut:function(A,B,D,F,H){var E=this,C;if(!E.fn){C=new Ext.util.XTemplateCompiler({useFormat:E.disableFormats!==true,definitions:E.definitions,strict:E.strict});E.fn=C.compile(E.html)}F=F||1;H=H||1;if(E.strict){E.fn(B,A,D||E.emptyObj,F,H)}else{try{E.fn(B,A,D||E.emptyObj,F,H)}catch(G){Ext.log.warn("XTemplate evaluation exception: "+G.message)}}return B},compile:function(){return this},statics:{getTpl:function(B,D){var C=B[D],A;if(C&&!C.isTemplate){C=Ext.ClassManager.dynInstantiate("Ext.XTemplate",C);if(B.hasOwnProperty(D)){A=B}else{for(A=B.self.prototype;A&&!A.hasOwnProperty(D);A=A.superclass){}}A[D]=C;C.owner=A}return C||null}}})