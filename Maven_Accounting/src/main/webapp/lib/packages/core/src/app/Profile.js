Ext.define("Ext.app.Profile",{mixins:["Ext.mixin.Observable"],isProfile:true,config:{mainView:{$value:null,lazy:true},application:null,controllers:[],models:[],views:[],stores:[]},constructor:function(A){this.initConfig(A);this.mixins.observable.constructor.apply(this,arguments)},isActive:function(){return false},init:function(){var A=this.getViews(),B;if(A&&!(A instanceof Array)){for(B in A){Ext.ClassManager.setXType(A[B],B)}}},launch:Ext.emptyFn,onClassExtended:function(B,C,A){var D=A.onBeforeCreated;A.onBeforeCreated=function(L,H){var G=Ext.app.Controller,J=L.$className,M=[],I=L.prototype,K=H.views,E,F;E=H.name;if(E){delete H.name}else{E=J.split(".");E=E[E.length-1]}L._name=E;L._namespace=E=(H.namespace||E).toLowerCase();delete H.namespace;F=G.resolveNamespace(L,H);G.processDependencies(I,M,F,"model",H.models,E);G.processDependencies(I,M,F,"store",H.stores,E);G.processDependencies(I,M,F,"controller",H.controllers,E);if(K){if(K instanceof Array){G.processDependencies(I,M,F,"view",K,E)}else{Ext.app.Profile.processViews(J,K,M)}}Ext.require(M,Ext.Function.pass(D,arguments,this))}},getName:function(){return this.self._name},getNamespace:function(){return this.self._namespace},privates:{statics:{processViews:function(F,C,E){var A,B,D,G;for(G in C){B=C[G];if(typeof B!=="string"){D=B.xclass;if(!D){Ext.raise("Views must specify an xclass")}A=Ext.apply({extend:D},B);delete A.xclass;Ext.define(C[G]=F+"$"+G,A);B=D}E.push(B)}}}}})