Ext.define("Ext.app.bind.Binding",{extend:"Ext.app.bind.BaseBinding",constructor:function(D,E,B,A){var C=this;C.callParent([D.owner,E,B,A]);C.stub=D;C.depth=D.depth;if(!D.isLoading()&&!D.scheduled){C.schedule()}},destroy:function(C){var A=this,B=A.stub;if(B&&!C){B.unbind(A);A.stub=null}A.callParent()},bindValidation:function(C,A){var B=this.stub;return B&&B.bindValidation(C,A)},bindValidationField:function(C,A){var B=this.stub;return B&&B.bindValidationField(C,A)},getFullName:function(){return this.fullName||(this.fullName="@("+this.stub.getFullName()+")")},getValue:function(){var B=this,C=B.stub,A=C&&C.getValue();if(B.transform){A=B.transform(A)}return A},isLoading:function(){var A=this.stub;return A&&A.isLoading()},isReadOnly:function(){var B=this.stub,A=this.options;if(!(A&&A.twoWay===false)){if(B){return B.isReadOnly()}}return true},refresh:function(){},setValue:function(A){if(this.isReadOnly()){Ext.raise("Cannot setValue on a readonly binding")}this.stub.set(A)},privates:{getDataObject:function(){var A=this.stub;return A&&A.getDataObject()},getRawValue:function(){var B=this,C=B.stub,A=C&&C.getRawValue();if(B.transform){A=B.transform(A)}return A},isDescendantOf:function(A){var B=this.stub;return B?(A===B)||B.isDescendantOf(A):false},react:function(){this.notify(this.getValue())},schedule:function(){if(!this.stub.scheduled){this.callParent()}},sort:function(){var A=this.stub;A.scheduler.sortItem(A)}}})