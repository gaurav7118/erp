Ext.define("Ext.app.bind.Formula",{extend:"Ext.util.Schedulable",requires:["Ext.util.LruCache"],statics:{getFormulaParser:function(B){var A=this.formulaCache,D,C;if(!A){A=this.formulaCache=new Ext.util.LruCache({maxSize:20})}D=A.get(B);if(!D){C="[^\\.a-z0-9_]"+B+"\\(\\s*(['\"])(.*?)\\1\\s*\\)";D=new RegExp(C,"gi");A.add(B,D)}return D}},isFormula:true,calculation:null,explicit:false,set:null,single:false,argumentNamesRe:/^function\s*\(\s*([^,\)\s]+)/,constructor:function(G,H){var F=this,B=G.owner,D,E,A,C;F.owner=B;F.stub=G;F.callParent();if(H instanceof Function){F.get=A=H}else{F.get=A=H.get;F.set=H.set;E=H.bind;if(H.single){F.single=H.single}if(E){D=E.bindTo;if(D){C=Ext.apply({},E);delete C.bindTo;E=D}}}if(!A){Ext.raise("Must specify a getter method for a formula")}if(E){F.explicit=true}else{E=A.$expressions||F.parseFormula(A)}F.binding=B.bind(E,F.onChange,F,C)},destroy:function(){var A=this,C=A.binding,B=A.stub;if(C){C.destroy();A.binding=null}if(B){B.formula=null}A.callParent();A.getterFn=A.owner=null},getFullName:function(){return this.fullName||(this.fullName=this.stub.getFullName()+"="+this.callParent()+")")},getRawValue:function(){return this.calculation},onChange:function(){if(!this.scheduled){this.schedule()}},parseFormula:function(G){var F=G.toString(),D={$literal:true},C,B,A,E;C=this.argumentNamesRe.exec(F);B=C?C[1]:"get";A=Ext.app.bind.Formula.getFormulaParser(B);while((C=A.exec(F))){E=C[2];D[E]=E}D.$literal=true;G.$expressions=D;return D},react:function(){var C=this,B=C.owner,D=C.binding.lastValue,E=C.getterFn,A;if(C.explicit){A=D}else{A=B.getFormulaFn(D)}C.settingValue=true;C.stub.set(C.calculation=C.get.call(B,A));C.settingValue=false;if(C.single){C.destroy()}},setValue:function(A){this.set.call(this.stub.owner,A)},privates:{getScheduler:function(){var A=this.owner;return A&&A.getScheduler()},sort:function(){var A=this,B=A.binding;if(!B.destroyed){A.scheduler.sortItem(B)}}}})