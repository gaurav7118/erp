Ext.define("Ext.app.bind.Multi",{extend:"Ext.app.bind.BaseBinding",isMultiBinding:true,missing:1,deep:true,constructor:function(E,A,G,C,B){var D=this,F=B&&B.trackStatics;D.callParent([A,G,C,B]);D.bindings=[];D.literal=E.$literal;if(E.constructor===Object){if(F){D.staticKeys=[]}D.addObject(E,D.lastValue={},D.staticKeys)}else{D.addArray(E,D.lastValue=[])}if(!--D.missing&&!D.scheduled){D.schedule()}},destroy:function(){var A=this;A.bindings=Ext.destroy(A.bindings);A.callParent()},add:function(B,F,I){var H=this,D=H.owner,C=H.bindings,A=H.literal?(B.reference?"bindEntity":"bindExpression"):"bind",G,E;++H.missing;G=D[A](B,function(J){F[I]=J;if(G.calls===1){--H.missing}if(!H.missing&&!H.scheduled){H.schedule()}},H,null);E=G.depth;if(!C.length||E<H.depth){H.depth=E}C.push(G);return !this.isBindingStatic(G)},addArray:function(B,H){var E=this,G=B.length,C=false,F,A,D;for(D=0;D<G;++D){A=B[D];if(A&&(A.reference||Ext.isString(A))){F=E.add(A,H,D)}else{if(Ext.isArray(A)){F=E.addArray(A,H[D]=[])}else{if(A&&A.constructor===Object){F=E.addObject(A,H[D]={})}else{H[D]=A;F=false}}}C=C||F}return C},addObject:function(B,E,G){var F=this,D=false,H,A,C;for(C in B){A=B[C];if(A&&(A.reference||Ext.isString(A))){H=F.add(A,E,C)}else{if(Ext.isArray(A)){H=F.addArray(A,E[C]=[])}else{if(A&&A.constructor===Object){H=F.addObject(A,E[C]={})}else{E[C]=A;H=false}}}if(G&&!H){G.push(C)}D=D||H}return D},getFullName:function(){var C=this,D=C.fullName,E=C.bindings,B=E.length,A;if(!D){D="@[";for(A=0;A<B;++A){if(A){D+=","}D+=E[A].getFullName()}D+="]";C.fullName=D}return D},getRawValue:function(){return this.lastValue},isDescendantOf:function(){return false},isLoading:function(){for(var B=this.bindings,A=B.length;A-->0;){if(B[A].isLoading()){return true}}return false},isBindingStatic:function(A){return A.isTemplateBinding&&A.isStatic},isStatic:function(){var D=this.bindings,A=D.length,B,C;for(B=0;B<A;++B){C=D[B];if(!this.isBindingStatic(C)){return false}}return true},pruneStaticKeys:function(){var D=Ext.apply({},this.lastValue),C=this.staticKeys,A=C.length,B;for(B=0;B<A;++B){delete D[C[B]]}return D},react:function(){this.notify(this.lastValue)},refresh:function(){},privates:{sort:function(){this.scheduler.sortItems(this.bindings)}}})