Ext.Inventory=function(){var A=this;A.names=[];A.paths={};A.alternateToName={};A.aliasToName={};A.nameToAliases={};A.nameToAlternates={}};Ext.Inventory.prototype={_array1:[0],prefixes:null,dotRe:/\./g,wildcardRe:/\*/g,addAlias:function(B,A,C){return this.addMapping(B,A,this.aliasToName,this.nameToAliases,C)},addAlternate:function(A,B){return this.addMapping(A,B,this.alternateToName,this.nameToAlternates)},addMapping:function(J,D,E,M,F){var A=J.$className||J,H=A,I=this._array1,L,C,N,G,B,K;if(Ext.isString(A)){H={};H[A]=D}for(N in H){C=H[N];if(Ext.isString(C)){I[0]=C;C=I}B=C.length;K=M[N]||(M[N]=[]);for(G=0;G<B;++G){if(!(L=C[G])){continue}if(E[L]!==N){if(!F&&E[L]){Ext.log.warn("Overriding existing mapping: '"+L+"' From '"+E[L]+"' to '"+N+"'. Is this intentional?")}E[L]=N;K.push(L)}}}},getAliasesByName:function(A){return this.nameToAliases[A]||null},getAlternatesByName:function(A){return this.nameToAlternates[A]||null},getNameByAlias:function(A){return this.aliasToName[A]||""},getNameByAlternate:function(A){return this.alternateToName[A]||""},getNamesByExpression:function(K,A,H){var S=this,P=S.aliasToName,M=S.alternateToName,B=S.nameToAliases,D=S.nameToAlternates,R=H?A:{},J=[],Q=Ext.isString(K)?[K]:K,G=Q.length,E=S.wildcardRe,C,N,O,I,L,T,F;for(N=0;N<G;++N){if((C=Q[N]).indexOf("*")<0){if(!(T=P[C])){if(!(T=M[C])){T=C}}if(!(T in R)&&!(A&&(T in A))){R[T]=1;J.push(T)}}else{F=new RegExp("^"+C.replace(E,"(.*?)")+"$");for(T in B){if(!(T in R)&&!(A&&(T in A))){if(!(I=F.test(T))){L=(O=B[T]).length;while(!I&&L-->0){I=F.test(O[L])}O=D[T];if(O&&!I){L=O.length;while(!I&&L-->0){I=F.test(O[L])}}}if(I){R[T]=1;J.push(T)}}}}}return J},getPath:function(B){var C=this,E=C.paths,A="",D;if(B in E){A=E[B]}else{D=C.getPrefix(B);if(D){B=B.substring(D.length+1);A=E[D];if(A){A+="/"}}A+=B.replace(C.dotRe,"/")+".js"}return A},getPrefix:function(B){if(B in this.paths){return B}var E=this.getPrefixes(),A=E.length,C,D;while(A-->0){C=(D=E[A]).length;if(C<B.length&&B.charAt(C)==="."&&D===B.substring(0,C)){return D}}return""},getPrefixes:function(){var A=this,B=A.prefixes;if(!B){A.prefixes=B=A.names.slice(0);B.sort(A._compareNames)}return B},removeName:function(A){var E=this,H=E.aliasToName,J=E.alternateToName,I=E.nameToAliases,D=E.nameToAlternates,B=I[A],F=D[A],C,G;delete I[A];delete D[A];if(B){for(C=B.length;C--;){if(A===(G=B[C])){delete H[G]}}}if(F){for(C=F.length;C--;){if(A===(G=F[C])){delete J[G]}}}},resolveName:function(A){var B=this,C;if(!(A in B.nameToAliases)){if(!(C=B.aliasToName[A])){C=B.alternateToName[A]}}return C||A},select:function(E,C){var D=this,F={},B={excludes:F,exclude:function(){D.getNamesByExpression(arguments,F,true);return this}},A;for(A in E){B[A]=D.selectMethod(F,E[A],C||E)}return B},selectMethod:function(D,B,A){var C=this;return function(E){var F=Ext.Array.slice(arguments,1);F.unshift(C.getNamesByExpression(E,D));return B.apply(A,F)}},setPath:Ext.Function.flexSetter(function(A,C){var B=this;B.paths[A]=C;B.names.push(A);B.prefixes=null;return B}),_compareNames:function(A,C){var B=A.length-C.length;if(!B){B=(A<C)?-1:1}return B}}