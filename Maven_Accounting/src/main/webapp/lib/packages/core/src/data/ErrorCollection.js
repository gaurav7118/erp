Ext.define("Ext.data.ErrorCollection",{extend:"Ext.util.MixedCollection",alternateClassName:"Ext.data.Errors",requires:["Ext.data.Error"],init:function(F){var I=this,G=F.fields,D=F.data,K,J,L,E,H,C,B,A;for(E=0,H=G.length;E<H;++E){J=G[E];A=J.name;B=D[A];if(J.validate&&!J.validate.$nullFn){K=I.length;C=J.validate(B,null,I,F);if(K===I.length&&C!==true){I.add(A,C)}}}return I},add:function(B,D){var C=this,A=Ext.data.field.Field.defaultInvalidMessage,F=B,E;if(Ext.isString(B)){F=new Ext.data.Error({field:B,message:D||A})}else{if(!(F.isError)){F=new Ext.data.Error({field:F.field||F.name,message:F.error||F.message||F.msg||A})}B=F.field}E=C.get(B);if(E){if(Ext.isArray(E)){E.push(F);return E}C.removeAtKey(B);F=[E,F];F.field=B;F=[F]}return C.callParent([F])},getKey:function(A){return A.field},isValid:function(){return this.length===0},getByField:function(B){var A=this.get(B);if(A&&!Ext.isArray(A)){A=[A]}return A||[]}})