Ext.define("Ext.data.Model",{alternateClassName:"Ext.data.Record",requires:["Ext.data.ErrorCollection","Ext.data.operation.*","Ext.data.field.*","Ext.data.validator.Validator","Ext.data.schema.Schema","Ext.data.identifier.Generator","Ext.data.identifier.Sequential"],uses:["Ext.data.Validation"],isEntity:true,isModel:true,validIdRe:null,erasing:false,observableType:"record",constructor:function(F,L){var M=this,P=M.self,K=P.identifier,C=Ext.data.Model,N=C.identifier,O=M.idField.name,J,A,B,I,H,E,G;M.data=M.data=F||(F={});M.session=L||null;M.internalId=I=N.generate();var D=F[O];if(L&&!L.isSession){Ext.raise('Bad Model constructor argument 2 - "session" is not a Session')}if((J=F) instanceof Array){M.data=F={};G=M.getFields();H=Math.min(G.length,J.length);for(E=0;E<H;++E){F[G[E].name]=J[E]}}if(!(B=P.initializeFn)){P.initializeFn=B=C.makeInitializeFn(P)}if(!B.$nullFn){P.initializeFn(M)}if(!(M.id=A=F[O])&&A!==0){if(D){Ext.raise('The model ID configured in data ("'+D+'") has been rejected by the '+M.fieldsMap[O].type+" field converter for the "+O+" field")}if(L){K=L.getIdentifier(P);A=K.generate()}else{if(N===K){A=I}else{A=K.generate()}}F[O]=M.id=A;M.phantom=true}if(L){L.add(M)}if(M.init&&Ext.isFunction(M.init)){M.init()}},editing:false,dirty:false,session:null,dropped:false,erased:false,clientIdProperty:null,evented:false,phantom:false,idProperty:"id",manyToMany:null,identifier:null,previousValues:undefined,proxy:undefined,schema:"default",versionProperty:null,generation:1,validationSeparator:null,convertOnSet:true,beginEdit:function(){var C=this,B=C.modified,A=C.previousValues;if(!C.editing){C.editing=true;C.editMemento={dirty:C.dirty,data:Ext.apply({},C.data),generation:C.generation,modified:B&&Ext.apply({},B),previousValues:A&&Ext.apply({},A)}}},cancelEdit:function(){var B=this,A=B.editMemento;if(A){B.editing=false;Ext.apply(B,A);B.editMemento=null}},endEdit:function(B,D){var C=this,A=C.editMemento;if(A){C.editing=false;C.editMemento=null;C.previousValues=A.previousValues;if(!B){if(!D){D=C.getModifiedFieldNames(A.data)}if(C.dirty||(D&&D.length)){C.callJoined("afterEdit",[D])}}}},getField:function(A){return this.self.getField(A)},getFields:function(){return this.self.getFields()},getFieldsMap:function(){return this.fieldsMap},getIdProperty:function(){return this.idProperty},getId:function(){return this.id},getObservableId:function(){return this.internalId},setId:function(B,A){this.set(this.idProperty,B,A)},getPrevious:function(B){var A=this.previousValues;return A&&A[B]},isModified:function(B){var A=this.modified;return !!(A&&A.hasOwnProperty(B))},getModified:function(B){var A;if(this.isModified(B)){A=this.modified[B]}return A},get:function(A){return this.data[A]},_singleProp:{},_rejectOptions:{convert:false,silent:true},set:function(F,T,G){var f=this,D=f.self,g=f.data,M=f.modified,U=f.previousValues,A=f.session,e=Ext.isString(F),B=(e?G:T),P=B?B.convert!==false:f.convertOnSet,I=f.fieldsMap,c=B&&B.silent,Q=B&&B.commit,O=!(B&&B.refs===false)&&A,N=!(B&&B.dirty===false&&!Q),Z=null,R,C,b,j,h,W,H,L,V,a,X=0,d,S,K,J,Y,E;if(e){E=f._singleProp;E[F]=T}else{E=F}if(!(K=D.rankedFields)){K=D.rankFields()}d=K.length;do{for(h in E){Y=E[h];R=g[h];H=f;C=I[h];if(C){if(P&&C.convert){Y=C.convert(Y,f)}H=C;J=C.reference}else{J=null}if(H.isEqual(R,Y)){continue}g[h]=Y;(Z||(Z=[])).push(h);(U||(f.previousValues=U={}))[h]=R;if(J&&J.cls){if(O){A.updateReference(f,C,Y,R)}J.onValueChange(f,A,Y,R)}a=(V=C&&C.dependents)&&V.length;while(a-->0){(L=V[a]).dirty=true;X=X?Math.min(X,L.rank):L.rank}if(!C||C.persist){if(M&&M.hasOwnProperty(h)){if(!N||H.isEqual(M[h],Y)){delete M[h];f.dirty=-1}}else{if(N){if(!M){f.modified=M={}}f.dirty=true;M[h]=R}}}if(h===f.idField.name){b=true;W=R;S=Y}}if(!X){break}C=K[X-1];C.dirty=false;if(e){delete E[F]}else{E=f._singleProp;e=true}F=C.name;E[F]=g[F];P=true;for(;X<d;++X){if(K[X].dirty){break}}if(X<d){++X}else{X=0}}while(1);if(f.dirty<0){f.dirty=false;for(j in M){if(M.hasOwnProperty(j)){f.dirty=true;break}}}if(e){delete E[F]}++f.generation;if(b){f.id=S;f.callJoined("onIdChanged",[W,S])}if(Q){f.commit(c,Z)}else{if(!c&&!f.editing&&Z){f.callJoined("afterEdit",[Z])}}return Z},reject:function(A){var C=this,B=C.modified;if(C.erased){Ext.raise("Cannot reject once a record has been erased.")}if(B){C.set(B,C._rejectOptions)}C.dropped=false;C.clearState();if(!A){C.callJoined("afterReject")}},commit:function(B,D){var C=this,F=C.versionProperty,E=C.data,A;C.clearState();if(F&&!C.phantom&&!isNaN(E[F])){++E[F]}C.phantom=false;if(C.dropped){C.erased=A=true}if(!B){if(A){C.callJoined("afterErase")}else{C.callJoined("afterCommit",[D])}}},clearState:function(){var A=this;A.dirty=A.editing=false;A.editMemento=A.modified=null},drop:function(B){var D=this,C=D.associations,E=D.session,A;if(D.erased||D.dropped){return }D.dropped=true;if(C&&B!==false){for(A in C){C[A].onDrop(D,E)}}D.callJoined("afterDrop");if(D.phantom){D.setErased()}},join:function(B){var A=this,C=A.joined;if(!C){C=A.joined=[B]}else{if(!C.length){C[0]=B}else{Ext.Array.include(C,B)}}if(B.isStore&&!A.store){A.store=B}},unjoin:function(E){var D=this,F=D.joined,A=F&&F.length,B=D.store,C;if(A===1&&F[0]===E){F.length=0}else{if(A){Ext.Array.remove(F,E)}}if(B===E){B=null;if(F){for(C=0,A=F.length;C<A;++C){E=F[C];if(E.isStore){B=E;break}}}D.store=B}},clone:function(D){var C=this,B=C.modified,A=C.copy(C.id,D);if(B){A.modified=Ext.apply({},B)}A.dirty=C.dirty;A.dropped=C.dropped;A.phantom=C.phantom;return A},copy:function(C,F){var D=this,E=Ext.apply({},D.data),B=D.idProperty,A=D.self;if(C||C===0){E[B]=C}else{if(C===null){delete E[B]}}return new A(E,F)},getProxy:function(){return this.self.getProxy()},getValidation:function(B){var C=this,A=C.validation;if(!A){C.validation=A=new Ext.data.Validation();A.attach(C)}if(B===true||(B!==false&&A.syncGeneration!==C.generation)){A.refresh(B)}return A},validate:function(){return new Ext.data.ErrorCollection().init(this)},isValid:function(){return this.getValidation().isValid()},toUrl:function(){var B=this.$className.split("."),A=B[B.length-1].toLowerCase();return A+"/"+this.getId()},erase:function(A){var B=this;B.erasing=true;B.drop();B.erasing=false;return B.save(A)},setErased:function(){this.erased=true;this.callJoined("afterErase")},getChanges:function(){return this.getData(this._getChangesOptions)},getCriticalFields:function(){var A=this.self,B=A.criticalFields;if(!B){A.rankFields();B=A.criticalFields}return B},getAssociatedData:function(P,O){var K=this,C=K.associations,M,G,N,J,D,B,I,F,E,A,H,L;P=P||{};K.$gathering=1;if(O){O=Ext.Object.chain(O)}for(E in C){F=C[E];N=F.getAssociatedItem(K);if(!N||N.$gathering){continue}if(N.isStore){N.$gathering=1;J=N.getData().items;B=J.length;D=[];for(G=0;G<B;++G){I=J[G];M=!I.$gathering;I.$gathering=1;if(O){L=O.associated;if(L===undefined){O.associated=M;H=true}else{if(!M){O.associated=false;H=true}}A=O}else{A=M?K._getAssociatedOptions:K._getNotAssociatedOptions}D.push(I.getData(A));if(H){O.associated=L;H=false}delete I.$gathering}delete N.$gathering}else{A=O||K._getAssociatedOptions;if(O&&O.associated===undefined){A.associated=true}D=N.getData(A)}P[E]=D}delete K.$gathering;return P},getData:function(Q){var J=this,I={},A=(Q===true)?J._getAssociatedOptions:(Q||I),E=J.data,K=A.associated,N=A.changes,M=N&&A.critical,H=N?J.modified:E,G=J.fieldsMap,F=A.persist,P=A.serialize,C,L,D,B,O;if(H){for(B in H){O=E[B];L=G[B];if(L){if(F&&!L.persist){continue}if(P&&L.serialize){O=L.serialize(O,J)}}I[B]=O}}if(M){C=J.self.criticalFields||J.getCriticalFields();for(D=C.length;D-->0;){B=(L=C[D]).name;if(!(B in I)){O=E[B];if(P&&L.serialize){O=L.serialize(O,J)}I[B]=O}}}if(K){J.getAssociatedData(I,A)}return I},getTransientFields:function(){var A=this.self,B=A.transientFields;if(!B){A.rankFields();B=A.transientFields}return B},isLoading:function(){return !!this.loadOperation},abort:function(){var A=this.loadOperation;if(A){A.abort()}},load:function(I){I=Ext.apply({},I);var F=this,H=I.scope||F,E=F.getProxy(),G=I.callback,C=F.loadOperation,A=F.getId(),B;if(C){B=C.extraCalls;if(!B){B=C.extraCalls=[]}B.push(I);return C}var D=true;if(F.phantom){D=false}I.id=A;I.recordCreator=function(L,J,K){var M=F.session;if(K){K.recordCreator=M?M.recordCreator:null}F.set(L,F._commitOptions);if(D&&F.getId()!==A){Ext.raise("Invalid record id returned for "+A+"@"+F.entityName)}return F};I.internalCallback=function(L){var P=L.wasSuccessful()&&L.getRecords().length>0,Q=F.loadOperation,N=Q.extraCalls,K=[F,L],O=[F,L,P],M,J;F.loadOperation=null;if(P){Ext.callback(I.success,H,K)}else{Ext.callback(I.failure,H,K)}Ext.callback(G,H,O);if(N){for(M=0,J=N.length;M<J;++M){I=N[M];if(P){Ext.callback(I.success,H,K)}else{Ext.callback(I.failure,H,K)}Ext.callback(I.callback,H,O)}}F.callJoined("afterLoad")};delete I.callback;F.loadOperation=C=E.createOperation("read",I);C.execute();return C},save:function(I){I=Ext.apply({},I);var F=this,D=F.phantom,A=F.dropped,C=A?"destroy":(D?"create":"update"),H=I.scope||F,G=I.callback,E=F.getProxy(),B;I.records=[F];I.internalCallback=function(J){var K=[F,J],L=J.wasSuccessful();if(L){Ext.callback(I.success,H,K)}else{Ext.callback(I.failure,H,K)}K.push(L);Ext.callback(G,H,K)};delete I.callback;B=E.createOperation(C,I);if(A&&D){B.setResultSet(Ext.data.reader.Reader.prototype.nullResultSet);F.setErased();B.setSuccessful(true)}else{B.execute()}return B},inheritableStatics:{addFields:function(A){this.replaceFields(A)},replaceFields:function(L,I){var M=this,E=M.prototype,H=Ext.data.field.Field,F=M.fields,K=M.fieldsMap,C=M.fieldOrdinals,N,D,B,G,A,J;if(I===true){F.length=0;M.fieldsMap=K={};M.fieldOrdinals=C={}}else{if(I){for(D=I.length;D-->0;){A=I[D];if(A in C){delete C[A];delete K[A]}}for(D=0,G=F.length;D<G;++D){A=(N=F[D]).name;if(A in C){C[A]=D}else{F.splice(D,1);--D;--G}}}}for(D=0,G=L?L.length:0;D<G;D++){A=(N=L[D]).name;if(!(A in C)){C[A]=J=F.length;F.push(N=H.create(N));K[A]=N;N.ordinal=J;N.definedBy=N.owner=this}}M.idField=E.idField=B=K[E.idProperty];B.allowNull=B.critical=B.identifier=true;B.defaultValue=null;M.initializeFn=M.rankedFields=M.transientFields=M.criticalFields=null},removeFields:function(A){this.replaceFields(null,A)},getIdFromData:function(C){var B=this,A=B.idField,D=A.calculated?(new B(C)).id:C[A.name];return D},createWithId:function(E,B,C){var D=B,A=this;if(E||E===0){D={};if(B){Ext.apply(D,B)}D[A.idField.name]=E}return new A(D,C)},getFields:function(){return this.fields},getFieldsMap:function(){return this.fieldsMap},getField:function(A){return this.fieldsMap[A]||null},getProxy:function(){var B=this,A=B.proxy,D=B.defaultProxy,C;if(!A){A=B.proxyConfig;if(!A&&D){A=D}if(!A||!A.isProxy){if(typeof A==="string"){A={type:A}}C=B.schema.constructProxy(B);A=A?Ext.merge(C,A):C}A=B.setProxy(A)}return A},setProxy:function(B){var C=this,A;if(B){if(!B.isProxy){B=Ext.Factory.proxy(B)}else{A=B.getModel();if(A&&A!==C){B=B.clone()}}B.setModel(C)}return(C.prototype.proxy=C.proxy=B)},load:function(E,A,C){var B={},D;B[this.prototype.idProperty]=E;D=new this(B,C);D.load(A);return D}},deprecated:{5:{methods:{hasId:null,markDirty:null,setDirty:null,eachStore:function(F,D){var E=this,B=E.stores,A=B.length,C;for(C=0;C<A;++C){F.call(D,B[C])}},join:function(C){var B=this,A=B.stores,D=B.joined;if(!D){D=B.joined=[C]}else{D.push(C)}if(C.isStore){B.store=B.store||C;if(!A){A=B.stores=[]}A.push(C)}},unjoin:function(C){var B=this,A=B.stores,D=B.joined;if(D.length===1){D.length=0}else{Ext.Array.remove(D,C)}if(C.isStore){Ext.Array.remove(A,C);B.store=A[0]||null}}},properties:{persistenceProperty:null},inheritableStatics:{methods:{setFields:null}}}},privates:{_commitOptions:{commit:true},_getChangesOptions:{changes:true},_getAssociatedOptions:{associated:true},_getNotAssociatedOptions:{associated:false},copyFrom:function(H){var G=this,E=G.fields,K=E.length,B=[],I,C=0,F,D,L=G.idProperty,A,J;if(H){F=G.data;D=H.data;for(;C<K;C++){I=E[C];A=I.name;if(A!==L){J=D[A];if(J!==undefined&&!G.isEqual(F[A],J)){F[A]=J;B.push(A)}}}if(G.phantom&&!H.phantom){G.beginEdit();G.setId(H.getId());G.endEdit(true);G.commit(true)}}return B},callJoined:function(D,C){var F=this,H=F.joined,E=F.session,A,B,G,I;if(!H&&!E){return }if(C){C.unshift(F)}else{C=[F]}if(H){for(A=0,B=H.length;A<B;++A){I=H[A];if(I&&(G=I[D])){G.apply(I,C)}}}G=E&&E[D];if(G){G.apply(E,C)}},setSession:function(A){if(A){if(this.session){Ext.raise("This model already belongs to a session.")}if(!this.id){Ext.raise("The model must have an id to participate in a session.")}}this.session=A;if(A){A.add(this)}},getModifiedFieldNames:function(A){var D=this,E=D.data,B=[],F=A||D.editMemento.data,C;for(C in E){if(E.hasOwnProperty(C)){if(!D.isEqual(E[C],F[C],C)){B.push(C)}}}return B},isEqual:function(A,D,C){var B;if(C){B=C.isField?C:this.fieldsMap[C];if(B){return B.isEqual(A,D)}}if(A instanceof Date&&D instanceof Date){return A.getTime()===D.getTime()}return A===D},statics:{EDIT:"edit",REJECT:"reject",COMMIT:"commit",defaultProxy:"memory",rankFields:function(){var I=this,H=I.prototype,D=I.fields,B=D.length,F=[],A=[],E=[],J,G,C;I.rankedFields=H.rankedFields=F;I.criticalFields=H.criticalFields=A;I.transientFields=H.transientFields=E;for(C=0;C<B;++C){G=D[C];if(G.critical){A.push(G)}if(!G.persist){E.push(G)}if(G.evil){(J||(J=[])).push(G)}else{if(!G.depends){F.push(G);G.rank=F.length}}}for(C=0;C<B;++C){if(!(G=D[C]).rank&&!G.evil){I.topoAdd(G)}}if(J){for(C=0,B=J.length;C<B;++C){F.push(G=J[C]);G.rank=F.length}}I.topoStack=null;return F},topoAdd:function(H){var B=this,G=H.depends,A=G?G.length:0,E=B.rankedFields,C,F;var D=B.topoStack||(B.topoStack=[]);D.push(H.name);if(H.rank===0){Ext.raise(B.$className+" has circular field dependencies: "+D.join(" --> "))}if(D.length&&H.evil){Ext.raise(B.$className+": Field "+D[D.length-1]+" cannot depend on depends-less field "+H.name)}H.rank=0;for(C=0;C<A;++C){F=B.fieldsMap[G[C]];if(!F){Ext.raise(B.$className+": Field "+H.name+" depends on undefined field "+G[C])}(F.dependents||(F.dependents=[])).push(H);if(!F.rank){B.topoAdd(F)}}E.push(H);H.rank=E.length;D.pop()},initFields:function(U,B,N){var I=Ext.data.field.Field,D=U.fields,O=[],J={},F={},A=[],T=N.fields,K=U.versionProperty||N.versionProperty,L=B.idProperty,G,C,R,E,V,Q,H,S,P,M;B.fields=N.fields=O;B.fieldOrdinals=N.fieldOrdinals=J;B.fieldsMap=N.fieldsMap=F;B.references=N.references=A;if(T){for(R=0,E=T.length;R<E;++R){O[R]=C=Ext.Object.chain(T[R]);C.dependents=null;C.owner=B;J[V=C.name]=R;F[V]=C;C.rank=null;if(C.generated){S=C;P=C.name}}}if(D){delete U.fields;for(R=0,E=D.length;R<E;++R){C=D[R];H=C.reference;if(H&&typeof H!=="string"){H=Ext.merge({},H)}C.$reference=H;C=I.create(D[R]);V=C.name;Q=J[V];if(Q===undefined){J[V]=Q=O.length}F[V]=C;O[Q]=C;C.definedBy=C.owner=B;C.ordinal=Q;if(V===L){M=C}}}G=F[L];if(!G){if(S&&S.generated){Q=S.ordinal}else{Q=O.length}delete F[P];delete J[P];G=new I(L);O[Q]=G;J[L]=Q;F[L]=G;G.definedBy=B;G.ordinal=Q;G.generated=true}else{if(M&&S&&S.generated){Ext.Array.remove(O,S);delete F[P];delete J[P];F[L]=M;for(R=0,E=O.length;R<E;++R){C=O[R];O.ordinal=R;J[C.name]=R}}}G.allowNull=G.critical=G.identifier=true;G.defaultValue=null;B.idField=N.idField=G;if(K){C=F[K];if(!C){Q=O.length;C=new I({name:K,type:"int"});O[Q]=C;J[K]=Q;F[K]=C;C.definedBy=B;C.ordinal=Q;C.generated=true}C.defaultValue=1;C.critical=true}},initValidators:function(G,N,I){var L=I.validators,E,K,C,J,F,D,H,B,A,M;if(L){E={};for(K in L){E[K]=Ext.Array.clone(L[K])}}J=G.validators||G.validations;if(G.validations){delete G.validations;Ext.log.warn((N.$className||"Ext.data.Model")+": validations has been deprecated. Please use validators instead.")}if(J){delete G.validators;E=E||{};if(Ext.isArray(J)){C={};for(F=0,D=J.length;F<D;++F){M=J[F];B=M.field;if(!C[B]){C[B]=[]}M=M.fn||M;C[B].push(M)}J=C}for(B in J){H=J[B];if(!Ext.isArray(H)){H=[H]}A=E[B];if(E[B]){Ext.Array.push(A,H)}else{E[B]=H}}}if(E){for(B in E){K=N.getField(B);if(K){K.setModelValidators(E[B])}}}N.validators=I.validators=E},initAssociations:function(C,F,J){var B=F.associations,D=F.belongsTo,H=F.hasMany,K=F.hasOne,I=F.manyToMany,E,A,G;if(F.belongsTo){Ext.log.warn('Use of "belongsTo" is obsolete'+(J.$className?" in "+J.$className:""));delete F.belongsTo}delete F.manyToMany;if(I){C.addMatrices(J,I)}delete F.associations;delete F.belongsTo;delete F.hasMany;delete F.hasOne;if(B){B=Ext.isArray(B)?B:[B];for(E=0,A=B.length;E<A;++E){G=B[E];switch(G.type){case"belongsTo":C.addLegacyBelongsTo(J,G);break;case"hasMany":C.addLegacyHasMany(J,G);break;case"hasOne":C.addLegacyHasOne(J,G);break;default:Ext.raise('Invalid association type: "'+G.type+'"')}}}if(D){D=Ext.isArray(D)?D:[D];for(E=0,A=D.length;E<A;++E){C.addLegacyBelongsTo(J,D[E])}}if(H){H=Ext.isArray(H)?H:[H];for(E=0,A=H.length;E<A;++E){C.addLegacyHasMany(J,H[E])}}if(K){K=Ext.isArray(K)?K:[K];for(E=0,A=K.length;E<A;++E){C.addLegacyHasOne(J,K[E])}}C.afterLegacyAssociations(J)},initIdentifier:function(F,A,E){var B=F.identifier||F.idgen,D=E.identifier||A.schema._defaultIdentifier,C;if(F.idgen){Ext.log.warn("Ext.data.Model: idgen has been deprecated. Please use identifier instead.")}if(B){delete F.identifier;delete F.idgen;B=Ext.Factory.dataIdentifier(B)}else{if(D){if(D.clone&&!D.getId()){B=D.clone()}else{if(D.isGenerator){B=D}else{B=Ext.Factory.dataIdentifier(D)}}}}A.identifier=E.identifier=B;if(!B){C=A.entityName;if(!C){C=Ext.id(null,"extModel")}A.identifier=Ext.Factory.dataIdentifier({type:"sequential",prefix:C+"-"})}},findValidator:function(C,D,B){var F=B.type||B,H=C[D],A,E,G;if(H){for(E=0,A=H.length;E<A;++E){G=H[E];if(G.type===F){return G}}}return null},makeInitializeFn:function(P){var A=["var "],H=["\nreturn function (e) {\n    var data = e.data, v;\n"],E=[],M=0,J,I,K,O,D,L,G,F,N,C,B;if(!(G=P.rankedFields)){G=P.rankFields()}for(C=0,B=G.length;C<B;++C){L=G[C];E[C]=F="f"+C;K=L.convert;if(C){A.push(",  \n    ")}A.push(F," = $fields["+C+"]");A.push("  /*  ",L.name,"  */");if((N=(L.defaultValue!==undefined))||K){O='data["'+L.name+'"]';++M;J=I="";if(L.cloneDefaultValue){J="Ext.clone(";I=")"}H.push("\n");if(K&&N){H.push("    v = ",O,";\n    if (v !== undefined) {\n        v = ",F,".convert(v, e);\n    }\n    if (v === undefined) {\n        v = ",J,F,".defaultValue",I,";\n    }\n    ",O," = v;")}else{if(K){H.push("    v = ",F,".convert(",O,",e);\n    if (v !== undefined) {\n        ",O," = v;\n    }\n")}else{if(N){H.push("    if (",O," === undefined) {\n        ",O," = ",J,F,".defaultValue",I,";\n    }\n")}}}}}if(!M){return Ext.emptyFn}A.push(";\n");A.push.apply(A,H);A.push("}");A=A.join("");D=new Function("$fields","Ext",A);return D(G,Ext)}}}},function(){var D=this,C=D.prototype,B=Ext.data.schema.Schema,A;D.proxyConfig=C.proxy;delete C.proxy;D.fields=[];D.fieldsMap=C.fieldsMap={};D.schema=C.schema=B.get(C.schema);C.idField=new Ext.data.field.Field(C.idProperty);D.identifier=new Ext.data.identifier.Sequential();D.onExtended(function(E,J){var I=E.prototype,L=J.schema,K=I.superclass.self,H,G,F;E.idProperty=J.idProperty||I.idProperty;if(L){delete J.schema;H=B.get(L)}else{if(!(H=I.schema)){H=A||(A=B.get("default"))}}E.rankFields=D.rankFields;E.topoAdd=D.topoAdd;I.schema=E.schema=H;if(!(G=J.entityName)){I.entityName=G=H.getEntityName(E);if(!G){if(J.associations){Ext.raise('Anonymous entities cannot specify "associations"')}if(J.belongsTo){Ext.raise('Anonymous entities cannot specify "belongsTo"')}if(J.hasMany){Ext.raise('Anonymous entities cannot specify "hasMany"')}if(J.hasOne){Ext.raise('Anonymous entities cannot specify "hasOne"')}if(J.matrices){Ext.raise('Anonymous entities cannot specify "manyToMany"')}}}E.entityName=G;E.fieldExtractors={};D.initIdentifier(J,E,I);D.initFields(J,E,I);D.initValidators(J,E,I);E.fields.items=E.fields;if(G){H.addEntity(E);D.initAssociations(H,J,E)}F=J.proxy;if(F){delete J.proxy}else{if(K!==D){F=K.proxyConfig||K.proxy}}E.proxyConfig=F})})