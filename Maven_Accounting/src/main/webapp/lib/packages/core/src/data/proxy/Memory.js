Ext.define("Ext.data.proxy.Memory",{extend:"Ext.data.proxy.Client",alias:"proxy.memory",alternateClassName:"Ext.data.MemoryProxy",isMemoryProxy:true,config:{enablePaging:false,data:{$value:null,merge:function(D,A,C,B){if(Ext.isArray(D)){return Ext.Array.clone(D)}else{return Ext.clone(D)}}}},finishOperation:function(B){var C=0,D=B.getRecords(),A=D.length;for(C;C<A;C++){D[C].commit()}B.setSuccessful(true)},create:function(A){this.finishOperation(A)},update:function(A){this.finishOperation(A)},erase:function(A){this.finishOperation(A)},read:function(F){var H=this,I=H.getReader().read(H.getData()),D=I.getRecords(),G=F.getSorters(),A=F.getGrouper(),C=F.getFilters(),B=F.getStart(),E=F.getLimit();if(F.process(I,null,null,false)!==false){if(C&&C.length){I.setRecords(D=Ext.Array.filter(D,Ext.util.Filter.createFilterFn(C)));I.setTotal(D.length)}if(A){G=G?G.concat(A):G}if(G&&G.length){I.setRecords(D=Ext.Array.sort(D,Ext.util.Sortable.createComparator(G)))}if(H.getEnablePaging()&&B!==undefined&&E!==undefined){if(B>=I.getTotal()){I.setConfig({success:false,records:[],total:0})}else{I.setRecords(Ext.Array.slice(D,B,B+E))}}F.setCompleted()}},clear:Ext.emptyFn})