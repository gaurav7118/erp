Ext.define("Ext.data.proxy.Proxy",{mixins:["Ext.mixin.Factoryable","Ext.mixin.Observable"],$configPrefixed:false,alias:"proxy.proxy",alternateClassName:["Ext.data.DataProxy","Ext.data.Proxy"],requires:["Ext.data.schema.Schema","Ext.data.reader.Reader","Ext.data.writer.Writer"],uses:["Ext.data.Batch","Ext.data.operation.*","Ext.data.Model"],config:{batchOrder:"create,update,destroy",batchActions:true,model:undefined,reader:{type:"json"},writer:{type:"json"}},isProxy:true,isSynchronous:false,constructor:function(A){this.mixins.observable.constructor.call(this,A);this.pendingOperations={}},applyModel:function(A){return Ext.data.schema.Schema.lookupEntity(A)},updateModel:function(B){if(B){var A=this.getReader();if(A&&!A.getModel()){A.setModel(B)}}},applyReader:function(A){if(this.isSynchronous){A=A||{};A.keepRawData=true}return Ext.Factory.reader(A)},updateReader:function(A){if(A){var C=this,B=C.getModel();if(!B){B=A.getModel();if(B){C.setModel(B)}}else{A.setModel(B)}if(A.onMetaChange){A.onMetaChange=Ext.Function.createSequence(A.onMetaChange,C.onMetaChange,C)}}},applyWriter:function(B){var A=this.getReader();B=Ext.Factory.writer(B);if(B.getRecord&&!B.getRecord()&&A&&A.getRecord){A=A.getRecord();if(A){B.setRecord(A)}}return B},abort:Ext.emptyFn,onMetaChange:function(A){this.fireEvent("metachange",this,A)},create:Ext.emptyFn,read:Ext.emptyFn,update:Ext.emptyFn,erase:Ext.emptyFn,batch:function(M,J){var I=this,H=I.getBatchActions(),F,B,E,C,D,K,A,L,G;if(M.operations===undefined){M={operations:M,listeners:J}}if(M.batch){if(Ext.isDefined(M.batch.runOperation)){F=Ext.applyIf(M.batch,{proxy:I,listeners:{}})}}else{M.batch={proxy:I,listeners:M.listeners||{}}}if(!F){F=new Ext.data.Batch(M.batch)}F.on("complete",Ext.bind(I.onBatchComplete,I,[M],0));E=I.getBatchOrder().split(",");C=E.length;for(K=0;K<C;K++){D=E[K];B=M.operations[D];if(B){if(H){F.add(I.createOperation(D,{records:B,params:M.params}))}else{L=B.length;for(A=0;A<L;A++){G=B[A];F.add(I.createOperation(D,{records:[G],params:M.params}))}}}}F.start();return F},onBatchComplete:function(A,B){var C=A.scope||this;if(B.hasException()){if(Ext.isFunction(A.failure)){Ext.callback(A.failure,C,[B,A])}}else{if(Ext.isFunction(A.success)){Ext.callback(A.success,C,[B,A])}}if(Ext.isFunction(A.callback)){Ext.callback(A.callback,C,[B,A])}},createOperation:function(C,B){var A=Ext.createByAlias("data.operation."+C,B);A.setProxy(this);this.pendingOperations[A._internalId]=A;return A},completeOperation:function(A){delete this.pendingOperations[A._internalId]},clone:function(){return new this.self(this.getInitialConfig())},destroy:function(){var B=this.pendingOperations,A,C;for(A in B){C=B[A];if(C&&C.isRunning()){C.abort()}}this.pendingOperations=null}})