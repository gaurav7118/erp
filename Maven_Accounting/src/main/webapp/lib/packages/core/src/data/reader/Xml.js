Ext.define("Ext.data.reader.Xml",{extend:"Ext.data.reader.Reader",requires:["Ext.dom.Query"],alternateClassName:"Ext.data.XmlReader",alias:"reader.xml",config:{record:"",namespace:""},createAccessor:function(A){if(Ext.isEmpty(A)){return Ext.emptyFn}if(Ext.isFunction(A)){return A}return function(B){return this.getNodeValue(Ext.DomQuery.selectNode(A,B))}},getNodeValue:function(A){if(A){if(typeof A.normalize==="function"){A.normalize()}A=A.firstChild;if(A){return A.nodeValue}}return undefined},getResponseData:function(A){var C=A.responseXML,B="XML data not found in the response";if(!C){Ext.Logger.warn(B);return this.createReadError(B)}return C},getData:function(A){return A.documentElement||A},getRoot:function(B){var C=B.nodeName,A=this.getRootProperty();if(!A||(C&&C==A)){return B}else{if(Ext.DomQuery.isXml(B)){return Ext.DomQuery.selectNode(A,B)}}},extractData:function(A,B){var C=this.getRecord();if(!C){Ext.raise("Record is a required parameter")}if(C!==A.nodeName){A=Ext.DomQuery.select(C,A)}else{A=[A]}return this.callParent([A,B])},readRecords:function(C,B,A){if(Ext.isArray(C)){C=C[0]}return this.callParent([C,B,A])},createFieldAccessor:function(E){var D=this,C=D.getNamespace(),B,A;B=E.mapping||((C?C+"|":"")+E.name);if(typeof B==="function"){A=function(F){return E.mapping(F,D)}}else{A=function(F){return D.getNodeValue(Ext.DomQuery.selectNode(B,F))}}return A},deprecated:{"5.1.1":{properties:{xmlData:null}}}})