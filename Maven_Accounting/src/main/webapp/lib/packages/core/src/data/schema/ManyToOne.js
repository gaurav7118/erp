Ext.define("Ext.data.schema.ManyToOne",{extend:"Ext.data.schema.Association",isManyToOne:true,isToOne:true,kind:"many-to-one",Left:Ext.define(null,{extend:"Ext.data.schema.Role",isMany:true,onDrop:function(G,E){var F=this,I=F.getAssociatedItem(G),B,D,C,H,A;if(I){B=I.removeAll();if(B&&F.inverse.owner){for(C=0,D=B.length;C<D;++C){B[C].drop()}}I.destroy();G[F.getStoreName()]=null}else{if(E){B=E.getRefs(G,F);if(B){for(A in B){B[A].drop()}}}}},processUpdate:function(F,B){var G=this,D=G.inverse.cls,E=B.R,A,H,I,C;if(E){for(A in E){H=F.peekRecord(D,A);if(H){C=F.getEntityList(G.cls,E[A]);I=G.getAssociatedItem(H);if(I){I.loadData(C);I.complete=true}else{H[G.getterName](null,null,C)}}else{F.onInvalidAssociationEntity(D,A)}}}},findRecords:function(H,I,D,M){var G=D,J=H.getRefs(I,this,true),K=this.association.field,L=K.name,C,B,E,F,A;if(!I.phantom){G=[];if(J||M){if(D){A={};for(E=0,F=D.length;E<F;++E){C=D[E];B=C.id;if(J&&J[B]){G.push(C)}else{if(M&&C.data[L]===undefined){G.push(C);C.data[L]=I.id;H.updateReference(C,K,I.id,undefined)}}A[B]=true}}if(J){for(B in J){if(!A||!A[B]){G.push(J[B])}}}}}return G},processLoad:function(B,A,E,D){var C=E;if(D){C=this.findRecords(D,A,E,true)}this.onLoadMany(A,C,D);return C},adoptAssociated:function(B,F){var C=this.getAssociatedItem(B),E,D,A;if(C){C.setSession(F);E=C.getData().items;for(D=0,A=E.length;D<A;++D){F.adopt(E[D])}}},createGetter:function(){var A=this;return function(B,C,D){return A.getAssociatedStore(this,B,C,D,A,true)}},createSetter:null,onAddToMany:function(A,B){this.syncFK(B,A.getAssociatedEntity(),false)},onLoadMany:function(J,E,I){var L=this.inverse.getInstanceName(),B=J.getId(),K=this.association.field,G,H,D,C,F,A;if(K){for(G=0,H=E.length;G<H;++G){D=E[G];D[L]=J;if(K){A=K.name;F=D.data;C=F[A];if(C!==B){F[A]=B;if(I){I.updateReference(D,K,B,C)}}}}}},onRemoveFromMany:function(A,B){this.syncFK(B,A.getAssociatedEntity(),true)},read:function(G,A,J,C){var F=this,I=F.inverse.getInstanceName(),B=F.callParent([G,A,J,C]),H,E,D;if(B){H=G[F.getterName](null,null,B);delete G.data[F.role];B=H.getData().items;for(D=0,E=B.length;D<E;++D){B[D][I]=G}}},syncFK:function(E,J,K){var I=this.association.getFieldName(),G=this.inverse,F=G.setterName,L=G.getInstanceName(),H=E.length,B=J.getId(),A,D,C;while(H-->0){D=E[H];A=!D.isEqual(B,D.get(I));C=K?null:J;if(A!==K){D.changingKey=true;D[F](C);D.changingKey=false}else{D[L]=C}}}}),Right:Ext.define(null,{extend:"Ext.data.schema.Role",left:false,side:"right",onDrop:function(C,B){var A=this.association.field;if(A){C.set(A.name,null)}C[this.getInstanceName()]=null},createGetter:function(){var A=this;return function(B,C){return A.doGetFK(this,B,C)}},createSetter:function(){var A=this;return function(B,C,D){return A.doSetFK(this,B,C,D)}},checkMembership:function(C,D){var B=this.association.field,A;A=this.getSessionStore(C,D.get(B.name));if(A&&!A.contains(D)){A.add(D)}},onValueChange:function(D,H,B,A){var I=this,L=I.getInstanceName(),N=I.cls,C,M,K,E,F,J,G;if(!D.changingKey){C=B||B===0;if(!C){D[L]=null}if(H){K=I.getSessionStore(H,A);if(K){K.remove(D)}if(C){K=I.getSessionStore(H,B);if(K&&!K.isLoading()){K.add(D)}if(N){G=H.peekRecord(N,B)}D[L]=G||undefined}}else{M=D.joined;if(M){for(E=0,F=M.length;E<F;++E){K=M[E];if(K.isStore){J=K.getAssociatedEntity();if(J&&J.self===I.cls&&J.getId()===A){K.remove(D)}}}}}}if(I.owner&&B===null){I.association.schema.queueKeyCheck(D,I)}},checkKeyForDrop:function(B){var A=this.association.field;if(B.get(A.name)===null){B.drop()}},getSessionStore:function(C,B){var A=this.cls,D;if(A){D=C.peekRecord(A,B);if(D){return this.inverse.getAssociatedItem(D)}}},read:function(F,C,B,E){var D=this.callParent([F,C,B,E]),A;if(D){A=D[0];if(A){F[this.getInstanceName()]=A;delete F.data[this.role]}}}})})