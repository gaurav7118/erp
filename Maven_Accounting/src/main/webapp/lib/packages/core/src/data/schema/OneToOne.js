Ext.define("Ext.data.schema.OneToOne",{extend:"Ext.data.schema.Association",isOneToOne:true,isToOne:true,kind:"one-to-one",Left:Ext.define(null,{extend:"Ext.data.schema.Role",onDrop:function(A,B){var C=this.getAssociatedItem(A);A[this.getInstanceName()]=null;if(C){C[this.inverse.getInstanceName()]=null}},createGetter:function(){var A=this;return function(){return A.doGet(this)}},createSetter:function(){var A=this;return function(B){return A.doSet(this,B)}},doGet:function(A){var B=this.getInstanceName(),C=A[B],D=A.session;if(!C&&D){}return C||null},doSet:function(A,E){var B=this.getInstanceName(),D=A[B],C=this.inverse.setterName;if(D!==E){A[B]=E;if(C){E[C](A)}}return D},read:function(A,D,B,E){var C=this,F=C.callParent([A,D,B,E]),G;if(F){G=F[0];if(G){G[C.inverse.getInstanceName()]=A;A[C.getInstanceName()]=G;delete A.data[C.role]}}}}),Right:Ext.define(null,{extend:"Ext.data.schema.Role",left:false,side:"right",createGetter:function(){var A=this;return function(B,C){return A.doGetFK(this,B,C)}},createSetter:function(){var A=this;return function(D,B,C){return A.doSetFK(this,D,B,C)}},onDrop:function(F,D){var B=this,C=B.association.field,A=B.getAssociatedItem(F),E;if(B.inverse.owner){if(D){E=F.get(C.name);if(E||E===0){A=D.getEntry(B.cls,E).record;if(A){A.drop()}}}else{if(A){A.drop()}}}if(C){F.set(C.name,null)}F[B.getInstanceName()]=null;if(A){A[B.inverse.getInstanceName()]=null}},onValueChange:function(H,G,F){var E=this,A=H[E.getOldInstanceName()]||E.getAssociatedItem(H),D=F||F===0,C=E.getInstanceName(),B=E.cls;H.changingKey=true;E.doSetFK(H,F);if(!D){H[C]=null}else{if(G&&B){H[C]=G.peekRecord(B,F)||undefined}}if(E.inverse.owner&&A){E.association.schema.queueKeyCheck(A,E)}H.changingKey=false},checkKeyForDrop:function(A){var B=this.inverse.getAssociatedItem(A);if(!B){A.drop()}},read:function(D,E,O,F){var I=this,M=I.callParent([D,E,O,F]),J,L,N,H,K,B,C,A,G;if(M){J=M[0];L=I.association.field;if(L){N=L.name}H=D.session;G=D.data;if(J){if(H){K=H.getRefs(J,this.inverse,true);A=(K&&K[D.id])||(G[N]===undefined)}else{A=true}if(A){if(L){C=G[N];B=J.id;if(C!==B){G[N]=B;if(H){H.updateReference(D,L,B,C)}}}J[I.inverse.getInstanceName()]=D;D[I.getInstanceName()]=J}delete G[I.role]}}}})})