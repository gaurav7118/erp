Ext.define("Ext.data.schema.Role",{isRole:true,left:true,owner:false,side:"left",isMany:false,defaultReaderType:"json",_internalReadOptions:{recordsOnly:true,asRoot:true},constructor:function(B,C){var D=this,A=C.extra;Ext.apply(D,C);if(A){delete A.type;Ext.apply(D,A);delete D.extra}D.association=B;if(B.owner===D.side){B.owner=D;D.owner=true}},processUpdate:function(){Ext.raise('Only the "many" for an association may be processed. "'+this.role+'" is not valid.')},processLoad:function(B,C,A,D){return A},checkMembership:Ext.emptyFn,adoptAssociated:function(B,C){var A=this.getAssociatedItem(B);if(A){C.adopt(A)}},createAssociationStore:function(F,K,E,L){var H=this,D=H.association,G=D.getFieldName(),I=D.isManyToMany,B=H.storeConfig,A=K.getId(),C={asynchronousLoad:false,model:H.cls,role:H,session:F,associatedEntity:K,disableMetaChangeEvent:true,pageSize:null,remoteFilter:true,trackRemoved:!F},J;if(I){C.filters=[{property:H.inverse.field,value:A,exactMatch:true}]}else{if(G){C.filters=[{property:G,value:A,exactMatch:true}];C.foreignKeyName=G}}if(B){Ext.apply(C,B)}J=Ext.Factory.store(C);H.onStoreCreate(J,F,A);if(G||(I&&F)){J.on({scope:H,add:"onAddToMany",remove:"onRemoveFromMany",clear:"onRemoveFromMany"})}if(E){J.loadData(E);J.complete=!!L}return J},onStoreCreate:Ext.emptyFn,getAssociatedStore:function(N,F,B,P,R){var T=this,L=T.getStoreName(),G=N[L],A=N.session,J=F&&F.reload,M=N.$source,H=false,C,D,O,Q,K,I,E,S;if(!G){if(A){if(!P&&M){M=M[L];if(M&&!M.isLoading()){E=M;P=[];K=M.getData().items;for(O=0,Q=K.length;O<Q;++O){I=K[O];P.push(A.getRecord(I.self,I.id))}H=!!M.complete;C=true}}if(!C){S=!!P;P=T.findRecords(A,N,P,R);if(!S&&(!P||!P.length)){P=null}H=S}}else{H=!!(P&&P.length>0)}G=T.createAssociationStore(A,N,P,H);G.$source=E;if(!P&&(T.autoLoad||F)){J=true}N[L]=G}if(F){if(J||G.isLoading()){G.on("load",function(W,V,X,U){D=[W,U];B=B||F.scope||N;if(X){Ext.callback(F.success,B,D)}else{Ext.callback(F.failure,B,D)}D.push(X);Ext.callback(F,B,D);Ext.callback(F.callback,B,D)},null,{single:true})}else{D=[G,null];B=B||F.scope||N;Ext.callback(F.success,B,D);D.push(true);Ext.callback(F,B,D);Ext.callback(F.callback,B,D)}}if(J&&!G.isLoading()){G.load()}return G},getAssociatedItem:function(B){var A=this.isMany?this.getStoreName():this.getInstanceName();return B[A]||null},onDrop:Ext.emptyFn,getReaderRoot:function(){var A=this;return A.associationKey||(A.associationKey=A.association.schema.getNamer().readerRoot(A.role))},getReader:function(){var C=this,A=C.reader,D=C.cls,E=!C.associationKey,B=this.getReaderRoot();if(A&&!A.isReader){if(Ext.isString(A)){A={type:A}}Ext.applyIf(A,{model:D,rootProperty:B,useSimpleAccessors:E,type:C.defaultReaderType});A=C.reader=Ext.createByAlias("reader."+A.type,A)}return A},getInstanceName:function(){var A=this;return A.instanceName||(A.instanceName=A.association.schema.getNamer().instanceName(A.role))},getOldInstanceName:function(){return this.oldInstanceName||(this.oldInstanceName="$old"+this.getInstanceName())},getStoreName:function(){var A=this;return A.storeName||(A.storeName=A.association.schema.getNamer().storeName(A.role))},constructReader:function(E){var F=this,A=F.getReader(),G=F.cls,H=!F.associationKey,B=F.getReaderRoot(),C,D;if(!A){D=G.getProxy();if(D){C=D.getReader();A=new C.self();A.copyFrom(C);A.setRootProperty(B)}else{A=new E.self({model:G,useSimpleAccessors:H,rootProperty:B})}F.reader=A}return A},read:function(C,F,D,E){var A=this.constructReader(D),B=A.getRoot(F);if(B){return A.readRecords(B,E,this._internalReadOptions)}},getCallbackOptions:function(A,B,C){if(typeof A==="function"){A={callback:A,scope:B||C}}else{if(A){A=Ext.apply({},A);A.scope=B||A.scope||C}}return A},doGetFK:function(B,M,K){var H=this,L=H.cls,E=H.association.getFieldName(),J=H.getInstanceName(),I=B[J],A=M&&M.reload,D=I!==undefined&&!A,G=B.session,C,F;if(!D){if(G){C=B.get(E);if(C||C===0){D=G.peekRecord(L,C,true)&&!A;I=G.getRecord(L,C,false)}else{D=true;B[J]=I=null}}else{if(E){C=B.get(E);if(!C&&C!==0){D=true;B[J]=I=null}else{if(!I){I=L.createWithId(C)}}}else{D=true}}}else{if(I){D=!I.isLoading()}}if(D){if(M){F=[I,null];K=K||M.scope||B;Ext.callback(M.success,K,F);F.push(true);Ext.callback(M,K,F);Ext.callback(M.callback,K,F)}}else{B[J]=I;M=H.getCallbackOptions(M,K,B);I.load(M)}return I},doSetFK:function(A,I,M,L){var H=this,F=H.association.getFieldName(),J=H.getInstanceName(),E=A[J],C=H.inverse,D=C.setterName,G=A.session,K,B;if(I&&I.isEntity){if(E!==I){B=H.getOldInstanceName();A[B]=E;A[J]=I;if(E&&E.isEntity){E[C.getInstanceName()]=undefined}if(F){A.set(F,I.getId())}delete A[B];if(D){I[D](A)}}}else{if(!F){Ext.raise('No foreignKey specified for "'+H.association.left.role+'" by '+A.$className)}K=(A.changingKey&&!C.isMany)||A.set(F,I);if(K&&E&&E.isEntity&&!E.isEqual(E.getId(),I)){A[J]=undefined;if(!C.isMany){E[C.getInstanceName()]=undefined}}}if(M){if(Ext.isFunction(M)){M={callback:M,scope:L||A}}return A.save(M)}}})