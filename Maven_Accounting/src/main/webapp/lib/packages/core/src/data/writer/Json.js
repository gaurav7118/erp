Ext.define("Ext.data.writer.Json",{extend:"Ext.data.writer.Writer",alternateClassName:"Ext.data.JsonWriter",alias:"writer.json",config:{rootProperty:undefined,encode:false,allowSingle:true,expandData:false},constructor:function(A){if(A&&A.hasOwnProperty("root")){A=Ext.apply({},A);A.rootProperty=A.root;delete A.root;Ext.log.warn('Ext.data.writer.Json: Using the deprecated "root" configuration. Use "rootProperty" instead.')}this.callParent([A])},getExpandedData:function(D){var B=D.length,E=0,H,A,F,C,G,I=function(J,K){var L={};L[J]=K;return L};for(;E<B;E++){H=D[E];for(A in H){if(H.hasOwnProperty(A)){F=A.split(".");C=F.length-1;if(C>0){G=H[A];for(;C>0;C--){G=I(F[C],G)}H[F[0]]=H[F[0]]||{};Ext.Object.merge(H[F[0]],G);delete H[A]}}}}return D},writeRecords:function(E,F){var D=this,A=D.getRootProperty(),C,G,B;if(D.getExpandData()){F=D.getExpandedData(F)}if(D.getAllowSingle()&&F.length===1){F=F[0];G=true}B=this.getTransform();if(B){F=B(F,E)}if(D.getEncode()){if(A){E.setParam(A,Ext.encode(F))}else{Ext.raise("Must specify a root when using encode")}}else{if(G||(F&&F.length)){C=E.getJsonData()||{};if(A){C[A]=F}else{C=F}E.setJsonData(C)}}return E}})