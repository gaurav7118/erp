Ext.define("Ext.direct.RemotingProvider",{extend:"Ext.direct.JsonProvider",alias:"direct.remotingprovider",requires:["Ext.util.MixedCollection","Ext.util.DelayedTask","Ext.direct.Transaction","Ext.direct.RemotingMethod","Ext.direct.Manager"],type:"remoting",enableBuffer:10,bufferLimit:Number.MAX_VALUE,maxRetries:1,constructor:function(A){var B=this;B.callParent(arguments);B.namespace=(Ext.isString(B.namespace))?Ext.ns(B.namespace):B.namespace||Ext.global;B.transactions=new Ext.util.MixedCollection();B.callBuffer=[]},doConnect:function(){if(!this.apiCreated){this.initAPI();this.apiCreated=true}},getNamespace:function(B,E){var F,D,C,A;B=B||Ext.global;F=E.toString().split(".");for(C=0,A=F.length;C<A;C++){D=F[C];B=B[D];if(typeof B==="undefined"){return B}}return B},createNamespaces:function(B,E){var F,D,C,A;B=B||Ext.global;F=E.toString().split(".");for(C=0,A=F.length;C<A;C++){D=F[C];B[D]=B[D]||{};B=B[D]}return B},initAPI:function(){var I=this,F=I.actions,D=I.namespace,B=Ext.direct.Manager,E,K,C,G,H,A,J;for(E in F){if(F.hasOwnProperty(E)){if(I.disableNestedActions){K=D[E];if(!K){K=D[E]={}}}else{K=I.getNamespace(D,E);if(!K){K=I.createNamespaces(D,E)}}C=F[E];for(G=0,H=C.length;G<H;++G){A=new Ext.direct.RemotingMethod(C[G]);K[A.name]=J=I.createHandler(E,A);B.registerMethod(J.$name,J)}}}},createHandler:function(C,E){var B=this,D=Array.prototype.slice,A;if(!E.formHandler){A=function(){B.configureRequest(C,E,D.call(arguments,0))}}else{A=function(){B.configureFormRequest(C,E,D.call(arguments,0))}}A.name=A.$name=C+"."+E.name;A.$directFn=true;A.directCfg=A.$directCfg={action:C,method:E};return A},connect:function(){var A=this;if(!A.url){Ext.raise('Error initializing RemotingProvider "'+A.id+'", no url configured.')}A.callParent()},runCallback:function(F,C){var E=!!C.status,D=E?"success":"failure",G,B,A;if(F&&F.callback){G=F.callback;B=F.callbackOptions;A=typeof C.result!=="undefined"?C.result:C.data;if(Ext.isFunction(G)){G(A,C,E,B)}else{Ext.callback(G[D],G.scope,[A,C,E,B]);Ext.callback(G.callback,G.scope,[A,C,E,B])}}},onData:function(J,H,C){var F=this,D,E,I,A,B,G;if(H){I=F.createEvents(C);for(D=0,E=I.length;D<E;++D){A=I[D];B=F.getTransaction(A);F.fireEvent("data",F,A);if(B&&F.fireEvent("beforecallback",F,A,B)!==false){F.runCallback(B,A,true)}Ext.direct.Manager.removeTransaction(B)}}else{G=[].concat(J.transaction);for(D=0,E=G.length;D<E;++D){B=F.getTransaction(G[D]);if(B&&B.retryCount<F.maxRetries){B.retry()}else{A=new Ext.direct.ExceptionEvent({data:null,transaction:B,code:Ext.direct.Manager.exceptions.TRANSPORT,message:"Unable to connect to the server.",xhr:C});F.fireEvent("data",F,A);if(B&&F.fireEvent("beforecallback",F,A,B)!==false){F.runCallback(B,A,false)}Ext.direct.Manager.removeTransaction(B)}}}},getTransaction:function(A){return A&&A.tid?Ext.direct.Manager.getTransaction(A.tid):null},getPayload:function(B){var A={action:B.action,method:B.method,data:B.data,type:"rpc",tid:B.id};if(B.metadata){A.metadata=B.metadata}return A},sendRequest:function(A){var G=this,D,B,C,I=G.enableUrlEncode,H,E,F;D={url:G.url,callback:G.onData,scope:G,transaction:A,timeout:G.timeout};if(A.timeout){D.timeout=A.timeout}if(Ext.isArray(A)){B=[];for(E=0,F=A.length;E<F;++E){H=G.getPayload(A[E]);B.push(H)}}else{B=G.getPayload(A)}if(I){C={};C[Ext.isString(I)?I:"data"]=Ext.encode(B);D.params=C}else{D.jsonData=B}Ext.Ajax.request(D)},queueTransaction:function(D){var C=this,B=C.callBuffer,A=C.enableBuffer;if(D.form){C.sendFormRequest(D);return }if(A===false||D.disableBatching||typeof D.timeout!=="undefined"){C.sendRequest(D);return }B.push(D);if(A&&B.length<C.bufferLimit){if(!C.callTask){C.callTask=new Ext.util.DelayedTask(C.combineAndSend,C)}C.callTask.delay(Ext.isNumber(A)?A:10)}else{C.combineAndSend()}},combineAndSend:function(){var C=this,B=C.callBuffer,A=B.length;if(A>0){C.sendRequest(A===1?B[0]:B);C.callBuffer=[]}},configureTransaction:function(D,A,F,G){var E,B,H,I,C;E=A.getCallData(F);B=E.callback;H=E.scope;I=E.options;if(B&&!Ext.isFunction(B)){Ext.raise("Callback argument is not a function for Ext Direct method "+D+"."+A.name)}B=B&&H?Ext.Function.bind(B,H):B;C=Ext.apply({},{provider:this,args:F,action:D,method:A.name,form:E.form,data:E.data,metadata:E.metadata,callbackOptions:I,callback:B,isForm:G,disableBatching:A.disableBatching});if(I&&I.timeout!=null){C.timeout=I.timeout}return new Ext.direct.Transaction(C)},configureRequest:function(C,E,A){var B=this,D;D=B.configureTransaction(C,E,A);if(B.fireEvent("beforecall",B,D,E)!==false){Ext.direct.Manager.addTransaction(D);B.queueTransaction(D);B.fireEvent("call",B,D,E)}},configureFormRequest:function(E,H,B){var D=this,F,C,A,G;F=D.configureTransaction(E,H,B,true);if(D.fireEvent("beforecall",D,F,H)!==false){Ext.direct.Manager.addTransaction(F);C=F.form;A=String(C.getAttribute("enctype")).toLowerCase()==="multipart/form-data";G={extTID:F.id,extAction:E,extMethod:H.name,extType:"rpc",extUpload:String(A)};if(F.metadata){G.extMetadata=Ext.JSON.encode(F.metadata)}Ext.apply(F,{form:C,isUpload:A,params:G});D.sendFormRequest(F);D.fireEvent("call",D,F,H)}},sendFormRequest:function(B){var A=this;Ext.Ajax.request({url:A.url,params:B.params,callback:A.onData,scope:A,form:B.form,isUpload:B.isUpload,transaction:B})},inheritableStatics:{checkConfig:function(A){return A&&A.type==="remoting"&&A.url&&Ext.isArray(A.actions)}}})