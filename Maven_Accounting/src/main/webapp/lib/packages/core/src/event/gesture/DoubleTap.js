Ext.define("Ext.event.gesture.DoubleTap",{extend:"Ext.event.gesture.SingleTouch",priority:300,inheritableStatics:{DIFFERENT_TARGET:"Different Target"},config:{moveDistance:8,tapDistance:24,maxDuration:300},handledEvents:["singletap","doubletap"],singleTapTimer:null,startTime:0,lastTapTime:0,onTouchStart:function(C){var B=this,A;if(B.callParent(arguments)===false){return false}A=B.lastStartPoint=C.changedTouches[0].point;B.startPoint=B.startPoint||A;B.startTime=C.time;clearTimeout(B.singleTapTimer)},onTouchMove:function(C){var B=this,A=C.changedTouches[0].point;if(Math.abs(A.getDistanceTo(B.lastStartPoint))>=B.getMoveDistance()){B.startPoint=null;return B.fail(B.self.TOUCH_MOVED)}},onTouchEnd:function(E){var G=this,D=G.getMaxDuration(),A=E.time,F=E.target,H=G.lastTapTime,B=G.lastTarget,I=E.changedTouches[0].point,C;G.lastTapTime=A;G.lastTarget=F;if(H){C=A-H;if(C<=D&&Math.abs(I.getDistanceTo(G.startPoint))<=G.getTapDistance()){if(F!==B){return G.fail(G.self.DIFFERENT_TARGET)}G.lastTarget=null;G.lastTapTime=0;G.fire("doubletap",E,{touch:E.changedTouches[0],duration:C});G.startPoint=null;return }}if(A-G.startTime>D){G.fireSingleTap(E)}else{G.setSingleTapTimer(E)}},setSingleTapTimer:function(B){var A=this;A.singleTapTimer=Ext.defer(function(){A.fireSingleTap(B)},A.getMaxDuration())},fireSingleTap:function(A,B){this.fire("singletap",A,{touch:B});this.startPoint=null},reset:function(){var A=this;A.startTime=A.lastTapTime=0;A.lastStartPoint=A.startPoint=A.singleTapTimer=null}},function(A){var B=Ext.manifest.gestures;A.instance=new A(B&&B.doubleTap)})