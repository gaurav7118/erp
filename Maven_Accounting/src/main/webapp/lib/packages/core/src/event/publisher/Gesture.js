Ext.define("Ext.event.publisher.Gesture",{extend:"Ext.event.publisher.Dom",requires:["Ext.util.Point","Ext.AnimationQueue"],uses:"Ext.event.gesture.*",type:"gesture",config:{async:true},isCancelEvent:{touchcancel:1,pointercancel:1,MSPointerCancel:1},handledEvents:[],handledDomEvents:[],constructor:function(B){var G=this,C=G.handledDomEvents,L=Ext.supports,J=L.TouchEvents,K=Ext.Function,D=G.onTouchStart,A=G.onTouchMove,I=G.onTouchEnd,F=K.createAnimationFrame(G.onTouchStart,G,null,1),E=K.createAnimationFrame(G.onTouchMove,G),H=K.createAnimationFrame(G.onTouchEnd,G,null,1);G._handlers={touchstart:D,touchmove:A,touchend:I,touchcancel:I,pointerdown:D,pointermove:A,pointerup:I,pointercancel:I,MSPointerDown:D,MSPointerMove:A,MSPointerUp:I,MSPointerCancel:I,mousedown:D,mousemove:A,mouseup:I};G._asyncHandlers={touchstart:F,touchmove:E,touchend:H,touchcancel:H,pointerdown:F,pointermove:E,pointerup:H,pointercancel:H,MSPointerDown:F,MSPointerMove:E,MSPointerUp:H,MSPointerCancel:H,mousedown:F,mousemove:E,mouseup:H};G.activeTouchesMap={};G.activeTouches=[];G.changedTouches=[];G.recognizers=[];if(J){G.onTargetTouchMove=G.onTargetTouchMove.bind(G);G.onTargetTouchEnd=G.onTargetTouchEnd.bind(G)}if(L.PointerEvents){C.push("pointerdown","pointermove","pointerup","pointercancel");G.mousePointerType="mouse"}else{if(L.MSPointerEvents){C.push("MSPointerDown","MSPointerMove","MSPointerUp","MSPointerCancel");G.mousePointerType=4}else{if(J){C.push("touchstart","touchmove","touchend","touchcancel")}}}if(!C.length||(J&&Ext.isWebKit&&Ext.os.is.Desktop)){C.push("mousedown","mousemove","mouseup")}G.initConfig(B);return G.callParent()},onReady:function(){this.callParent();Ext.Array.sort(this.recognizers,function(D,C){var B=D.priority,A=C.priority;return(B>A)?1:(B<A)?-1:0})},registerRecognizer:function(A){var E=this,B=A.handledEvents,D=B.length,C;A.setOnRecognized(E.onRecognized);A.setCallbackScope(E);for(C=0;C<D;C++){E.handledEvents.push(B[C])}E.registerEvents(B);E.recognizers.push(A)},onRecognized:function(D,F,A){var H=this,I=F.changedTouches,G=I.length,J,E,C,B;A=A||{};A.type=D;A.target=I[0].target;A.isStopped=false;F=F.chain(A);if(G>1){J=[];for(C=0;C<G;C++){B=I[C];J.push(B.targets)}E=H.getCommonTargets(J)}else{E=I[0].targets}H.publish(D,E,F)},getCommonTargets:function(A){var H=A[0],F=A.length;if(F===1){return H}var D=[],E=1,G,B,C;while(true){G=H[H.length-E];if(!G){return D}for(C=1;C<F;C++){B=A[C];if(B[B.length-E]!==G){return D}}D.unshift(G);E++}return D},invokeRecognizers:function(C,F){var B=this.recognizers,E=B.length,D,A;if(C==="onStart"){for(D=0;D<E;D++){B[D].isActive=true}}for(D=0;D<E;D++){A=B[D];if(A.isActive&&A[C].call(A,F)===false){A.isActive=false}}},updateTouches:function(H,B){var L=this,P=H.browserEvent,E=P.changedTouches||[P],A=L.activeTouches,I=L.activeTouchesMap,N=[],K,G,D,F,C,J,O,M;for(C=0,J=E.length;C<J;C++){K=E[C];if("identifier" in K){G=K.identifier}else{if("pointerId" in K){G=K.pointerId}else{G=1}}D=I[G];if(!D){F=Ext.event.Event.resolveTextNode(K.target);D=I[G]={identifier:G,target:F,targets:L.getPropagatingTargets(F)};A.push(D)}if(B){delete I[G];Ext.Array.remove(A,D)}O=K.pageX;M=K.pageY;D.pageX=O;D.pageY=M;D.point=new Ext.util.Point(O,M);N.push(D)}H.touches=Ext.Array.clone(A);H.changedTouches=N},doDelegatedEvent:function(B){var A=this;B=A.callParent([B,false]);if(B){if(!B.button||B.button<1){A.handlers[B.type].call(A,B)}A.afterEvent(B)}},onTouchStart:function(D){var A=this,C=D.target,B=D.browserEvent.touches;if(D.browserEvent.type==="touchstart"){C.addEventListener("touchmove",A.onTargetTouchMove);C.addEventListener("touchend",A.onTargetTouchEnd);C.addEventListener("touchcancel",A.onTargetTouchEnd)}if(B&&B.length<=A.activeTouches.length){A.removeGhostTouches(B)}A.updateTouches(D);if(!A.isStarted){A.isStarted=true;A.invokeRecognizers("onStart",D);if(Ext.enableGarbageCollector){Ext.dom.GarbageCollector.pause()}}A.invokeRecognizers("onTouchStart",D)},onTouchMove:function(C){var B=this,A=B.mousePointerType;if(B.isStarted){if(A&&C.browserEvent.pointerType===A&&C.buttons===0){C.type=Ext.dom.Element.prototype.eventMap.touchend;C.button=0;B.onTouchEnd(C);return }B.updateTouches(C);if(C.changedTouches.length>0){B.invokeRecognizers("onTouchMove",C)}}},onTouchEnd:function(B){var A=this;if(!A.isStarted){return }A.updateTouches(B,true);A.invokeRecognizers(A.isCancelEvent[B.type]?"onTouchCancel":"onTouchEnd",B);if(!A.activeTouches.length){A.isStarted=false;A.invokeRecognizers("onEnd",B);if(Ext.enableGarbageCollector){Ext.dom.GarbageCollector.resume()}}},onTargetTouchMove:function(A){if(Ext.elevateFunction){Ext.elevateFunction(this.doTargetTouchMove,this,[A])}else{this.doTargetTouchMove(A)}},doTargetTouchMove:function(A){if(!Ext.getBody().contains(A.target)){this.onTouchMove(new Ext.event.Event(A))}},onTargetTouchEnd:function(A){if(Ext.elevateFunction){Ext.elevateFunction(this.doTargetTouchEnd,this,[A])}else{this.doTargetTouchEnd(A)}},doTargetTouchEnd:function(C){var A=this,B=C.target;B.removeEventListener("touchmove",A.onTargetTouchMove);B.removeEventListener("touchend",A.onTargetTouchEnd);B.removeEventListener("touchcancel",A.onTargetTouchEnd);if(!Ext.getBody().contains(B)){A.onTouchEnd(new Ext.event.Event(C))}},updateAsync:function(A){this.handlers=A?this._asyncHandlers:this._handlers},reset:function(){var E=this,B=E.recognizers,D=B.length,C,A;E.activeTouchesMap={};E.activeTouches=[];E.changedTouches=[];E.isStarted=false;for(C=0;C<D;C++){A=B[C];A.reset();A.isActive=false}this.callParent()},privates:{removeGhostTouches:function(E){var C={},A=E.length,H=this.activeTouches,D=this.activeTouchesMap,B,G,F;for(B=0;B<A;++B){C[E[B].identifier]=true}B=H.length;while(B--){F=H[B];G=F.identifier;if(!E[G]){Ext.Array.remove(H,F);delete D[G]}}}}},function(A){A.instance=new A()})