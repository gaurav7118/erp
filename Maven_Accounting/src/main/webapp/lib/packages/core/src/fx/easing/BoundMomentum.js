Ext.define("Ext.fx.easing.BoundMomentum",{extend:"Ext.fx.easing.Abstract",requires:["Ext.fx.easing.Momentum","Ext.fx.easing.Bounce"],config:{momentum:null,bounce:null,minMomentumValue:0,maxMomentumValue:0,minVelocity:0.01,startVelocity:0},applyMomentum:function(A,B){return Ext.factory(A,Ext.fx.easing.Momentum,B)},applyBounce:function(A,B){return Ext.factory(A,Ext.fx.easing.Bounce,B)},updateStartTime:function(A){this.getMomentum().setStartTime(A);this.callParent(arguments)},updateStartVelocity:function(A){this.getMomentum().setStartVelocity(A)},updateStartValue:function(A){this.getMomentum().setStartValue(A)},reset:function(){this.lastValue=null;this.isBouncingBack=false;this.isOutOfBound=false;return this.callParent(arguments)},getValue:function(){var A=this.getMomentum(),J=this.getBounce(),E=A.getStartVelocity(),F=E>0?1:-1,G=this.getMinMomentumValue(),D=this.getMaxMomentumValue(),C=(F==1)?D:G,H=this.lastValue,I,B;if(E===0){return this.getStartValue()}if(!this.isOutOfBound){I=A.getValue();B=A.getVelocity();if(Math.abs(B)<this.getMinVelocity()){this.isEnded=true}if(I>=G&&I<=D){return I}this.isOutOfBound=true;J.setStartTime(Ext.Date.now()).setStartVelocity(B).setStartValue(C)}I=J.getValue();if(!this.isEnded){if(!this.isBouncingBack){if(H!==null){if((F==1&&I<H)||(F==-1&&I>H)){this.isBouncingBack=true}}}else{if(Math.round(I)==C){this.isEnded=true}}}this.lastValue=I;return I}})