Ext.define("Ext.list.TreeItem",{extend:"Ext.list.AbstractTreeItem",xtype:"treelistitem",collapsedCls:Ext.baseCSSPrefix+"treelist-item-collapsed",expandedCls:Ext.baseCSSPrefix+"treelist-item-expanded",floatedCls:Ext.baseCSSPrefix+"treelist-item-floated",floatedToolCls:Ext.baseCSSPrefix+"treelist-item-tool-floated",leafCls:Ext.baseCSSPrefix+"treelist-item-leaf",expandableCls:Ext.baseCSSPrefix+"treelist-item-expandable",hideIconCls:Ext.baseCSSPrefix+"treelist-item-hide-icon",loadingCls:Ext.baseCSSPrefix+"treelist-item-loading",selectedCls:Ext.baseCSSPrefix+"treelist-item-selected",selectedParentCls:Ext.baseCSSPrefix+"treelist-item-selected-parent",withIconCls:Ext.baseCSSPrefix+"treelist-item-with-icon",hoverCls:Ext.baseCSSPrefix+"treelist-item-over",rowHoverCls:Ext.baseCSSPrefix+"treelist-row-over",isTreeListItem:true,config:{rowCls:null},rowClsProperty:"rowCls",element:{reference:"element",tag:"li",cls:Ext.baseCSSPrefix+"treelist-item",children:[{reference:"rowElement",cls:Ext.baseCSSPrefix+"treelist-row",children:[{reference:"wrapElement",cls:Ext.baseCSSPrefix+"treelist-item-wrap",children:[{reference:"iconElement",cls:Ext.baseCSSPrefix+"treelist-item-icon"},{reference:"textElement",cls:Ext.baseCSSPrefix+"treelist-item-text"},{reference:"expanderElement",cls:Ext.baseCSSPrefix+"treelist-item-expander"}]}]},{reference:"itemContainer",tag:"ul",cls:Ext.baseCSSPrefix+"treelist-container"},{reference:"toolElement",cls:Ext.baseCSSPrefix+"treelist-item-tool"}]},constructor:function(A){this.callParent([A]);var B=this.toolElement.dom;B.parentNode.removeChild(B)},getToolElement:function(){return this.toolElement},insertItem:function(B,A){if(A){B.element.insertBefore(A.element)}else{this.itemContainer.appendChild(B.element)}},isSelectionEvent:function(B){var A=this.getOwner();return(!this.isToggleEvent(B)||!A.getExpanderOnly()||A.getSelectOnExpander())},isToggleEvent:function(B){var A=false;if(this.getOwner().getExpanderOnly()){A=B.target===this.expanderElement.dom}else{A=!this.itemContainer.contains(B.target)}return A},nodeCollapseBegin:function(D,E){var C=this,B=C.itemContainer,A;if(C.expanding){C.stopAnimation(C.expanding)}A=D&&B.getHeight();C.callParent([D,E]);if(D){B.dom.style.display="block";C.collapsingForExpand=E;C.collapsing=this.runAnimation(Ext.merge({from:{height:A},to:{height:0},callback:C.nodeCollapseDone,scope:C},D))}},nodeCollapseDone:function(C){var B=this,A=B.itemContainer;B.collapsing=null;A.dom.style.display="";A.setHeight(null);B.nodeCollapseEnd(B.collapsingForExpand)},nodeExpandBegin:function(D){var C=this,B=C.itemContainer,A;if(C.collapsing){C.stopAnimation(C.collapsing)}C.callParent([D]);if(D){A=B.getHeight();B.setHeight(0);C.expanding=C.runAnimation(Ext.merge({to:{height:A},callback:C.nodeExpandDone,scope:C},D))}},nodeExpandDone:function(){this.expanding=null;this.itemContainer.setHeight(null);this.nodeExpandEnd()},removeItem:function(A){this.itemContainer.removeChild(A.element)},updateNode:function(A,B){this.syncIndent();this.callParent([A,B])},updateExpandable:function(){this.updateExpandCls()},updateExpanded:function(){this.updateExpandCls()},updateFloated:function(C,A){var B=this;B.callParent([C,A]);B.element.toggleCls(B.floatedCls,C);B.toolElement.toggleCls(B.floatedToolCls,C)},updateIconCls:function(B,A){var D=this,C=D.element;D.doIconCls(D.iconElement,B,A);D.doIconCls(D.toolElement,B,A);C.toggleCls(D.withIconCls,!!B);C.toggleCls(D.hideIconCls,B===null)},updateLeaf:function(A){this.element.toggleCls(this.leafCls,A)},updateLoading:function(A){this.element.toggleCls(this.loadingCls,A)},updateOver:function(B){var A=this;A.element.toggleCls(A.hoverCls,!!B);A.rowElement.toggleCls(A.rowHoverCls,B>1)},updateRowCls:function(B,A){this.rowElement.replaceCls(A,B)},updateSelected:function(C,E){var D=this,A=D.selectedCls,B=D.getToolElement();D.callParent([C,E]);D.element.toggleCls(A,C);if(B){B.toggleCls(A,C)}},updateSelectedParent:function(B){var C=this;C.element.toggleCls(C.selectedParentCls,B);var A=C.getToolElement();if(A){A.toggleCls(C.selectedCls,B)}},updateText:function(A){this.textElement.update(A)},privates:{doNodeUpdate:function(A){this.callParent([A]);this.setRowCls(A&&A.data[this.rowClsProperty])},doIconCls:function(C,B,A){if(A){C.removeCls(A)}if(B){C.addCls(B)}},syncIndent:function(){var C=this,A=C.getIndent(),B=C.getNode(),D;if(B){D=B.data.depth-1;C.wrapElement.dom.style.marginLeft=(D*A)+"px"}},updateExpandCls:function(){if(!this.updatingExpandCls){var E=this,C=E.getExpandable(),D=E.element,B=E.getExpanded(),A=E.expandedCls,F=E.collapsedCls;E.updatingExpandCls=true;D.toggleCls(E.expandableCls,C);if(C){D.toggleCls(A,B);D.toggleCls(F,!B)}else{D.removeCls([A,F])}E.updatingExpandCls=false}},updateIndent:function(B,A){this.syncIndent();this.callParent([B,A])}}})