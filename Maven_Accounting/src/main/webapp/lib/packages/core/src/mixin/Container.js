Ext.define("Ext.mixin.Container",{extend:"Ext.Mixin",mixinConfig:{id:"container"},isContainer:true,config:{referenceHolder:false},getReferences:function(){Ext.ComponentManager.fixReferences();return this.refs||null},lookup:function(B){var A=this.getReferences();return(A&&A[B])||null},lookupReference:function(A){return this.lookup(A)},privates:{attachReference:function(B){var D=this,C,A;if(D.destroying||D.destroyed){return }A=D.refs||(D.refs={});C=B.referenceKey;if(A[C]&&A[C]!==B){Ext.log.warn('Duplicate reference: "'+C+'" on '+D.id)}A[C]=B},clearReference:function(B){var A=this.refs,C=B.referenceKey;if(A&&C){B.viewModelKey=B.referenceKey=A[C]=null}},containerOnAdded:function(B,A){if(A){Ext.ComponentManager.markReferencesDirty()}},containerOnRemoved:function(A){var B;if(!A){B=this.lookupReferenceHolder();if(B){Ext.ComponentManager.markReferencesDirty();B.clearReferences()}}},clearReferences:function(){this.refs=null},initContainerInheritedState:function(E,C){var G=this,B=G.getController(),H=G.getSession(),D=G.getConfig("viewModel",true),A=G.getReference(),F=G.getReferenceHolder();if(B){E.referenceHolder=B;F=true}else{if(F){E.referenceHolder=G}}if(F){E.referencePath=""}else{if(A&&G.isParentReference){E.referencePath=G.referenceKey+"."}}if(H){E.session=H}if(D){E.viewModelPath=""}else{if(A&&G.isParentReference){E.viewModelPath=G.viewModelKey+"."}}},setupReference:function(B){var A;if(B&&B.charAt(A=B.length-1)===">"){this.isParentReference=true;B=B.substring(0,A)}if(B&&!Ext.validIdRe.test(B)){Ext.Error.raise('Invalid reference "'+B+'" for '+this.getId()+" - not a valid identifier")}return B}}})