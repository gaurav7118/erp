Ext.Factory=function(A){var B=this;B.aliasPrefix=A+".";B.cache={};B.name=A.replace(B.fixNameRe,B.fixNameFn);B.type=A};Ext.Factory.prototype={defaultProperty:"type",instanceProp:"isInstance",create:function(C,E){var H=this,A=Ext.ClassManager,B=H.cache,D,G,F,I;if(C){if(C[H.instanceProp]){return C}if(typeof C==="string"){I=C;C={};C[H.defaultProperty]=I}G=C.xclass;I=C.type}if(G){if(!(F=A.get(G))){return A.instantiate(G,C)}}else{if(!(I=I||E||H.defaultType)){F=H.defaultClass}if(!I&&!F){Ext.raise("No type specified for "+H.type+".create")}if(!F&&!(F=B[I])){D=H.aliasPrefix+I;G=A.getNameByAlias(D);if(!(F=G&&A.get(G))){return A.instantiateByAlias(D,C)}B[I]=F}}return F.isInstance?F:new F(C)},fixNameRe:/\.[a-z]/ig,fixNameFn:function(A){return A.substring(1).toUpperCase()},clearCache:function(){this.cache={}}};Ext.Factory.define=function(F,D){var A=Ext.Factory,B,C,E;if(F.constructor===Object){Ext.Object.each(F,A.define,A)}else{C=new Ext.Factory(F);if(D){if(D.constructor===Object){Ext.apply(C,D);if(typeof (B=C.xclass)==="string"){C.defaultClass=Ext.ClassManager.get(B)}}else{C.defaultType=D}}A[C.name]=E=C.create.bind(C);E.instance=C}return E};Ext.define("Ext.mixin.Factoryable",{mixinId:"factoryable",onClassMixedIn:function(F){var E=F.prototype,G=E.factoryConfig,D=E.alias,C={},B,A;D=D&&D.length&&D[0];if(D&&(B=D.lastIndexOf("."))>0){C.type=D.substring(0,B);C.defaultType=D.substring(B+1)}if(G){delete E.factoryConfig;Ext.apply(C,G)}A=Ext.Factory.define(C.type,C);if(F.create===Ext.Base.create){F.create=A}}})