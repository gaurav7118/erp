Ext.define("Ext.mixin.Responsive",function(A){return{extend:"Ext.Mixin",requires:["Ext.GlobalEvents"],mixinConfig:{id:"responsive",after:{destroy:"destroy"}},config:{responsiveConfig:{$value:undefined,merge:function(G,C,F,E){if(!G){return C}var B=C?Ext.Object.chain(C):{},D;for(D in G){if(!E||!(D in B)){B[D]={fn:null,config:G[D]}}}return B}},responsiveFormulas:{$value:0,merge:function(E,B,D,C){return this.mergeNew(E,B,D,C)}}},destroy:function(){A.unregister(this);this.callParent()},privates:{statics:{active:false,all:{},context:Ext.Object.chain(Ext.platformTags),count:0,nextId:0,activate:function(){A.active=true;A.updateContext();Ext.on("resize",A.onResize,A)},deactivate:function(){A.active=false;Ext.un("resize",A.onResize,A)},notify:function(){var D=A.all,C=A.context,B=Ext.GlobalEvents,F=A.timer,E;if(F){A.timer=null;Ext.Function.cancelAnimationFrame(F)}A.updateContext();Ext.suspendLayouts();B.fireEvent("beforeresponsiveupdate",C);for(E in D){D[E].setupResponsiveContext()}B.fireEvent("beginresponsiveupdate",C);for(E in D){D[E].updateResponsiveState()}B.fireEvent("responsiveupdate",C);Ext.resumeLayouts(true)},onResize:function(){if(!A.timer){A.timer=Ext.Function.requestAnimationFrame(A.onTimer)}},onTimer:function(){A.timer=null;A.notify()},processConfig:function(B,H,F){var G=H&&H[F],E=B.config,C,D;if(G){D=B.getConfigurator();C=D.configs[F];E[F]=C.merge(G,E[F],B)}},register:function(B){var C=B.$responsiveId;if(!C){B.$responsiveId=C=++A.nextId;A.all[C]=B;if(++A.count===1){A.activate()}}},unregister:function(B){var C=B.$responsiveId;if(C in A.all){B.$responsiveId=null;delete A.all[C];if(--A.count===0){A.deactivate()}}},updateContext:function(){var E=Ext.Element,D=E.getViewportWidth(),B=E.getViewportHeight(),C=A.context;C.width=D;C.height=B;C.tall=D<B;C.wide=!C.tall;C.landscape=C.portrait=false;if(!C.platform){C.platform=Ext.platformTags}C[Ext.dom.Element.getOrientation()]=true}},afterClassMixedIn:function(F){var E=F.prototype,B=E.responsiveConfig,D=E.responsiveFormulas,C;if(B||D){C={};if(B){delete E.responsiveConfig;C.responsiveConfig=B}if(D){delete E.responsiveFormulas;C.responsiveFormulas=D}F.getConfigurator().add(C)}},applyResponsiveConfig:function(C){for(var B in C){C[B].fn=Ext.createRuleFn(B)}return C},applyResponsiveFormulas:function(D){var C={},E,B;if(D){for(B in D){if(Ext.isString(E=D[B])){E=Ext.createRuleFn(E)}C[B]=E}}return C},getResponsiveState:function(){var C=A.context,F=this.getResponsiveConfig(),B={},D,E;if(F){for(E in F){D=F[E];if(D.fn.call(this,C)){Ext.merge(B,D.config)}}}return B},setupResponsiveContext:function(){var C=this.getResponsiveFormulas(),D=A.context,B;if(C){for(B in C){D[B]=C[B].call(this,D)}}},transformInstanceConfig:function(D){var C=this,B;A.register(C);if(D){A.processConfig(C,D,"responsiveConfig");A.processConfig(C,D,"responsiveFormulas")}C.setupResponsiveContext();B=C.getResponsiveState();if(D){B=Ext.merge({},D,B);delete B.responsiveConfig;delete B.responsiveFormulas}return B},updateResponsiveState:function(){var B=this.getResponsiveState();this.setConfig(B)}}}})