Ext.define("Ext.perf.Monitor",{singleton:true,alternateClassName:"Ext.Perf",requires:["Ext.perf.Accumulator"],constructor:function(){this.accumulators=[];this.accumulatorsByName={}},calibrate:function(){var B=new Ext.perf.Accumulator("$"),F=B.total,C=Ext.perf.Accumulator.getTimestamp,E=0,G,A,D;D=C();do{G=B.enter();G.leave();++E}while(F.sum<100);A=C();return(A-D)/E},get:function(B){var C=this,A=C.accumulatorsByName[B];if(!A){C.accumulatorsByName[B]=A=new Ext.perf.Accumulator(B);C.accumulators.push(A)}return A},enter:function(A){return this.get(A).enter()},monitor:function(A,C,B){this.get(A).monitor(C,B)},report:function(){var C=this,B=C.accumulators,A=C.calibrate();B.sort(function(E,D){return(E.name<D.name)?-1:((D.name<E.name)?1:0)});C.updateGC();Ext.log("Calibration: "+Math.round(A*100)/100+" msec/sample");Ext.each(B,function(D){Ext.log(D.format(A))})},getData:function(C){var B={},A=this.accumulators;Ext.each(A,function(D){if(C||D.count){B[D.name]=D.getData()}});return B},reset:function(){Ext.each(this.accumulators,function(A){var B=A;B.count=B.childCount=B.depth=B.maxDepth=0;B.pure={min:Number.MAX_VALUE,max:0,sum:0};B.total={min:Number.MAX_VALUE,max:0,sum:0}})},updateGC:function(){var A=this.accumulatorsByName.GC,B=Ext.senchaToolbox,C;if(A){A.count=B.garbageCollectionCounter||0;if(A.count){C=A.pure;A.total.sum=C.sum=B.garbageCollectionMilliseconds;C.min=C.max=C.sum/A.count;C=A.total;C.min=C.max=C.sum/A.count}}},watchGC:function(){Ext.perf.getTimestamp();var A=Ext.senchaToolbox;if(A){this.get("GC");A.watchGarbageCollector(false)}},setup:function(C){if(!C){C={render:{"Ext.Component":"render"},layout:{"Ext.layout.Context":"run"}}}this.currentConfig=C;var D,F,B,E,A;for(D in C){if(C.hasOwnProperty(D)){F=C[D];B=Ext.Perf.get(D);for(E in F){if(F.hasOwnProperty(E)){A=F[E];B.tap(E,A)}}}}this.watchGC()},setupLog:function(C){var E,A,B,F,D;for(E in C){if(C.hasOwnProperty(E)){A=Ext.ClassManager.get(E);if(A){B=C[E];D={};for(F in B){D[F]=(function(G,H){return function(){var K,L,M,J,I;K=+Date.now();I=this.callParent(arguments);L=+Date.now()-K;if(window.console&&L>0){J=H==="this"?this:typeof H==="string"?this[H]:typeof H==="number"?arguments[H]:null;if(J){M=J.id}if(M!=null){console.log(G+" for "+M+": "+L+"ms")}else{console.log(G+" for unknown: "+L+"ms")}if(console.trace){console.trace()}}return I}})(F,B[F])}Ext.override(A,D)}}}}})