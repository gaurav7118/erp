Ext.define("Ext.util.Bag",{isBag:true,constructor:function(){this.items=[];this.map={}},generation:0,length:0,add:function(E){var D=this,G=D.getKey(E),F=D.map,C=D.items,A=F[G],B;if(A===undefined){C.push(E);F[G]=D.length++;B=E}else{B=C[A];C[A]=E}++D.generation;return B},clear:function(){var C=this,B=C.generation||C.length,A=B?C.items:[];if(B){C.items=[];C.length=0;C.map={};++C.generation}return A},clone:function(){var C=this,B=new C.self(),A=C.length;if(A){Ext.apply(B.map,C.map);B.items=C.items.slice();B.length=C.length}return B},contains:function(C){var A=false,D=this.map,B;if(C!=null){B=this.getKey(C);if(B in D){A=this.items[D[B]]===C}}return A},containsKey:function(A){return A in this.map},destroy:function(){this.items=this.map=null;this.callParent()},getAt:function(B){var A=null;if(B<this.length){A=this.items[B]}return A},getByKey:function(B){var C=this.map,A=null;if(B in C){A=this.items[C[B]]}return A},getCount:function(){return this.length},getKey:function(A){return A.id||A.getId()},remove:function(F){var E=this,G=E.map,C=E.items,B=null,A,H,D;if(E.length){A=G[H=E.getKey(F)];if(A!==undefined){delete G[H];B=C[A];D=C.pop();if(A<--E.length){C[A]=D;G[E.getKey(D)]=A}++E.generation}}return B},removeByKey:function(A){var B=this.getByKey(A);if(B){this.remove(B)}return B||null},sort:function(B){var D=this,A=D.items,E=A.length,C;if(E){Ext.Array.sort(A,B);D.map={};while(E-->0){C=A[E];D.map[D.getKey(C)]=E}++D.generation}}})