Ext.define("Ext.util.Collection",{mixins:["Ext.mixin.Observable"],requires:["Ext.util.CollectionKey","Ext.util.Filter","Ext.util.Sorter","Ext.util.Grouper"],uses:["Ext.util.SorterCollection","Ext.util.FilterCollection","Ext.util.GroupCollection"],isCollection:true,config:{autoFilter:true,autoSort:true,autoGroup:true,decoder:null,extraKeys:null,filters:null,grouper:null,groups:null,rootProperty:null,sorters:null,multiSortLimit:3,defaultSortDirection:"ASC",source:null,trackGroups:true},generation:0,indices:null,indexRebuilds:0,updating:0,grouped:false,sorted:false,filtered:false,$endUpdatePriority:1001,constructor:function(A){var B=this;B.items=[];B.map={};B.length=0;if(A&&A.keyFn){B.getKey=A.keyFn}B.mixins.observable.constructor.call(B,A)},destroy:function(){var C=this,B=C._filters,D=C._sorters,A=C._groups;if(B){B.destroy();C._filters=null}if(D){D.destroy();C._sorters=null}if(A){A.destroy();C._groups=null}C.setSource(null);C.observers=C.items=C.map=null;C.callParent()},add:function(D){var C=this,A=C.decodeItems(arguments,0),B=A;if(A.length){C.requestedIndex=C.length;C.splice(C.length,0,A);delete C.requestedIndex;B=(A.length===1)?A[0]:A}return B},replaceAll:function(){var C=this,B,A;A=C.decodeItems(arguments,0);B=A;if(A.length){C.splice(0,C.length,A);B=(A.length===1)?A[0]:A}else{C.removeAll()}return B},aggregate:function(G,B,E,A,D){var F=this,C=Ext.Array.slice(arguments);C.unshift(F.items);return F.aggregateItems.apply(F,C)},aggregateByGroup:function(D,B,C){var A=this.getGroups();return this.aggregateGroups(A,D,B,C)},aggregateItems:function(I,O,D,A,E,P){var J=this,H=Ext.Number.clipIndices(I.length,[A,E]),B=(A!==0&&E!==I.length),G,F,C,K,M,N,L;A=H[0];E=H[1];if(!Ext.isFunction(D)){D=J._aggregators[D];return D.call(J,I,A,E,O,J.getRootProperty())}K=J.getRootProperty();N=new Array(C);L=B?new Array(C):I;for(G=A,F=0;G<E;++G,F++){if(B){L[F]=M=I[G]}N[F]=(K?M[K]:M)[O]}return D.call(P||J,I,N,0)},aggregateGroups:function(A,I,C,J){var G=A.items,F=G.length,B=!Ext.isFunction(C),D={},E,H,K;for(E=0;E<F;++E){H=G[E];if(!B){K=this.aggregateItems(H.items,I,C,null,null,J)}else{K=H[C](I)}D[H.getGroupKey()]=K}return D},beginUpdate:function(){if(!this.updating++){this.notify("beginupdate")}},clear:function(){var C=this,D=C.generation,A=D?C.items:[],B,E;if(D){C.items=[];C.length=0;C.map={};C.indices={};C.generation++;B=C.getExtraKeys();if(B){for(E in B){B[E].clear()}}}return A},clone:function(){var A=this,B=new A.self(A.initialConfig);B.add(A.items);return B},collect:function(J,F,H){var E=this.items,B=E.length,A={},D=[],C,G,I;for(C=0;C<B;++C){I=E[C];I=(F?I[F]:I)[J];G=String(I);if((H||!Ext.isEmpty(I))&&!A[G]){A[G]=1;D.push(I)}}return D},contains:function(C){var A=false,B;if(C!=null){B=this.getKey(C);A=this.map[B]===C}return A},containsKey:function(A){return A in this.map},createFiltered:function(M,L,E,I,D){var H=this,F=new H.self(H.initialConfig),K=H.getRootProperty(),G=H.items,B,C,A,J,N;if(Ext.isFunction(M)){J=M;N=L}else{if(Ext.isString(M)){A=[new Ext.util.Filter({property:M,value:L,root:K,anyMatch:E,caseSensitive:I,exactMatch:D})]}else{if(M instanceof Ext.util.Filter){A=[M];M.setRoot(K)}else{if(Ext.isArray(M)){A=M.slice(0);for(C=0,B=A.length;C<B;++C){A[C].setRoot(K)}}}}J=Ext.util.Filter.createFilterFn(A)}N=N||H;for(C=0,B=G.length;C<B;C++){if(J.call(N,G[C])){F.add(G[C])}}return F},filterBy:function(B,A){return this.createFiltered(B,A)},each:function(F,E){var B=this.items,A=B.length,D,C;if(A){E=E||this;B=B.slice(0);for(D=0;D<A;D++){C=F.call(E,B[D],D,A);if(C===false){break}}}return C},eachKey:function(F,I){var E=this,D=E.items,B=D.length,A,H,G,C;if(B){I=I||E;D=D.slice(0);for(A=0;A<B;A++){G=E.getKey(H=D[A]);C=F.call(I,G,H,A,B);if(C===false){break}}}return C},endUpdate:function(){if(!--this.updating){this.notify("endupdate")}},find:function(G,F,H,D,C,B){if(Ext.isEmpty(F,false)){return null}var E=Ext.String.createRegex(F,D,C,B),A=this.getRootProperty();return this.findBy(function(I){return I&&E.test((A?I[A]:I)[G])},null,H)},findBy:function(F,I,A){var E=this,D=E.items,C=D.length,B,H,G;I=I||E;for(B=A||0;B<C;B++){G=E.getKey(H=D[B]);if(F.call(I,H,G)){return D[B]}}return null},findIndex:function(F,E,G,C,B,A){var D=this.find(F,E,G,C,B,A);return D?this.indexOf(D):-1},findIndexBy:function(B,A,D){var C=this.findBy(B,A,D);return C?this.indexOf(C):-1},first:function(B){var A=B?this.getGroups():undefined;return A?this.aggregateGroups(A,null,"first"):this.items[0]},last:function(B){var A=B?this.getGroups():undefined;return A?this.aggregateGroups(A,null,"last"):this.items[this.length-1]},get:function(A){return this.map[A]},getAt:function(A){return this.items[A]},getByKey:function(A){return this.map[A]},getCount:function(){return this.length},getKey:function(A){var B=A.id;return(B===0||B)?B:((B=A._id)===0||B)?B:A.getId()},getRange:function(D,A){var C=this.items,E=C.length,B;if(D>A){Ext.raise("Inverted range passed to Collection.getRange: ["+D+","+A+"]")}if(!E){B=[]}else{B=Ext.Number.clipIndices(E,[D,A]);B=C.slice(B[0],B[1])}return B},getValues:function(I,G,A,B){var F=this.items,D=Ext.Number.clipIndices(F.length,[A,B]),E=[],C,H;for(C=D[0],B=D[1];C<B;++C){H=F[C];H=(G?H[G]:H)[I];E.push(H)}return E},indexOf:function(B){if(!B){return -1}var A=this.getKey(B);return this.indexOfKey(A)},indexOfKey:function(A){var B=this,C=B.indices;if(A in B.map){if(!C){C=B.getIndices()}return C[A]}return -1},insert:function(C,E){var D=this,A=D.decodeItems(arguments,1),B=A;if(A.length){D.requestedIndex=C;D.splice(C,0,A);delete D.requestedIndex;B=(A.length===1)?A[0]:A}return B},itemChanged:function(T,H,L,M){var U=this,C=L===0||!!L,I=U.filtered&&U.getAutoFilter(),E=false,D=0,O=U.items,K=U.length-1,A=U.sorted&&K>0&&U.getAutoSort(),Q=U.getSource(),P=0,J=false,N=false,S,R,F,V,G,B;if(Q&&!Q.updating){Q.itemChanged(T,H,L,M)}else{R=U.getKey(T);if(I){G=U.indexOfKey(C?L:R);N=(G<0);J=U.isItemFiltered(T);E=(N!==J)}if(E){if(J){P=[T];B=-1}else{V=[T];B=U.length}}else{if(A&&!J){if(!I){G=U.indexOfKey(C?L:R)}F=U.getSortFn();if(G!==-1){if(G&&F(O[G-1],O[G])>0){D=-1;B=Ext.Array.binarySearch(O,T,0,G,F)}else{if(G<K&&F(O[G],O[G+1])>0){D=1;B=Ext.Array.binarySearch(O,T,G+1,F)}}if(D){V=[T]}}}}S={item:T,key:R,index:B,filterChanged:E,keyChanged:C,indexChanged:!!D,filtered:J,oldIndex:G,newIndex:B,wasFiltered:N,meta:M};if(C){S.oldKey=L}if(H){S.modified=H}U.beginUpdate();U.notify("beforeitemchange",[S]);if(C){U.updateKey(T,L)}if(V||P){U.splice(B,P,V)}if(D>0){S.newIndex--}else{if(D<0){S.oldIndex++}}U.notify(J?"filtereditemchange":"itemchange",[S]);U.endUpdate()}},remove:function(D){var C=this,A=C.decodeRemoveItems(arguments,0),B=C.length;C.splice(0,A);return B-C.length},removeAll:function(){var B=this,A=B.length;if(B.generation&&A){B.splice(0,A)}return B},removeAt:function(H,G){var I=this,B=I.length,E=Ext.Number,D=E.clipIndices(B,[H,(G===undefined)?1:G],E.Clip.COUNT),C=D[0],A=D[1]-C,J=(A===1)&&I.getAt(C),F;I.splice(C,A);F=I.length-B;return(J&&F)?J:F},removeByKey:function(A){var B=this.getByKey(A);if(!B||!this.remove(B)){return false}return B},replace:function(B){var A=this.indexOf(B);if(A===-1){this.add(B)}else{this.insert(A,B)}},splice:function(a,K,Y){var J=this,D=J.sorted&&J.getAutoSort(),W=J.map,O=J.items,M=J.length,S=(K instanceof Array)?J.decodeRemoveItems(K):null,T=!S,b=Ext.Number,E=b.clipIndices(M,[a,T?K:0],b.Clip.COUNT),G=E[0],I=E[1],h=I-G,Q=J.decodeItems(arguments,2),g=Q?Q.length:0,Z,U,R,C=G,B=J.indices||((g||S)?J.getIndices():null),N=null,H=h?[G]:null,F=null,P=J.getSource(),A,d,e,l,X,c,j,L,V,f,o,m,I;if(P&&!P.updating){if(T){S=[];for(l=0;l<h;++l){S.push(O[G+l])}}if(G<M){l=P.indexOf(O[G])}else{l=P.length}P.splice(l,S,Q);return J}if(g){Z=Q;F=[];U={};if(D){m=J.getSorters();if(g>1){if(!Z.$cloned){Q=Z=Z.slice(0)}J.sortData(Z)}}for(l=0;l<g;++l){L=J.getKey(X=Q[l]);if((j=U[L])!==undefined){(o||(o={}))[j]=1}else{c=B[L];if(c<G||I<=c){(H||(H=[])).push(c)}}U[L]=l;F.push(L)}if(o){V=F;Z=[];F=[];Z.$cloned=true;for(l=0;l<g;++l){if(!o[l]){X=Q[l];Z.push(X);F.push(V[l])}}g=Z.length}N={items:Z,keys:F}}for(l=S?S.length:0;l-->0;){L=J.getKey(S[l]);if((c=B[L])!==undefined){(H||(H=[])).push(c)}}if(!N&&!H){return J}J.beginUpdate();if(H){A=null;e=[];R={};if(H.length>1){H.sort(Ext.Array.numericSortFn)}for(l=0,f=H.length;l<f;++l){L=J.getKey(X=O[c=H[l]]);if(!(L in W)){continue}delete W[L];if(!A||c>(A.at+d.length)){e.push(A={at:c,items:(d=[]),keys:(V=[]),map:R,next:A,replacement:N});if(N){N.replaced=A}}d.push(R[L]=X);V.push(L);if(c<C){--C}if(h>1&&c===G){--h;H[l--]=++G}}if(N){N.at=C}for(j=e.length;j-->0;){A=e[j];l=A.at;f=A.items.length;if(l+f<M){J.indices=B=null}J.length=M-=f;O.splice(l,f);if(B){V=A.keys;for(l=0;l<f;++l){delete B[V[l]]}}++J.generation;J.notify("remove",[A])}}if(N){if(D&&g>1&&M){J.spliceMerge(Z,F)}else{if(D){if(g>1){C=0;J.indices=B=null}else{C=m.findInsertionIndex(N.items[0],O,J.getSortFn())}}if(C===M){I=C;for(l=Z.length-1;l>=0;--l){O[I+l]=Z[l]}B=J.indices;if(B){for(l=0;l<g;++l){B[F[l]]=C+l}}}else{J.indices=null;Ext.Array.insert(O,C,Z)}for(l=0;l<g;++l){W[F[l]]=Z[l]}J.length+=g;N.at=C;N.atItem=C===0?null:O[C-1];++J.generation;J.notify("add",[N])}}J.endUpdate();return J},update:function(B,A){var C=this;C.beginUpdate();try{return B.call(A||C,C)}catch(D){Ext.log.error(this.$className+": Unhandled Exception: ",D.description||D.message);throw D}finally{C.endUpdate()}},updateKey:function(B,E){var A=this,D=A.map,G=A.indices,C=A.getSource(),F;if(C&&!C.updating){C.updateKey(B,E)}else{if((F=A.getKey(B))!==E){if(D[E]===B&&!(F in D)){delete D[E];A.updating++;A.generation++;D[F]=B;if(G){G[F]=G[E];delete G[E]}A.notify("updatekey",[{item:B,newKey:F,oldKey:E}]);A.updating--}else{if(F in D&&D[F]!==B){Ext.raise('Duplicate newKey "'+F+'" for item with oldKey "'+E+'"')}if(E in D&&D[E]!==B){Ext.raise('Incorrect oldKey "'+E+'" for item with newKey "'+F+'"')}}}}},findInsertIndex:function(D){var E=this.getSource(),F=E.items,B=E.indexOf(D)-1,C,A;while(B>-1){C=F[B];A=this.indexOf(C);if(A>-1){return A+1}--B}return 0},onCollectionAdd:function(A,B){var J=this,L=B.atItem,I=B.items,F=J.requestedIndex,H,G,C,E,K,D;if(!J.sorted){if(F!==undefined){G=F}else{if(L){G=J.indexOf(L);if(G===-1){G=J.findInsertIndex(I[0])}else{++G}}else{G=0}}}if(J.getAutoFilter()&&J.filtered){for(E=0,D=I.length;E<D;++E){K=I[E];if(J.isItemFiltered(K)){if(!C){C=I.slice(0,E)}if(!H){H=[]}H.push(K)}else{if(C){C.push(K)}}}}J.splice((G<0)?J.length:G,0,C||I);if(H){J.notify("filteradd",[H])}},onCollectionBeforeItemChange:function(B,A){this.onCollectionUpdateKey=null},onCollectionBeginUpdate:function(){this.beginUpdate()},onCollectionEndUpdate:function(){this.endUpdate()},onCollectionItemChange:function(B,A){delete this.onCollectionUpdateKey;this.itemChanged(A.item,A.modified,A.oldKey,A.meta)},onCollectionFilteredItemChange:null,onCollectionRefresh:function(A){var F=this,B={},H={},D,I,E,G,C;E=A.items;E=F.filtered&&F.getAutoFilter()?Ext.Array.filter(E,F.getFilterFn()):E.slice(0);if(F.sorted){F.sortData(E)}F.items=E;F.length=C=E.length;F.map=B;F.indices=H;for(D=0;D<C;++D){G=F.getKey(I=E[D]);B[G]=I;H[G]=D}F.notify("refresh")},onCollectionRemove:function(B,A){this.splice(0,A.items)},onCollectionUpdateKey:function(B,A){this.updateKey(A.item,A.oldKey)},_aggregators:{average:function(C,D,B,E,A){var F=B-D;return F&&this._aggregators.sum.call(this,C,D,B,E,A)/F},bounds:function(E,A,B,I,F){for(var H,G,C,D=A;D<B;++D){H=E[D];H=(F?H[F]:H)[I];if(!(H<G)){G=H}if(!(H>C)){C=H}}return[C,G]},count:function(A){return A.length},extremes:function(F,A,C,K,I){var G=null,B=null,E,L,H,D,J;for(E=A;E<C;++E){L=F[E];J=(I?L[I]:L)[K];if(!(J<H)){H=J;G=L}if(!(J>D)){D=J;B=L}}return[B,G]},max:function(D,E,C,F,B){var A=this._aggregators.bounds.call(this,D,E,C,F,B);return A[1]},maxItem:function(D,E,C,F,B){var A=this._aggregators.extremes.call(this,D,E,C,F,B);return A[1]},min:function(D,E,C,F,B){var A=this._aggregators.bounds.call(this,D,E,C,F,B);return A[0]},minItem:function(D,E,C,F,B){var A=this._aggregators.extremes.call(this,D,E,C,F,B);return A[0]},sum:function(C,F,B,H,A){for(var G,E=0,D=F;D<B;++D){G=C[D];G=(A?G[A]:G)[H];E+=G}return E}},_eventToMethodMap:{add:"onCollectionAdd",beforeitemchange:"onCollectionBeforeItemChange",beginupdate:"onCollectionBeginUpdate",endupdate:"onCollectionEndUpdate",itemchange:"onCollectionItemChange",filtereditemchange:"onCollectionFilteredItemChange",refresh:"onCollectionRefresh",remove:"onCollectionRemove",beforesort:"beforeCollectionSort",sort:"onCollectionSort",filter:"onCollectionFilter",filteradd:"onCollectionFilterAdd",updatekey:"onCollectionUpdateKey"},addObserver:function(A){var B=this,C=B.observers;if(!C){B.observers=C=[]}if(Ext.Array.contains(C,A)){Ext.Error.raise("Observer already added")}C.push(A);if(C.length>1){Ext.Array.sort(C,B.prioritySortFn)}},prioritySortFn:function(D,C){var B=D.observerPriority||0,A=C.observerPriority||0;return B-A},applyExtraKeys:function(E,A){var F=this,D=A||{},C,B,G;for(B in E){G=E[B];if(!G.isCollectionKey){C={collection:F};if(Ext.isString(G)){C.property=G}else{C=Ext.apply(C,G)}G=new Ext.util.CollectionKey(C)}else{G.setCollection(F)}D[B]=F[B]=G;G.name=B}return D},applyGrouper:function(A){if(A){A=this.getSorters().decodeSorter(A,"Ext.util.Grouper")}return A},decodeItems:function(D,C){var F=this,B=(C===undefined)?D:D[C],A,G,E;if(!B||!B.$cloned){A=D.length>C+1||!Ext.isIterable(B);if(A){B=Ext.Array.slice(D,C);if(B.length===1&&B[0]===undefined){B.length=0}}G=F.getDecoder();if(G){if(!A){B=B.slice(0);A=true}for(E=B.length;E-->0;){if((B[E]=G.call(F,B[E]))===false){B.splice(E,1)}}}if(A){B.$cloned=true}}return B},getIndices:function(){var D=this,E=D.indices,A=D.items,F=A.length,C,B;if(!E){D.indices=E={};++D.indexRebuilds;for(C=0;C<F;++C){B=D.getKey(A[C]);E[B]=C}}return E},notify:function(D,G){var H=this,C=H.observers,J=H._eventToMethodMap[D],I=0,E,B,A,F;G=G||[];if(C&&J){for(E=0,B=C.length;E<B;++E){A=(F=C[E])[J];if(A){if(!I++){G.unshift(H)}A.apply(F,G)}}}if(!H.hasListeners){return }if(H.hasListeners[D]){if(!I){G.unshift(H)}H.fireEventArgs(D,G)}},getFilterFn:function(){return this.getFilters().getFilterFn()},getFilters:function(B){var A=this._filters;if(!A&&B!==false){A=new Ext.util.FilterCollection();this.setFilters(A)}return A},isItemFiltered:function(A){return !this.getFilters().filterFn(A)},onFilterChange:function(E){var D=this,F=D.getSource(),C,B,A;if(!F){C=D.getExtraKeys();if(C){B={};for(A in C){B[A]=C[A].clone(D)}}F=new Ext.util.Collection({keyFn:D.getKey,extraKeys:B,rootProperty:D.getRootProperty()});if(D.length){F.add(D.items)}D.setSource(F);D.autoSource=F}else{if(F.length||D.length){D.onCollectionRefresh(F)}}D.notify("filter")},applyFilters:function(A,B){if(A==null||(A&&A.isFilterCollection)){return A}if(A){if(!B){B=this.getFilters()}B.splice(0,B.length,A)}return B},updateFilters:function(A,B){var C=this;if(B){B.un("endupdate","onEndUpdateFilters",C)}if(A){A.on({endupdate:"onEndUpdateFilters",scope:C,priority:C.$endUpdatePriority});A.$filterable=C}C.onEndUpdateFilters(A)},onEndUpdateFilters:function(C){var B=this,D=B.filtered,A=!!C&&(C.length>0);if(D||A){B.filtered=A;B.onFilterChange(C)}},getSortFn:function(){return this._sortFn||this.createSortFn()},getSorters:function(B){var A=this._sorters;if(!A&&B!==false){A=new Ext.util.SorterCollection();this.setSorters(A)}return A},onSortChange:function(){if(this.sorted){this.sortItems()}},sort:function(A,C,D){var B=this.getSorters();B.addSort.apply(B,arguments);return this},sortData:function(A){Ext.Array.sort(A,this.getSortFn());return A},sortItems:function(B){var A=this;if(A.sorted){if(B){Ext.raise("Collections with sorters cannot resorted")}B=A.getSortFn()}A.indices=null;A.notify("beforesort",[A.getSorters(false)]);if(A.length){Ext.Array.sort(A.items,B)}A.notify("sort")},sortBy:function(A){return this.sortItems(A)},findInsertionIndex:function(C,A,B){if(!A){A=this.items}if(!B){B=this.getSortFn()}return Ext.Array.binarySearch(A,C,B)},applySorters:function(A,B){if(A==null||(A&&A.isSorterCollection)){return A}if(A){if(!B){B=this.getSorters()}B.splice(0,B.length,A)}return B},createSortFn:function(){var C=this,A=C.getGrouper(),D=C.getSorters(false),B=D?D.getSortFn():null;if(!A){return B}return function(E,G){var F=A.sort(E,G);if(!F&&B){F=B(E,G)}return F}},updateGrouper:function(B){var C=this,A=C.getGroups(),E=C.getSorters(),D;C.onSorterChange();C.grouped=!!B;if(B){if(C.getTrackGroups()){if(!A){A=new Ext.util.GroupCollection({itemRoot:C.getRootProperty()});A.$groupable=C;C.setGroups(A)}A.setGrouper(B);D=true}}else{if(A){C.removeObserver(A);A.destroy()}C.setGroups(null)}if(!E.updating){C.onEndUpdateSorters(E)}if(D){A.onCollectionRefresh(C)}},updateSorters:function(A,B){var C=this;if(B){B.un("endupdate","onEndUpdateSorters",C)}if(A){A.on({endupdate:"onEndUpdateSorters",scope:C,priority:C.$endUpdatePriority});A.$sortable=C}C.onSorterChange();C.onEndUpdateSorters(A)},onSorterChange:function(){this._sortFn=null},onEndUpdateSorters:function(C){var B=this,D=B.sorted,A=(B.grouped&&B.getAutoGroup())||(C&&C.length>0);if(D||A){B.sorted=!!A;B.onSortChange(C)}},removeObserver:function(A){var B=this.observers;if(B){Ext.Array.remove(B,A)}},spliceMerge:function(I,Q){var P=this,O=P.map,F=I.length,C=0,J=P.items,R=J.length,H=[],G=0,L=[],D=P.getSortFn(),K,B,M,E,N,A;P.items=L;for(A=0;A<F;A=B){E=I[A];for(;C<R;++C){if(D(E,N=J[C])<0){break}L.push(N)}if(C===R){H[G++]={at:L.length,itemAt:L[L.length-1],items:(K=[])};if(G>1){H[G-2].next=H[G-1]}for(;A<F;++A){K.push(E=I[A]);L.push(E)}break}H[G++]={at:L.length,itemAt:L[L.length-1],items:(K=[E])};if(G>1){H[G-2].next=H[G-1]}L.push(E);for(B=A+1;B<F;++B){if(D(E=I[B],N)>=0){break}L.push(E);K.push(E)}}for(;C<R;++C){L.push(J[C])}for(M=0;M<F;++M){O[Q[M]]=I[M]}P.length=L.length;++P.generation;P.indices=null;for(M=0;M<G;++M){P.notify("add",[H[M]])}},getGroups:function(){return this.callParent()||null},updateAutoGroup:function(B){var A=this.getGroups();if(A){A.setAutoGroup(B)}this.onEndUpdateSorters(this._sorters)},updateGroups:function(A,B){if(B){this.removeObserver(B)}if(A){this.addObserver(A)}},updateSource:function(B,A){var C=this.autoSource;if(A){A.removeObserver(this);if(A===C){C.destroy();this.autoSource=null}}if(B){B.addObserver(this);if(B.length||this.length){this.onCollectionRefresh(B)}}}},function(){var A=this.prototype;A.removeAtKey=A.removeByKey;A.decodeRemoveItems=A.decodeItems;Ext.Object.each(A._aggregators,function(B){A[B]=function(E,D,C){return this.aggregate(E,B,D,C)};A[B+"ByGroup"]=function(C){return this.aggregateByGroup(C,B)}})})