Ext.define("Ext.util.CollectionKey",{mixins:["Ext.mixin.Identifiable"],isCollectionKey:true,observerPriority:-200,config:{collection:null,keyFn:null,property:null,rootProperty:null,unique:true},generation:0,map:null,mapRebuilds:0,constructor:function(A){this.initConfig(A);if(!Ext.isFunction(this.getKey)){Ext.raise("CollectionKey requires a keyFn or property config")}},get:function(A){var B=this.map||this.getMap();return B[A]||null},clear:function(){this.map=null},getRootProperty:function(){var B=this,A=this.callParent();return A!==null?A:B.getCollection().getRootProperty()},indexOf:function(I,E){var A=this.map||this.getMap(),J=A[I],F=this.getCollection(),B=F.length,D,G,H,C;if(!J){return -1}if(E===undefined){E=-1}if(J instanceof Array){H=J;G=B;for(C=H.length;C-->0;){D=F.indexOf(H[C]);if(D<G&&D>E){G=D}}if(G===B){return -1}}else{G=F.indexOf(J)}return(G>E)?G:-1},updateKey:function(C,E){var B=this,D=B.map,F,A;if(D){F=D[E];if(F instanceof Array){A=Ext.Array.indexOf(F,C);if(A>=0){if(F.length>2){F.splice(A,1)}else{D[E]=F[1-A]}}}else{if(F){if(B.getUnique()&&F!==C){Ext.raise('Incorrect oldKey "'+E+'" for item with newKey "'+B.getKey(C)+'"')}delete D[E]}}B.add([C])}},onCollectionAdd:function(B,A){if(this.map){this.add(A.items)}},onCollectionItemChange:function(B,A){this.map=null},onCollectionRefresh:function(){this.map=null},onCollectionRemove:function(E,D){var G=this,A=G.map,F=D.items,B=F.length,C,I,H;if(A){if(G.getUnique()&&B<E.length/2){for(C=0;C<B;++C){H=G.getKey(I=F[C]);delete A[H]}}else{G.map=null}}},add:function(F){var G=this,A=G.map,B,E,I,H,C,D;C=F.length;D=G.getUnique();for(E=0;E<C;++E){H=G.getKey(I=F[E]);if(D||!(H in A)){A[H]=I}else{if(!((B=A[H]) instanceof Array)){A[H]=B=[B]}B.push(I)}}},applyKeyFn:function(A){if(Ext.isString(A)){this.getKey=function(B){return B[A]()}}else{this.getKey=A}},updateProperty:function(B){var A=this.getRootProperty();this.getKey=function(C){return(A?C[A]:C)[B]}},getMap:function(){var A=this,B=A.map;if(!B){A.map=B={};A.keysByItemKey={};++A.mapRebuilds;A.add(A.getCollection().items)}return B},updateCollection:function(A){A.addObserver(this)},clone:function(){return new Ext.util.CollectionKey(this.getCurrentConfig())}})