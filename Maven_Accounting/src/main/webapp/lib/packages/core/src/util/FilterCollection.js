Ext.define("Ext.util.FilterCollection",{extend:"Ext.util.Collection",requires:["Ext.util.Filter"],isFilterCollection:true,$filterable:null,filterFn:null,constructor:function(A){var B=this;B.filterFn=Ext.util.Filter.createFilterFn(B);B.callParent([A]);B.setDecoder(B.decodeFilter)},filterData:function(A){return this.filtered?Ext.Array.filter(A,this.filterFn):A},getFilterFn:function(){return this.filterFn},isItemFiltered:function(A){return !this.filterFn(A)},decodeFilter:function(C){var B=this.getOptions(),A=B.getRootProperty(),D;if(C.isFilter){if(!C.getRoot()){C.setRoot(A)}}else{D={root:A};if(Ext.isFunction(C)){D.filterFn=C}else{if(!Ext.isObject(C)){Ext.raise("Invalid filter specified: "+C)}D=Ext.apply(D,C);if(D.fn){D.filterFn=D.fn;delete D.fn}if(Ext.util.Filter.isInvalid(D)){return false}}C=new Ext.util.Filter(D)}return C},decodeRemoveItems:function(M,I){var O=this,J=(I===undefined)?M:M[I];if(!J.$cloned){if(M.length>I+1||!Ext.isIterable(J)){J=Ext.Array.slice(M,I)}var E=O.items,L=J.length,G=[],B,F,C,K,A,P,H,D,N;for(F=0;F<L;F++){B=J[F];if(B&&B.isFilter){G.push(B)}else{N=typeof B;C=N==="function";K=B.property!==undefined&&B.value!==undefined;A=N==="string";if(!C&&!K&&!A){Ext.raise("Invalid filter specification: "+B)}for(D=E.length;D-->0;){P=E[D];H=false;if(A){H=P.getProperty()===B}else{if(C){H=P.getFilterFn()===B}else{if(K){H=P.getProperty()===B.property&&P.getValue()===B.value}}}if(H){G.push(P)}}}}J=G;J.$cloned=true}return J},getOptions:function(){return this.$filterable||this}})