Ext.define("Ext.util.HashMap",{mixins:["Ext.mixin.Observable"],generation:0,config:{keyFn:null},constructor:function(A){var C=this,B;C.mixins.observable.constructor.call(C,A);C.clear(true);B=C.getKeyFn();if(B){C.getKey=B}},getCount:function(){return this.length},getData:function(A,B){if(B===undefined){B=A;A=this.getKey(B)}return[A,B]},getKey:function(A){return A.id},add:function(A,C){var B=this;if(arguments.length===1){C=A;A=B.getKey(C)}if(B.containsKey(A)){return B.replace(A,C)}B.map[A]=C;++B.length;B.generation++;if(B.hasListeners.add){B.fireEvent("add",B,A,C)}return C},replace:function(B,D){var C=this,E=C.map,A;if(arguments.length===1){D=B;B=C.getKey(D)}if(!C.containsKey(B)){C.add(B,D)}A=E[B];E[B]=D;C.generation++;if(C.hasListeners.replace){C.fireEvent("replace",C,B,D,A)}return D},remove:function(B){var A=this.findKey(B);if(A!==undefined){return this.removeAtKey(A)}return false},removeAtKey:function(A){var B=this,C;if(B.containsKey(A)){C=B.map[A];delete B.map[A];--B.length;B.generation++;if(B.hasListeners.remove){B.fireEvent("remove",B,A,C)}return true}return false},get:function(A){var B=this.map;return B.hasOwnProperty(A)?B[A]:undefined},clear:function(A){var B=this;if(A||B.generation){B.map={};B.length=0;B.generation=A?0:B.generation+1}if(A!==true&&B.hasListeners.clear){B.fireEvent("clear",B)}return B},containsKey:function(A){var B=this.map;return B.hasOwnProperty(A)&&B[A]!==undefined},contains:function(A){return this.containsKey(this.findKey(A))},getKeys:function(){return this.getArray(true)},getValues:function(){return this.getArray(false)},getArray:function(D){var A=[],B,C=this.map;for(B in C){if(C.hasOwnProperty(B)){A.push(D?B:C[B])}}return A},each:function(D,C){var A=Ext.apply({},this.map),B,E=this.length;C=C||this;for(B in A){if(A.hasOwnProperty(B)){if(D.call(C,B,A[B],E)===false){break}}}return this},clone:function(){var C=new this.self(this.initialConfig),B=this.map,A;C.suspendEvents();for(A in B){if(B.hasOwnProperty(A)){C.add(A,B[A])}}C.resumeEvents();return C},findKey:function(B){var A,C=this.map;for(A in C){if(C.hasOwnProperty(A)&&C[A]===B){return A}}return undefined},destroy:function(){this.callParent();this.map=null}},function(B){var A=B.prototype;A.removeByKey=A.removeAtKey})