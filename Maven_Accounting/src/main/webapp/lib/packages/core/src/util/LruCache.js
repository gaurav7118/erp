Ext.define("Ext.util.LruCache",{extend:"Ext.util.HashMap",config:{maxSize:null},add:function(A,E){var D=this,C,B;D.removeAtKey(A);B=D.last;C={prev:B,next:null,key:A,value:E};if(B){B.next=C}else{D.first=C}D.last=C;D.callParent([A,C]);D.prune();return E},insertBefore:function(B,F,C){var E=this,A,D;if(C=this.map[this.findKey(C)]){A=E.findKey(F);if(A){E.unlinkEntry(D=E.map[A])}else{D={prev:C.prev,next:C,key:B,value:F}}if(C.prev){D.prev.next=D}else{E.first=D}D.next=C;C.prev=D;E.prune();return F}else{return E.add(B,F)}},get:function(A){var B=this.map[A];if(B){if(B.next){this.moveToEnd(B)}return B.value}},removeAtKey:function(A){this.unlinkEntry(this.map[A]);return this.callParent(arguments)},clear:function(A){this.first=this.last=null;return this.callParent([A])},unlinkEntry:function(A){if(A){if(A.next){A.next.prev=A.prev}else{this.last=A.prev}if(A.prev){A.prev.next=A.next}else{this.first=A.next}A.prev=A.next=null}},moveToEnd:function(A){this.unlinkEntry(A);if(A.prev=this.last){this.last.next=A}else{this.first=A}this.last=A},getArray:function(C){var A=[],B=this.first;while(B){A.push(C?B.key:B.value);B=B.next}return A},each:function(C,B,A){var F=this,E=A?F.last:F.first,D=F.length;B=B||F;while(E){if(C.call(B,E.key,E.value,D)===false){break}E=A?E.prev:E.next}return F},findKey:function(B){var A,C=this.map;for(A in C){if(C.hasOwnProperty(A)&&C[A].value===B){return A}}return undefined},clone:function(){var A=new this.self(this.initialConfig),C=this.map,B;A.suspendEvents();for(B in C){if(C.hasOwnProperty(B)){A.add(B,C[B].value)}}A.resumeEvents();return A},prune:function(){var B=this,A=B.getMaxSize(),C=A?(B.length-A):0;if(C>0){for(;B.first&&C;C--){B.removeAtKey(B.first.key)}}},destroy:function(){this.first=this.last=null;this.callParent()}})