Ext.define("Ext.util.ObjectTemplate",{requires:["Ext.XTemplate"],isObjectTemplate:true,excludeProperties:{},valueRe:/^[{][a-z\.]+[}]$/i,statics:{create:function(B,A){if(!Ext.isObject(B)){Ext.raise("The template is not an Object")}return B.isObjectTemplate?B:new Ext.util.ObjectTemplate(B,A)}},constructor:function(B,A){Ext.apply(this,A);this.template=B},apply:function(A){var B=this;delete B.apply;B.apply=B.compile(B.template);return B.apply(A)},privates:{compile:function(E){var F=this,B=F.excludeProperties,G,C,A,D;if(Ext.isString(E)){if(E.indexOf("{")<0){D=function(){return E}}else{if(F.valueRe.test(E)){E=E.substring(1,E.length-1).split(".");D=function(J){for(var H=J,I=0;H&&I<E.length;++I){H=H[E[I]]}return H}}else{E=new Ext.XTemplate(E);D=function(H){return E.apply(H)}}}}else{if(!E||Ext.isPrimitive(E)||Ext.isFunction(E)){D=function(){return E}}else{if(E instanceof Array){G=[];for(C=0,A=E.length;C<A;++C){G[C]=F.compile(E[C])}D=function(J){var H=[],I;for(I=0;I<A;++I){H[I]=G[I](J)}return H}}else{G={};for(C in E){if(!B[C]){G[C]=F.compile(E[C])}}D=function(K){var I={},J,H;for(J in E){H=B[J]?E[J]:G[J](K);if(H!==undefined){I[J]=H}}return I}}}}return D}}})