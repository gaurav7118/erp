Ext.define("Ext.util.SorterCollection",{extend:"Ext.util.Collection",requires:["Ext.util.Sorter"],isSorterCollection:true,$sortable:null,sortFn:null,config:{sorterOptionsFn:null,sorterOptionsScope:null},constructor:function(A){var B=this;B.sortFn=Ext.util.Sorter.createComparator(B);B.callParent([A]);B.setDecoder(B.decodeSorter)},addSort:function(I,H,C){var G=this,D,E,B,K,A,J,F;if(!I){G.beginUpdate();G.endUpdate()}else{K=G.getOptions();if(I instanceof Array){F=I;C=H;H=null}else{if(Ext.isString(I)){if(!(J=G.get(I))){F=[{property:I,direction:H||K.getDefaultSortDirection()}]}else{F=[J]}}else{if(Ext.isFunction(I)){F=[{sorterFn:I,direction:H||K.getDefaultSortDirection()}]}else{if(!Ext.isObject(I)){Ext.raise("Invalid sort descriptor: "+I)}F=[I];C=H;H=null}}}if(C&&!G._sortModes[C]){Ext.raise('Sort mode should be "multi", "append", "prepend" or "replace", not "'+C+'"')}C=G._sortModes[C||"replace"];A=G.getAt(0);D=G.length;E=C.append?D:0;G.beginUpdate();G.splice(E,C.replace?D:0,F);if(C.multi){D=G.length;B=K.getMultiSortLimit();if(D>B){G.removeAt(B,D)}}if(J&&H){J.setDirection(H)}else{if(E===0&&A&&A===G.getAt(0)){A.toggle()}}G.endUpdate()}},clear:function(){this.beginUpdate();this.callParent();this.endUpdate(this.items)},getSortFn:function(){return this.sortFn},getByProperty:function(E){var B=this.items,A=B.length,C,D;for(C=0;C<A;++C){D=B[C];if(D.getProperty()===E){return D}}return null},_sortModes:{append:{append:1},multi:{multi:1},prepend:{prepend:1},replace:{replace:1}},decodeSorter:function(H,A){var F=this,I=F.getOptions(),G=I.getRootProperty(),B=F.getSorterOptionsFn(),C,E,D;if(H.isSorter){if(!H.getRoot()){H.setRoot(G)}}else{E={direction:I.getDefaultSortDirection(),root:G};D=typeof H;if(D==="string"){C=F.get(H);if(C){return C}E.property=H}else{if(D==="function"){E.sorterFn=H}else{if(!Ext.isObject(H)){Ext.raise("Invalid sorter specified: "+H)}E=Ext.apply(E,H);if(E.fn){E.sorterFn=E.fn;delete E.fn}}}H=Ext.create(A||"Ext.util.Sorter",E)}if(B){B.call(F.getSorterOptionsScope()||F,H)}return H},setSorterConfigure:function(B,A){this.setSorterOptionsFn(B);this.setSorterOptionsScope(A)},decodeRemoveItems:function(G,D){var I=this,E=(D===undefined)?G:G[D];if(!E||!E.$cloned){if(G.length>D+1||!Ext.isIterable(E)){E=Ext.Array.slice(G,D)}var J=I.items,F=E.length,C=[],B,K,A,L,H;for(B=0;B<F;B++){L=E[B];if(L&&L.isSorter){C.push(L)}else{H=typeof L;if(H==="string"){L=I.get(L);if(L){C.push(L)}}else{if(H==="function"){for(A=J.length;A-->0;){K=J[A];if(K.getSorterFn()===L){C.push(K)}}}else{Ext.raise("Invalid sorter specification: "+L)}}}}E=C;E.$cloned=true}return E},getOptions:function(){return this.$sortable||this}})