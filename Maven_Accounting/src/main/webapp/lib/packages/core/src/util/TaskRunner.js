Ext.define("Ext.util.TaskRunner",{interval:10,timerId:null,constructor:function(A){var B=this;if(typeof A=="number"){B.interval=A}else{if(A){Ext.apply(B,A)}}B.tasks=[];B.timerFn=Ext.Function.bind(B.onTick,B)},newTask:function(B){var A=new Ext.util.TaskRunner.Task(B);A.manager=this;return A},start:function(A){var C=this,B=Ext.Date.now();if(!A.pending){C.tasks.push(A);A.pending=true}A.stopped=false;A.taskStartTime=B;A.taskRunTime=A.fireOnStart!==false?0:A.taskStartTime;A.taskRunCount=0;if(!C.firing){if(A.fireOnStart!==false){C.startTimer(0,B)}else{C.startTimer(A.interval,B)}}return A},stop:function(A){if(!A.stopped){A.stopped=true;if(A.onStop){A.onStop.call(A.scope||A,A)}}return A},stopAll:function(){Ext.each(this.tasks,this.stop,this)},firing:false,nextExpires:1e+99,onTick:function(){var L=this,F=L.tasks,A=Ext.Date.now(),M=1e+99,J=F.length,D=Ext.GlobalEvents,C,N,H,B,E,G,O;L.timerId=null;L.firing=true;for(H=0;H<J||H<(J=F.length);++H){B=F[H];if(!(G=B.stopped)){C=B.taskRunTime+B.interval;if(C<=A){E=1;if(B.hasOwnProperty("fireIdleEvent")){O=B.fireIdleEvent}else{O=L.fireIdleEvent}try{E=B.run.apply(B.scope||B,B.args||[++B.taskRunCount])}catch(I){try{Ext.log({fn:B.run,prefix:"Error while running task",stack:I.stack,msg:I,level:"error"});if(B.onError){E=B.onError.call(B.scope||B,B,I)}}catch(K){}}B.taskRunTime=A;if(E===false||B.taskRunCount===B.repeat){L.stop(B);G=true}else{G=B.stopped;C=A+B.interval}}if(!G&&B.duration&&B.duration<=(A-B.taskStartTime)){L.stop(B);G=true}}if(G){B.pending=false;if(!N){N=F.slice(0,H)}}else{if(N){N.push(B)}if(M>C){M=C}}}if(N){L.tasks=N}L.firing=false;if(L.tasks.length){L.startTimer(M-A,Ext.Date.now())}if(O!==false&&D.hasListeners.idle){D.fireEvent("idle")}},startTimer:function(E,C){var D=this,B=C+E,A=D.timerId;if(A&&D.nextExpires-B>D.interval){clearTimeout(A);A=null}if(!A){if(E<D.interval){E=D.interval}D.timerId=Ext.defer(D.timerFn,E);D.nextExpires=B}}},function(){var B=this,A=B.prototype;A.destroy=A.stopAll;B.Task=new Ext.Class({isTask:true,stopped:true,fireOnStart:false,constructor:function(C){Ext.apply(this,C)},restart:function(C){if(C!==undefined){this.interval=C}this.manager.start(this)},start:function(C){if(this.stopped){this.restart(C)}},stop:function(){this.manager.stop(this)}});A=B.Task.prototype;A.destroy=A.stop})