Ext.define("Ext.util.XTemplateParser",{requires:["Ext.String"],constructor:function(A){Ext.apply(this,A)},doTpl:Ext.emptyFn,parse:function(L){var S=this,O=L.length,N={elseif:"elif"},P=S.topRe,C=S.actionsRe,E,D,I,M,G,J,H,R,Q,B,F,A,K;S.level=0;S.stack=D=[];for(E=0;E<O;E=B){P.lastIndex=E;M=P.exec(L);if(!M){S.doText(L.substring(E,O));break}Q=M.index;B=P.lastIndex;if(E<Q){I=L.substring(E,Q);if(!(K&&Ext.String.trim(I)==="")){S.doText(I)}}K=false;if(M[1]){B=L.indexOf("%}",Q+2);S.doEval(L.substring(Q+2,B));B+=2}else{if(M[2]){B=L.indexOf("]}",Q+2);S.doExpr(L.substring(Q+2,B));B+=2}else{if(M[3]){S.doTag(M[3])}else{if(M[4]){F=null;while((R=C.exec(M[4]))!==null){I=R[2]||R[3];if(I){I=Ext.String.htmlDecode(I);G=R[1];G=N[G]||G;F=F||{};J=F[G];if(typeof J=="string"){F[G]=[J,I]}else{if(J){F[G].push(I)}else{F[G]=I}}}}if(!F){if(S.elseRe.test(M[4])){S.doElse()}else{if(S.defaultRe.test(M[4])){S.doDefault()}else{S.doTpl();D.push({type:"tpl"})}}}else{if(F["if"]){S.doIf(F["if"],F);D.push({type:"if"})}else{if(F["switch"]){S.doSwitch(F["switch"],F);D.push({type:"switch"});K=true}else{if(F["case"]){S.doCase(F["case"],F)}else{if(F["elif"]){S.doElseIf(F["elif"],F)}else{if(F["for"]){++S.level;if(A=S.propRe.exec(M[4])){F.propName=A[1]||A[2]}S.doFor(F["for"],F);D.push({type:"for",actions:F})}else{if(F["foreach"]){++S.level;if(A=S.propRe.exec(M[4])){F.propName=A[1]||A[2]}S.doForEach(F["foreach"],F);D.push({type:"foreach",actions:F})}else{if(F.exec){S.doExec(F.exec,F);D.push({type:"exec",actions:F})}}}}}}}}}else{if(M[0].length===5){D.push({type:"tpl"})}else{H=D.pop();S.doEnd(H.type,H.actions);if(H.type=="for"||H.type=="foreach"){--S.level}}}}}}}},topRe:/(?:(\{\%)|(\{\[)|\{([^{}]+)\})|(?:<tpl([^>]*)\>)|(?:<\/tpl>)/g,actionsRe:/\s*(elif|elseif|if|for|foreach|exec|switch|case|eval|between)\s*\=\s*(?:(?:"([^"]*)")|(?:'([^']*)'))\s*/g,propRe:/prop=(?:(?:"([^"]*)")|(?:'([^']*)'))/,defaultRe:/^\s*default\s*$/,elseRe:/^\s*else\s*$/})