Ext.define("Ext.util.sizemonitor.OverflowChange",{extend:"Ext.util.sizemonitor.Abstract",constructor:function(A){this.onExpand=Ext.Function.bind(this.onExpand,this);this.onShrink=Ext.Function.bind(this.onShrink,this);this.callParent(arguments)},getElementConfig:function(){return{reference:"detectorsContainer",classList:[Ext.baseCSSPrefix+"size-monitors","overflowchanged"],children:[{reference:"expandMonitor",className:"expand",children:[{reference:"expandHelper"}]},{reference:"shrinkMonitor",className:"shrink",children:[{reference:"shrinkHelper"}]}]}},bindListeners:function(B){var A=B?"addEventListener":"removeEventListener";this.expandMonitor[A](Ext.browser.is.Firefox?"underflow":"overflowchanged",this.onExpand,true);this.shrinkMonitor[A](Ext.browser.is.Firefox?"overflow":"overflowchanged",this.onShrink,true)},onExpand:function(A){if(Ext.browser.is.Webkit&&A.horizontalOverflow&&A.verticalOverflow){return }Ext.TaskQueue.requestRead("refresh",this)},onShrink:function(A){if(Ext.browser.is.Webkit&&!A.horizontalOverflow&&!A.verticalOverflow){return }Ext.TaskQueue.requestRead("refresh",this)},refreshMonitors:function(){if(this.destroyed){return }var F=this.expandHelper,E=this.shrinkHelper,B=this.getContentBounds(),D=B.width,A=B.height,C;if(F&&!F.destroyed){C=F.style;C.width=(D+1)+"px";C.height=(A+1)+"px"}if(E&&!E.destroyed){C=E.style;C.width=D+"px";C.height=A+"px"}Ext.TaskQueue.requestRead("refresh",this)}})