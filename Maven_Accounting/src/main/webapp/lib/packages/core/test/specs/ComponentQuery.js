describe("Ext.ComponentQuery",function(){var C,D,A,E,S,P,N,L,K,J,I,H,G,F,R,Q,O,M=function(V,U){if(V.items){for(var T=0;T<V.items.length;T++){M(V.items[T],V)}}Ext.apply(V,{getItemId:function(){return this.itemId!==undefined?this.itemId:this.id},getId:function(){return this.id},getRefItems:function(X){var Y=this.items||[],W=Y.length,Z=0,a;if(X){for(;Z<W;Z++){a=Y[Z];if(a.getRefItems){Y=Y.concat(a.getRefItems(true))}}}return Y},getReference:function(){return null},getRefOwner:function(){return this.ownerCt},hasCls:function(W){return this.cls==W},isHidden:function(){return this.hidden},isXType:function(W){return A.contains(this.type.split("/"),W)},ownerCt:U,self:{$config:{configs:{}}}});D.register(V)};function B(){var V=Array.prototype.slice.apply(arguments),U=V.shift(),T=V.length,W,X,Y;expect(U.length).toBe(T);for(W=0,T=V.length;W<T;W++){X=V[W];Y=U[W];expect(Y.id).toBe(X.id)}}beforeEach(function(){C=Ext.ComponentQuery;D=Ext.ComponentManager;A=Ext.Array;S={id:"root",cls:"root-cls",type:"A",items:[P={$className:"Foo",id:"child1",cls:"child1-cls",type:"B/G/Z",foo:"bar,baz",scrollable:false},N={$className:"Bar.Baz.Qux",id:"child2",cls:"child2-cls",type:"B/G/Z",bar:"foo,bar,baz",scrollable:true},L={$className:"Foo",id:"child3",cls:"child3-cls",type:"B/C/D",layout:"card",items:[K={id:"child4",cls:"child4-cls",type:"B/C/E",layout:"hbox",items:[J={id:"child5",cls:"child5-cls",type:"B/C/F",items:[H={id:"child7",cls:"child7-cls",type:"B/G/H",scrollable:null},G={id:"child8",cls:"child8-cls",type:"B/G/I",scrollable:"x"},F={id:"child9",cls:"child9-cls",type:"B/G/J"}]},I={id:"child6",cls:"child6-cls",type:"B/G/Z",hidden:true},R={id:"child10",cls:"child10-cls my-foo-cls",type:"B"},Q={id:"child.11",cls:"child11-cls my-foo-cls-test",type:"B",scrollable:"y"},O={id:"child.12",itemId:"bobby.brown.goes.down",type:"E.2-E.4",foo:"[foo(bar)!baz#qux\\fred*]",sq:"'single' 'quotes'",dq:'"double" "quotes"'}]}]}]};M(S)});afterEach(function(){D.all={}});describe("parser",function(){it("should blow up if the intra-selector comma is escaped",function(){expect(function(){C.query("#child3\\,F",S)}).toThrow('Invalid ComponentQuery selector: ",F"')});it("should blow up if a selector ends with unescaped comma",function(){expect(function(){C.query("#child3,",S)}).toThrow('Invalid ComponentQuery selector: ""')});it("should blow up if a selector ends with an escaped comma",function(){expect(function(){C.query("#child3\\,",S)}).toThrow('Invalid ComponentQuery selector: ","')});describe("missing quotes",function(){var T;beforeEach(function(){spyOn(Ext.log,"warn").andCallFake(function(U){T=U});T=null});it("should warn on missing opening double quote",function(){C.query('[foo=bar"]');expect(T).toMatch(/^ComponentQuery selector.*?unescaped \("\).*?end/)});it("should warn on missing closing double quote",function(){C.query('[foo="bar]');expect(T).toMatch(/^ComponentQuery selector.*?unescaped \("\).*?beginning/)});it("should warn on missing opening single quote",function(){C.query("[foo=bar']");expect(T).toMatch(/^ComponentQuery selector.*?unescaped \('\).*end/)});it("should warn on missing closing single quote",function(){C.query("[foo='bar]");expect(T).toMatch(/^ComponentQuery selector.*?unescaped \('\).*beginning/)})})});describe("Query object",function(){describe("is",function(){it("should return true if the selector is empty",function(){var T=C.parse("");expect(T.is(S)).toBe(true)})})});describe("is",function(){var T;beforeEach(function(){T=Ext.getCmp("root")});afterEach(function(){T=null});it("should return true if there is no selector",function(){expect(C.is(S)).toBe(true)});it("should return true if component matches the selector",function(){expect(C.is(S,"[type=A]")).toBe(true)});it("should return true if component matches any selector",function(){expect(C.is(S,"button, #foo, #root, [type=A]")).toBe(true)});it("should return false if the component doesn't match the selector",function(){expect(C.is(S,"#foo")).toBe(false)});it("should work with the :not pseudo",function(){var U=new Ext.Component({foo:1});expect(U.is("[foo]:not([bar])")).toBe(true)});it("should be able to run on destroyed components",function(){var U=new Ext.Component({foo:1});U.destroy();expect(U.is("[foo]:not([bar])")).toBe(true)});describe("hierarchy selectors",function(){it("should match a direct child",function(){expect(C.is(I,"#child4 > #child6")).toBe(true)});it("should return false if it's not a direct child",function(){expect(C.is(I,"#child3 > #child6")).toBe(false)});it("should match deep children",function(){expect(C.is(I,"#child3 #child6")).toBe(true)});it("should match an upward selector",function(){expect(C.is(L,"#child6 ^ #child3")).toBe(true)})})});describe("simple query by xtype",function(){it("should select all six items of type G",function(){E=C.query("G",S);expect(E.length).toEqual(6);expect(E[2].id).toEqual(I.id)});it("should allow escaped dots in xtype selector",function(){E=C.query("E\\.2-E\\.4",S);expect(E.length).toBe(1);expect(E[0].id).toBe(O.id)})});describe("simple query by xtype prefixed with dot",function(){beforeEach(function(){spyOn(Ext.log,"warn")});it("should select all six items of type G",function(){E=C.query(".G",S);expect(E.length).toEqual(6);expect(E[2].id).toEqual(I.id)});it("should allow escaped dots in xtype selector",function(){E=C.query(".E\\.2-E\\.4",S);expect(E.length).toBe(1);expect(E[0].id).toBe(O.id)})});describe("attributes starting with $",function(){it("should match $className variable",function(){E=C.query("[$className=Foo]");expect(E.length).toBe(2);expect(E[0].id).toBe("child1");expect(E[1].id).toBe("child3")});it("should allow dots in attribute values",function(){E=C.query("[$className=Bar.Baz.Qux]",S);B(E,N)})});describe("query by id",function(){it("should select the second child",function(){E=C.query("G#child2",S);expect(E.length).toEqual(1);expect(E[0].id).toEqual(N.id)});it("should select the fifth child",function(){E=C.query("#child5",S);expect(E.length).toEqual(1);expect(E[0].id).toEqual(J.id)});it("should allow escaped dots in query-by-id selectors",function(){E=C.query("#child\\.11",S);B(E,Q)});it("should allow multiple escaped commas in #itemId selectors",function(){E=C.query("#bobby\\.brown\\.goes\\.down",S);B(E,O)})});describe("query by property",function(){it("should select the second child",function(){E=C.query("G[cls=child2-cls]",S);expect(E.length).toEqual(1);expect(E[0].id).toEqual(N.id)});it("should select the sixth child",function(){E=C.query("[hidden]",S);expect(E.length).toEqual(1);expect(E[0].id).toEqual(I.id)});describe("property value quotes",function(){it("should allow single quoted value",function(){E=C.query("[id='child.12']",S);B(E,O)});it("should allow double quoted value",function(){E=C.query('[id="child.12"]',S);B(E,O)});it("should allow double quotes in single quoted value",function(){E=C.query('[dq=\'"double" "quotes"\']',S);B(E,O)});it("should allow single quotes in double quoted value",function(){E=C.query("[sq=\"'single' 'quotes'\"]",S);B(E,O)})});describe("matchers",function(){it("should select the tenth child",function(){E=C.query("[cls~=my-foo-cls]",S);expect(E.length).toEqual(1);expect(E[0].id).toEqual(R.id)});it("should select items where id starts with child1",function(){E=C.query("[id^=child1]",S);B(E,P,R)});it("should select items where cls ends with 9-cls",function(){E=C.query("[cls$=9-cls]",S);expect(E.length).toBe(1);expect(E[0].cls).toBe("child9-cls")});it("should select items with commas in properties",function(){E=C.query("[foo=bar\\,baz]");expect(E.length).toEqual(1);expect(E[0].id).toEqual(P.id)});it("should allow multiple escaped commas",function(){E=C.query("[bar=foo\\,bar\\,baz]",S);B(E,N)});it("should allow escaped metacharacters",function(){E=C.query("[foo=\\[foo\\(bar\\)\\!baz\\#qux\\\\fred\\*\\]]",S);B(E,O)});describe("regexen",function(){it("should match everything with an empty regex",function(){E=C.query("[cls/=]");expect(E.length).toBe(12)});describe("simple regexen",function(){it("should match regexen with text as pattern",function(){E=C.query("[cls/=my-foo]");B(E,R,Q)});it("should match regexen with simple alternation",function(){E=C.query("[cls/=child3-cls|child4-cls|child5-cls]");B(E,J,K,L)})});describe("complex regexen",function(){it("should match regexen with pattern quantifiers",function(){E=C.query('[cls/="child.{2}-cls"]');B(E,R,Q)});it("should match regexen with grouping and alternating",function(){E=C.query('[cls/="child(?:7|8)-cls"]');B(E,H,G)});it("should match regexen with character classes",function(){E=C.query('[cls/="child\\[5-7\\]-cls"]');B(E,H,J,I)})})})})});describe("query using mode ^",function(){it("should select the fourth child",function(){E=C.query("G[cls=child8-cls]^#child4",S);expect(E.length).toEqual(1);expect(E[0].id).toEqual(K.id)})});describe("query using mode ^ and >",function(){it("should select the sixth child",function(){E=C.query("G[cls=child8-cls]^#child4>G",S);expect(E.length).toEqual(1);expect(E[0].id).toEqual(I.id)})});describe("query using multiple selectors",function(){it("should select the third and fifth child",function(){E=C.query("#child3,F",S);expect(E.length).toEqual(2);expect(E[0].id).toEqual(L.id);expect(E[1].id).toEqual(J.id)})});describe("query using member function",function(){it("should select the sixth child that is hidden",function(){E=C.query("{isHidden()}",S);expect(E.length).toEqual(1);expect(E[0].id).toEqual(I.id)})});describe("query using pseudo-class",function(){beforeEach(function(){C.pseudos.cardLayout=function(V){var T=[],X,W=0,U=V.length;for(;W<U;W++){if((X=V[W]).layout==="card"){T.push(X)}}return T}});it("should select the third child with layout == 'card'",function(){E=C.query("C:cardLayout",S);delete C.pseudos.cardLayout;expect(E.length).toEqual(1);expect(E[0].id).toEqual(L.id)});it("should not select the sixth child which is filtered by :not()",function(){E=C.query(":not([hidden])",S);var V=S.getRefItems(true),W=function(Y){return Y.id},X=A.map(V,W),T=A.map(E,W),U=A.difference(X,T);expect(E.length).toEqual(V.length-1);expect(U.length).toEqual(1);expect(U[0]).toEqual(I.id)});it("should accept back-to-back pseudo-class selectors with cumulative results",function(){E=C.query(":not(G):not(F)",S);expect(E.length).toEqual(5);expect(E[0].id).toEqual(L.id);expect(E[1].id).toEqual(K.id);expect(E[2].id).toEqual(R.id);expect(E[3].id).toEqual(Q.id);expect(E[4].id).toEqual(O.id)});it("should accept member expression selectors",function(){E=C.query(":not({isHidden()})",S);var V=S.getRefItems(true),W=function(Y){return Y.id},X=A.map(V,W),T=A.map(E,W),U=A.difference(X,T);expect(E.length).toEqual(V.length-1);expect(U.length).toEqual(1);expect(U[0]).toEqual(I.id)});describe("focusable",function(){it("should not blow up when card item is not a component",function(){var T=new Ext.container.Container({renderTo:Ext.getBody(),items:[new Ext.Widget()]});expect(function(){T.query(":focusable")}).not.toThrow();T.destroy()})});describe("first/last",function(){var T;beforeEach(function(){T=[new Ext.Component({action:"type1",id:"id1"}),new Ext.container.Container({action:"type1",id:"id2"}),new Ext.container.Container({action:"type2",id:"id3"}),new Ext.Component({action:"type2",id:"id4"}),new Ext.container.Container({action:"type2",id:"id5"})]});afterEach(function(){Ext.Array.forEach(T,function(U){U.destroy()});T=null});describe("first",function(){it("should return an empty array if no items match",function(){var U=C.query("button:first",T);expect(U).toEqual([])});it("should return the first matching component by type",function(){var U=C.query("container:first",T);expect(U).toEqual([T[1]])});it("should return the last matching component by attribute",function(){var U=C.query("[action=type2]:first",T);expect(U).toEqual([T[2]])});it("should return the first component",function(){var U=C.query("*:first",T);expect(U).toEqual([T[0]])});describe("no items/single item",function(){it("should return an empty array if there are no items",function(){var U=C.query("*:first",[]);expect(U).toEqual([])});it("should return an a single item if it matches",function(){var V=new Ext.Component();var U=C.query("component:first",[V]);expect(U).toEqual([V]);V.destroy()})})});describe("last",function(){it("should return an empty array if no items match",function(){var U=C.query("button:last",T);expect(U).toEqual([])});it("should return the last matching component by type",function(){var U=C.query("component:last",T);expect(U).toEqual([T[4]])});it("should return the first matching component by attribute",function(){var U=C.query("[action=type1]:last",T);expect(U).toEqual([T[1]])});it("should return the first component",function(){var U=C.query("*:last",T);expect(U).toEqual([T[4]])});describe("no items/single item",function(){it("should return an empty array if there are no items",function(){var U=C.query("*:last",[]);expect(U).toEqual([])});it("should return an a single item if it matches",function(){var V=new Ext.Component();var U=C.query("component:last",[V]);expect(U).toEqual([V]);V.destroy()})})})});describe(":scrollable",function(){it("should find all valid scrollable items no matter how deeply nested",function(){expect(C.query(":scrollable",S).length).toBe(3)});it("should only find non-valid scrollable items (with a null or false value) if explicitly specified",function(){expect(C.query("[scrollable=null]",S).length).toBe(1);expect(C.query("[scrollable=false]",S).length).toBe(1)});it("should return an empty array if no items match",function(){expect(C.query(":scrollable[type=B/C/D]",S)).toEqual([])});it("should return an a single item if it matches",function(){expect(C.query(":scrollable:first",S)[0]).toEqual(Ext.getCmp("child2"))});it("should not blow up when card item is not a component",function(){var T=new Ext.container.Container({renderTo:Ext.getBody(),items:[new Ext.Widget()]});expect(function(){T.query(":scrollable")}).not.toThrow();T.destroy()})})});describe("attribute value coercion",function(){var T=[{att1:0,att2:0,att3:0,att4:0},{att1:null,att2:false,att3:true,att4:undefined},{att1:0,att2:0,att3:0,att4:0}];if('should coerce "null" to match a null property value',function(){expect(C.query("[att1=null]",T)).toBe(T[1])}){}if('should coerce "false" to match a Boolean property value',function(){expect(C.query("[att2=false]",T)).toBe(T[1])}){}if('should coerce "true" to match a Boolean property value',function(){expect(C.query("[att3=true]",T)).toBe(T[1])}){}if('should coerce "undefined" to match an undefined property value',function(){expect(C.query("[att4=undefined]",T)).toBe(T[1])}){}});describe("ownProperty tests",function(){var U=Ext.define(null,{extend:"Ext.Component",foo:"bar",bletch:0}),T;beforeEach(function(){T=[new U(),new U({foo:"bar",bletch:0})]});afterEach(function(){Ext.destroy(T[0],T[1]);T=null});it('should only match candidates [@foo=bar] with ownProperty "foo" equal to "bar"',function(){expect(Ext.ComponentQuery.query("[@foo=bar]",T).length).toBe(1);expect(Ext.ComponentQuery.query("[@foo=bar]",T)[0]).toBe(T[1]);expect(Ext.ComponentQuery.is(T[0],"[@foo=bar]")).toBe(false);expect(Ext.ComponentQuery.is(T[1],"[@foo=bar]")).toBe(true)});it("should not match candidates [bletch] where bletch is a falsy property",function(){expect(Ext.ComponentQuery.query("[bletch]",T).length).toBe(0);expect(Ext.ComponentQuery.is(T[0],"[bletch]")).toBe(false);expect(Ext.ComponentQuery.is(T[1],"[bletch]")).toBe(false)});it("should match candidates [?bletch] where bletch is a falsy property",function(){expect(Ext.ComponentQuery.query("[?bletch]",T).length).toBe(1);expect(Ext.ComponentQuery.query("[?bletch]",T)[0]).toBe(T[1]);expect(Ext.ComponentQuery.is(T[0],"[?bletch]")).toBe(false);expect(Ext.ComponentQuery.is(T[1],"[?bletch]")).toBe(true)})});describe("Querying floating descendants",function(){var T;beforeEach(function(){T=new Ext.container.Container({items:{xtype:"container",floating:true,id:"floating-cq-child",items:{xtype:"container",floating:true,id:"floating-cq-grandchild",items:{floating:true,id:"floating-cq-great-grandchild"}}},renderTo:document.body})});afterEach(function(){T.destroy()});it("should find all descendants",function(){var U=T.query();expect(U.length).toEqual(3);expect(U[0]).toBe(Ext.getCmp("floating-cq-child"));expect(U[1]).toBe(Ext.getCmp("floating-cq-grandchild"));expect(U[2]).toBe(Ext.getCmp("floating-cq-great-grandchild"))});it("should find individual descendants",function(){var U=T.query(">*");expect(U.length).toEqual(1);expect(U[0]).toBe(Ext.getCmp("floating-cq-child"));U=T.query(">>*");expect(U.length).toEqual(1);expect(U[0]).toBe(Ext.getCmp("floating-cq-grandchild"));U=T.query(">>>*");expect(U.length).toEqual(1);expect(U[0]).toBe(Ext.getCmp("floating-cq-great-grandchild"))})});describe("trimming spaces",function(){var T;beforeEach(function(){T=new Ext.container.Container({items:{xtype:"button",text:"Test",action:"selectVendors"},renderTo:document.body})});afterEach(function(){T.destroy();T=null});describe("single space",function(){describe("attribute matching expressions",function(){it("should trim leading space",function(){E=C.query("[action =selectVendors]",T);expect(E.length).toBe(1);expect(E[0].action).toBe("selectVendors");E=C.query("[action ^=selectVendors]",T);expect(E.length).toBe(1);expect(E[0].action).toBe("selectVendors");E=C.query("[action $=selectVendors]",T);expect(E.length).toBe(1);expect(E[0].action).toBe("selectVendors")});it("should trim trailing space",function(){E=C.query("[action= selectVendors]",T);expect(E.length).toBe(1);expect(E[0].action).toBe("selectVendors");E=C.query("[action*= selectVendors]",T);expect(E.length).toBe(1);expect(E[0].action).toBe("selectVendors");E=C.query("[action~= selectVendors]",T);expect(E.length).toBe(1);expect(E[0].action).toBe("selectVendors")});it("should trim both spaces",function(){E=C.query("[action = selectVendors]",T);expect(E.length).toBe(1);expect(E[0].action).toBe("selectVendors");E=C.query("[action *= selectVendors]",T);expect(E.length).toBe(1);expect(E[0].action).toBe("selectVendors");E=C.query("[action ~= selectVendors]",T);expect(E.length).toBe(1);expect(E[0].action).toBe("selectVendors")})})});describe("multiple spaces",function(){describe("attribute matching expressions",function(){it("should trim multiple leading spaces",function(){E=C.query("[action     =selectVendors]",T);expect(E.length).toBe(1);expect(E[0].action).toBe("selectVendors");E=C.query("[action     ^=selectVendors]",T);expect(E.length).toBe(1);expect(E[0].action).toBe("selectVendors");E=C.query("[action     $=selectVendors]",T);expect(E.length).toBe(1);expect(E[0].action).toBe("selectVendors")});it("should trim multiple trailing spaces",function(){E=C.query("[action=      selectVendors]",T);expect(E.length).toBe(1);expect(E[0].action).toBe("selectVendors");E=C.query("[action*=      selectVendors]",T);expect(E.length).toBe(1);expect(E[0].action).toBe("selectVendors");E=C.query("[action~=      selectVendors]",T);expect(E.length).toBe(1);expect(E[0].action).toBe("selectVendors")});it("should trim multiple spaces on both sides",function(){E=C.query("[action      =      selectVendors]",T);expect(E.length).toBe(1);expect(E[0].action).toBe("selectVendors");E=C.query("[action      *=      selectVendors]",T);expect(E.length).toBe(1);expect(E[0].action).toBe("selectVendors");E=C.query("[action      ~=      selectVendors]",T);expect(E.length).toBe(1);expect(E[0].action).toBe("selectVendors")})});describe("id matching expressions",function(){it("should trim leading spaces",function(){E=C.query(" #child9",S);expect(E.length).toBe(1);expect(E[0].id).toBe(F.id)});it("should trim trailing spaces",function(){E=C.query("#child9 ",S);expect(E.length).toBe(1);expect(E[0].id).toBe(F.id)});it("should trim spaces on both sides",function(){E=C.query("   #child9       ",S);expect(E.length).toBe(1);expect(E[0].id).toBe(F.id)})});describe("descendancy expressions",function(){it("should trim leading spaces",function(){E=C.query(" [layout=card]    [type=B/G/H]",S);expect(E.length).toBe(1);expect(E[0].id).toBe(H.id)});it("should trim trailing spaces",function(){E=C.query("[type=B/G/J]   ^ [layout=hbox]   ",S);expect(E.length).toBe(1);expect(E[0].id).toBe(K.id)});it("should trim spaces on both sides",function(){E=C.query("     #child4      >       [type=B/C/F]        ",S);expect(E.length).toBe(1);expect(E[0].id).toBe(J.id)})})})});describe("pre- and postOrder",function(){var T=false;afterEach(function(){T=false;C.cache.clear()});describe("preOrder",function(){it("should call the fn regardless of whether the selector has been cached",function(){expect(C.cache.get("")).toBeUndefined();C.visitPreOrder("",this,function(){T=true});expect(T).toBe(true)})});describe("postOrder",function(){it("should call the fn regardless of whether the selector has been cached",function(){expect(C.cache.get("")).toBeUndefined();C.visitPostOrder("",this,function(){T=true});expect(T).toBe(true)})})});describe("selecting by attribute",function(){var U,T;beforeEach(function(){Ext.define("spec.Foo",{extend:"Ext.Component",config:{bar:1},baz:2});U=new spec.Foo({jaz:3});Ext.define("spec.Bar",{extend:"Ext.Component",config:{bar:4},baz:5});T=new spec.Bar({jaz:6})});afterEach(function(){Ext.undefine("spec.Foo");Ext.undefine("spec.Bar")});it("should match instance config",function(){E=C.query("[bar=1]");expect(E.length).toBe(1);expect(E[0]).toBe(U)});it("should match a property on the instance",function(){E=C.query("[baz=2]");expect(E.length).toBe(1);expect(E[0]).toBe(U)});it("should match an arbitrary property on the config object",function(){E=C.query("[jaz=3]");expect(E.length).toBe(1);expect(E[0]).toBe(U)})});describe("querying non Ext classes",function(){it("should be able to query on raw objects",function(){var U={foo:"bar"},T=[{foo:"ik"},{foo:"screeble"},U,{foo:"razz"},{foo:"poot"}];expect(Ext.ComponentQuery.query("[foo=bar]",T)[0]).toBe(U)})})})