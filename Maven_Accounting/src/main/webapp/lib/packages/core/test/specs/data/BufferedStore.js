describe("Ext.data.BufferedStore",function(){var H,G,B=true,D=Ext.data.BufferedStore.prototype.load,C;function A(M,J){var I=M+J,L=[],K;for(K=M;K<I;++K){L.push({id:K+1,threadid:K+1,title:"Title"+(K+1)})}return L}function F(J){var N=Ext.Ajax.mockGetAllRequests(),L=J===0,I,M,K;while(N.length){I=N[0];G.push(I.options.params);M=I.options.params;K=A(L?0:M.start,L?0:M.limit);Ext.Ajax.mockComplete({status:200,responseText:Ext.encode({total:(J||L)?J:5000,data:K})});N=Ext.Ajax.mockGetAllRequests()}}function E(I){H=new Ext.data.BufferedStore(Ext.apply({model:"spec.ForumThread",pageSize:100,proxy:{type:"ajax",url:"fakeUrl",reader:{type:"json",rootProperty:"data"}}},I))}beforeEach(function(){C=Ext.data.BufferedStore.prototype.load=function(){D.apply(this,arguments);if(B){this.flushLoad.apply(this,arguments)}return this},Ext.define("spec.ForumThread",{extend:"Ext.data.Model",fields:["title","forumtitle","forumid","username",{name:"replycount",type:"int"},{name:"lastpost",mapping:"lastpost",type:"date",dateFormat:"timestamp"},"lastposter","excerpt","threadid"],idProperty:"threadid"});MockAjaxManager.addMethods();G=[]});afterEach(function(){Ext.data.BufferedStore.prototype.load=D;MockAjaxManager.removeMethods();H.destroy();G=H=null;Ext.data.Model.schema.clear();Ext.undefine("spec.ForumThread")});it("should be able to lookup a record by its internalId",function(){E();H.loadPage(1);F();var I=H.getAt(0);expect(H.getByInternalId(String(I.internalId))).toBe(I)});it("should return undefined when the internalId does not exist",function(){E();H.loadPage(1);F();expect(H.getByInternalId("DefinitelyDoesntExist")).toBeUndefined()});it("should be able to start from any page",function(){E();H.loadPage(10);F();expect(H.currentPage).toBe(10);var I=H.getRange(900,999);expect(I.length).toBe(100);expect(I[0].get("title")).toBe("Title901");expect(I[99].get("title")).toBe("Title1000")});it("should be able to find records in a buffered store",function(){E();H.load();F();expect(H.findBy(function(I){return I.get("title")==="Title10"})).toBe(9);expect(H.findExact("title","Title10")).toBe(9);expect(H.find("title","title10")).toBe(9)});it("should load the store when filtered",function(){var I=jasmine.createSpy();E({listeners:{load:I}});H.filter("title","panel");F();expect(I).toHaveBeenCalled()});describe("sorting",function(){it("should clear the data when calling sort with parameters when remote sorting",function(){E();H.load();F();H.sort();expect(H.data.getCount()).toBe(0);F();expect(H.data.getCount()).toBe(300)});it("should call the beforesort event",function(){var I=jasmine.createSpy();E({listeners:{beforesort:I}});H.sort("title","ASC");F();expect(I).toHaveBeenCalled()});it("should load the store when sorted",function(){var I=jasmine.createSpy();E({listeners:{load:I}});H.sort("title","ASC");F();expect(I).toHaveBeenCalled()});it("should update the sorters when sorting by an existing key",function(){E({sorters:[{property:"title"}]});H.sort("title","DESC");var I=H.getSorters().getAt(0);expect(I.getProperty()).toBe("title");expect(I.getDirection()).toBe("DESC")});it("should only make one network request",function(){var I=jasmine.createSpy();E({listeners:{load:I}});H.filter("username","germanicus");F();expect(I.callCount).toBe(1)})});it("should load the requested range when the pageSize is small",function(){var I=jasmine.createSpy();E({pageSize:5,listeners:{load:I}});H.load();F();expect(I).toHaveBeenCalled()});describe("load",function(){function I(K,J,M){var L=J>=500;it("should pass the records loaded, the operation & success="+L+" to the callback, "+M,function(){var O=jasmine.createSpy(),N;E();H.load({callback:O});Ext.Ajax.mockComplete({status:J,responseText:Ext.encode({total:K.length,data:K})});N=O.mostRecentCall.args;expect(Ext.isArray(N[0])).toBe(true);if(N[0].length){expect(N[0][0].isModel).toBe(true)}else{expect(Ext.isArray(N)).toBe(true)}expect(N[1].getAction()).toBe("read");expect(N[1].$className).toBe("Ext.data.operation.Read");expect(N[2]).toBe(true)})}I([{}],200,"loaded with records");I([{}],500,"loaded with records");I([],200,"no records");I([],500,"no records");describe("should assign dataset index numbers to the records in the Store dependent upon configured pageSize",function(){it("should not exceed 100 records",function(){E();var J=jasmine.createSpy();H.load({callback:J});F();expect(J).toHaveBeenCalled();expect(H.indexOf(H.getAt(0))).toBe(0);expect(H.indexOf(H.getAt(99))).toBe(99);expect(J.mostRecentCall.args[0].length).toBe(100)});it("should not exceed 50 records",function(){E({pageSize:50});var J=jasmine.createSpy();H.load({callback:J});F(50);expect(J).toHaveBeenCalled();expect(H.indexOf(H.getAt(0))).toBe(0);expect(H.indexOf(H.getAt(49))).toBe(49);expect(J.mostRecentCall.args[0].length).toBe(50)})})});describe("reload",function(){describe("beforeload event",function(){it("should not clear the total count or data if beforeload returns false",function(){E();H.load();F();var I=jasmine.createSpy().andReturn(false);H.on("beforeload",I);H.reload();expect(H.getTotalCount()).toBe(5000);expect(H.getAt(0).id).toBe(1);expect(H.isLoading()).toBe(false)})});it("should not increase the number of pages when reloading",function(){var J=0,I;E();H.load();F();H.on("refresh",function(){J++});H.reload();F();expect(J).toBe(1);I=H.getData().getCount();H.reload();F();expect(H.getData().getCount()).toBe(I)});it("should fire the load & refresh event when the store reloads with no data",function(){var J=jasmine.createSpy(),I=jasmine.createSpy();E();H.load();F();H.on("load",J);H.on("refresh",I);H.reload();F(0);expect(J.callCount).toBe(1);expect(J.mostRecentCall.args[0]).toBe(H);expect(J.mostRecentCall.args[1]).toEqual([]);expect(J.mostRecentCall.args[2]).toBe(true);expect(I.callCount).toBe(1);expect(I.mostRecentCall.args[0]).toBe(H)});it("should not request larger than the previous total, preserveScrollOnReload: true",function(){var I=6679,J=50;E({leadingBufferZone:300,pageSize:100,defaultViewSize:J,preserveScrollOnReload:true});H.load();F(I);H.getRange(I-1-J,I-1);F(I);G.length=0;H.reload();expect(function(){F(I)}).not.toThrow();expect(G[G.length-1]).toEqual({page:67,start:6600,limit:100})});it("should not request larger than the previous total, preserveScrollOnReload: false",function(){var I=6679,J=50;E({leadingBufferZone:300,pageSize:100,defaultViewSize:J});H.load();F(I);H.getRange(I-1-J,I-1);F(I);G.length=0;H.reload();expect(function(){F(I)}).not.toThrow();expect(G[G.length-1]).toEqual({page:3,start:200,limit:100})})});describe("pruning",function(){it("should prune least recently used pages as new ones are added above the purgePageCount",function(){var I;E({pageSize:10,viewSize:10,leadingBufferZone:0,trailingBufferZone:0,purgePageCount:new Number(0)});H.load();F();I=[];H.getData().forEach(function(J){I.push(String(J.internalId))});expect(I.length).toBe(10);expect(Ext.Object.getKeys(H.getData().map)).toEqual(["1"]);expect(Ext.Object.getKeys(H.getData().indexMap)).toEqual(I);H.loadPage(2);F();I=[];H.getData().forEach(function(J){I.push(String(J.internalId))});expect(I.length).toBe(20);expect(Ext.Object.getKeys(H.getData().map)).toEqual(["1","2"]);expect(Ext.Object.getKeys(H.getData().indexMap)).toEqual(I);H.loadPage(3);F();I=[];H.getData().forEach(function(J){I.push(String(J.internalId))});expect(I.length).toBe(20);expect(Ext.Object.getKeys(H.getData().map)).toEqual(["2","3"]);expect(Ext.Object.getKeys(H.getData().indexMap)).toEqual(I)})})})