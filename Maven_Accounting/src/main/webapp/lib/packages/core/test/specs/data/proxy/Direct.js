describe("Ext.data.proxy.Direct",function(){var I,D,O,E,G,Q,A,P,N,C,K;function B(S){D=Ext.apply({"namespace":"spec",type:"remoting",url:"fake"},S);O=Ext.direct.Manager.addProvider(D)}function L(S){I=new Ext.data.proxy.Direct(S)}function M(S){var U=spec.DirectSpecs[S].directCfg,T=spyOn(spec.DirectSpecs,S);T.directCfg=U;return T}function F(T,S){T=T||I;T.read(new Ext.data.operation.Read(S))}function J(T,S){T=T||I;T.create(new Ext.data.operation.Create(S||{}))}function H(T,S){T=T||I;T.update(new Ext.data.operation.Update(S||{}))}function R(T,S){T=T||I;T.erase(new Ext.data.operation.Destroy(S||{}))}afterEach(function(){if(I){Ext.destroy(I)}if(O){Ext.direct.Manager.removeProvider(O)}O=I=null;G=Q=A=P=N=null;C=K=E=null});describe("API declaration",function(){beforeEach(function(){B({actions:{"DirectSpecs":[{len:0,name:"read"},{len:0,name:"create"},{len:0,name:"update"},{len:0,name:"destroy"},{len:0,name:"directFn"}]}});G=M("read");Q=M("create");A=M("update");P=M("destroy");N=M("directFn");E={read:G,create:Q,update:A,destroy:P,directFn:N}});describe("directFn",function(){beforeEach(function(){L({directFn:N})});it("should be used to read",function(){F();expect(N).toHaveBeenCalled()});it("should be used to create",function(){J();expect(N).toHaveBeenCalled()});it("should be used to update",function(){H();expect(N).toHaveBeenCalled()});it("should be used to destroy",function(){R();expect(N).toHaveBeenCalled()})});describe("api blob",function(){beforeEach(function(){L({api:{read:G,create:Q,update:A,destroy:P}})});it("should be used to read",function(){F();expect(G).toHaveBeenCalled()});it("should be used to create",function(){J();expect(Q).toHaveBeenCalled()});it("should be used to update",function(){H();expect(A).toHaveBeenCalled()});it("should be used to destroy",function(){R();expect(P).toHaveBeenCalled()})});describe("both directFn and api blob",function(){function S(U,T,V,W){return describe(U,function(){beforeEach(W);it("should call "+T,function(){var X=E[T];expect(X).toHaveBeenCalled()});it("should not call "+V,function(){var X=E[V];expect(X).not.toHaveBeenCalled()})})}beforeEach(function(){L({api:{create:Q,update:A,destroy:P},directFn:N})});S("read","directFn","read",function(){F()});S("create","create","directFn",function(){J()});S("update","update","directFn",function(){H()});S("destroy","destroy","directFn",function(){R()})});describe("string name resolving",function(){describe("directFn",function(){beforeEach(function(){L({directFn:"spec.DirectSpecs.directFn"})});it("should resolve directFn",function(){F();expect(N.callCount).toBe(1)});it("should be able to resolve a new directFn after loading",function(){F();I.setDirectFn("spec.DirectSpecs.read");F();expect(G.callCount).toBe(1)})});describe("api blob",function(){describe("initial",function(){beforeEach(function(){L({api:{read:"spec.DirectSpecs.read",create:"spec.DirectSpecs.create",update:"spec.DirectSpecs.update",destroy:"spec.DirectSpecs.destroy"}})});it("should resolve read fn",function(){F();expect(G.callCount).toBe(1)});it("should resolve create fn",function(){J();expect(Q.callCount).toBe(1)});it("should resolve update fn",function(){H();expect(A.callCount).toBe(1)});it("should resolve destroy fn",function(){R();expect(P.callCount).toBe(1)})});describe("re-initializing",function(){beforeEach(function(){L({api:{read:"spec.DirectSpecs.directFn",create:"spec.DirectSpecs.directFn",update:"spec.DirectSpecs.directFn",destroy:"spec.DirectSpecs.directFn"}});it("should resolve to directFn upfront",function(){F();expect(N.callCount).toBe(1)});describe("after re-init",function(){beforeEach(function(){I.setApi({read:"spec.DirectSpecs.read",create:"spec.DirectSpecs.create",update:"spec.DirectSpecs.update",destroy:"spec.DirectSpecs.destroy"})});it("should resolve read fn",function(){F();expect(G.callCount).toBe(1)});it("should resolve create fn",function(){J();expect(Q.callCount).toBe(1)});it("should resolve update fn",function(){H();expect(A.callCount).toBe(1)});it("should resolve destroy fn",function(){R();expect(P.callCount).toBe(1)})})})})});describe("both directFn and api blob",function(){beforeEach(function(){L({api:{read:"spec.DirectSpecs.read",create:"spec.DirectSpecs.create",update:"spec.DirectSpecs.update",destroy:"spec.DirectSpecs.destroy"},directFn:"spec.DirectSpecs.directFn"});I.resolveMethods()});it("should resolve directFn",function(){expect(I.directFn).toBe(N)});it("should resolve api.read",function(){expect(I.api.read).toBe(G)});it("should resolve api.create",function(){expect(I.api.create).toBe(Q)});it("should resolve api.update",function(){expect(I.api.update).toBe(A)});it("should resolve api.destroy",function(){expect(I.api.destroy).toBe(P)})})})});describe("extraParams",function(){beforeEach(function(){B({actions:{"DirectSpecs":[{name:"named",params:["blerg"]},{name:"ordered",len:2}]}});C=M("named");K=M("ordered")});describe("with named fn",function(){beforeEach(function(){L({directFn:C,extraParams:{foo:true,bar:false}})});it("should pass extraParams with read",function(){F(I,{params:{blerg:42}});expect(C.mostRecentCall.args[0]).toEqual({foo:true,bar:false,blerg:42})});it("should not pass extraParams with create",function(){J();expect(C.mostRecentCall.args[0]).toBe(undefined)});it("should not pass extraParams with update",function(){H();expect(C.mostRecentCall.args[0]).toBe(undefined)});it("should not pass extraParams with destroy",function(){R();expect(C.mostRecentCall.args[0]).toBe(undefined)})});describe("with ordered fn",function(){beforeEach(function(){L({directFn:K,extraParams:{foo:true,bar:false}})});describe("read",function(){it("should pass an object by default",function(){F(I,{params:{blerg:43}});expect(K.mostRecentCall.args[0]).toEqual({blerg:43,foo:true,bar:false})});it("should pass an object with paramsAsHash",function(){I.setParamsAsHash(true);F(I,{params:{blerg:44}});expect(K.mostRecentCall.args[0]).toEqual({blerg:44,foo:true,bar:false})});describe("paramOrder",function(){it("should pass ordered args",function(){I.setParamOrder(["blerg","foo","bar"]);F(I,{params:{blerg:45}});var S=K.mostRecentCall.args;expect(S[0]).toBe(45);expect(S[1]).toBe(true);expect(S[2]).toBe(false)});it("should not discriminate extraParams",function(){I.setParamOrder(["bar","blerg","foo"]);F(I,{params:{blerg:46}});var S=K.mostRecentCall.args;expect(S[0]).toBe(false);expect(S[1]).toBe(46);expect(S[2]).toBe(true)})})});describe("create/update/delete",function(){it("should not pass extraParams with create",function(){J();expect(K.mostRecentCall.args[0]).toBe(undefined)});it("should not pass extraParams with update",function(){H();expect(K.mostRecentCall.args[0]).toBe(undefined)});it("should not pass extraParams with destroy",function(){R();expect(K.mostRecentCall.args[0]).toBe(undefined)})})})});describe("metadata",function(){describe("named",function(){beforeEach(function(){B({actions:{"DirectSpecs":[{name:"named",params:["blerg"],metadata:{params:["foo","bar"]}}]}});C=M("named");L({directFn:C})});describe("read operation",function(){it("should not set options by default",function(){F();expect(C.mostRecentCall.args[3]).toBe(undefined)});it("should pass metadata when it is set",function(){I.setMetadata({foo:42,bar:false});F();expect(C.mostRecentCall.args[3]).toEqual({metadata:{foo:42,bar:false}})})});describe("create operation",function(){it("should not set options by default",function(){J();expect(C.mostRecentCall.args[3]).toBe(undefined)});it("should pass metadata when it is set",function(){I.setMetadata({foo:false,bar:null});J();expect(C.mostRecentCall.args[3]).toEqual({metadata:{foo:false,bar:null}})})});describe("update operation",function(){it("should not set options by default",function(){H();expect(C.mostRecentCall.args[3]).toBe(undefined)});it("should pass metadata to update fn",function(){I.setMetadata({foo:{baz:1},bar:["foo"]});H();expect(C.mostRecentCall.args[3]).toEqual({metadata:{foo:{baz:1},bar:["foo"]}})})});describe("destroy operation",function(){it("should not set options by default",function(){R();expect(C.mostRecentCall.args[3]).toBe(undefined)});it("should pass metadata to destroy fn",function(){I.setMetadata({foo:{bar:{baz:42}},bar:"blerg"});R();expect(C.mostRecentCall.args[3]).toEqual({metadata:{foo:{bar:{baz:42}},bar:"blerg"}})})})});describe("ordered",function(){beforeEach(function(){B({actions:{"DirectSpecs":[{name:"ordered",len:0,metadata:{len:1}}]}});K=M("ordered");L({directFn:K})});describe("read operation",function(){it("should not set options by default",function(){F();expect(K.mostRecentCall.args[2]).toBe(undefined)});it("should pass metadata when it is set",function(){I.setMetadata([42]);F();expect(K.mostRecentCall.args[2]).toEqual({metadata:[42]})})});describe("create operation",function(){it("should not set options by default",function(){J();expect(K.mostRecentCall.args[2]).toBe(undefined)});it("should pass metadata when it is set",function(){I.setMetadata([43]);J();expect(K.mostRecentCall.args[2]).toEqual({metadata:[43]})})});describe("update operation",function(){it("should not set options by default",function(){H();expect(K.mostRecentCall.args[2]).toBe(undefined)});it("should pass metadata when it is set",function(){I.setMetadata([44]);H();expect(K.mostRecentCall.args[2]).toEqual({metadata:[44]})})});describe("destroy operation",function(){it("should not set options by default",function(){R();expect(K.mostRecentCall.args[2]).toBe(undefined)});it("should pass metadata when it is set",function(){I.setMetadata([45]);R();expect(K.mostRecentCall.args[2]).toEqual({metadata:[45]})})})})})})