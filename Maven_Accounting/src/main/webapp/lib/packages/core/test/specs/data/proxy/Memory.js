describe("Ext.data.proxy.Memory",function(){var C,B,A;function E(){C=new Ext.data.proxy.Memory({data:{users:[{id:1,name:"Ed Spencer",phoneNumber:"555 1234"},{id:2,name:"Abe Elias",phoneNumber:"666 1234"}]},model:"spec.User",reader:{type:"json",rootProperty:"users"}})}function D(I){var H=[],G;for(G=1;G<=100;++G){H.push({id:G,name:"Item "+G})}C=new Ext.data.proxy.Memory({data:H,model:"spec.User",enablePaging:I})}function F(){B=new Ext.data.operation.Read({})}beforeEach(function(){Ext.define("spec.User",{extend:"Ext.data.Model",fields:[{name:"id",type:"int"},{name:"name",type:"string"},{name:"phone",type:"string",mapping:"phoneNumber"}]})});afterEach(function(){Ext.data.Model.schema.clear();Ext.undefine("spec.User")});describe("reading data",function(){beforeEach(function(){E();F();C.read(B);A=B.getRecords()});it("should read the records correctly",function(){expect(A.length).toEqual(2);expect(A[0].get("phone")).toEqual("555 1234")});it("should keep raw data by default",function(){var G=C.getReader();expect(G.rawData).toBeDefined()})});describe("filtering",function(){it("should filter data",function(){D();F();B.setFilters([new Ext.util.Filter({filterFn:function(G){return G.getId()%2===0}})]);C.read(B);expect(B.getRecords().length).toBe(50)});it("should filter with paging",function(){D();F();B.setFilters([new Ext.util.Filter({filterFn:function(G){return G.getId()<10}})]);B.setStart(0);B.setLimit(20);C.read(B);expect(B.getRecords().length).toBe(9);expect(B.getResultSet().getTotal()).toBe(9)})});describe("sorting",function(){it("should apply sorting",function(){D();F();B.setSorters([new Ext.util.Sorter({root:"data",property:"id",direction:"DESC"})]);C.read(B);expect(B.getRecords()[0].getId()).toBe(100)})});describe("paging",function(){it("should page the data",function(){D(true);F();B.setStart(0);B.setLimit(20);C.read(B);A=B.getRecords();expect(B.getResultSet().getTotal()).toBe(100);expect(A[0].getId()).toBe(1);expect(A[A.length-1].getId()).toBe(20)})});describe("with a store",function(){var G;function H(I){G=new Ext.data.Store(Ext.apply({model:"spec.User"},I))}afterEach(function(){G.destroy();G=null});it("should load the store with correctly paged data",function(){D(true);H({proxy:C,pageSize:10});G.load();expect(G.getCount()).toBe(10)});it("should load filtered data",function(){D(true);H({proxy:C,pageSize:10000,filters:[{filterFn:function(I){return I.getId()%4===0}}]});G.load();expect(G.getCount()).toBe(25)});it("should load sorted data",function(){E();H({proxy:C,pageSize:10000,sorters:[{property:"name",direction:"ASC"}]});G.load();expect(G.first().get("name")).toBe("Abe Elias");expect(G.last().get("name")).toBe("Ed Spencer")})})})