describe("Ext.data.proxy.Server",function(){var C,B=Ext.data.proxy.Server,A=new Ext.data.reader.Reader(),D=new Ext.data.writer.Writer();beforeEach(function(){Ext.ClassManager.enableNamespaceParseCache=false});afterEach(function(){Ext.ClassManager.enableNamespaceParseCache=true;Ext.data.Model.schema.clear();Ext.undefine("spec.SomeModel")});describe("instantiation",function(){var E;beforeEach(function(){E={extraParams:{foo:true,bar:false},reader:A,writer:D};C=new B(E)});it("should extend Ext.data.proxy.Proxy",function(){expect(C.superclass).toEqual(Ext.data.proxy.Proxy.prototype)});it("should have caching disabled",function(){expect(C.getNoCache()).toBe(true)});it("should have cacheString equal to _dc",function(){expect(C.getCacheString()).toBe("_dc")});it("should have timeout equal to 30000",function(){expect(C.getTimeout()).toBe(30000)});it("should have extraParams",function(){expect(C.getExtraParams()).toEqual(E.extraParams)});it("should have reader",function(){expect(C.getReader()).toBe(E.reader)});it("should have writer",function(){expect(C.getWriter()).toBe(E.writer)})});describe("CRUD Operations",function(){beforeEach(function(){C=new B();C.doRequest=jasmine.createSpy()});describe("create",function(){it("should do a request",function(){C.read("create","create");expect(C.doRequest).toHaveBeenCalledWith("create","create")})});describe("read",function(){it("should do a request",function(){C.read("read","read");expect(C.doRequest).toHaveBeenCalledWith("read","read")})});describe("update",function(){it("should do a request",function(){C.read("update","update");expect(C.doRequest).toHaveBeenCalledWith("update","update")})});describe("destroy",function(){it("should do a request",function(){C.read("destroy","destroy");expect(C.doRequest).toHaveBeenCalledWith("destroy","destroy")})})});describe("buildRequest",function(){describe("url",function(){it("should use the proxy url",function(){C=new B({url:"foo",noCache:false});var E=C.buildRequest(new Ext.data.operation.Read());expect(E.getUrl()).toBe("foo")});it("should prefer the operation url",function(){C=new B({url:"foo",noCache:false});var E=C.buildRequest(new Ext.data.operation.Read({url:"bar"}));expect(E.getUrl()).toBe("bar")})})});describe("buildUrl",function(){var G=new Ext.data.Request({url:"keep"}),F={noCache:false},E={cacheString:"_cool"};beforeEach(function(){spyOn(Ext.Date,"now").andReturn("bro")});it("should return keep?_dc=bro with an empty config",function(){C=new B({});expect(C.buildUrl(G),"keep?_dc=bro")});it("should disable caching",function(){C=new B(F);expect(C.buildUrl(G),G.url)});it("should use cacheString",function(){C=new B(E);expect(C.buildUrl(G),"keep?_cool=bro")});describe("url precedence",function(){it("should use the url on the proxy as a default",function(){C=new B({url:"proxy",noCache:false});expect(C.buildUrl(new Ext.data.Request())).toBe("proxy")});it("should use the specified api by default",function(){C=new B({api:{read:"read"},noCache:false});expect(C.buildUrl(new Ext.data.Request({action:"read"}))).toBe("read")});it("should use the url on the request by default",function(){C=new B({noCache:false});expect(C.buildUrl(new Ext.data.Request({action:"read",url:"request"}))).toBe("request")});it("should use proxy url if the item in the proxy is undefined",function(){C=new B({url:"proxy",api:{read:"read"},noCache:false});expect(C.buildUrl(new Ext.data.Request({action:"update"}))).toBe("proxy")});it("should favour the api over the proxy url",function(){C=new B({url:"proxy",api:{read:"read"},noCache:false});expect(C.buildUrl(new Ext.data.Request({action:"read"}))).toBe("read")});it("should favour the request url over the proxy",function(){C=new B({url:"proxy",noCache:false});expect(C.buildUrl(new Ext.data.Request({action:"update",url:"request"}))).toBe("request")});it("should favour the request url over the api",function(){C=new B({api:{read:"read"},noCache:false});expect(C.buildUrl(new Ext.data.Request({action:"read",url:"request"}))).toBe("request")});it("should favour the request url over proxy & api",function(){C=new B({url:"proxy",api:{read:"read"},noCache:false});expect(C.buildUrl(new Ext.data.Request({action:"read",url:"request"}))).toBe("request")})})});describe("doRequest",function(){it("should throw an error",function(){expect(B.prototype.doRequest).toThrow()})});describe("getParams",function(){var K,J,G,E;function F(L){return new Ext.data.proxy.Server(L||{})}function I(L){return new Ext.data.operation.Read(Ext.apply({},L,{page:10,start:100,limit:10,grouper:E,sorters:J,filters:G}))}function H(O,M){var N=F(O),L=I(M);return N.getParams(L)}beforeEach(function(){J=[new Ext.util.Sorter({property:"name",direction:"ASC"})];G=[new Ext.util.Filter({property:"name",value:"Ed"})];E=new Ext.util.Grouper({property:"name",direction:"ASC"})});describe("the page param",function(){it("should default to 'page'",function(){K=H();expect(K.page).toBe(10)});it("should be customizable",function(){K=H({pageParam:"thePage"});expect(K.thePage).toBe(10)});it("should not be sent if undefined",function(){K=H({pageParam:undefined});expect(K.page).toBeUndefined()})});describe("the start param",function(){it("should default to 'start'",function(){K=H();expect(K.start).toBe(100)});it("should be customizable",function(){K=H({startParam:"theStart"});expect(K.theStart).toBe(100)});it("should not be sent if undefined",function(){K=H({startParam:undefined});expect(K.start).toBeUndefined()});it("should send a startParam of 0",function(){K=H(undefined,{start:0});expect(K.start).toBe(0)})});describe("the limit param",function(){it("should default to 'limit'",function(){K=H();expect(K.limit).toBe(10)});it("should be customizable",function(){K=H({limitParam:"theLimit"});expect(K.theLimit).toBe(10)});it("should not be sent if undefined",function(){K=H({limitParam:undefined});expect(K.limit).toBeUndefined()})});describe("the group param",function(){it("should default to 'group'",function(){K=H();expect(K.group).toBe('{"property":"name","direction":"ASC"}')});it("should be customizable",function(){K=H({groupParam:"theGroup"});expect(K.theGroup).toBe('{"property":"name","direction":"ASC"}')});it("should not be sent if undefined",function(){K=H({groupParam:undefined});expect(K.group).toBeUndefined()});it("should not be set if there is no group defined",function(){K=H({},{grouper:undefined});expect(K.group).toBeUndefined()})});describe("the sort param",function(){beforeEach(function(){spyOn(Ext.data.proxy.Server.prototype,"encodeSorters").andReturn("sorters")});it("should default to 'sort'",function(){K=H();expect(K.sort).toBe("sorters")});it("should be customizable",function(){K=H({sortParam:"theSorters"});expect(K.theSorters).toBe("sorters")});it("should not be sent if undefined",function(){K=H({sortParam:undefined});expect(K.sort).toBeUndefined()});it("should encode the sorters",function(){H();expect(Ext.data.proxy.Server.prototype.encodeSorters).toHaveBeenCalledWith(J)});it("should not be set if there are no sorters",function(){K=H({},{sorters:[]});expect(K.sort).toBeUndefined()})});describe("the filter param",function(){beforeEach(function(){spyOn(Ext.data.proxy.Server.prototype,"encodeFilters").andReturn("filters")});it("should default to 'filter'",function(){K=H();expect(K.filter).toBe("filters")});it("should be customizable",function(){K=H({filterParam:"theFilters"});expect(K.theFilters).toBe("filters")});it("should not be sent if undefined",function(){K=H({filterParam:undefined});expect(K.filter).toBeUndefined()});it("should encode the filters",function(){H();expect(Ext.data.proxy.Server.prototype.encodeFilters).toHaveBeenCalledWith(G)});it("should not be set if there are no filters",function(){K=H({},{filters:[]});expect(K.filter).toBeUndefined()})})});describe("encoding sorters",function(){it("should provide a default encoded string",function(){var F=new Ext.util.Sorter({property:"name",direction:"ASC"});var E=new Ext.util.Sorter({property:"age",direction:"DESC"});C=new Ext.data.proxy.Server();expect(Ext.decode(C.encodeSorters([F,E]))).toEqual([{property:"name",direction:"ASC"},{property:"age",direction:"DESC"}])})});describe("encoding filters",function(){it("should provide a default encoded string, operator should be excluded by default",function(){var F=new Ext.util.Filter({property:"name",value:"Ed"});var E=new Ext.util.Filter({property:"age",value:25,operator:">"});C=new Ext.data.proxy.Server();expect(Ext.decode(C.encodeFilters([F,E]))).toEqual([{property:"name",value:"Ed"},{property:"age",value:25,operator:">"}])})});describe("encoding group data",function(){it("should JSON encode the data",function(){var F=new Ext.data.proxy.Server(),E=new Ext.util.Grouper({property:"name",direction:"ASC"});expect(Ext.decode(F.encodeSorters([E],true))).toEqual({property:"name",direction:"ASC"})})});describe("reader accessors",function(){var G,H="xml",I="xml",E="spec.SomeModel",F;beforeEach(function(){F=Ext.define(E,{extend:"Ext.data.Model",fields:["id"]})});describe("set the proxy's reader by reader instance",function(){beforeEach(function(){G={reader:A};C=new B(G)});it("should not create a new reader instance",function(){var J=false;spyOn(Ext,"createByAlias").andCallFake(function(K){if(K==="reader.json"){J=true}});expect(J).toBe(false)});it("should have a reader set",function(){expect(C.getReader()).toEqual(A)})});describe("set the proxy's reader by string",function(){beforeEach(function(){G={reader:H,proxy:C,model:F,defaultReaderType:I};C=new B(G)});it("should create a new reader instance",function(){expect(C.getReader().isReader).toBe(true)});it("should have a reader set",function(){expect(C.getReader().$className).toBe("Ext.data.reader.Xml")})})});describe("writer accessors",function(){var I,H="xml",F="xml",E="spec.SomeModel",G;beforeEach(function(){G=Ext.define(E,{extend:"Ext.data.Model",fields:["id"]})});describe("set the proxy's writer by writer instance",function(){beforeEach(function(){I={writer:D};C=new B(I)});it("should not create a new writer instance",function(){var J=false;spyOn(Ext,"createByAlias").andCallFake(function(K){if(K==="writer.json"){J=false}});expect(J).toBe(false)});it("should have a writer set",function(){expect(C.getWriter()).toEqual(D)})});describe("set the proxy's writer by string",function(){beforeEach(function(){I={writer:H,model:G,defaultWriterType:F};C=new B(I)});it("should create a new writer instance",function(){expect(C.getWriter().isWriter).toBe(true)});it("should have a writer set",function(){expect(C.getWriter().$className).toBe("Ext.data.writer.Xml")})})});describe("destroy",function(){var E,F;beforeEach(function(){E={reader:A,writer:D};C=new B(E)});it("should destroy reader and writer",function(){F=spyOn(Ext,"destroy");C.destroy();expect(F).toHaveBeenCalledWith(A,D)})})})