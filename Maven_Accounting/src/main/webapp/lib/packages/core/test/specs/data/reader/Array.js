describe("Ext.data.reader.Array",function(){var A,C,B;beforeEach(function(){Ext.ClassManager.enableNamespaceParseCache=false;Ext.define("spec.SomeModel",{extend:"Ext.data.Model",fields:[{name:"floater",type:"float"},{name:"id"},{name:"totalProp",type:"integer"},{name:"bool",type:"boolean"},{name:"msg"}]});Ext.define("spec.MapModel",{extend:"Ext.data.Model",fields:[{name:"a",mapping:1},{name:"b",mapping:2},{name:"c",mapping:3},{name:"d",mapping:4},{name:"e",mapping:0}]});A=new Ext.data.reader.Array({model:"spec.SomeModel"});C=[[1.23,1,6,true,"hello"]];B=A.readRecords(C)});afterEach(function(){Ext.ClassManager.enableNamespaceParseCache=true;Ext.data.Model.schema.clear();Ext.undefine("spec.SomeModel");Ext.undefine("spec.MapModel")});it("should find the total number of records",function(){expect(B.getTotal()).toEqual(1)});it("should extract the records correctly",function(){var D=B.getRecords()[0].getData();expect(D.floater).toEqual(C[0][0]);expect(D.id).toEqual(C[0][1]);expect(D.totalProp).toEqual(C[0][2]);expect(D.bool).toEqual(C[0][3]);expect(D.msg).toEqual(C[0][4])});it("should work with custom index mappings",function(){A=new Ext.data.reader.Array({model:"spec.MapModel"});B=A.readRecords(C);var D=B.getRecords()[0].getData();expect(D.a).toBe(1);expect(D.b).toBe(6);expect(D.c).toBe(true);expect(D.d).toBe("hello");expect(D.e).toBe(1.23)})})