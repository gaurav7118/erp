describe("Ext.data.validator.Email",function(){var A;function B(C){A=new Ext.data.validator.Email();return A.validate(C)}afterEach(function(){A=null});describe("invalid values",function(){it("should not validate if the value is undefined",function(){expect(B(undefined)).toBe(A.getMessage())});it("should not validate if the value is null",function(){expect(B(null)).toBe(A.getMessage())});it("should not validate if the value is an empty string",function(){expect(B("")).toBe(A.getMessage())});it("should not validate if the value doesn't contain @",function(){expect(B("foobar.com")).toBe(A.getMessage())});it("should not validate if the value doesn't contain a domain",function(){expect(B("foo@bar")).toBe(A.getMessage())})});describe("valid values",function(){it("should validate an email",function(){expect(B("support@sencha.com")).toBe(true)})});describe("messages",function(){it("should accept a custom message",function(){A=new Ext.data.validator.Email({message:"Foo"});expect(A.validate(undefined)).toBe("Foo")})})})