describe("Ext.data.validator.Format",function(){var A;function B(C,D){A=new Ext.data.validator.Format({matcher:D});return A.validate(C)}afterEach(function(){A=null});it("should throw an exception if a matcher is not configured",function(){expect(function(){A=new Ext.data.validator.Format()}).toThrow()});describe("invalid values",function(){it("should not validate if the value does match the matcher re",function(){expect(B("foo",/^bar$/)).toBe(A.getMessage())})});describe("valid values",function(){it("should validate if the value matches the matcher re",function(){expect(B("bar",/^bar$/)).toBe(true)})});describe("messages",function(){it("should accept a custom message",function(){A=new Ext.data.validator.Format({message:"Foo",matcher:/^foo$/});expect(A.validate("bar")).toBe("Foo")})});describe("runtime changes",function(){it("should be able to have a new matcher applied",function(){A=new Ext.data.validator.Format({matcher:/^foo/});expect(A.validate("bar")).toBe(A.getMessage());A.setMatcher(/^bar/);expect(A.validate("bar")).toBe(true)})})})