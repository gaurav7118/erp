describe("Ext.Element.style",function(){var A;beforeEach(function(){A=Ext.getBody().createChild({id:"ExtElementHelper",style:"position:absolute;"})});afterEach(function(){A.destroy()});describe("addCls",function(){xit("should add one class",function(){A.addCls("foo");expect(A.dom.className).toEqual("foo")});it("should add two class",function(){A.addCls("foo").addCls("bar");expect(A.dom.className).toEqual("foo bar")});xit("should add one class when given duplicates",function(){A.addCls("foo").addCls("foo");expect(A.dom.className).toEqual("foo")});xit("should add two class at once",function(){A.addCls("foo bar").addCls("bar");expect(A.dom.className).toEqual("foo bar")});xit("should add two class at once and handle duplicates",function(){A.addCls("foo bar").addCls("bar foo");expect(A.dom.className).toEqual("foo bar")})});describe("removeCls",function(){it("should remove nothing if no classes",function(){A.removeCls("bar");expect(A.dom.className).toEqual("")});it("should remove nothing if class is not present",function(){A.dom.className="foo bar";A.removeCls("fbar");expect(A.dom.className).toEqual("foo bar")});it("should remove only class",function(){A.dom.className="foo";A.removeCls("foo");expect(A.dom.className).toEqual("")});it("should remove last class",function(){A.dom.className="foo bar";A.removeCls("bar");expect(A.dom.className).toEqual("foo")});it("should remove first class",function(){A.dom.className="foo bar";A.removeCls("bar");expect(A.dom.className).toEqual("foo")});it("should remove middle class",function(){A.dom.className="foo bar jazz";A.removeCls("bar");expect(A.dom.className).toEqual("foo jazz")});it("should remove multiple classes",function(){A.dom.className="foo bar jazz spud";A.removeCls("jazz bar fff");expect(A.dom.className).toEqual("foo spud")});it("should remove multiple classes sequentially",function(){A.dom.className="foo bar jazz spud";A.removeCls("jazz").removeCls("bar").removeCls("fff");expect(A.dom.className).toEqual("foo spud")})});describe("getStyle",function(){var B,C;beforeEach(function(){C=document.createElement("div");A.appendChild(C);B=Ext.get(C)});afterEach(function(){B.destroy()});describe("border-*-width",function(){Ext.Array.forEach("top right bottom left".split(" "),function(D){it("must report the correct border-"+D+"-width when the border-"+D+'-style is "solid"',function(){C.style.cssText="border:5px solid";expect(B.getStyle("border-"+D+"-width")).toBe("5px")});it("must report 0px for border-"+D+"-width when the border-"+D+'-style is "none"',function(){C.style.cssText="border:5px solid; border-"+D+"-style:none";expect(B.getStyle("border-"+D+"-width")).toBe("0px")})})})});describe("setStyle",function(){var B,C;beforeEach(function(){C=document.createElement("div");A.appendChild(C);B=Ext.get(C)});afterEach(function(){B.destroy()});describe("font-size",function(){it("should set the font size",function(){B.setStyle("font-size","50px");expect(B.getStyle("font-size")).toEqual("50px")})});describe("font-sstyle",function(){it("should set the font style",function(){B.setStyle("font-style","italic");expect(B.getStyle("font-style")).toEqual("italic")})});describe("font-family",function(){it("should set the font family",function(){B.setStyle("font-family","Courier");expect(B.getStyle("font-family").toLowerCase().indexOf("courier")).toBeGreaterThan(-1)})})})},"/src/dom/Element.style.js")