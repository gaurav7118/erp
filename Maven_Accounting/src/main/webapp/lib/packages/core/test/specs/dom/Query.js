describe("Ext.dom.Query",function(){var B=Ext.getBody().dom,C=false,A=['<div id="a:b" class="myclass">abc</div>','<div id="c:last-child" class="myotherclass and-another-class">def</div>','<div id="abc:" specialAttr="jkl\\\\tasdf">ghi</div>','<div id="nn" class="cls:hover">jkl\\tasdf</div>','<div id="12345">mno:pqr</div>','<div id="--abc" customAttr="12345678">pqr</div>','<div id="\\nn" customAttr="myval:ue\t">stu</div>','<div id="n\\nn" customAttr="my\\tvalue">vwx</div>','<div id="oddClass" class="#odd-class-name"></div>','<div id="\nn">yz</div>',('<div id=":id"><span id=":only-child-span">some more text</span><div id="n6e">asdf</div><div id="n6g">asdf</div></div>'),('<span id="myspan" class="myclass isSpan"><span id="AAA" class="beginning">some</span><span id="BBB" class="ending">text</span></span>')],E=A.join(""),D,F;function G(I,H){return C?D.querySelectorAll(I):Ext.dom.Query.jsSelect(I,H)}beforeEach(function(){D=document.createElement("div");D.innerHTML=E;D.id="elemNode";B.appendChild(D);F=G("#myspan",D)[0]});afterEach(function(){if(D){B.removeChild(D);D=F=null}});describe("selectValue",function(){it("should return defaultValue if nothing is found",function(){var H=Ext.dom.Query.selectValue("testing",document,"empty");expect(H).toBe("empty")})});describe("jsSelect",function(){it("should throw error for an invalid query",function(){try{var I=Ext.dom.Query("$#@$%",D);expect(false).toBe(true)}catch(H){}});describe("Standard CSS Selectors",function(){it("should locate elements by id",function(){var I=G("#nn",D),H=I.length;expect(H).toBe(1);expect(I[0]).toBe(D.childNodes[3]);I=G("span > span#BBB",D);H=I.length;expect(H).toBe(1);expect(I[0]).toBe(F.childNodes[1]);I=G("span + span#BBB",D);H=I.length;expect(H).toBe(1);expect(I[0]).toBe(F.childNodes[1]);if(C){I=G("#\\31 2345 + div",D);H=I.length;expect(H).toBe(1);expect(I[0]).toBe(D.childNodes[5])}else{I=G("#12345 + div",D);H=I.length;expect(H).toBe(1);expect(I[0]).toBe(D.childNodes[5])}});it("should locate elements by class",function(){var I=G(".myclass",D),H=I.length;expect(H).toBe(2);expect(I[0]).toBe(D.childNodes[0]);expect(I[1]).toBe(F);I=G(" .isSpan",D);H=I.length;expect(H).toBe(1);expect(I[0]).toBe(F);I=G(".isSpan .ending",D);H=I.length;expect(H).toBe(1);expect(I[0]).toBe(F.childNodes[1]);I=G(".isSpan span.ending",D);H=I.length;expect(H).toBe(1);expect(I[0]).toBe(F.childNodes[1])});it("should find elements by pseudo class",function(){var I=G(":last-child",D),H=I.length;expect(H).toBe(3);expect(I[1]).toBe(F);expect(I[2]).toBe(F.childNodes[1]);I=G(":first-child",D);H=I.length;expect(H).toBe(3);expect(I[0]).toBe(D.childNodes[0]);I=G("#myspan :first-child",D);H=I.length;expect(H).toBe(1);expect(I[0]).toBe(F.childNodes[0]);I=G("span:last-child",D);H=I.length;expect(H).toBe(2);expect(I[0]).toBe(F);I=G("span :last-child",D);H=I.length;expect(H).toBe(1);expect(I[0]).toBe(F.childNodes[1]);if(!C){I=G("div:contains(abc)",D);H=I.length;expect(H).toBe(1);expect(I[0]).toBe(D.childNodes[0])}});it("should find elements by attribute value",function(){var I=G('div[customAttr="12345678"]',D),H=I.length;expect(H).toBe(1);expect(I[0]).toBe(D.childNodes[5]);I=G("div[customAttr]",D),H=I.length;expect(H).toBe(3);expect(I[0]).toBe(D.childNodes[5]);expect(I[1]).toBe(D.childNodes[6]);expect(I[2]).toBe(D.childNodes[7])})});describe("CSS Escape Sequences",function(){it("should handle escapes sequences for IDs",function(){var I=G("#\\00006en",D),H=I.length;expect(H).toBe(1);expect(I[0]).toBe(D.childNodes[3]);I=G("#\\006e\\00036g",D);H=I.length;expect(H).toBe(1);expect(I[0]).toBe(D.childNodes[10].childNodes[2]);I=G("#\\006e\\00036 e",D);H=I.length;expect(H).toBe(1);expect(I[0]).toBe(D.childNodes[10].childNodes[1]);I=G("#\\6e \\6e ",D);H=I.length;expect(H).toBe(1);expect(I[0]).toBe(D.childNodes[3]);I=G("#\\6e\\6e ",D);H=I.length;expect(H).toBe(1);expect(I[0]).toBe(D.childNodes[3]);I=G("#\\6e  \\6e ",D);H=I.length;expect(H).toBe(0);I=G("#\\6e \\6e",D);H=I.length;expect(H).toBe(1);expect(I[0]).toBe(D.childNodes[3]);I=G("#\\--abc ",D);H=I.length;expect(H).toBe(1);expect(I[0]).toBe(D.childNodes[5]);I=G("#\\\\nn",D);H=I.length;expect(H).toBe(1);expect(I[0]).toBe(D.childNodes[6]);I=G("#n\\\\nn",D);H=I.length;expect(H).toBe(1);expect(I[0]).toBe(D.childNodes[7]);I=G("#a\\00003ab",D);H=I.length;expect(H).toBe(1);expect(I[0]).toBe(D.childNodes[0]);I=G("#a\\:b",D);H=I.length;expect(H).toBe(1);expect(I[0]).toBe(D.childNodes[0]);I=G("#a\\3a b",D);H=I.length;expect(H).toBe(1);expect(I[0]).toBe(D.childNodes[0]);I=G("#c\\:last-child",D);H=I.length;expect(H).toBe(1);expect(I[0]).toBe(D.childNodes[1]);I=G("#\\nn",D);H=I.length;expect(H).toBe(1);expect(I[0]).toEqual(D.childNodes[3]);I=G("div#a\\:b + div",D);H=I.length;expect(H).toBe(1);expect(I[0]).toBe(D.childNodes[1]);I=G("div#abc\\3a  + div",D);H=I.length;expect(H).toBe(1);expect(I[0]).toBe(D.childNodes[3]);I=G("#nn",D);H=I.length;expect(H).toBe(1);expect(I[0]).toEqual(D.childNodes[3]);I=G("div + div#\\--abc",D);H=I.length;expect(H).toBe(1);expect(I[0]).toBe(D.childNodes[5])});it("should handle escape sequences for class names",function(){var I=G("div.\\#odd-class-name",D),H=I.length;expect(H).toBe(1);expect(I[0]).toBe(D.childNodes[8]);I=G(".\\#odd-class-name",D);H=I.length;expect(H).toBe(1);expect(I[0]).toBe(D.childNodes[8]);I=G(".cls\\3a hover",D);H=I.length;expect(H).toBe(1);expect(I[0]).toBe(D.childNodes[3])});it("should handle escape sequences for psuedos",function(){var I=G("#\\:id :first-child",D),H=I.length;expect(H).toBe(1);expect(I[0]).toBe(D.childNodes[10].childNodes[0]);if(!C){I=G("div:contains(mno\\:pqr)",D);H=I.length;expect(H).toBe(1);expect(I[0]).toBe(D.childNodes[4]);I=G("div:contains(jkl\\\\\\tasdf)",D);H=I.length;expect(H).toBe(1);expect(I[0]).toBe(D.childNodes[3])}});it("should handle escape sequences for attributes",function(){var I,H;if(Ext.isFF3_6){I=G('div[customAttr="myval\\3a ue"]',D);H=I.length;expect(H).toBe(1);expect(I[0]).toBe(D.childNodes[6]);I=G('div[customAttr="myval:ue"]',D);H=I.length;expect(H).toBe(1);expect(I[0]).toBe(D.childNodes[6]);I=G('div[customAttr="myval\\:ue"]',D);H=I.length;expect(H).toBe(1);expect(I[0]).toBe(D.childNodes[6])}else{I=G('div[customAttr="myval\\3a ue\t"]',D);H=I.length;expect(H).toBe(1);expect(I[0]).toBe(D.childNodes[6]);I=G('div[customAttr="myval:ue\t"]',D);H=I.length;expect(H).toBe(1);expect(I[0]).toBe(D.childNodes[6]);I=G('div[customAttr="myval\\:ue\t"]',D);H=I.length;expect(H).toBe(1);expect(I[0]).toBe(D.childNodes[6])}I=G('div[customAttr="my\\\\tvalue"]',D);H=I.length;expect(H).toBe(1);expect(I[0]).toBe(D.childNodes[7]);I=G('div[specialAttr="jkl\\\\\\\\tasdf"]',D);H=I.length;expect(H).toBe(1);expect(I[0]).toBe(D.childNodes[2])})});describe("XML",function(){describe("selecting elements with namespace prefixes",function(){var H;beforeEach(function(){var I=["<a>",'<x:b xmlns:x="xns">x1</x:b>','<y:b xmlns:y="yns">y1</y:b>','<x:b xmlns:x="xns">x2</x:b>','<y:b xmlns:y="yns">y2</y:b>',"</a>"].join("");if(typeof DOMParser!="undefined"){H=(new DOMParser()).parseFromString(I,"application/xml")}else{H=new ActiveXObject("Microsoft.XMLDOM");H.async=false;H.loadXML(I)}});it("should select elements with namespace prefixes using the '|' namespace selector",function(){var J=G("x|b",H),I=G("y|b",H);expect(J.length).toBe(2);expect(I.length).toBe(2);expect(J[0].firstChild.nodeValue).toBe("x1");expect(J[1].firstChild.nodeValue).toBe("x2");expect(I[0].firstChild.nodeValue).toBe("y1");expect(I[1].firstChild.nodeValue).toBe("y2")});it("should select elements with namespace prefixes using the undocumented escaped colon method",function(){var J=G("x\\:b",H),I=G("y\\:b",H);expect(J.length).toBe(2);expect(I.length).toBe(2);expect(J[0].firstChild.nodeValue).toBe("x1");expect(J[1].firstChild.nodeValue).toBe("x2");expect(I[0].firstChild.nodeValue).toBe("y1");expect(I[1].firstChild.nodeValue).toBe("y2")})});describe("selecting attributes with non-word characters",function(){var H;beforeEach(function(){var I=["<a>",'<b att.name-part="x1">x1</b>',"</a>"].join("");if(typeof DOMParser!="undefined"){H=(new DOMParser()).parseFromString(I,"application/xml")}else{H=new ActiveXObject("Microsoft.XMLDOM");H.async=false;H.loadXML(I)}});it("should select attributes non-word characters '.' and '-'",function(){var I=G("b @att.name-part",H);expect(I.length).toBe(1);expect(I[0].firstChild.nodeValue).toBe("x1")})})})})})