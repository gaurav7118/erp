describe("Ext.list.Tree",function(){var A,F,C,E;var G=Ext.define(null,{extend:"Ext.data.TreeModel",fields:["customField"]});function B(J,I){if(!C&&!I){C=new Ext.data.TreeStore({model:G,root:{expanded:true,children:E}})}F=new Ext.list.Tree(Ext.apply({store:C,animation:false},J));F.render(Ext.getBody());if(F.getStore()){A=F.getStore().getRoot()}}beforeEach(function(){E=[{id:"i1",text:"Item 1",children:[{id:"i11",text:"Item 1.1",leaf:true},{id:"i12",text:"Item 1.2",leaf:true}]},{id:"i2",text:"Item 2",expandable:false},{id:"i3",text:"Item 3"},{id:"i4",text:"Item 4",expanded:true,children:[{id:"i41",text:"Item 4.1",leaf:true},{id:"i42",text:"Item 4.2"},{id:"i43",text:"Item 4.3",leaf:true}]}]});afterEach(function(){A=E=C=F=Ext.destroy(F,C)});function D(I){return C.getNodeById(I)}function H(I){return F.getItem(D(I))}describe("store",function(){function I(){var L={},J=C.hasListeners,K;for(K in J){if(K!=="_decr_"&&K!=="_incr_"){L[K]=J[K]}}return L}describe("configuration",function(){it("should accept a store id",function(){C=new Ext.data.TreeStore({id:"storeWithId",model:G});B({store:"storeWithId"});expect(F.getStore()).toBe(C)});it("should accept a store config and default the type to Ext.data.TreeStore",function(){B({store:{storeId:"storeWithId",model:G}},true);expect(F.getStore().$className).toBe("Ext.data.TreeStore");expect(F.getStore().getStoreId()).toBe("storeWithId")});it("should accept a store config with a type",function(){Ext.define("spec.CustomTreeStore",{extend:"Ext.data.TreeStore",alias:"store.customtree"});B({store:{type:"customtree",storeId:"storeWithId",model:G}},true);expect(F.getStore().$className).toBe("spec.CustomTreeStore");expect(F.getStore().getStoreId()).toBe("storeWithId");Ext.undefine("spec.CustomTreeStore")});it("should accept a store instance",function(){C=new Ext.data.TreeStore({model:G});B({store:C});expect(F.getStore()).toBe(C)})});describe("setting after creation",function(){describe("with no existing store",function(){beforeEach(function(){B(null,true)});it("should accept a store id",function(){C=new Ext.data.TreeStore({id:"storeWithId",model:G});F.setStore("storeWithId");expect(F.getStore()).toBe(C)});it("should accept a store config and default the type to Ext.data.TreeStore",function(){F.setStore({storeId:"storeWithId",model:G});expect(F.getStore().$className).toBe("Ext.data.TreeStore");expect(F.getStore().getStoreId()).toBe("storeWithId")});it("should accept a store config with a type",function(){Ext.define("spec.CustomTreeStore",{extend:"Ext.data.TreeStore",alias:"store.customtree"});F.setStore({type:"customtree",storeId:"storeWithId",model:G});expect(F.getStore().$className).toBe("spec.CustomTreeStore");expect(F.getStore().getStoreId()).toBe("storeWithId");Ext.undefine("spec.CustomTreeStore")});it("should accept a store instance",function(){C=new Ext.data.TreeStore({model:G});F.setStore(C);expect(F.getStore()).toBe(C)})});describe("with an existing store",function(){var J;beforeEach(function(){C=new Ext.data.TreeStore({model:G});J=I();B()});afterEach(function(){J=null});it("should accept a store id and unbind old store listeners",function(){var K=new Ext.data.TreeStore({id:"storeWithId",model:G});F.setStore("storeWithId");expect(F.getStore()).toBe(K);expect(I()).toEqual(J);K.destroy()});it("should accept a store config and default the type to Ext.data.TreeStore and unbind old store listeners",function(){F.setStore({storeId:"storeWithId",model:G});expect(F.getStore().$className).toBe("Ext.data.TreeStore");expect(F.getStore().getStoreId()).toBe("storeWithId");expect(I()).toEqual(J)});it("should accept a store config with a type and unbind old store listeners",function(){Ext.define("spec.CustomTreeStore",{extend:"Ext.data.TreeStore",alias:"store.customtree"});F.setStore({type:"customtree",storeId:"storeWithId",model:G});expect(F.getStore().$className).toBe("spec.CustomTreeStore");expect(F.getStore().getStoreId()).toBe("storeWithId");expect(I()).toEqual(J);Ext.undefine("spec.CustomTreeStore")});it("should accept a store instance and unbind old store listeners",function(){var K=new Ext.data.TreeStore({model:G});F.setStore(K);expect(F.getStore()).toBe(K);expect(I()).toEqual(J);K.destroy()});it("should not destroy the old store with autoDestroy: false",function(){F.setStore(null);expect(C.destroyed).toBe(false)});it("should destroy the old store with autoDestroy: true",function(){C.setAutoDestroy(true);F.setStore(null);expect(C.destroyed).toBe(true)})})});describe("destruction",function(){beforeEach(function(){C=new Ext.data.TreeStore({model:G})});it("should set the store to null",function(){B();F.destroy();expect(F.getStore()).toBeNull()});it("should unbind any listeners",function(){var J=I();B();F.destroy();expect(I()).toEqual(J)});it("should not destroy the store if autoDestroy: false",function(){B();F.destroy();expect(C.destroyed).toBe(false)});it("should destroy the store if autoDestroy: true",function(){C.setAutoDestroy(true);B();F.destroy();expect(C.destroyed).toBe(true)})})});describe("items",function(){var N,J,L,I,K;function M(P,O){B(Ext.merge({defaults:{xtype:"spec_treelist_customitem"}},P),O);F.on({iteminsert:N,itemremove:J,itemexpand:L,itemcollapse:I})}beforeEach(function(){N=jasmine.createSpy();J=jasmine.createSpy();L=jasmine.createSpy();I=jasmine.createSpy();if(!K){Ext.define("spec.treelist.CustomItem",{extend:"Ext.list.AbstractTreeItem",xtype:"spec_treelist_customitem",config:{testConfig:null},constructor:function(P){this.logs={expandable:[],expanded:[],iconCls:[],leaf:[],loading:[],text:[],onNodeCollapse:[],onNodeExpand:[],onNodeInsert:[],onNodeRemove:[],onNodeUpdate:[],insertItem:[],removeItem:[]};this.callParent([P])},insertItem:function(Q,P){this.logs.insertItem.push([Q,P])},removeItem:function(P){this.logs.removeItem.push(P)},nodeCollapse:function(P){this.logs.onNodeCollapse.push(P);this.callParent(arguments)},nodeExpand:function(P){this.logs.onNodeExpand.push(P);this.callParent(arguments)},nodeInsert:function(Q,P){this.logs.onNodeInsert.push([Q,P]);this.callParent(arguments)},nodeRemove:function(P){this.logs.onNodeRemove.push(P);this.callParent(arguments)},nodeUpdate:function(Q,P){this.logs.onNodeUpdate.push([Q,P]);this.callParent(arguments)},updateExpandable:function(P){this.logs.expandable.push(P)},updateExpanded:function(P){this.logs.expanded.push(P)},updateIconCls:function(P){this.logs.iconCls.push(P)},updateLeaf:function(P){this.logs.leaf.push(P)},updateLoading:function(P){this.logs.loading.push(P)},updateText:function(P){this.logs.text.push(P)}});var O=new spec.treelist.CustomItem();K=true;O.destroy()}});afterEach(function(){N=J=L=I=null});describe("configuration of items",function(){it("should use the default item type",function(){B();F.getStore().each(function(O){expect(F.getItem(O).xtype).toBe(F.getDefaults().xtype)})});it("should use a specified type",function(){B({defaults:{xtype:"spec_treelist_customitem"}});F.getStore().each(function(O){expect(F.getItem(O).xtype).toBe("spec_treelist_customitem")})})});describe("at creation",function(){describe("top level nodes",function(){describe("expanded: false, with children",function(){it("should set expanded",function(){M();var O=H("i1");expect(O.logs.expanded).toEqual([]);expect(O.getExpanded()).toBe(false)});it("should set expandable",function(){M();var O=H("i1");expect(O.logs.expandable).toEqual([true]);expect(O.getExpandable()).toBe(true)});it("should set leaf",function(){M();var O=H("i1");expect(O.logs.leaf).toEqual([false]);expect(O.getLeaf()).toBe(false)});it("should set the icon if iconClsProperty is specified",function(){E[0].iconCls="iconA";M();var O=H("i1");expect(O.logs.iconCls).toEqual(["iconA"]);expect(O.getIconCls()).toBe("iconA")});it("should not set the icon if an iconClsProperty is not specified",function(){E[0].iconCls="iconA";M({defaults:{iconClsProperty:""}});var O=H("i1");expect(O.logs.iconCls).toEqual([]);expect(O.getIconCls()).toBe("")});it("should set the text if a textProperty is specified",function(){M();var O=H("i1");expect(O.logs.text).toEqual(["Item 1"]);expect(O.getText()).toBe("Item 1")});it("should not set the text if an textProperty is not specified",function(){M({defaults:{textProperty:""}});var O=H("i1");expect(O.logs.text).toEqual([]);expect(O.getText()).toBe("")});it("should insert the child nodes",function(){M();var O=H("i1");expect(O.logs.insertItem).toEqual([[H("i11"),null],[H("i12"),null]])});it("should not call any template methods",function(){M();var O=H("i1");expect(O.logs.onNodeCollapse).toEqual([]);expect(O.logs.onNodeExpand).toEqual([]);expect(O.logs.onNodeInsert).toEqual([]);expect(O.logs.onNodeRemove).toEqual([]);expect(O.logs.onNodeUpdate).toEqual([])});it("should not fire events",function(){expect(N).not.toHaveBeenCalled();expect(J).not.toHaveBeenCalled();expect(L).not.toHaveBeenCalled();expect(I).not.toHaveBeenCalled()});it("should have the node, list and parent set",function(){M();var O=H("i1");expect(O.getNode()).toBe(D("i1"));expect(O.getParentItem()).toBeNull();expect(O.getOwner()).toBe(F)});it("should have the itemConfig set",function(){M({defaults:{testConfig:12}});var O=H("i1");expect(O.getTestConfig()).toBe(12)})});describe("expandable: false, no children",function(){it("should set expanded",function(){M();var O=H("i2");expect(O.logs.expanded).toEqual([]);expect(O.getExpanded()).toBe(false)});it("should set expandable",function(){M();var O=H("i2");expect(O.logs.expandable).toEqual([]);expect(O.getExpandable()).toBe(false)});it("should set leaf",function(){M();var O=H("i2");expect(O.logs.leaf).toEqual([false]);expect(O.getLeaf()).toBe(false)});it("should set the icon if iconClsProperty is specified",function(){E[1].iconCls="iconA";M();var O=H("i2");expect(O.logs.iconCls).toEqual(["iconA"]);expect(O.getIconCls()).toBe("iconA")});it("should not set the icon if an iconClsProperty is not specified",function(){E[1].iconCls="iconA";M({defaults:{iconClsProperty:""}});var O=H("i2");expect(O.logs.iconCls).toEqual([]);expect(O.getIconCls()).toBe("")});it("should set the text if a textProperty is specified",function(){M();var O=H("i2");expect(O.logs.text).toEqual(["Item 2"]);expect(O.getText()).toBe("Item 2")});it("should not set the text if an textProperty is not specified",function(){M({defaults:{textProperty:""}});var O=H("i2");expect(O.logs.text).toEqual([]);expect(O.getText()).toBe("")});it("should not insert child nodes",function(){M();var O=H("i2");expect(O.logs.insertItem).toEqual([])});it("should not call any template methods",function(){M();var O=H("i2");expect(O.logs.onNodeCollapse).toEqual([]);expect(O.logs.onNodeExpand).toEqual([]);expect(O.logs.onNodeInsert).toEqual([]);expect(O.logs.onNodeRemove).toEqual([]);expect(O.logs.onNodeUpdate).toEqual([])});it("should not fire events",function(){expect(N).not.toHaveBeenCalled();expect(J).not.toHaveBeenCalled();expect(L).not.toHaveBeenCalled();expect(I).not.toHaveBeenCalled()});it("should have the node, list and parent set",function(){M();var O=H("i2");expect(O.getNode()).toBe(D("i2"));expect(O.getParentItem()).toBeNull();expect(O.getOwner()).toBe(F)});it("should have the itemConfig set",function(){M({defaults:{testConfig:12}});var O=H("i2");expect(O.getTestConfig()).toBe(12)})});describe("leaf: true",function(){beforeEach(function(){E[2].leaf=true});it("should set expanded",function(){M();var O=H("i3");expect(O.logs.expanded).toEqual([]);expect(O.getExpanded()).toBe(false)});it("should set expandable",function(){M();var O=H("i3");expect(O.logs.expandable).toEqual([]);expect(O.getExpandable()).toBe(false)});it("should set leaf",function(){M();var O=H("i3");expect(O.logs.leaf).toEqual([]);expect(O.getLeaf()).toBe(true)});it("should set the icon if iconClsProperty is specified",function(){E[2].iconCls="iconA";M();var O=H("i3");expect(O.logs.iconCls).toEqual(["iconA"]);expect(O.getIconCls()).toBe("iconA")});it("should not set the icon if an iconClsProperty is not specified",function(){E[2].iconCls="iconA";M({defaults:{iconClsProperty:""}});var O=H("i3");expect(O.logs.iconCls).toEqual([]);expect(O.getIconCls()).toBe("")});it("should set the text if a textProperty is specified",function(){M();var O=H("i3");expect(O.logs.text).toEqual(["Item 3"]);expect(O.getText()).toBe("Item 3")});it("should not set the text if an textProperty is not specified",function(){M({defaults:{textProperty:""}});var O=H("i3");expect(O.logs.text).toEqual([]);expect(O.getText()).toBe("")});it("should not insert child nodes",function(){M();var O=H("i3");expect(O.logs.insertItem).toEqual([])});it("should not call any template methods",function(){M();var O=H("i3");expect(O.logs.onNodeCollapse).toEqual([]);expect(O.logs.onNodeExpand).toEqual([]);expect(O.logs.onNodeInsert).toEqual([]);expect(O.logs.onNodeRemove).toEqual([]);expect(O.logs.onNodeUpdate).toEqual([])});it("should not fire events",function(){expect(N).not.toHaveBeenCalled();expect(J).not.toHaveBeenCalled();expect(L).not.toHaveBeenCalled();expect(I).not.toHaveBeenCalled()});it("should have the node, list and parent set",function(){M();var O=H("i3");expect(O.getNode()).toBe(D("i3"));expect(O.getParentItem()).toBeNull();expect(O.getOwner()).toBe(F)});it("should have the itemConfig set",function(){M({defaults:{testConfig:12}});var O=H("i3");expect(O.getTestConfig()).toBe(12)})});describe("expanded: true, with children",function(){it("should set expanded",function(){M();var O=H("i4");expect(O.logs.expanded).toEqual([true]);expect(O.getExpanded()).toBe(true)});it("should set expandable",function(){M();var O=H("i4");expect(O.logs.expandable).toEqual([true]);expect(O.getExpandable()).toBe(true)});it("should set leaf",function(){M();var O=H("i4");expect(O.logs.leaf).toEqual([false]);expect(O.getLeaf()).toBe(false)});it("should set the icon if iconClsProperty is specified",function(){E[3].iconCls="iconA";M();var O=H("i4");expect(O.logs.iconCls).toEqual(["iconA"]);expect(O.getIconCls()).toBe("iconA")});it("should not set the icon if an iconClsProperty is not specified",function(){E[3].iconCls="iconA";M({defaults:{iconClsProperty:""}});var O=H("i4");expect(O.logs.iconCls).toEqual([]);expect(O.getIconCls()).toBe("")});it("should set the text if a textProperty is specified",function(){M();var O=H("i4");expect(O.logs.text).toEqual(["Item 4"]);expect(O.getText()).toBe("Item 4")});it("should not set the text if an textProperty is not specified",function(){M({defaults:{textProperty:""}});var O=H("i4");expect(O.logs.text).toEqual([]);expect(O.getText()).toBe("")});it("should insert the child nodes",function(){M();var O=H("i4");expect(O.logs.insertItem).toEqual([[H("i41"),null],[H("i42"),null],[H("i43"),null]])});it("should not call any template methods",function(){M();var O=H("i4");expect(O.logs.onNodeCollapse).toEqual([]);expect(O.logs.onNodeExpand).toEqual([]);expect(O.logs.onNodeInsert).toEqual([]);expect(O.logs.onNodeRemove).toEqual([]);expect(O.logs.onNodeUpdate).toEqual([])});it("should not fire events",function(){expect(N).not.toHaveBeenCalled();expect(J).not.toHaveBeenCalled();expect(L).not.toHaveBeenCalled();expect(I).not.toHaveBeenCalled()});it("should have the node, list and parent set",function(){M();var O=H("i4");expect(O.getNode()).toBe(D("i4"));expect(O.getParentItem()).toBeNull();expect(O.getOwner()).toBe(F)});it("should have the itemConfig set",function(){M({defaults:{testConfig:12}});var O=H("i4");expect(O.getTestConfig()).toBe(12)})})});describe("child level nodes",function(){describe("parent expanded: false",function(){it("should set expanded",function(){M();var P=H("i11"),O=H("i12");expect(P.logs.expanded).toEqual([]);expect(O.logs.expanded).toEqual([]);expect(P.getExpanded()).toBe(false);expect(O.getExpanded()).toBe(false)});it("should set expandable",function(){M();var P=H("i11"),O=H("i12");expect(P.logs.expandable).toEqual([]);expect(O.logs.expandable).toEqual([]);expect(P.getExpandable()).toBe(false);expect(O.getExpanded()).toBe(false)});it("should set leaf",function(){M();var P=H("i11"),O=H("i12");expect(P.logs.leaf).toEqual([]);expect(O.logs.leaf).toEqual([]);expect(P.getLeaf()).toBe(true);expect(O.getLeaf()).toBe(true)});it("should set the icon if iconClsProperty is specified",function(){E[0].children[0].iconCls="iconA";E[0].children[1].iconCls="iconB";M();var P=H("i11"),O=H("i12");expect(P.logs.iconCls).toEqual(["iconA"]);expect(O.logs.iconCls).toEqual(["iconB"]);expect(P.getIconCls()).toBe("iconA");expect(O.getIconCls()).toBe("iconB")});it("should not set the icon if an iconClsProperty is not specified",function(){E[0].children[0].iconCls="iconA";E[0].children[1].iconCls="iconB";M({defaults:{iconClsProperty:""}});var P=H("i11"),O=H("i12");expect(P.logs.iconCls).toEqual([]);expect(O.logs.iconCls).toEqual([]);expect(P.getIconCls()).toBe("");expect(O.getIconCls()).toBe("")});it("should set the text if a textProperty is specified",function(){M();var P=H("i11"),O=H("i12");expect(P.logs.text).toEqual(["Item 1.1"]);expect(O.logs.text).toEqual(["Item 1.2"]);expect(P.getText()).toBe("Item 1.1");expect(O.getText()).toBe("Item 1.2")});it("should not set the text if an textProperty is not specified",function(){M({defaults:{textProperty:""}});var P=H("i11"),O=H("i12");expect(P.logs.text).toEqual([]);expect(O.logs.text).toEqual([]);expect(P.getText()).toBe("");expect(O.getText()).toBe("")});it("should not call any template methods",function(){M();var P=H("i11"),O=H("i12");expect(P.logs.onNodeCollapse).toEqual([]);expect(P.logs.onNodeExpand).toEqual([]);expect(P.logs.onNodeInsert).toEqual([]);expect(P.logs.onNodeRemove).toEqual([]);expect(P.logs.onNodeUpdate).toEqual([]);expect(O.logs.onNodeCollapse).toEqual([]);expect(O.logs.onNodeExpand).toEqual([]);expect(O.logs.onNodeInsert).toEqual([]);expect(O.logs.onNodeRemove).toEqual([]);expect(O.logs.onNodeUpdate).toEqual([])});it("should not fire events",function(){expect(N).not.toHaveBeenCalled();expect(J).not.toHaveBeenCalled();expect(L).not.toHaveBeenCalled();expect(I).not.toHaveBeenCalled()});it("should have the node, list and parent set",function(){M();var P=H("i11"),O=H("i12");expect(P.getNode()).toBe(D("i11"));expect(P.getParentItem()).toBe(H("i1"));expect(P.getOwner()).toBe(F);expect(O.getNode()).toBe(D("i12"));expect(O.getParentItem()).toBe(H("i1"));expect(O.getOwner()).toBe(F)});it("should have the itemConfig set",function(){M({defaults:{testConfig:12}});var P=H("i11"),O=H("i12");expect(P.getTestConfig()).toBe(12);expect(O.getTestConfig()).toBe(12)})});describe("parent expanded: true",function(){it("should set expanded",function(){M();var Q=H("i41"),P=H("i42"),O=H("i43");expect(Q.logs.expanded).toEqual([]);expect(P.logs.expanded).toEqual([]);expect(O.logs.expanded).toEqual([]);expect(Q.getExpanded()).toBe(false);expect(P.getExpanded()).toBe(false);expect(O.getExpanded()).toBe(false)});it("should set expandable",function(){M();var Q=H("i41"),P=H("i42"),O=H("i43");expect(Q.logs.expandable).toEqual([]);expect(P.logs.expandable).toEqual([true]);expect(O.logs.expandable).toEqual([]);expect(Q.getExpandable()).toBe(false);expect(P.getExpandable()).toBe(true);expect(O.getExpandable()).toBe(false)});it("should set leaf",function(){M();var Q=H("i41"),P=H("i42"),O=H("i43");expect(Q.logs.leaf).toEqual([]);expect(P.logs.leaf).toEqual([false]);expect(O.logs.leaf).toEqual([]);expect(Q.getLeaf()).toBe(true);expect(P.getLeaf()).toBe(false);expect(O.getLeaf()).toBe(true)});it("should set the icon if iconClsProperty is specified",function(){E[3].children[0].iconCls="iconA";E[3].children[1].iconCls="iconB";E[3].children[2].iconCls="iconC";M();var Q=H("i41"),P=H("i42"),O=H("i43");expect(Q.logs.iconCls).toEqual(["iconA"]);expect(P.logs.iconCls).toEqual(["iconB"]);expect(O.logs.iconCls).toEqual(["iconC"]);expect(Q.getIconCls()).toBe("iconA");expect(P.getIconCls()).toBe("iconB");expect(O.getIconCls()).toBe("iconC")});it("should not set the icon if an iconClsProperty is not specified",function(){E[3].children[0].iconCls="iconA";E[3].children[1].iconCls="iconB";E[3].children[2].iconCls="iconC";M({defaults:{iconClsProperty:""}});var Q=H("i41"),P=H("i42"),O=H("i43");expect(Q.logs.iconCls).toEqual([]);expect(P.logs.iconCls).toEqual([]);expect(O.logs.iconCls).toEqual([]);expect(Q.getIconCls()).toBe("");expect(P.getIconCls()).toBe("");expect(O.getIconCls()).toBe("")});it("should set the text if a textProperty is specified",function(){M();var Q=H("i41"),P=H("i42"),O=H("i43");expect(Q.logs.text).toEqual(["Item 4.1"]);expect(P.logs.text).toEqual(["Item 4.2"]);expect(O.logs.text).toEqual(["Item 4.3"]);expect(Q.getText()).toBe("Item 4.1");expect(P.getText()).toBe("Item 4.2");expect(O.getText()).toBe("Item 4.3")});it("should not set the text if an textProperty is not specified",function(){M({defaults:{textProperty:""}});var Q=H("i41"),P=H("i42"),O=H("i43");expect(Q.logs.text).toEqual([]);expect(P.logs.text).toEqual([]);expect(O.logs.text).toEqual([]);expect(Q.getText()).toBe("");expect(P.getText()).toBe("");expect(O.getText()).toBe("")});it("should not call any template methods",function(){M();var Q=H("i41"),P=H("i42"),O=H("i43");expect(Q.logs.onNodeCollapse).toEqual([]);expect(Q.logs.onNodeExpand).toEqual([]);expect(Q.logs.onNodeInsert).toEqual([]);expect(Q.logs.onNodeRemove).toEqual([]);expect(Q.logs.onNodeUpdate).toEqual([]);expect(P.logs.onNodeCollapse).toEqual([]);expect(P.logs.onNodeExpand).toEqual([]);expect(P.logs.onNodeInsert).toEqual([]);expect(P.logs.onNodeRemove).toEqual([]);expect(P.logs.onNodeUpdate).toEqual([]);expect(O.logs.onNodeCollapse).toEqual([]);expect(O.logs.onNodeExpand).toEqual([]);expect(O.logs.onNodeInsert).toEqual([]);expect(O.logs.onNodeRemove).toEqual([]);expect(O.logs.onNodeUpdate).toEqual([])});it("should not fire events",function(){expect(N).not.toHaveBeenCalled();expect(J).not.toHaveBeenCalled();expect(L).not.toHaveBeenCalled();expect(I).not.toHaveBeenCalled()});it("should have the node, list and parent set",function(){M();var Q=H("i41"),P=H("i42"),O=H("i43");expect(Q.getNode()).toBe(D("i41"));expect(Q.getParentItem()).toBe(H("i4"));expect(Q.getOwner()).toBe(F);expect(P.getNode()).toBe(D("i42"));expect(P.getParentItem()).toBe(H("i4"));expect(P.getOwner()).toBe(F);expect(O.getNode()).toBe(D("i43"));expect(O.getParentItem()).toBe(H("i4"));expect(O.getOwner()).toBe(F)});it("should have the itemConfig set",function(){M({defaults:{testConfig:12}});var Q=H("i41"),P=H("i42"),O=H("i43");expect(Q.getTestConfig()).toBe(12);expect(P.getTestConfig()).toBe(12);expect(O.getTestConfig()).toBe(12)})})})});describe("dynamic store modifications",function(){describe("adding nodes",function(){describe("via insert",function(){describe("to the root",function(){var O;beforeEach(function(){M({defaults:{testConfig:200}});O=A.insertBefore({id:"i9",text:"Item 9"},D("i1"))});afterEach(function(){O=null});it("should create the item type",function(){var P=H("i9");expect(P.xtype).toBe("spec_treelist_customitem")});it("should set the itemConfig",function(){var P=H("i9");expect(P.getTestConfig()).toBe(200)});it("should have the node, list and parent set",function(){var P=H("i9");expect(P.getNode()).toBe(O);expect(P.getParentItem()).toBeNull();expect(P.getOwner()).toBe(F)});it("should insert the item before the passed item",function(){var P=H("i9");expect(P.el.next()).toBe(H("i1").el)});describe("events",function(){it("should fire iteminsert",function(){expect(N.callCount).toBe(1);expect(N.mostRecentCall.args[0]).toBe(F);expect(N.mostRecentCall.args[1]).toBe(H("root"));expect(N.mostRecentCall.args[2]).toBe(H("i9"));expect(N.mostRecentCall.args[3]).toBe(H("i1"))})});describe("child nodes",function(){var R,Q,P;beforeEach(function(){O=new G({id:"i8"});N.reset();O.appendChild([{id:"i81"},{id:"i82"}]);A.insertBefore(O,D("i9"));R=H("i8");Q=H("i81");P=H("i82")});afterEach(function(){R=Q=P=null});it("should have the node, list and parent set",function(){expect(Q.getNode()).toBe(O.childNodes[0]);expect(Q.getParentItem()).toBe(R);expect(Q.getOwner()).toBe(F);expect(P.getNode()).toBe(O.childNodes[1]);expect(P.getParentItem()).toBe(R);expect(P.getOwner()).toBe(F)});it("should call insertItem",function(){expect(R.logs.insertItem).toEqual([[Q,null],[P,null]])});it("should not call onNodeInsert",function(){expect(R.logs.onNodeInsert).toEqual([])});describe("events",function(){it("should fire iteminsert for the top level item only",function(){expect(N.callCount).toBe(1);expect(N.mostRecentCall.args[0]).toBe(F);expect(N.mostRecentCall.args[1]).toBe(H("root"));expect(N.mostRecentCall.args[2]).toBe(H("i8"));expect(N.mostRecentCall.args[3]).toBe(H("i9"))})})})});describe("non-root node",function(){describe("node that is collapsed",function(){var O;beforeEach(function(){M({defaults:{testConfig:200}});H("i1").logs.insertItem=[];O=D("i1").insertBefore({id:"i9",text:"Item 9"},D("i12"))});afterEach(function(){O=null});it("should create the item type",function(){var P=H("i9");expect(P.xtype).toBe("spec_treelist_customitem")});it("should set the itemConfig",function(){var P=H("i9");expect(P.getTestConfig()).toBe(200)});it("should have the node, list and parent set",function(){var P=H("i9");expect(P.getNode()).toBe(O);expect(P.getParentItem()).toBe(H("i1"));expect(P.getOwner()).toBe(F)});it("should leave the parent as collapsed",function(){expect(H("i1").isExpanded()).toBe(false)});describe("template methods",function(){it("should call insertItem",function(){var P=H("i1");expect(P.logs.insertItem).toEqual([[H("i9"),H("i12")]])});it("should call onNodeInsert",function(){var P=H("i1");expect(P.logs.onNodeInsert).toEqual([[D("i9"),D("i12")]])})});describe("events",function(){it("should fire iteminsert",function(){expect(N.callCount).toBe(1);expect(N.mostRecentCall.args[0]).toBe(F);expect(N.mostRecentCall.args[1]).toBe(H("i1"));expect(N.mostRecentCall.args[2]).toBe(H("i9"));expect(N.mostRecentCall.args[3]).toBe(H("i12"))})});describe("child nodes",function(){var R,Q,P;beforeEach(function(){O=new G({id:"i8"});N.reset();O.appendChild([{id:"i81"},{id:"i82"}]);D("i1").insertBefore(O,D("i9"));R=H("i8");Q=H("i81");P=H("i82")});afterEach(function(){R=Q=P=null});it("should have the node, list and parent set",function(){expect(Q.getNode()).toBe(O.childNodes[0]);expect(Q.getParentItem()).toBe(R);expect(Q.getOwner()).toBe(F);expect(P.getNode()).toBe(O.childNodes[1]);expect(P.getParentItem()).toBe(R);expect(P.getOwner()).toBe(F)});it("should call insertItem",function(){expect(R.logs.insertItem).toEqual([[Q,null],[P,null]])});it("should not call onNodeInsert",function(){expect(R.logs.onNodeInsert).toEqual([])});describe("events",function(){it("should fire iteminsert for the top level item only",function(){expect(N.callCount).toBe(1);expect(N.mostRecentCall.args[0]).toBe(F);expect(N.mostRecentCall.args[1]).toBe(H("i1"));expect(N.mostRecentCall.args[2]).toBe(H("i8"));expect(N.mostRecentCall.args[3]).toBe(H("i9"))})})})});describe("node that is expanded",function(){var O;beforeEach(function(){M({defaults:{testConfig:200}});H("i4").logs.insertItem=[];O=D("i4").insertBefore({id:"i9",text:"Item 9"},D("i43"))});afterEach(function(){O=null});it("should create the item type",function(){var P=H("i9");expect(P.xtype).toBe("spec_treelist_customitem")});it("should set the itemConfig",function(){var P=H("i9");expect(P.getTestConfig()).toBe(200)});it("should have the node, list and parent set",function(){var P=H("i9");expect(P.getNode()).toBe(O);expect(P.getParentItem()).toBe(H("i4"));expect(P.getOwner()).toBe(F)});it("should leave the parent as expanded",function(){expect(H("i4").isExpanded()).toBe(true)});describe("template methods",function(){it("should call insertItem",function(){var P=H("i4");expect(P.logs.insertItem).toEqual([[H("i9"),H("i43")]])});it("should call onNodeInsert",function(){var P=H("i4");expect(P.logs.onNodeInsert).toEqual([[D("i9"),D("i43")]])})});describe("events",function(){it("should fire iteminsert",function(){expect(N.callCount).toBe(1);expect(N.mostRecentCall.args[0]).toBe(F);expect(N.mostRecentCall.args[1]).toBe(H("i4"));expect(N.mostRecentCall.args[2]).toBe(H("i9"));expect(N.mostRecentCall.args[3]).toBe(H("i43"))})});describe("child nodes",function(){var R,Q,P;beforeEach(function(){O=new G({id:"i8"});N.reset();O.appendChild([{id:"i81"},{id:"i82"}]);D("i4").insertBefore(O,D("i9"));R=H("i8");Q=H("i81");P=H("i82")});afterEach(function(){R=Q=P=null});it("should have the node, list and parent set",function(){expect(Q.getNode()).toBe(O.childNodes[0]);expect(Q.getParentItem()).toBe(R);expect(Q.getOwner()).toBe(F);expect(P.getNode()).toBe(O.childNodes[1]);expect(P.getParentItem()).toBe(R);expect(P.getOwner()).toBe(F)});it("should call insertItem",function(){expect(R.logs.insertItem).toEqual([[Q,null],[P,null]])});it("should not call onNodeInsert",function(){expect(R.logs.onNodeInsert).toEqual([])});describe("events",function(){it("should fire iteminsert for the top level item only",function(){expect(N.callCount).toBe(1);expect(N.mostRecentCall.args[0]).toBe(F);expect(N.mostRecentCall.args[1]).toBe(H("i4"));expect(N.mostRecentCall.args[2]).toBe(H("i8"));expect(N.mostRecentCall.args[3]).toBe(H("i9"))})})})})});it("should update the expandable state when adding the first node",function(){E[2].children=[];M();var O=H("i3");expect(O.logs.expandable).toEqual([]);D("i3").insertBefore({id:"i9",text:"Item 9"},null);expect(O.logs.expandable).toEqual([true])});describe("existing nodes",function(){var O;afterEach(function(){O=null});describe("in the same container",function(){beforeEach(function(){M();O=H("i43");H("i4").logs.insertItem=[];D("i4").insertBefore(D("i43"),D("i41"))});it("should use the same item",function(){expect(H("i43")).toBe(O)});it("should use the same el",function(){expect(H("i43").el).toBe(O.el)});it("should set the parent",function(){expect(H("i43").getParentItem()).toBe(H("i4"))});describe("template methods",function(){it("should call onNodeInsert",function(){var P=H("i4");expect(P.logs.onNodeInsert).toEqual([[D("i43"),D("i41")]])});it("should call insertItem",function(){var P=H("i4");expect(P.logs.insertItem).toEqual([[H("i43"),H("i41")]])});it("should call removeItem",function(){var P=H("i4");expect(P.logs.removeItem).toEqual([H("i43")])});it("should not call onNodeRemove",function(){var P=H("i4");expect(P.logs.onNodeRemove).toEqual([])})});describe("events",function(){it("should fire iteminsert",function(){expect(N.callCount).toBe(1);expect(N.mostRecentCall.args[0]).toBe(F);expect(N.mostRecentCall.args[1]).toBe(H("i4"));expect(N.mostRecentCall.args[2]).toBe(H("i43"));expect(N.mostRecentCall.args[3]).toBe(H("i41"))});it("should not fire itemremove",function(){expect(J).not.toHaveBeenCalled()})})});describe("from a different container",function(){beforeEach(function(){E[2].children=[];M();O=H("i43");H("i1").logs.insertItem=[];D("i1").insertBefore(D("i43"),D("i11"))});it("should use the same item",function(){expect(H("i43")).toBe(O)});it("should use the same el",function(){expect(H("i43").el).toBe(O.el)});it("should set the parent",function(){expect(H("i43").getParentItem()).toBe(H("i1"))});it("should update the expandable state when adding the first node and moving the last",function(){var Q=H("i1"),P=H("i3");D("i1").removeChild(D("i12"));D("i1").removeChild(D("i43"));expect(Q.logs.expandable).toEqual([true]);expect(P.logs.expandable).toEqual([]);D("i3").insertBefore(D("i11"),null);expect(Q.logs.expandable).toEqual([true,false]);expect(P.logs.expandable).toEqual([true])});describe("template methods",function(){it("should call onNodeInsert",function(){var P=H("i1");expect(P.logs.onNodeInsert).toEqual([[D("i43"),D("i11")]])});it("should call insertItem",function(){var P=H("i1");expect(P.logs.insertItem).toEqual([[H("i43"),H("i11")]])});it("should call removeItem",function(){var P=H("i4");expect(P.logs.removeItem).toEqual([H("i43")])});it("should not call onNodeRemove",function(){var P=H("i4");expect(P.logs.onNodeRemove).toEqual([])})});describe("events",function(){it("should fire iteminsert",function(){expect(N.callCount).toBe(1);expect(N.mostRecentCall.args[0]).toBe(F);expect(N.mostRecentCall.args[1]).toBe(H("i1"));expect(N.mostRecentCall.args[2]).toBe(H("i43"));expect(N.mostRecentCall.args[3]).toBe(H("i11"))});it("should not fire itemremove",function(){expect(J).not.toHaveBeenCalled()})})})})});describe("via append",function(){describe("to the root",function(){var O;beforeEach(function(){M({defaults:{testConfig:200}});O=A.appendChild({id:"i9",text:"Item 9"})});afterEach(function(){O=null});it("should create the item type",function(){var P=H("i9");expect(P.xtype).toBe("spec_treelist_customitem")});it("should set the itemConfig",function(){var P=H("i9");expect(P.getTestConfig()).toBe(200)});it("should have the node, list and parent set",function(){var P=H("i9");expect(P.getNode()).toBe(O);expect(P.getParentItem()).toBeNull();expect(P.getOwner()).toBe(F)});it("should insert the item at the end",function(){var P=H("i9");expect(P.el.prev()).toBe(H("i4").el)});describe("events",function(){it("should fire iteminsert",function(){expect(N.callCount).toBe(1);expect(N.mostRecentCall.args[0]).toBe(F);expect(N.mostRecentCall.args[1]).toBe(H("root"));expect(N.mostRecentCall.args[2]).toBe(H("i9"));expect(N.mostRecentCall.args[3]).toBeNull()})});describe("child nodes",function(){var R,Q,P;beforeEach(function(){O=new G({id:"i8"});N.reset();O.appendChild([{id:"i81"},{id:"i82"}]);A.appendChild(O);R=H("i8");Q=H("i81");P=H("i82")});afterEach(function(){R=Q=P=null});it("should have the node, list and parent set",function(){expect(Q.getNode()).toBe(O.childNodes[0]);expect(Q.getParentItem()).toBe(R);expect(Q.getOwner()).toBe(F);expect(P.getNode()).toBe(O.childNodes[1]);expect(P.getParentItem()).toBe(R);expect(P.getOwner()).toBe(F)});it("should call insertItem",function(){expect(R.logs.insertItem).toEqual([[Q,null],[P,null]])});it("should not call onNodeInsert",function(){expect(R.logs.onNodeInsert).toEqual([])});describe("events",function(){it("should fire iteminsert for the top level item only",function(){expect(N.callCount).toBe(1);expect(N.mostRecentCall.args[0]).toBe(F);expect(N.mostRecentCall.args[1]).toBe(H("root"));expect(N.mostRecentCall.args[2]).toBe(H("i8"));expect(N.mostRecentCall.args[3]).toBeNull()})})})});describe("non-root node",function(){describe("node that is collapsed",function(){var O;beforeEach(function(){M({defaults:{testConfig:200}});H("i1").logs.insertItem=[];O=D("i1").appendChild({id:"i9",text:"Item 9"})});afterEach(function(){O=null});it("should create the item type",function(){var P=H("i9");expect(P.xtype).toBe("spec_treelist_customitem")});it("should set the itemConfig",function(){var P=H("i9");expect(P.getTestConfig()).toBe(200)});it("should have the node, list and parent set",function(){var P=H("i9");expect(P.getNode()).toBe(O);expect(P.getParentItem()).toBe(H("i1"));expect(P.getOwner()).toBe(F)});it("should leave the parent as collapsed",function(){expect(H("i1").isExpanded()).toBe(false)});describe("template methods",function(){it("should call insertItem",function(){var P=H("i1");expect(P.logs.insertItem).toEqual([[H("i9"),null]])});it("should call onNodeInsert",function(){var P=H("i1");expect(P.logs.onNodeInsert).toEqual([[D("i9"),null]])})});describe("events",function(){it("should fire iteminsert",function(){expect(N.callCount).toBe(1);expect(N.mostRecentCall.args[0]).toBe(F);expect(N.mostRecentCall.args[1]).toBe(H("i1"));expect(N.mostRecentCall.args[2]).toBe(H("i9"));expect(N.mostRecentCall.args[3]).toBeNull()})});describe("child nodes",function(){var R,Q,P;beforeEach(function(){O=new G({id:"i8"});N.reset();O.appendChild([{id:"i81"},{id:"i82"}]);D("i1").appendChild(O);R=H("i8");Q=H("i81");P=H("i82")});afterEach(function(){R=Q=P=null});it("should have the node, list and parent set",function(){expect(Q.getNode()).toBe(O.childNodes[0]);expect(Q.getParentItem()).toBe(R);expect(Q.getOwner()).toBe(F);expect(P.getNode()).toBe(O.childNodes[1]);expect(P.getParentItem()).toBe(R);expect(P.getOwner()).toBe(F)});it("should call insertItem",function(){expect(R.logs.insertItem).toEqual([[Q,null],[P,null]])});it("should not call onNodeInsert",function(){expect(R.logs.onNodeInsert).toEqual([])});describe("events",function(){it("should fire iteminsert for the top level item only",function(){expect(N.callCount).toBe(1);expect(N.mostRecentCall.args[0]).toBe(F);expect(N.mostRecentCall.args[1]).toBe(H("i1"));expect(N.mostRecentCall.args[2]).toBe(H("i8"));expect(N.mostRecentCall.args[3]).toBeNull()})})})});describe("node that is expanded",function(){var O;beforeEach(function(){M({defaults:{testConfig:200}});H("i4").logs.insertItem=[];O=D("i4").appendChild({id:"i9",text:"Item 9"})});afterEach(function(){O=null});it("should create the item type",function(){var P=H("i9");expect(P.xtype).toBe("spec_treelist_customitem")});it("should set the itemConfig",function(){var P=H("i9");expect(P.getTestConfig()).toBe(200)});it("should have the node, list and parent set",function(){var P=H("i9");expect(P.getNode()).toBe(O);expect(P.getParentItem()).toBe(H("i4"));expect(P.getOwner()).toBe(F)});it("should leave the parent as expanded",function(){expect(H("i4").isExpanded()).toBe(true)});describe("template methods",function(){it("should call insertItem",function(){var P=H("i4");expect(P.logs.insertItem).toEqual([[H("i9"),null]])});it("should call onNodeInsert",function(){var P=H("i4");expect(P.logs.onNodeInsert).toEqual([[D("i9"),null]])})});describe("events",function(){it("should fire iteminsert",function(){expect(N.callCount).toBe(1);expect(N.mostRecentCall.args[0]).toBe(F);expect(N.mostRecentCall.args[1]).toBe(H("i4"));expect(N.mostRecentCall.args[2]).toBe(H("i9"));expect(N.mostRecentCall.args[3]).toBeNull()})});describe("child nodes",function(){var R,Q,P;beforeEach(function(){O=new G({id:"i8"});N.reset();O.appendChild([{id:"i81"},{id:"i82"}]);D("i4").appendChild(O);R=H("i8");Q=H("i81");P=H("i82")});afterEach(function(){R=Q=P=null});it("should have the node, list and parent set",function(){expect(Q.getNode()).toBe(O.childNodes[0]);expect(Q.getParentItem()).toBe(R);expect(Q.getOwner()).toBe(F);expect(P.getNode()).toBe(O.childNodes[1]);expect(P.getParentItem()).toBe(R);expect(P.getOwner()).toBe(F)});it("should call insertItem",function(){expect(R.logs.insertItem).toEqual([[Q,null],[P,null]])});it("should not call onNodeInsert",function(){expect(R.logs.onNodeInsert).toEqual([])});describe("events",function(){it("should fire iteminsert for the top level item only",function(){expect(N.callCount).toBe(1);expect(N.mostRecentCall.args[0]).toBe(F);expect(N.mostRecentCall.args[1]).toBe(H("i4"));expect(N.mostRecentCall.args[2]).toBe(H("i8"));expect(N.mostRecentCall.args[3]).toBeNull()})})})})});it("should update the expandable state when adding the first node",function(){E[2].children=[];M();var O=H("i3");expect(O.logs.expandable).toEqual([]);D("i3").appendChild({id:"i9",text:"Item 9"});expect(O.logs.expandable).toEqual([true])});describe("existing nodes",function(){var O;afterEach(function(){O=null});describe("in the same container",function(){beforeEach(function(){M();O=H("i41");H("i4").logs.insertItem=[];D("i4").appendChild(D("i41"))});it("should use the same item",function(){expect(H("i41")).toBe(O)});it("should use the same el",function(){expect(H("i41").el).toBe(O.el)});it("should set the parent",function(){expect(H("i41").getParentItem()).toBe(H("i4"))});describe("template methods",function(){it("should call onNodeInsert",function(){var P=H("i4");expect(P.logs.onNodeInsert).toEqual([[D("i41"),null]])});it("should call insertItem",function(){var P=H("i4");expect(P.logs.insertItem).toEqual([[H("i41"),null]])});it("should call removeItem",function(){var P=H("i4");expect(P.logs.removeItem).toEqual([H("i41")])});it("should not call onNodeRemove",function(){var P=H("i4");expect(P.logs.onNodeRemove).toEqual([])})});describe("events",function(){it("should fire iteminsert",function(){expect(N.callCount).toBe(1);expect(N.mostRecentCall.args[0]).toBe(F);expect(N.mostRecentCall.args[1]).toBe(H("i4"));expect(N.mostRecentCall.args[2]).toBe(H("i41"));expect(N.mostRecentCall.args[3]).toBeNull()});it("should not fire itemremove",function(){expect(J).not.toHaveBeenCalled()})})});describe("from a different container",function(){beforeEach(function(){E[2].children=[];M();O=H("i43");H("i1").logs.insertItem=[];D("i1").appendChild(D("i43"))});it("should use the same item",function(){expect(H("i43")).toBe(O)});it("should use the same el",function(){expect(H("i43").el).toBe(O.el)});it("should set the parent",function(){expect(H("i43").getParentItem()).toBe(H("i1"))});it("should update the expandable state when adding the first node and moving the last",function(){var Q=H("i1"),P=H("i3");D("i1").removeChild(D("i12"));D("i1").removeChild(D("i43"));expect(Q.logs.expandable).toEqual([true]);expect(P.logs.expandable).toEqual([]);D("i3").appendChild(D("i11"));expect(Q.logs.expandable).toEqual([true,false]);expect(P.logs.expandable).toEqual([true])});describe("template methods",function(){it("should call onNodeInsert",function(){var P=H("i1");expect(P.logs.onNodeInsert).toEqual([[D("i43"),null]])});it("should call insertItem",function(){var P=H("i1");expect(P.logs.insertItem).toEqual([[H("i43"),null]])});it("should call removeItem",function(){var P=H("i4");expect(P.logs.removeItem).toEqual([H("i43")])});it("should not call onNodeRemove",function(){var P=H("i4");expect(P.logs.onNodeRemove).toEqual([])})});describe("events",function(){it("should fire iteminsert",function(){expect(N.callCount).toBe(1);expect(N.mostRecentCall.args[0]).toBe(F);expect(N.mostRecentCall.args[1]).toBe(H("i1"));expect(N.mostRecentCall.args[2]).toBe(H("i43"));expect(N.mostRecentCall.args[3]).toBeNull()});it("should not fire itemremove",function(){expect(J).not.toHaveBeenCalled()})})})})})});describe("removing nodes",function(){beforeEach(function(){M()});it("should destroy the item",function(){var O=H("i3");A.removeChild(D("i3"));expect(O.destroyed).toBe(true)});it("should not be accessible via getItem",function(){var O=D("i3");A.removeChild(O);expect(F.getItem(O)).toBeNull()});it("should destroy nested items",function(){var Q=H("i41"),P=H("i42"),O=H("i43");A.removeChild(D("i4"));expect(Q.destroyed).toBe(true);expect(P.destroyed).toBe(true);expect(O.destroyed).toBe(true)});it("should call setExpandable: false if removing the last child item",function(){var O=H("i4");D("i4").removeChild(D("i41"));expect(O.logs.expandable).toEqual([true]);D("i4").removeChild(D("i42"));expect(O.logs.expandable).toEqual([true]);D("i4").removeChild(D("i43"));expect(O.logs.expandable).toEqual([true,false])});describe("template methods",function(){it("should call removeItem",function(){var O=H("i4"),P=H("i41");D("i4").removeChild(D("i41"));expect(O.logs.removeItem).toEqual([P])});it("should call onNodeRemove",function(){var P=H("i4"),O=D("i41");D("i4").removeChild(O);expect(P.logs.onNodeRemove).toEqual([O])});it("should not call template methods for nested children",function(){var O=H("i4");A.removeChild(D("i4"));expect(O.logs.removeItem).toEqual([]);expect(O.logs.onNodeRemove).toEqual([])})});describe("events",function(){it("should fire the remove event",function(){var O=H("i41");D("i4").removeChild(O.getNode());expect(J.callCount).toBe(1);expect(J.mostRecentCall.args[0]).toBe(F);expect(J.mostRecentCall.args[1]).toBe(H("i4"));expect(J.mostRecentCall.args[2]).toBe(O)});it("should only for the remove event for the top level item",function(){var O=H("i4");A.removeChild(O.getNode());expect(J.callCount).toBe(1);expect(J.mostRecentCall.args[0]).toBe(F);expect(J.mostRecentCall.args[1]).toBe(H("root"));expect(J.mostRecentCall.args[2]).toBe(O)})})});describe("collapse",function(){beforeEach(function(){M()});describe("when expanded",function(){it("should call onNodeCollapsed",function(){var P=H("i4"),O=D("i4");expect(P.logs.onNodeCollapse).toEqual([]);O.collapse();expect(P.logs.onNodeCollapse).toEqual([O])});it("should call setExpanded(false)",function(){var P=H("i4"),O=D("i4");expect(P.logs.expanded).toEqual([true]);O.collapse();expect(P.logs.expanded).toEqual([true,false])});it("should fire the itemcollapse event",function(){var P=H("i4"),O=D("i4");O.collapse();expect(I.callCount).toBe(1);expect(I.mostRecentCall.args[0]).toBe(F);expect(I.mostRecentCall.args[1]).toBe(P)})});describe("when collapsed",function(){it("should not call onNodeCollapse",function(){var P=H("i1"),O=D("i1");expect(P.logs.onNodeCollapse).toEqual([]);O.collapse();expect(P.logs.onNodeCollapse).toEqual([])});it("should not call setExpanded(false)",function(){var P=H("i1"),O=D("i1");expect(P.logs.expanded).toEqual([]);O.collapse();expect(P.logs.expanded).toEqual([])});it("should not fire the itemcollapse event",function(){var P=H("i1"),O=D("i1");O.collapse();expect(I).not.toHaveBeenCalled()})})});describe("expand",function(){beforeEach(function(){M()});describe("when collapsed",function(){it("should call onNodeExpand",function(){var P=H("i1"),O=D("i1");expect(P.logs.onNodeExpand).toEqual([]);O.expand();expect(P.logs.onNodeExpand).toEqual([O])});it("should call setExpanded(true)",function(){var P=H("i1"),O=D("i1");expect(P.logs.expanded).toEqual([]);O.expand();expect(P.logs.expanded).toEqual([true])});it("should fire the itemexpand event",function(){var P=H("i1"),O=D("i1");O.expand();expect(L.callCount).toBe(1);expect(L.mostRecentCall.args[0]).toBe(F);expect(L.mostRecentCall.args[1]).toBe(P)});describe("loading",function(){beforeEach(function(){MockAjaxManager.addMethods()});afterEach(function(){MockAjaxManager.removeMethods()});function O(P){Ext.Ajax.mockComplete({status:200,responseText:Ext.encode(P)})}it("should set loaded when the node is expanding",function(){var P=H("i3");expect(P.logs.loading).toEqual([]);expect(P.getLoading()).toBe(false);D("i3").expand();expect(P.logs.loading).toEqual([true]);expect(P.getLoading()).toBe(true);O([]);expect(P.logs.loading).toEqual([true,false]);expect(P.getLoading()).toBe(false)});it("should not fire the itemexpand event until loading completes",function(){var P=H("i3");expect(L).not.toHaveBeenCalled();D("i3").expand();expect(L).not.toHaveBeenCalled();O([]);expect(L.callCount).toBe(1);expect(L.mostRecentCall.args[0]).toBe(F);expect(L.mostRecentCall.args[1]).toBe(P)})})});describe("when expanded",function(){it("should not call onNodeExpand",function(){var P=H("i4"),O=D("i4");expect(P.logs.onNodeExpand).toEqual([]);O.expand();expect(P.logs.onNodeExpand).toEqual([])});it("should not call setExpanded(true)",function(){var P=H("i4"),O=D("i4");expect(P.logs.expanded).toEqual([true]);O.expand();expect(P.logs.expanded).toEqual([true])});it("should not fire the itemexpand event",function(){var P=H("i4"),O=D("i4");O.expand();expect(L).not.toHaveBeenCalled()})})});describe("updating node fields",function(){describe("text",function(){it("should call setText when updating the text with a textProperty",function(){M();var O=H("i2");expect(O.logs.text).toEqual(["Item 2"]);D("i2").set("text","Foo");expect(O.logs.text).toEqual(["Item 2","Foo"])});it("should not call setText with no textProperty",function(){M({defaults:{textProperty:""}});var O=H("i2");expect(O.logs.text).toEqual([]);D("i2").set("text","Foo");expect(O.logs.text).toEqual([])});it("should call onNodeUpdate",function(){M();var P=H("i2"),O=D("i2");expect(P.logs.onNodeUpdate).toEqual([]);O.set("text","Foo");expect(P.logs.onNodeUpdate).toEqual([[O,["text"]]])})});describe("iconCls",function(){it("should call setIconCls when updating the iconCls with an iconClsProperty",function(){M();var O=H("i2");expect(O.logs.iconCls).toEqual([]);D("i2").set("iconCls","foo");expect(O.logs.iconCls).toEqual(["foo"])});it("should not call setIconCls with no iconClsProperty",function(){M({defaults:{iconClsProperty:""}});var O=H("i2");expect(O.logs.iconCls).toEqual([]);D("i2").set("iconCls","foo");expect(O.logs.iconCls).toEqual([])});it("should call onNodeUpdate",function(){M();var P=H("i2"),O=D("i2");expect(P.logs.onNodeUpdate).toEqual([]);O.set("iconCls","foo");expect(P.logs.onNodeUpdate).toEqual([[O,["iconCls"]]])})});describe("expandable",function(){describe("expandable: false",function(){it("should call setExpandable(false)",function(){M();var O=H("i4");expect(O.logs.expandable).toEqual([true]);D("i4").set("expandable",false);expect(O.logs.expandable).toEqual([true,false])});it("should call onNodeUpdate",function(){M();var P=H("i4"),O=D("i4");O.set("expandable",false);expect(P.logs.onNodeUpdate).toEqual([[O,["expandable"]]])})});describe("expandable: true",function(){it("should call setExpandable(true)",function(){E[0].expandable=false;M();var O=H("i1");expect(O.logs.expandable).toEqual([]);D("i1").set("expandable",true);expect(O.logs.expandable).toEqual([true])});it("should call onNodeUpdate",function(){E[0].expandable=false;M();var P=H("i1"),O=D("i1");O.set("expandable",true);expect(P.logs.onNodeUpdate).toEqual([[O,["expandable"]]])})})});describe("other fields",function(){it("should call onNodeUpdate",function(){M();var P=H("i1"),O=D("i1");O.set("customField",100);expect(P.logs.onNodeUpdate).toEqual([[O,["customField"]]])})});it("should call onNodeUpdate when setting multiple fields",function(){M();var P=H("i1"),O=D("i1");O.set({customField:100,text:"Foo"});expect(P.logs.onNodeUpdate).toEqual([[O,["customField","text"]]])})});describe("changing the root node",function(){describe("cleanup",function(){it("should destroy the old items",function(){E=[{id:"i1",text:"Item 1",children:[{id:"i11",text:"Item 1.1"}]},{id:"i2",text:"Item 2",expanded:true,children:[{id:"i21",text:"Item 2.1"},{id:"i22",text:"Item 2.2"}]}];M();var O=[H("i1"),H("i11"),H("i2"),H("i21"),H("i22")];C.setRoot({children:[]});Ext.Array.forEach(O,function(P){expect(P.destroyed).toBe(true)});expect(F.getItem("i1")).toBeNull();expect(F.getItem("i11")).toBeNull();expect(F.getItem("i2")).toBeNull();expect(F.getItem("i21")).toBeNull();expect(F.getItem("i22")).toBeNull()})});describe("adding new items",function(){var P;beforeEach(function(){P=[{id:"j1",text:"XItem 1",iconCls:"iconA",children:[{id:"j11",text:"XItem 1.1",leaf:true}]},{id:"j2",text:"XItem 2",expanded:true,children:[{id:"j21",text:"XItem 2.1",leaf:true},{id:"j22",text:"XItem 2.2"}]}]});afterEach(function(){P=null});function O(Q,R){M(Q);C.setRoot({expanded:true,children:R||P})}describe("top level nodes",function(){describe("expanded: false, with children",function(){it("should set expanded",function(){O();var Q=H("j1");expect(Q.logs.expanded).toEqual([]);expect(Q.getExpanded()).toBe(false)});it("should set expandable",function(){O();var Q=H("j1");expect(Q.logs.expandable).toEqual([true]);expect(Q.getExpandable()).toBe(true)});it("should set leaf",function(){O();var Q=H("j1");expect(Q.logs.leaf).toEqual([false]);expect(Q.getLeaf()).toBe(false)});it("should set the icon if iconClsProperty is specified",function(){P[0].iconCls="iconA";O();var Q=H("j1");expect(Q.logs.iconCls).toEqual(["iconA"]);expect(Q.getIconCls()).toBe("iconA")});it("should not set the icon if an iconClsProperty is not specified",function(){P[0].iconCls="iconA";O({defaults:{iconClsProperty:""}});var Q=H("j1");expect(Q.logs.iconCls).toEqual([]);expect(Q.getIconCls()).toBe("")});it("should set the text if a textProperty is specified",function(){O();var Q=H("j1");expect(Q.logs.text).toEqual(["XItem 1"]);expect(Q.getText()).toBe("XItem 1")});it("should not set the text if an textProperty is not specified",function(){O({defaults:{textProperty:""}});var Q=H("j1");expect(Q.logs.text).toEqual([]);expect(Q.getText()).toBe("")});it("should insert the child nodes",function(){O();var Q=H("j1");expect(Q.logs.insertItem).toEqual([[H("j11"),null]])});it("should not call any template methods",function(){O();var Q=H("j1");expect(Q.logs.onNodeCollapse).toEqual([]);expect(Q.logs.onNodeExpand).toEqual([]);expect(Q.logs.onNodeInsert).toEqual([]);expect(Q.logs.onNodeRemove).toEqual([]);expect(Q.logs.onNodeUpdate).toEqual([])});it("should not fire events",function(){expect(N).not.toHaveBeenCalled();expect(J).not.toHaveBeenCalled();expect(L).not.toHaveBeenCalled();expect(I).not.toHaveBeenCalled()});it("should have the node, list and parent set",function(){O();var Q=H("j1");expect(Q.getNode()).toBe(D("j1"));expect(Q.getParentItem()).toBeNull();expect(Q.getOwner()).toBe(F)});it("should have the itemConfig set",function(){O({defaults:{testConfig:12}});var Q=H("j1");expect(Q.getTestConfig()).toBe(12)})});describe("expanded: true, with children",function(){it("should set expanded",function(){O();var Q=H("j2");expect(Q.logs.expanded).toEqual([true]);expect(Q.getExpanded()).toBe(true)});it("should set expandable",function(){O();var Q=H("j2");expect(Q.logs.expandable).toEqual([true]);expect(Q.getExpandable()).toBe(true)});it("should set leaf",function(){O();var Q=H("j2");expect(Q.logs.leaf).toEqual([false]);expect(Q.getLeaf()).toBe(false)});it("should set the icon if iconClsProperty is specified",function(){P[1].iconCls="iconA";O();var Q=H("j2");expect(Q.logs.iconCls).toEqual(["iconA"]);expect(Q.getIconCls()).toBe("iconA")});it("should not set the icon if an iconClsProperty is not specified",function(){P[1].iconCls="iconA";O({defaults:{iconClsProperty:""}});var Q=H("j2");expect(Q.logs.iconCls).toEqual([]);expect(Q.getIconCls()).toBe("")});it("should set the text if a textProperty is specified",function(){O();var Q=H("j2");expect(Q.logs.text).toEqual(["XItem 2"]);expect(Q.getText()).toBe("XItem 2")});it("should not set the text if an textProperty is not specified",function(){O({defaults:{textProperty:""}});var Q=H("j2");expect(Q.logs.text).toEqual([]);expect(Q.getText()).toBe("")});it("should insert the child nodes",function(){O();var Q=H("j2");expect(Q.logs.insertItem).toEqual([[H("j21"),null],[H("j22"),null]])});it("should not call any template methods",function(){O();var Q=H("j2");expect(Q.logs.onNodeCollapse).toEqual([]);expect(Q.logs.onNodeExpand).toEqual([]);expect(Q.logs.onNodeInsert).toEqual([]);expect(Q.logs.onNodeRemove).toEqual([]);expect(Q.logs.onNodeUpdate).toEqual([])});it("should not fire events",function(){expect(N).not.toHaveBeenCalled();expect(J).not.toHaveBeenCalled();expect(L).not.toHaveBeenCalled();expect(I).not.toHaveBeenCalled()});it("should have the node, list and parent set",function(){O();var Q=H("j2");expect(Q.getNode()).toBe(D("j2"));expect(Q.getParentItem()).toBeNull();expect(Q.getOwner()).toBe(F)});it("should have the itemConfig set",function(){O({defaults:{testConfig:12}});var Q=H("j2");expect(Q.getTestConfig()).toBe(12)})})});describe("child level nodes",function(){describe("parent expanded: false",function(){it("should set expanded",function(){O();var Q=H("j11");expect(Q.logs.expanded).toEqual([]);expect(Q.getExpanded()).toBe(false)});it("should set expandable",function(){O();var Q=H("j11");expect(Q.logs.expandable).toEqual([]);expect(Q.getExpandable()).toBe(false)});it("should set leaf",function(){O();var Q=H("j11");expect(Q.logs.leaf).toEqual([]);expect(Q.getLeaf()).toBe(true)});it("should set the icon if iconClsProperty is specified",function(){P[0].children[0].iconCls="iconB";O();var Q=H("j11");expect(Q.logs.iconCls).toEqual(["iconB"]);expect(Q.getIconCls()).toBe("iconB")});it("should not set the icon if an iconClsProperty is not specified",function(){P[0].children[0].iconCls="iconB";O({defaults:{iconClsProperty:""}});var Q=H("j11");expect(Q.logs.iconCls).toEqual([]);expect(Q.getIconCls()).toBe("")});it("should set the text if a textProperty is specified",function(){O();var Q=H("j11");expect(Q.logs.text).toEqual(["XItem 1.1"]);expect(Q.getText()).toBe("XItem 1.1")});it("should not set the text if an textProperty is not specified",function(){O({defaults:{textProperty:""}});var Q=H("j11");expect(Q.logs.text).toEqual([]);expect(Q.getText()).toBe("")});it("should not call any template methods",function(){O();var Q=H("j11");expect(Q.logs.onNodeCollapse).toEqual([]);expect(Q.logs.onNodeExpand).toEqual([]);expect(Q.logs.onNodeInsert).toEqual([]);expect(Q.logs.onNodeRemove).toEqual([]);expect(Q.logs.onNodeUpdate).toEqual([])});it("should not fire events",function(){expect(N).not.toHaveBeenCalled();expect(J).not.toHaveBeenCalled();expect(L).not.toHaveBeenCalled();expect(I).not.toHaveBeenCalled()});it("should have the node, list and parent set",function(){O();var Q=H("j11");expect(Q.getNode()).toBe(D("j11"));expect(Q.getParentItem()).toBe(H("j1"));expect(Q.getOwner()).toBe(F)});it("should have the itemConfig set",function(){O({defaults:{testConfig:12}});var Q=H("j11");expect(Q.getTestConfig()).toBe(12)})});describe("parent expanded: true",function(){it("should set expanded",function(){O();var R=H("j21"),Q=H("j22");expect(R.logs.expanded).toEqual([]);expect(Q.logs.expanded).toEqual([]);expect(R.getExpanded()).toBe(false);expect(Q.getExpanded()).toBe(false)});it("should set expandable",function(){O();var R=H("j21"),Q=H("j22");expect(R.logs.expandable).toEqual([]);expect(Q.logs.expandable).toEqual([true]);expect(R.getExpandable()).toBe(false);expect(Q.getExpandable()).toBe(true)});it("should set leaf",function(){O();var R=H("j21"),Q=H("j22");expect(R.logs.leaf).toEqual([]);expect(Q.logs.leaf).toEqual([false]);expect(R.getLeaf()).toBe(true);expect(Q.getLeaf()).toBe(false)});it("should set the icon if iconClsProperty is specified",function(){P[1].children[0].iconCls="iconB";P[1].children[1].iconCls="iconC";O();var R=H("j21"),Q=H("j22");expect(R.logs.iconCls).toEqual(["iconB"]);expect(Q.logs.iconCls).toEqual(["iconC"]);expect(R.getIconCls()).toBe("iconB");expect(Q.getIconCls()).toBe("iconC")});it("should not set the icon if an iconClsProperty is not specified",function(){P[1].children[0].iconCls="iconB";P[1].children[1].iconCls="iconC";O({defaults:{iconClsProperty:""}});var R=H("j21"),Q=H("j22");expect(R.logs.iconCls).toEqual([]);expect(Q.logs.iconCls).toEqual([]);expect(R.getIconCls()).toBe("");expect(Q.getIconCls()).toBe("")});it("should set the text if a textProperty is specified",function(){O();var R=H("j21"),Q=H("j22");expect(R.logs.text).toEqual(["XItem 2.1"]);expect(Q.logs.text).toEqual(["XItem 2.2"]);expect(R.getText()).toBe("XItem 2.1");expect(Q.getText()).toBe("XItem 2.2")});it("should not set the text if an textProperty is not specified",function(){O({defaults:{textProperty:""}});var R=H("j21"),Q=H("j22");expect(R.logs.text).toEqual([]);expect(Q.logs.text).toEqual([]);expect(R.getText()).toBe("");expect(Q.getText()).toBe("")});it("should not call any template methods",function(){O();var R=H("j21"),Q=H("j22");expect(R.logs.onNodeCollapse).toEqual([]);expect(R.logs.onNodeExpand).toEqual([]);expect(R.logs.onNodeInsert).toEqual([]);expect(R.logs.onNodeRemove).toEqual([]);expect(R.logs.onNodeUpdate).toEqual([]);expect(Q.logs.onNodeCollapse).toEqual([]);expect(Q.logs.onNodeExpand).toEqual([]);expect(Q.logs.onNodeInsert).toEqual([]);expect(Q.logs.onNodeRemove).toEqual([]);expect(Q.logs.onNodeUpdate).toEqual([])});it("should not fire events",function(){expect(N).not.toHaveBeenCalled();expect(J).not.toHaveBeenCalled();expect(L).not.toHaveBeenCalled();expect(I).not.toHaveBeenCalled()});it("should have the node, list and parent set",function(){O();var R=H("j21"),Q=H("j22");expect(R.getNode()).toBe(D("j21"));expect(R.getParentItem()).toBe(H("j2"));expect(R.getOwner()).toBe(F);expect(Q.getNode()).toBe(D("j22"));expect(Q.getParentItem()).toBe(H("j2"));expect(Q.getOwner()).toBe(F)});it("should have the itemConfig set",function(){O({defaults:{testConfig:12}});var R=H("j21"),Q=H("j22");expect(R.getTestConfig()).toBe(12);expect(Q.getTestConfig()).toBe(12)})})})})});describe("setting a new store",function(){describe("cleanup",function(){it("should destroy the old items",function(){E=[{id:"i1",text:"Item 1",children:[{id:"i11",text:"Item 1.1"}]},{id:"i2",text:"Item 2",expanded:true,children:[{id:"i21",text:"Item 2.1"},{id:"i22",text:"Item 2.2"}]}];M();var O=[H("i1"),H("i11"),H("i2"),H("i21"),H("i22")];F.setStore({root:{children:[]}});Ext.Array.forEach(O,function(P){expect(P.destroyed).toBe(true)});expect(F.getItem("i1")).toBeNull();expect(F.getItem("i11")).toBeNull();expect(F.getItem("i2")).toBeNull();expect(F.getItem("i21")).toBeNull();expect(F.getItem("i22")).toBeNull()})});describe("adding new items",function(){var O;beforeEach(function(){O=[{id:"j1",text:"XItem 1",iconCls:"iconA",children:[{id:"j11",text:"XItem 1.1",leaf:true}]},{id:"j2",text:"XItem 2",expanded:true,children:[{id:"j21",text:"XItem 2.1",leaf:true},{id:"j22",text:"XItem 2.2"}]}]});afterEach(function(){O=null});function P(Q,R){M(Q);F.getStore().setAutoDestroy(true);F.setStore({root:{expanded:true,children:R||O}});C=F.getStore()}describe("top level nodes",function(){describe("expanded: false, with children",function(){it("should set expanded",function(){P();var Q=H("j1");expect(Q.logs.expanded).toEqual([]);expect(Q.getExpanded()).toBe(false)});it("should set expandable",function(){P();var Q=H("j1");expect(Q.logs.expandable).toEqual([true]);expect(Q.getExpandable()).toBe(true)});it("should set leaf",function(){P();var Q=H("j1");expect(Q.logs.leaf).toEqual([false]);expect(Q.getLeaf()).toBe(false)});it("should set the icon if iconClsProperty is specified",function(){O[0].iconCls="iconA";P();var Q=H("j1");expect(Q.logs.iconCls).toEqual(["iconA"]);expect(Q.getIconCls()).toBe("iconA")});it("should not set the icon if an iconClsProperty is not specified",function(){O[0].iconCls="iconA";P({defaults:{iconClsProperty:""}});var Q=H("j1");expect(Q.logs.iconCls).toEqual([]);expect(Q.getIconCls()).toBe("")});it("should set the text if a textProperty is specified",function(){P();var Q=H("j1");expect(Q.logs.text).toEqual(["XItem 1"]);expect(Q.getText()).toBe("XItem 1")});it("should not set the text if an textProperty is not specified",function(){P({defaults:{textProperty:""}});var Q=H("j1");expect(Q.logs.text).toEqual([]);expect(Q.getText()).toBe("")});it("should insert the child nodes",function(){P();var Q=H("j1");expect(Q.logs.insertItem).toEqual([[H("j11"),null]])});it("should not call any template methods",function(){P();var Q=H("j1");expect(Q.logs.onNodeCollapse).toEqual([]);expect(Q.logs.onNodeExpand).toEqual([]);expect(Q.logs.onNodeInsert).toEqual([]);expect(Q.logs.onNodeRemove).toEqual([]);expect(Q.logs.onNodeUpdate).toEqual([])});it("should not fire events",function(){expect(N).not.toHaveBeenCalled();expect(J).not.toHaveBeenCalled();expect(L).not.toHaveBeenCalled();expect(I).not.toHaveBeenCalled()});it("should have the node, list and parent set",function(){P();var Q=H("j1");expect(Q.getNode()).toBe(D("j1"));expect(Q.getParentItem()).toBeNull();expect(Q.getOwner()).toBe(F)});it("should have the itemConfig set",function(){P({defaults:{testConfig:12}});var Q=H("j1");expect(Q.getTestConfig()).toBe(12)})});describe("expanded: true, with children",function(){it("should be set expanded",function(){P();var Q=H("j2");expect(Q.logs.expanded).toEqual([true]);expect(Q.getExpanded()).toBe(true)});it("should set expandable",function(){P();var Q=H("j2");expect(Q.logs.expandable).toEqual([true]);expect(Q.getExpandable()).toBe(true)});it("should set leaf",function(){P();var Q=H("j2");expect(Q.logs.leaf).toEqual([false]);expect(Q.getLeaf()).toBe(false)});it("should set the icon if iconClsProperty is specified",function(){O[1].iconCls="iconA";P();var Q=H("j2");expect(Q.logs.iconCls).toEqual(["iconA"]);expect(Q.getIconCls()).toBe("iconA")});it("should not set the icon if an iconClsProperty is not specified",function(){O[1].iconCls="iconA";P({defaults:{iconClsProperty:""}});var Q=H("j2");expect(Q.logs.iconCls).toEqual([]);expect(Q.getIconCls()).toBe("")});it("should set the text if a textProperty is specified",function(){P();var Q=H("j2");expect(Q.logs.text).toEqual(["XItem 2"]);expect(Q.getText()).toBe("XItem 2")});it("should not set the text if an textProperty is not specified",function(){P({defaults:{textProperty:""}});var Q=H("j2");expect(Q.logs.text).toEqual([]);expect(Q.getText()).toBe("")});it("should insert the child nodes",function(){P();var Q=H("j2");expect(Q.logs.insertItem).toEqual([[H("j21"),null],[H("j22"),null]])});it("should not call any template methods",function(){P();var Q=H("j2");expect(Q.logs.onNodeCollapse).toEqual([]);expect(Q.logs.onNodeExpand).toEqual([]);expect(Q.logs.onNodeInsert).toEqual([]);expect(Q.logs.onNodeRemove).toEqual([]);expect(Q.logs.onNodeUpdate).toEqual([])});it("should not fire events",function(){expect(N).not.toHaveBeenCalled();expect(J).not.toHaveBeenCalled();expect(L).not.toHaveBeenCalled();expect(I).not.toHaveBeenCalled()});it("should have the node, list and parent set",function(){P();var Q=H("j2");expect(Q.getNode()).toBe(D("j2"));expect(Q.getParentItem()).toBeNull();expect(Q.getOwner()).toBe(F)});it("should have the itemConfig set",function(){P({defaults:{testConfig:12}});var Q=H("j2");expect(Q.getTestConfig()).toBe(12)})})});describe("child level nodes",function(){describe("parent expanded: false",function(){it("should set expanded",function(){P();var Q=H("j11");expect(Q.logs.expanded).toEqual([]);expect(Q.getExpanded()).toBe(false)});it("should set expandable",function(){P();var Q=H("j11");expect(Q.logs.expandable).toEqual([]);expect(Q.getExpandable()).toBe(false)});it("should set leaf",function(){P();var Q=H("j11");expect(Q.logs.leaf).toEqual([]);expect(Q.getLeaf()).toBe(true)});it("should set the icon if iconClsProperty is specified",function(){O[0].children[0].iconCls="iconB";P();var Q=H("j11");expect(Q.logs.iconCls).toEqual(["iconB"]);expect(Q.getIconCls()).toBe("iconB")});it("should not set the icon if an iconClsProperty is not specified",function(){O[0].children[0].iconCls="iconB";P({defaults:{iconClsProperty:""}});var Q=H("j11");expect(Q.logs.iconCls).toEqual([]);expect(Q.getIconCls()).toBe("")});it("should set the text if a textProperty is specified",function(){P();var Q=H("j11");expect(Q.logs.text).toEqual(["XItem 1.1"]);expect(Q.getText()).toBe("XItem 1.1")});it("should not set the text if an textProperty is not specified",function(){P({defaults:{textProperty:""}});var Q=H("j11");expect(Q.logs.text).toEqual([]);expect(Q.getText()).toBe("")});it("should not call any template methods",function(){P();var Q=H("j11");expect(Q.logs.onNodeCollapse).toEqual([]);expect(Q.logs.onNodeExpand).toEqual([]);expect(Q.logs.onNodeInsert).toEqual([]);expect(Q.logs.onNodeRemove).toEqual([]);expect(Q.logs.onNodeUpdate).toEqual([])});it("should not fire events",function(){expect(N).not.toHaveBeenCalled();expect(J).not.toHaveBeenCalled();expect(L).not.toHaveBeenCalled();expect(I).not.toHaveBeenCalled()});it("should have the node, list and parent set",function(){P();var Q=H("j11");expect(Q.getNode()).toBe(D("j11"));expect(Q.getParentItem()).toBe(H("j1"));expect(Q.getOwner()).toBe(F)});it("should have the itemConfig set",function(){P({defaults:{testConfig:12}});var Q=H("j11");expect(Q.getTestConfig()).toBe(12)})});describe("parent expanded: true",function(){it("should set expanded",function(){P();var R=H("j21"),Q=H("j22");expect(R.logs.expanded).toEqual([]);expect(Q.logs.expanded).toEqual([]);expect(R.getExpanded()).toBe(false);expect(Q.getExpanded()).toBe(false)});it("should set expandable",function(){P();var R=H("j21"),Q=H("j22");expect(R.logs.expandable).toEqual([]);expect(Q.logs.expandable).toEqual([true]);expect(R.getExpandable()).toBe(false);expect(Q.getExpandable()).toBe(true)});it("should set leaf",function(){P();var R=H("j21"),Q=H("j22");expect(R.logs.leaf).toEqual([]);expect(Q.logs.leaf).toEqual([false]);expect(R.getLeaf()).toBe(true);expect(Q.getLeaf()).toBe(false)});it("should set the icon if iconClsProperty is specified",function(){O[1].children[0].iconCls="iconB";O[1].children[1].iconCls="iconC";P();var R=H("j21"),Q=H("j22");expect(R.logs.iconCls).toEqual(["iconB"]);expect(Q.logs.iconCls).toEqual(["iconC"]);expect(R.getIconCls()).toBe("iconB");expect(Q.getIconCls()).toBe("iconC")});it("should not set the icon if an iconClsProperty is not specified",function(){O[1].children[0].iconCls="iconB";O[1].children[1].iconCls="iconC";P({defaults:{iconClsProperty:""}});var R=H("j21"),Q=H("j22");expect(R.logs.iconCls).toEqual([]);expect(Q.logs.iconCls).toEqual([]);expect(R.getIconCls()).toBe("");expect(Q.getIconCls()).toBe("")});it("should set the text if a textProperty is specified",function(){P();var R=H("j21"),Q=H("j22");expect(R.logs.text).toEqual(["XItem 2.1"]);expect(Q.logs.text).toEqual(["XItem 2.2"]);expect(R.getText()).toBe("XItem 2.1");expect(Q.getText()).toBe("XItem 2.2")});it("should not set the text if an textProperty is not specified",function(){P({defaults:{textProperty:""}});var R=H("j21"),Q=H("j22");expect(R.logs.text).toEqual([]);expect(Q.logs.text).toEqual([]);expect(R.getText()).toBe("");expect(Q.getText()).toBe("")});it("should not call any template methods",function(){P();var R=H("j21"),Q=H("j22");expect(R.logs.onNodeCollapse).toEqual([]);expect(R.logs.onNodeExpand).toEqual([]);expect(R.logs.onNodeInsert).toEqual([]);expect(R.logs.onNodeRemove).toEqual([]);expect(R.logs.onNodeUpdate).toEqual([]);expect(Q.logs.onNodeCollapse).toEqual([]);expect(Q.logs.onNodeExpand).toEqual([]);expect(Q.logs.onNodeInsert).toEqual([]);expect(Q.logs.onNodeRemove).toEqual([]);expect(Q.logs.onNodeUpdate).toEqual([])});it("should not fire events",function(){expect(N).not.toHaveBeenCalled();expect(J).not.toHaveBeenCalled();expect(L).not.toHaveBeenCalled();expect(I).not.toHaveBeenCalled()});it("should have the node, list and parent set",function(){P();var R=H("j21"),Q=H("j22");expect(R.getNode()).toBe(D("j21"));expect(R.getParentItem()).toBe(H("j2"));expect(R.getOwner()).toBe(F);expect(Q.getNode()).toBe(D("j22"));expect(Q.getParentItem()).toBe(H("j2"));expect(Q.getOwner()).toBe(F)});it("should have the itemConfig set",function(){P({defaults:{testConfig:12}});var R=H("j21"),Q=H("j22");expect(R.getTestConfig()).toBe(12);expect(Q.getTestConfig()).toBe(12)})})})})})})});describe("list methods",function(){describe("getItem",function(){beforeEach(function(){B()});it("should return the item matching the node",function(){var J=D("i2"),I=F.getItem(J);expect(I.getNode()).toBe(J);expect(I.xtype).toBe(F.getDefaults().xtype)});it("should return null if the item does not exist",function(){var J=new G(),I=F.getItem(J);expect(F.getItem(J)).toBeNull()});it("should return null if no node is passed",function(){expect(F.getItem(null)).toBeNull()});it("should return null after an item was removed",function(){var I=D("i4");A.removeChild(I);expect(F.getItem(I)).toBeNull()});it("should return null for a child when the parent was removed",function(){var I=D("i41");A.removeChild(D("i4"));expect(F.getItem(I)).toBeNull()});it("should return newly added items",function(){var J=A.appendChild({id:"i9"}),I=F.getItem(J);expect(I.getNode()).toBe(J);expect(I.xtype).toBe(F.getDefaults().xtype)});it("should return children of newly added items",function(){var J=A.appendChild({id:"i9",children:[{id:"i91"}]}),I=F.getItem(J.firstChild);expect(I.getNode()).toBe(J.firstChild);expect(I.xtype).toBe(F.getDefaults().xtype)})})});describe("item methods",function(){describe("expand",function(){it("should call through to the node expand",function(){B();var I=D("i1");spyOn(I,"expand");H("i1").expand();expect(I.expand.callCount).toBe(1)})});describe("collapse",function(){it("should call through to the node collapse",function(){B();var I=D("i1");spyOn(I,"collapse");H("i1").collapse();expect(I.collapse.callCount).toBe(1)})});describe("isExpanded",function(){it("should return true if the node is expanded",function(){B();expect(H("i4").isExpanded()).toBe(true)});it("should return false if the node is collapsed",function(){B();expect(H("i1").isExpanded()).toBe(false)});it("should return false if the node is a leaf",function(){E[2].leaf=true;B();expect(H("i3").isExpanded()).toBe(false)})})});describe("singleExpand",function(){beforeEach(function(){E=[{id:"i1",children:[{id:"i11",children:[{id:"i111",leaf:true}]},{id:"i12",children:[{id:"i121",leaf:true}]},{id:"i13",children:[{id:"i131",leaf:true}]}]},{id:"i2",children:[{id:"i21",children:[{id:"i211",leaf:true}]},{id:"i22",children:[{id:"i221",leaf:true}]},{id:"i23",children:[{id:"i231",leaf:true}]}]},{id:"i3",children:[{id:"i31",children:[{id:"i311",leaf:true}]},{id:"i32",children:[{id:"i321",leaf:true}]},{id:"i33",children:[{id:"i331",leaf:true}]}]}]});function I(L,N){var M=D(L),O=M.childNodes,J=O.length,K;for(K=0;K<J;++K){expect(H(O[K].id).isExpanded()).toBe(N[K])}}describe("with singleExpand: false",function(){beforeEach(function(){B()});it("should not collapse other nodes when expanding",function(){H("i1").expand();I("root",[true,false,false]);I("i1",[false,false,false]);I("i2",[false,false,false]);I("i3",[false,false,false]);H("i2").expand();I("root",[true,true,false]);I("i1",[false,false,false]);I("i2",[false,false,false]);I("i3",[false,false,false]);H("i3").expand();I("root",[true,true,true]);I("i1",[false,false,false]);I("i2",[false,false,false]);I("i3",[false,false,false]);H("i11").expand();I("root",[true,true,true]);I("i1",[true,false,false]);I("i2",[false,false,false]);I("i3",[false,false,false]);H("i12").expand();I("root",[true,true,true]);I("i1",[true,true,false]);I("i2",[false,false,false]);I("i3",[false,false,false]);H("i13").expand();I("root",[true,true,true]);I("i1",[true,true,true]);I("i2",[false,false,false]);I("i3",[false,false,false]);H("i21").expand();I("root",[true,true,true]);I("i1",[true,true,true]);I("i2",[true,false,false]);I("i3",[false,false,false]);H("i22").expand();I("root",[true,true,true]);I("i1",[true,true,true]);I("i2",[true,true,false]);I("i3",[false,false,false]);H("i23").expand();I("root",[true,true,true]);I("i1",[true,true,true]);I("i2",[true,true,true]);I("i3",[false,false,false]);H("i31").expand();I("root",[true,true,true]);I("i1",[true,true,true]);I("i2",[true,true,true]);I("i3",[true,false,false]);H("i32").expand();I("root",[true,true,true]);I("i1",[true,true,true]);I("i2",[true,true,true]);I("i3",[true,true,false]);H("i33").expand();I("root",[true,true,true]);I("i1",[true,true,true]);I("i2",[true,true,true]);I("i3",[true,true,true])})});describe("with singleExpand: true",function(){beforeEach(function(){B({singleExpand:true})});it("should only allow 1 item to be expanded per level",function(){H("i1").expand();I("root",[true,false,false]);I("i1",[false,false,false]);H("i2").expand();I("root",[false,true,false]);I("i2",[false,false,false]);H("i3").expand();I("root",[false,false,true]);I("i3",[false,false,false]);H("i1").expand();H("i11").expand();I("root",[true,false,false]);I("i1",[true,false,false]);H("i12").expand();I("root",[true,false,false]);I("i1",[false,true,false]);H("i13").expand();I("root",[true,false,false]);I("i1",[false,false,true]);H("i2").expand();H("i21").expand();I("root",[false,true,false]);I("i2",[true,false,false]);H("i22").expand();I("root",[false,true,false]);I("i2",[false,true,false]);H("i23").expand();I("root",[false,true,false]);I("i2",[false,false,true]);H("i3").expand();H("i31").expand();I("root",[false,false,true]);I("i3",[true,false,false]);H("i32").expand();I("root",[false,false,true]);I("i3",[false,true,false]);H("i33").expand();I("root",[false,false,true]);I("i3",[false,false,true])});it("should collapse nodes before expanding",function(){var J=[];F.on("itemexpand",function(L,K){J.push(["e",K.getNode().id])});F.on("itemcollapse",function(L,K){J.push(["c",K.getNode().id])});H("i1").expand();expect(J).toEqual([["e","i1"]]);J=[];H("i2").expand();expect(J).toEqual([["c","i1"],["e","i2"]]);J=[];H("i3").expand();expect(J).toEqual([["c","i2"],["e","i3"]]);J=[];H("i1").expand();expect(J).toEqual([["c","i3"],["e","i1"]])})})});(Ext.isModern?xdescribe:describe)("sizing",function(){var J,L,K;beforeEach(function(){B({renderTo:null});J=new Ext.container.Container({renderTo:Ext.getBody(),width:400,height:600,layout:{type:"vbox",align:"stretch"},items:[{xtype:"component",flex:1},F]});L=J.items.first();K=J.componentLayoutCounter});afterEach(function(){L=J=Ext.destroy(J);K=0});function I(){return F.element.getHeight()}it("should provide an initial size",function(){expect(L.getHeight()).toBe(600-I())});it("should update layout when a node is collapsed",function(){var M=L.getHeight();D("i4").collapse();expect(L.getHeight()).toBeGreaterThan(M);expect(L.getHeight()).toBe(600-I());expect(J.componentLayoutCounter).toBe(K+1)});it("should update layout when a node is expanded",function(){var M=L.getHeight();D("i1").expand();expect(L.getHeight()).toBeLessThan(M);expect(L.getHeight()).toBe(600-I());expect(J.componentLayoutCounter).toBe(K+1)});it("should update when a node is added",function(){var M=L.getHeight();A.appendChild({id:"i9",text:"Foo"});expect(L.getHeight()).toBeLessThan(M);expect(L.getHeight()).toBe(600-I());expect(J.componentLayoutCounter).toBe(K+1)});it("should update when a node is removed",function(){var M=L.getHeight();A.removeChild(D("i1"));expect(L.getHeight()).toBeGreaterThan(M);expect(L.getHeight()).toBe(600-I());expect(J.componentLayoutCounter).toBe(K+1)})});describe("destruction",function(){beforeEach(function(){B()});it("should not fire itemremove events",function(){var I=jasmine.createSpy();F.on("itemremove",I);F.destroy();expect(I).not.toHaveBeenCalled()});it("should unbind the store",function(){F.destroy();expect(F.getStore()).toBeNull()})})})