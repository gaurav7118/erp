describe("Ext.plugin.Abstract",function(){describe("listener scope resolution",function(){var G,J,H,L,I,A,K,E,E,F;function B(M){L=Ext.define(null,Ext.apply({extend:"Ext.Component",onFoo:G.component},M))}function D(M){A=Ext.define(null,Ext.apply({extend:"Ext.Container",onFoo:G.parent},M))}function C(O){var P={plugin:H,component:I,controller:I&&I.getController(),parent:K,parentController:K&&K.getController()},M,N;for(M in G){N=G[M];if(M===O){expect(N).toHaveBeenCalled();expect(N.mostRecentCall.object).toBe(P[M])}else{expect(N).not.toHaveBeenCalled()}}}beforeEach(function(){G={plugin:jasmine.createSpy(),component:jasmine.createSpy(),controller:jasmine.createSpy(),parent:jasmine.createSpy(),parentController:jasmine.createSpy()};E=Ext.define(null,{extend:"Ext.app.ViewController",onFoo:G.controller});F=Ext.define(null,{extend:"Ext.app.ViewController",onFoo:G.parentController})});afterEach(function(){if(H){H.destroy()}if(I){I.destroy()}if(K){K.destroy()}J=L=A=E=F=null});describe("listener declared on class body",function(){function M(N){J=Ext.define(null,Ext.merge({extend:"Ext.plugin.Abstract",mixins:["Ext.mixin.Observable"],constructor:function(O){this.callParent([O]);this.mixins.observable.constructor.call(this)},listeners:{foo:"onFoo"},onFoo:G.plugin},N))}describe("with no defaultListenerScope or controller",function(){beforeEach(function(){B()});it("should resolve to the plugin with unspecified scope",function(){M();H=new J();I=new L({plugins:H});H.fireEvent("foo");C("plugin")});it("should fail with scope:'controller'",function(){M({listeners:{scope:"controller"}});H=new J();I=new L({plugins:H});expect(function(){H.fireEvent("foo")}).toThrow()});it("should resolve to the plugin with scope:'this'",function(){M({listeners:{scope:"this"}});H=new J();I=new L({plugins:H});H.fireEvent("foo");C("plugin")})});describe("with defaultListenerScope on component",function(){beforeEach(function(){B({defaultListenerScope:true})});it("should resolve to the component with unspecified scope",function(){M();H=new J();I=new L({plugins:H});H.fireEvent("foo");C("component")});it("should fail with scope:'controller'",function(){M({listeners:{scope:"controller"}});H=new J();I=new L({plugins:H});expect(function(){H.fireEvent("foo")}).toThrow()});it("should resolve to the plugin with scope:'this'",function(){M({listeners:{scope:"this"}});H=new J();I=new L({plugins:H});H.fireEvent("foo");C("plugin")})});describe("with view controller on component",function(){beforeEach(function(){B({controller:new E()})});it("should resolve to the view controller with unspecified scope",function(){M();H=new J();I=new L({plugins:H});H.fireEvent("foo");C("controller")});it("should resolve to the view controller with scope:'controller'",function(){M({listeners:{scope:"controller"}});H=new J();I=new L({plugins:H});H.fireEvent("foo");C("controller")});it("should resolve to the plugin with scope:'this'",function(){M({listeners:{scope:"this"}});H=new J();I=new L({plugins:H});H.fireEvent("foo");C("plugin")})});describe("with view controller and defaultListenerScope on component",function(){beforeEach(function(){B({controller:new E(),defaultListenerScope:true})});it("should resolve to the component with unspecified scope",function(){M();H=new J();I=new L({plugins:H});H.fireEvent("foo");C("component")});it("should resolve to the view controller with scope:'controller'",function(){M({listeners:{scope:"controller"}});H=new J();I=new L({plugins:H});H.fireEvent("foo");C("controller")});it("should resolve to the plugin with scope:'this'",function(){M({listeners:{scope:"this"}});H=new J();I=new L({plugins:H});H.fireEvent("foo");C("plugin")})});describe("with parent and no defaultListenerScope or controller",function(){beforeEach(function(){D()});it("should resolve to the plugin with unspecified scope",function(){M();H=new J();K=new A({items:{plugins:H}});H.fireEvent("foo");C("plugin")});it("should fail with scope:'controller'",function(){M({listeners:{scope:"controller"}});H=new J();K=new A({items:{plugins:H}});expect(function(){H.fireEvent("foo")}).toThrow()});it("should resolve to the plugin with scope:'this'",function(){M({listeners:{scope:"this"}});H=new J();K=new A({items:{plugins:H}});H.fireEvent("foo");C("plugin")})});describe("with defaultListenerScope on parent",function(){beforeEach(function(){D({defaultListenerScope:true})});it("should resolve to the parent with unspecified scope",function(){M();H=new J();K=new A({items:{plugins:H}});H.fireEvent("foo");C("parent")});it("should fail with scope:'controller'",function(){M({listeners:{scope:"controller"}});H=new J();K=new A({items:{plugins:H}});expect(function(){H.fireEvent("foo")}).toThrow()});it("should resolve to the plugin with scope:'this'",function(){M({listeners:{scope:"this"}});H=new J();K=new A({items:{plugins:H}});H.fireEvent("foo");C("plugin")})});describe("with view controller on parent",function(){beforeEach(function(){D({controller:new F()})});it("should resolve to the parent view controller with unspecified scope",function(){M();H=new J();K=new A({items:{plugins:H}});H.fireEvent("foo");C("parentController")});it("should resolve to the parent view controller with scope:'controller'",function(){M({listeners:{scope:"controller"}});H=new J();K=new A({items:{plugins:H}});H.fireEvent("foo");C("parentController")});it("should resolve to the plugin with scope:'this'",function(){M({listeners:{scope:"this"}});H=new J();K=new A({items:{plugins:H}});H.fireEvent("foo");C("plugin")})});describe("with view controller and defaultListenerScope on parent",function(){beforeEach(function(){D({controller:new F(),defaultListenerScope:true})});it("should resolve to the parent with unspecified scope",function(){M();H=new J();K=new A({items:{plugins:H}});H.fireEvent("foo");C("parent")});it("should resolve to the parent view controller with scope:'controller'",function(){M({listeners:{scope:"controller"}});H=new J();K=new A({items:{plugins:H}});H.fireEvent("foo");C("parentController")});it("should resolve to the plugin with scope:'this'",function(){M({listeners:{scope:"this"}});H=new J();K=new A({items:{plugins:H}});H.fireEvent("foo");C("plugin")})});describe("with handler declared as a function reference",function(){var O,N;function P(Q){J=Ext.define(null,Ext.merge({extend:"Ext.plugin.Abstract",mixins:["Ext.mixin.Observable"],constructor:function(R){this.callParent([R]);this.mixins.observable.constructor.call(this)},listeners:{foo:O}},Q))}beforeEach(function(){O=jasmine.createSpy();O.andCallFake(function(){N=this})});afterEach(function(){N=null});describe("with no defaultListenerScope or controller",function(){beforeEach(function(){B()});it("should resolve to the plugin with unspecified scope",function(){P();H=new J();I=new L({plugins:H});H.fireEvent("foo");expect(N).toBe(H)});it("should fail with scope:'controller'",function(){P({listeners:{scope:"controller"}});H=new J();I=new L({plugins:H});expect(function(){H.fireEvent("foo")}).toThrow()});it("should resolve to the plugin with scope:'this'",function(){P({listeners:{scope:"this"}});H=new J();I=new L({plugins:H});H.fireEvent("foo");expect(N).toBe(H)})});describe("with defaultListenerScope on component",function(){beforeEach(function(){B({defaultListenerScope:true})});it("should resolve to the plugin with unspecified scope",function(){P();H=new J();I=new L({plugins:H});H.fireEvent("foo");expect(N).toBe(H)});it("should fail with scope:'controller'",function(){P({listeners:{scope:"controller"}});H=new J();I=new L({plugins:H});expect(function(){H.fireEvent("foo")}).toThrow()});it("should resolve to the plugin with scope:'this'",function(){P({listeners:{scope:"this"}});H=new J();I=new L({plugins:H});H.fireEvent("foo");expect(N).toBe(H)})});describe("with view controller on component",function(){beforeEach(function(){B({controller:new E()})});it("should resolve to the plugin with unspecified scope",function(){P();H=new J();I=new L({plugins:H});H.fireEvent("foo");expect(N).toBe(H)});it("should resolve to the component view controller with scope:'controller'",function(){P({listeners:{scope:"controller"}});H=new J();I=new L({plugins:H});H.fireEvent("foo");expect(N).toBe(I.getController())});it("should resolve to the plugin with scope:'this'",function(){P({listeners:{scope:"this"}});H=new J();I=new L({plugins:H});H.fireEvent("foo");expect(N).toBe(H)})})})});describe("listener declared on instance config",function(){function M(N){J=Ext.define(null,Ext.merge({extend:"Ext.plugin.Abstract",mixins:["Ext.mixin.Observable"],constructor:function(O){this.callParent([O]);this.mixins.observable.constructor.call(this)},onFoo:G.plugin},N))}describe("with no defaultListenerScope or controller",function(){beforeEach(function(){B();M()});it("should resolve to the component with unspecified scope",function(){H=new J({listeners:{foo:"onFoo"}});I=new L({plugins:H});H.fireEvent("foo");C("component")});it("should fail with scope:'controller'",function(){H=new J({listeners:{foo:"onFoo",scope:"controller"}});I=new L({plugins:H});expect(function(){H.fireEvent("foo")}).toThrow()});it("should resolve to the plugin with scope:'this'",function(){H=new J({listeners:{foo:"onFoo",scope:"this"}});I=new L({plugins:H});H.fireEvent("foo");C("plugin")})});describe("with defaultListenerScope on component",function(){beforeEach(function(){B({defaultListenerScope:true});M()});it("should resolve to the component with unspecified scope",function(){H=new J({listeners:{foo:"onFoo"}});I=new L({plugins:H});H.fireEvent("foo");C("component")});it("should fail with scope:'controller'",function(){H=new J({listeners:{foo:"onFoo",scope:"controller"}});I=new L({plugins:H});expect(function(){H.fireEvent("foo")}).toThrow()});it("should resolve to the plugin with scope:'this'",function(){H=new J({listeners:{foo:"onFoo",scope:"this"}});I=new L({plugins:H});H.fireEvent("foo");C("plugin")})});describe("with view controller on component",function(){beforeEach(function(){B({controller:new E()});M()});it("should resolve to the component view controller with unspecified scope",function(){H=new J({listeners:{foo:"onFoo"}});I=new L({plugins:H});H.fireEvent("foo");C("controller")});it("should resolve to the component view controller with scope:'controller'",function(){H=new J({listeners:{foo:"onFoo",scope:"controller"}});I=new L({plugins:H});H.fireEvent("foo");C("controller")});it("should resolve to the plugin with scope:'this'",function(){H=new J({listeners:{foo:"onFoo",scope:"this"}});I=new L({plugins:H});H.fireEvent("foo");C("plugin")})});describe("with view controller and defaultListenerScope on component",function(){beforeEach(function(){B({controller:new E(),defaultListenerScope:true});M()});it("should resolve to the component with unspecified scope",function(){H=new J({listeners:{foo:"onFoo"}});I=new L({plugins:H});H.fireEvent("foo");C("component")});it("should resolve to the component view controller with scope:'controller'",function(){H=new J({listeners:{foo:"onFoo",scope:"controller"}});I=new L({plugins:H});H.fireEvent("foo");C("controller")});it("should resolve to the plugin with scope:'this'",function(){H=new J({listeners:{foo:"onFoo",scope:"this"}});I=new L({plugins:H});H.fireEvent("foo");C("plugin")})});describe("with parent and no defaultListenerScope or controller",function(){beforeEach(function(){D();M();B()});it("should resolve to the component with unspecified scope",function(){H=new J({listeners:{foo:"onFoo"}});K=new A({items:(I=new L({plugins:H}))});H.fireEvent("foo");C("component")});it("should fail with scope:'controller'",function(){H=new J({listeners:{foo:"onFoo",scope:"controller"}});K=new A({items:{plugins:H}});expect(function(){H.fireEvent("foo")}).toThrow()});it("should resolve to the plugin with scope:'this'",function(){H=new J({listeners:{foo:"onFoo",scope:"this"}});K=new A({items:{plugins:H}});H.fireEvent("foo");C("plugin")})});describe("with defaultListenerScope on parent",function(){beforeEach(function(){D({defaultListenerScope:true});M()});it("should resolve to the parent with unspecified scope",function(){H=new J({listeners:{foo:"onFoo"}});K=new A({items:{plugins:H}});H.fireEvent("foo");C("parent")});it("should fail with scope:'controller'",function(){H=new J({listeners:{foo:"onFoo",scope:"controller"}});K=new A({items:{plugins:H}});expect(function(){H.fireEvent("foo")}).toThrow()});it("should resolve to the plugin with scope:'this'",function(){H=new J({listeners:{foo:"onFoo",scope:"this"}});K=new A({items:{plugins:H}});H.fireEvent("foo");C("plugin")})});describe("with view controller on parent",function(){beforeEach(function(){D({controller:new F()});M()});it("should resolve to the parent view controller with unspecified scope",function(){H=new J({listeners:{foo:"onFoo"}});K=new A({items:{plugins:H}});H.fireEvent("foo");C("parentController")});it("should resolve to the parent view controller with scope:'controller'",function(){H=new J({listeners:{foo:"onFoo",scope:"controller"}});K=new A({items:{plugins:H}});H.fireEvent("foo");C("parentController")});it("should resolve to the plugin with scope:'this'",function(){H=new J({listeners:{foo:"onFoo",scope:"this"}});K=new A({items:{plugins:H}});H.fireEvent("foo");C("plugin")})});describe("with view controller and defaultListenerScope on parent",function(){beforeEach(function(){D({controller:new F(),defaultListenerScope:true});M()});it("should resolve to the parent with unspecified scope",function(){H=new J({listeners:{foo:"onFoo"}});K=new A({items:{plugins:H}});H.fireEvent("foo");C("parent")});it("should resolve to the parent view controller with scope:'controller'",function(){H=new J({listeners:{foo:"onFoo",scope:"controller"}});K=new A({items:{plugins:H}});H.fireEvent("foo");C("parentController")});it("should resolve to the plugin with scope:'this'",function(){H=new J({listeners:{foo:"onFoo",scope:"this"}});K=new A({items:{plugins:H}});H.fireEvent("foo");C("plugin")})});describe("with handler declared as a function reference",function(){var O,N;function P(Q){J=Ext.define(null,Ext.merge({extend:"Ext.plugin.Abstract",mixins:["Ext.mixin.Observable"],constructor:function(R){this.callParent([R]);this.mixins.observable.constructor.call(this)}},Q))}beforeEach(function(){O=jasmine.createSpy();O.andCallFake(function(){N=this})});afterEach(function(){N=null});describe("with no defaultListenerScope or controller",function(){beforeEach(function(){B();P()});it("should resolve to the plugin with unspecified scope",function(){H=new J({listeners:{foo:O}});I=new L({plugins:H});H.fireEvent("foo");expect(N).toBe(H)});it("should fail with scope:'controller'",function(){H=new J({listeners:{foo:O,scope:"controller"}});I=new L({plugins:H});expect(function(){H.fireEvent("foo")}).toThrow()});it("should resolve to the plugin with scope:'this'",function(){H=new J({listeners:{foo:O,scope:"this"}});I=new L({plugins:H});H.fireEvent("foo");expect(N).toBe(H)})});describe("with defaultListenerScope on component",function(){beforeEach(function(){B({defaultListenerScope:true});P()});it("should resolve to the plugin with unspecified scope",function(){H=new J({listeners:{foo:O}});I=new L({plugins:H});H.fireEvent("foo");expect(N).toBe(H)});it("should fail with scope:'controller'",function(){H=new J({listeners:{foo:O,scope:"controller"}});I=new L({plugins:H});expect(function(){H.fireEvent("foo")}).toThrow()});it("should resolve to the plugin with scope:'this'",function(){H=new J({listeners:{foo:O,scope:"this"}});I=new L({plugins:H});H.fireEvent("foo");expect(N).toBe(H)})});describe("with view controller on component",function(){beforeEach(function(){B({controller:new E()});P()});it("should resolve to the plugin with unspecified scope",function(){H=new J({listeners:{foo:O}});I=new L({plugins:H});H.fireEvent("foo");expect(N).toBe(H)});it("should resolve to the controller with scope:'controller'",function(){H=new J({listeners:{foo:O,scope:"controller"}});I=new L({plugins:H});H.fireEvent("foo");expect(N).toBe(I.getController())});it("should resolve to the plugin with scope:'this'",function(){H=new J({listeners:{foo:O,scope:"this"}});I=new L({plugins:H});H.fireEvent("foo");expect(N).toBe(H)})})})})})})