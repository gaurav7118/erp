describe("Ext.scroll.DomScroller",function(){var C,B;function A(D){B=new Ext.scroll.DomScroller(Ext.apply({element:C},D))}beforeEach(function(){C=Ext.getBody().createChild({style:"height:100px;width:100px;"})});afterEach(function(){if(B){B.destroy();B=null}if(C){C.destroy();C=null}});describe("x",function(){it("should set overflow-x:auto on the element by default",function(){A();expect(C.dom.style.overflowX).toBe("auto")});it("should set overflow-x:auto on the element when x is true",function(){A({x:true});expect(C.dom.style.overflowX).toBe("auto")});it("should set overflow-x:auto on the element when x is 'auto'",function(){A({x:"auto"});expect(C.dom.style.overflowX).toBe("auto")});it("should set overflow-x:scroll on the element when x is 'scroll'",function(){A({x:"scroll"});expect(C.dom.style.overflowX).toBe("scroll")});it("should set overflow-x:hidden the element when x is false",function(){A({x:false});expect(C.dom.style.overflowX).toBe("hidden")})});describe("y",function(){it("should set overflow-y:auto on the element by default",function(){A();expect(C.dom.style.overflowY).toBe("auto")});it("should set overflow-y:auto on the element when y is true",function(){A({y:true});expect(C.dom.style.overflowY).toBe("auto")});it("should set overflow-y:auto on the element when y is 'auto'",function(){A({y:"auto"});expect(C.dom.style.overflowY).toBe("auto")});it("should set overflow-y:scroll on the element when y is 'scroll'",function(){A({y:"scroll"});expect(C.dom.style.overflowY).toBe("scroll")});it("should set overflow-y:hidden on the element when y is false",function(){A({y:false});expect(C.dom.style.overflowY).toBe("hidden")})});describe("direction",function(){it("should set overflow-x:auto and overflow-y:auto on the element when direction is 'auto'",function(){A({direction:"auto"});expect(C.dom.style.overflowX).toBe("auto");expect(C.dom.style.overflowY).toBe("auto")});it("should set overflow-x:scroll and overflow-y:scroll on the element when direction is 'both'",function(){A({direction:"both"});expect(C.dom.style.overflowX).toBe("scroll");expect(C.dom.style.overflowY).toBe("scroll")});it("should set overflow-y:auto on the element when direction is 'vertical'",function(){A({direction:"vertical"});expect(C.dom.style.overflowY).toBe("auto");expect(C.dom.style.overflowX).toBe("hidden")});it("should set overflow-x:auto on the element when direction is 'horizontal'",function(){A({direction:"horizontal"});expect(C.dom.style.overflowX).toBe("auto");expect(C.dom.style.overflowY).toBe("hidden")})});describe("getSize",function(){beforeEach(function(){C.appendChild({style:"height:200px;width:300px;"},true)});it("should return the content size with x:auto and y:auto",function(){A();expect(B.getSize()).toEqual({x:300,y:200})});it("should return the content size with x:scroll and y:scroll",function(){A({x:"scroll",y:"scroll"});expect(B.getSize()).toEqual({x:300,y:200})});it("should return the content size with x:false and y:false",function(){A({x:false,y:false});expect(B.getSize()).toEqual({x:300,y:200})});it("should return the content size with x:false and y:auto",function(){A({x:false,y:true});expect(B.getSize()).toEqual({x:300,y:200})});it("should return the content size with x:auto and y:false",function(){A({x:true,y:false});expect(B.getSize()).toEqual({x:300,y:200})});it("should return the content size with x:false and y:scroll",function(){A({x:false,y:"scroll"});expect(B.getSize()).toEqual({x:300,y:200})});it("should return the content size with x:scroll and y:false",function(){A({x:"scroll",y:false});expect(B.getSize()).toEqual({x:300,y:200})})});describe("setSize",function(){it("should set the size",function(){A();B.setSize({x:300,y:200});expect(B.getSize()).toEqual({x:300,y:200})});it("should unset the size",function(){A();B.setSize({x:300,y:200});B.setSize(null);expect(B.getSize()).toEqual({x:100,y:100})});it("should set the size on both axes to a single number",function(){A();B.setSize(200);expect(B.getSize()).toEqual({x:200,y:200})});it("should set the x size",function(){A();B.setSize({x:200});expect(B.getSize()).toEqual({x:200,y:100-Ext.getScrollbarSize().height})});it("should set the y size",function(){A();B.setSize({y:200});expect(B.getSize()).toEqual({x:100-Ext.getScrollbarSize().width,y:200})})});describe("getClientSize",function(){beforeEach(function(){C.destroy();C=Ext.getBody().createChild({style:{height:"200px",width:"200px",borderColor:"red",borderStyle:"solid",borderWidth:"10px 20px",padding:"30px 40px"}})});function D(){var F=[],E;for(E=0;E<100;++E){F.push(E)}return F}it("should return the clientWidth of the element",function(){C.setHtml(D().join("<br />"));A();var E=B.getClientSize();expect(E.x).toBe(200-(20*2)-Ext.getScrollbarSize().width);expect(E.y).toBe(200-(10*2))});it("should return the clientHeight of the element",function(){C.setHtml(D().join(""));A();var E=B.getClientSize();expect(E.x).toBe(200-(20*2));expect(E.y).toBe(200-(10*2)-Ext.getScrollbarSize().height)});it("should read by the clientWidth and clientHeight of the element",function(){var F=D();F[0]=D().join("");C.setHtml(F.join("<br />"));A();var E=B.getClientSize();expect(E.x).toBe(200-(20*2)-Ext.getScrollbarSize().width);expect(E.y).toBe(200-(10*2)-Ext.getScrollbarSize().height)})});describe("getPosition",function(){beforeEach(function(){C.appendChild({style:"height:200px;width:300px;"},true)});it("should return the current position",function(){A();expect(B.getPosition()).toEqual({x:0,y:0});B.scrollTo(20,40);expect(B.getPosition()).toEqual({x:20,y:40})})});describe("scrollTo",function(){function E(F){C.appendChild({style:"height:200px;width:300px;"},true);A(F)}function D(F){C.appendChild({style:"height:100px;width:100px;"},true);A(F)}it("should scroll on the x axis",function(){E();B.scrollTo(50,0);expect(B.getPosition()).toEqual({x:50,y:0})});it("should scroll on the x axis when the x axis is disabled",function(){E({x:false});B.scrollTo(50,0);expect(B.getPosition()).toEqual({x:50,y:0})});it("should not scroll on the x axis if the content does not overflow horizontally",function(){D();B.scrollTo(50,0);expect(B.getPosition()).toEqual({x:0,y:0})});it("should constrain to the max x position",function(){E();B.scrollTo(250,0);expect(B.getPosition()).toEqual({x:200+Ext.getScrollbarSize().width,y:0})});it("should scroll on the y axis",function(){E();B.scrollTo(0,50);expect(B.getPosition()).toEqual({x:0,y:50})});it("should scroll on the y axis when the y axis is disabled",function(){E({y:false});B.scrollTo(0,50);expect(B.getPosition()).toEqual({x:0,y:50})});it("should not scroll on the y axis if the content does not overflow vertically",function(){D();B.scrollTo(0,50);expect(B.getPosition()).toEqual({x:0,y:0})});it("should constrain to the max y position",function(){E();B.scrollTo(0,250);expect(B.getPosition()).toEqual({x:0,y:100+Ext.getScrollbarSize().height})});it("should scroll on both axes",function(){E();B.scrollTo(50,60);expect(B.getPosition()).toEqual({x:50,y:60})});it("should constrain to max x and y",function(){E();B.scrollTo(300,300);expect(B.getPosition()).toEqual({x:200+Ext.getScrollbarSize().width,y:100+Ext.getScrollbarSize().height})});it("should scroll to max x using Infinity",function(){E();B.scrollTo(Infinity,0);expect(B.getPosition()).toEqual({x:200+Ext.getScrollbarSize().height,y:0})});it("should scroll to max y using Infinity",function(){E();B.scrollTo(0,Infinity);expect(B.getPosition()).toEqual({x:0,y:100+Ext.getScrollbarSize().width})});it("should scroll to max x and y using Infinity",function(){E();B.scrollTo(Infinity,Infinity);expect(B.getPosition()).toEqual({x:200+Ext.getScrollbarSize().height,y:100+Ext.getScrollbarSize().width})});it("should ignore x if null is passed",function(){E();B.scrollTo(10,10);B.scrollTo(null,20);expect(B.getPosition()).toEqual({x:10,y:20})});it("should ignore y if null is passed",function(){E();B.scrollTo(10,10);B.scrollTo(20,null);expect(B.getPosition()).toEqual({x:20,y:10})});it("should ignore x and y if both null",function(){E();B.scrollTo(10,10);B.scrollTo(null,null);expect(B.getPosition()).toEqual({x:10,y:10})});it("should scroll to negative offset from max x",function(){E();B.scrollTo(-20,0);expect(B.getPosition()).toEqual({x:180+Ext.getScrollbarSize().height,y:0})});it("should scroll to negative offset from max y",function(){E();B.scrollTo(0,-20);expect(B.getPosition()).toEqual({x:0,y:80+Ext.getScrollbarSize().width})});it("should scroll to negative offset from max x and y",function(){E();B.scrollTo(-20,-20);expect(B.getPosition()).toEqual({x:180+Ext.getScrollbarSize().height,y:80+Ext.getScrollbarSize().width})})});describe("scrollBy",function(){beforeEach(function(){C.appendChild({style:"height:200px;width:300px;"},true)});it("should set the scroll position",function(){A();B.scrollBy(20,10);expect(B.getPosition()).toEqual({x:20,y:10});B.scrollBy(-10,-5);expect(B.getPosition()).toEqual({x:10,y:5})});it("should ignore x if null is passed",function(){A();B.scrollTo(10,10);B.scrollBy(null,10);expect(B.getPosition()).toEqual({x:10,y:20})});it("should ignore y if null is passed",function(){A();B.scrollTo(10,10);B.scrollBy(10,null);expect(B.getPosition()).toEqual({x:20,y:10})});it("should ignore x and y if both null",function(){A();B.scrollTo(10,10);B.scrollBy(null,null);expect(B.getPosition()).toEqual({x:10,y:10})});it("should constrain to the max x position",function(){A();B.scrollBy(250,0);expect(B.getPosition()).toEqual({x:200+Ext.getScrollbarSize().height,y:0})});it("should constrain to the min x position",function(){A();B.scrollBy(-10,0);expect(B.getPosition()).toEqual({x:0,y:0})});it("should constrain to the max y position",function(){A();B.scrollBy(0,250);expect(B.getPosition()).toEqual({x:0,y:100+Ext.getScrollbarSize().width})});it("should constrain to the min y position",function(){A();B.scrollBy(0,-10);expect(B.getPosition()).toEqual({x:0,y:0})});it("should constrain to max x and y",function(){A();B.scrollBy(300,300);expect(B.getPosition()).toEqual({x:200+Ext.getScrollbarSize().height,y:100+Ext.getScrollbarSize().width})});it("should constrain to min x and y",function(){A();B.scrollBy(-10,-10);expect(B.getPosition()).toEqual({x:0,y:0})})});describe("getMaxPosition and getMaxUserPosition",function(){beforeEach(function(){C.appendChild({style:"height:200px;width:300px;"},true)});describe("with x:true and y:true",function(){beforeEach(function(){A()});it("should return the maxPosition",function(){expect(B.getMaxPosition()).toEqual({x:200+Ext.getScrollbarSize().height,y:100+Ext.getScrollbarSize().width})});it("should return the maxUserPosition",function(){expect(B.getMaxUserPosition()).toEqual({x:200+Ext.getScrollbarSize().height,y:100+Ext.getScrollbarSize().width})})});describe("with x:true and y:false",function(){beforeEach(function(){A({x:true,y:false})});it("should return the maxPosition",function(){expect(B.getMaxPosition()).toEqual({x:200,y:100+Ext.getScrollbarSize().width})});it("should return the maxUserPosition",function(){expect(B.getMaxUserPosition()).toEqual({x:200,y:0})})});describe("with x:false and y:true",function(){beforeEach(function(){A({x:false,y:true})});it("should return the maxPosition",function(){expect(B.getMaxPosition()).toEqual({x:200+Ext.getScrollbarSize().height,y:100})});it("should return the maxUserPosition",function(){expect(B.getMaxUserPosition()).toEqual({x:0,y:100})})});describe("with x:false and y:false",function(){beforeEach(function(){A({x:false,y:false})});it("should return the maxPosition",function(){expect(B.getMaxPosition()).toEqual({x:200,y:100})});it("should return the maxUserPosition",function(){expect(B.getMaxUserPosition()).toEqual({x:0,y:0})})})});describe("partnership",function(){var H,E,D,I,F,L,K;function J(){I=Ext.getBody().createChild({style:"height:100px;width:100px;",cn:[{style:"height:200px;width:300px;"}]});L=new Ext.scroll.DomScroller({element:I});L.on("scroll",E)}function G(){F=Ext.getBody().createChild({style:"height:100px;width:100px;",cn:[{style:"height:200px;width:300px;"}]});K=new Ext.scroll.DomScroller({element:F});K.on("scroll",D)}beforeEach(function(){H=jasmine.createSpy();E=jasmine.createSpy();D=jasmine.createSpy();C.appendChild({style:"height:200px;width:300px;"},true);A();B.on("scroll",H)});afterEach(function(){if(L){L.destroy();L=null}if(K){K.destroy();K=null}if(I){I.destroy();I=null}if(F){F.destroy();F=null}});describe("single partner",function(){beforeEach(function(){J()});describe("both axes enabled",function(){beforeEach(function(){B.addPartner(L)});it("should sync the partner's scroll position when the scroller is scrolled",function(){spyOn(L,"fireScrollStart").andCallThrough();spyOn(L,"fireScrollEnd").andCallThrough();B.scrollTo(10,20);waitsFor(function(){return H.wasCalled&&L.fireScrollStart.callCount===1&&L.fireScrollEnd.callCount===1},"scroller2 to have started scrolling, scrolled, and ended scrolling");runs(function(){expect(L.getPosition()).toEqual({x:10,y:20})})});it("should sync the scroller's scroll position when the partner is scrolled",function(){spyOn(B,"fireScrollStart").andCallThrough();spyOn(B,"fireScrollEnd").andCallThrough();L.scrollTo(10,20);waitsFor(function(){return E.wasCalled&&B.fireScrollStart.callCount===1&&B.fireScrollEnd.callCount===1},"scroller to have started scrolling, scrolled, and ended scrolling");runs(function(){expect(B.getPosition()).toEqual({x:10,y:20})})})});describe("x-axis only",function(){beforeEach(function(){B.addPartner(L,"x")});it("should sync the partner's scroll position when the scroller is scrolled",function(){B.scrollTo(10,20);waitsFor(function(){return H.wasCalled});runs(function(){expect(L.getPosition()).toEqual({x:10,y:0})})});it("should sync the scroller's scroll position when the partner is scrolled",function(){L.scrollTo(10,20);waitsFor(function(){return E.wasCalled});runs(function(){expect(B.getPosition()).toEqual({x:10,y:0})})})});describe("y-axis only",function(){beforeEach(function(){B.addPartner(L,"y")});it("should sync the partner's scroll position when the scroller is scrolled",function(){B.scrollTo(10,20);waitsFor(function(){return H.wasCalled});runs(function(){expect(L.getPosition()).toEqual({x:0,y:20})})});it("should sync the scroller's scroll position when the partner is scrolled",function(){L.scrollTo(10,20);waitsFor(function(){return E.wasCalled});runs(function(){expect(B.getPosition()).toEqual({x:0,y:20})})})});it("should remove the partner",function(){B.addPartner(L);B.removePartner(L);B.scrollTo(10,20);waitsFor(function(){return H.wasCalled});runs(function(){expect(L.getPosition()).toEqual({x:0,y:0});L.scrollTo(40,30)});waitsFor(function(){return E.wasCalled});runs(function(){expect(B.getPosition()).toEqual({x:10,y:20})})})});describe("multiple partners",function(){beforeEach(function(){J();G();B.addPartner(L);B.addPartner(K)});it("should sync multiple partners when the scroller is scrolled",function(){B.scrollTo(10,15);waitsFor(function(){return H.wasCalled});runs(function(){expect(L.getPosition()).toEqual({x:10,y:15});expect(K.getPosition()).toEqual({x:10,y:15})})});it("should sync scroll position when a partner is scrolled",function(){K.scrollTo(50,60);waitsFor(function(){return D.wasCalled});runs(function(){expect(B.getPosition()).toEqual({x:50,y:60})})});it("should remove a partner",function(){B.removePartner(L);L.scrollTo(15,20);waitsFor(function(){return E.wasCalled});runs(function(){expect(B.getPosition()).toEqual({x:0,y:0});K.scrollTo(30,45)});waitsFor(function(){return(D.wasCalled)});runs(function(){expect(B.getPosition()).toEqual({x:30,y:45})})})})})})