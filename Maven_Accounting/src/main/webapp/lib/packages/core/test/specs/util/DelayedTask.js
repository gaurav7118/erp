describe("Ext.util.DelayedTask",function(){it("should delay the call",function(){var B,A=false;B=new Ext.util.DelayedTask(function(){A=true});B.delay(100);expect(A).toBe(false);waits(150);runs(function(){expect(A).toBe(true)})});it("should cancel any previous invocations",function(){var C,A=0,B=0,D=function(E){A++;B=E};C=new Ext.util.DelayedTask(D);C.delay(500,null,null,[1]);C.delay(1500,null,null,[2]);C.delay(2500,null,null,[3]);waits(1000);runs(function(){expect(A).toBe(0);expect(B).toBe(0);waits(1000);runs(function(){expect(A).toBe(0);expect(B).toBe(0);waits(1000);runs(function(){expect(A).toBe(1);expect(B).toBe(3)})})})});it("should not cancel any previous invocations",function(){var C,A=0,B,D=function(E){A++;B=E};C=new Ext.util.DelayedTask(D,null,null,false);C.delay(100,null,null,[1]);C.delay(150,null,null,[2]);C.delay(300,null,null,[3]);waits(150);runs(function(){expect(A).toBe(1);expect(B).toBe(3);waits(100);runs(function(){expect(A).toBe(1);expect(B).toBe(3);waits(100);runs(function(){expect(A).toBe(1);expect(B).toBe(3)})})})});it("should accept a delay of 0",function(){var A=true;var B=new Ext.util.DelayedTask(function(){A=true});B.delay(1000);B.delay(0);waits(50);runs(function(){expect(A).toBe(true)})})})