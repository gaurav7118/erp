Ext.cmd.api.adapter={testResults:[],isRunning:false,resultBufferSize:100,api:Ext.cmd.api,setCurrentScript:function(A){},getCurrentScript:function(){return this.api.getCurrentScript(Ext.Boot.currentFile)},getSpecStructure:function(B){var A={hash:""+B.id,fileName:B.fileName,description:B.description};return A},getSuiteStructure:function(F){var D={hash:""+F.id,fileName:F.fileName,suites:[],specs:[],description:F.description},C=F.specs_,E=C.length,I,B,G=F.suites_,A=G.length,F,H;for(H=0;H<A;H++){F=G[H];D.suites.push(this.getSuiteStructure(F))}for(B=0;B<E;B++){I=C[B];D.specs.push(this.getSpecStructure(I))}return D},reportTestStructure:function(){var E=jasmine.getEnv().currentRunner_,D=E.topLevelSuites(),F=D.length,C,B,A=[];for(B=0;B<F;B++){C=D[B];A.push(this.getSuiteStructure(C))}this.api.addTestSuites(A)},executeTests:function(){this.isRunning=true;jasmine.setOptions(this.api.jsonOptions);jasmine.initDebug();jasmine.getEnv().addReporter(new SenchaTestRunner.Reporter());jasmine.getEnv().execute()},flushTestResults:function(){if(this.testResults.length>0){var A=this.testResults;this.testResults=[];this.api.reportTestResults(A)}},onTestResult:function(A){this.testResults.push(A);if(this.testResults.length>=this.resultBufferSize){this.flushTestResults()}},captureCoverage:function(){var A=window["__coverage__"];if(A){this.api.addTestCoverage(A)}},onTestsDone:function(B){var A=this;A.isRunning=false;if(B===undefined){A.success=true}else{A.success=B}A.flushTestResults();A.captureCoverage();this.api.stopWorkItem(A.success)}}