Ext.define("Ext.ux.DataTip",function(E){function C(){var F=this.isXType("panel")?this.body:this.el;if(this.dataTip.renderToTarget){this.dataTip.render(F)}this.dataTip.setTarget(F)}function A(G,F){if(G.rendered){if(G.host.fireEvent("beforeshowtip",G.eventHost,G,F)===false){return false}G.update(F)}else{if(Ext.isString(F)){G.html=F}else{G.data=F}}}function D(G){var H=this.view.getRecord(G.triggerElement),F;if(H){F=G.initialConfig.data?Ext.apply(G.initialConfig.data,H.data):H.data;return A(G,F)}else{return false}}function B(F){var G=Ext.getCmp(F.triggerElement.id);if(G&&(G.tooltip||F.tpl)){return A(F,G.tooltip||G)}else{return false}}return{extend:"Ext.tip.ToolTip",mixins:{plugin:"Ext.plugin.Abstract"},alias:"plugin.datatip",lockableScope:"both",constructor:function(F){var G=this;G.callParent([F]);G.mixins.plugin.constructor.call(G,F)},init:function(G){var F=this;F.mixins.plugin.init.call(F,G);G.dataTip=F;F.host=G;if(G.isXType("tablepanel")){F.view=G.getView();if(G.ownerLockable){F.host=G.ownerLockable}F.delegate=F.delegate||F.view.rowSelector;F.on("beforeshow",D)}else{if(G.isXType("dataview")){F.view=F.host;F.delegate=F.delegate||G.itemSelector;F.on("beforeshow",D)}else{if(G.isXType("form")){F.delegate="."+Ext.form.Labelable.prototype.formItemCls;F.on("beforeshow",B)}else{if(G.isXType("combobox")){F.view=G.getPicker();F.delegate=F.delegate||F.view.getItemSelector();F.on("beforeshow",D)}}}}if(G.rendered){C.call(G)}else{G.onRender=Ext.Function.createSequence(G.onRender,C)}}}})