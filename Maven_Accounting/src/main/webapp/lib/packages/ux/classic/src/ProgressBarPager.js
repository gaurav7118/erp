Ext.define("Ext.ux.ProgressBarPager",{requires:["Ext.ProgressBar"],width:225,defaultText:"Loading...",defaultAnimCfg:{duration:1000,easing:"bounceOut"},constructor:function(A){if(A){Ext.apply(this,A)}},init:function(B){var A;if(B.displayInfo){this.parent=B;A=B.child("#displayItem");if(A){B.remove(A,true)}this.progressBar=Ext.create("Ext.ProgressBar",{text:this.defaultText,width:this.width,animate:this.defaultAnimCfg,style:{cursor:"pointer"},listeners:{el:{scope:this,click:this.handleProgressBarClick}}});B.displayItem=this.progressBar;B.add(B.displayItem);Ext.apply(B,this.parentOverrides)}},handleProgressBarClick:function(H){var E=this.parent,C=E.displayItem,F=this.progressBar.getBox(),G=H.getXY(),B=G[0]-F.x,A=Math.ceil(E.store.getTotalCount()/E.store.pageSize),D=Math.max(Math.ceil(B/(C.width/A)),1);E.store.loadPage(D)},parentOverrides:{updateInfo:function(){if(this.displayItem){var D=this.store.getCount(),B=this.getPageData(),C=D===0?this.emptyMsg:Ext.String.format(this.displayMsg,B.fromRecord,B.toRecord,this.store.getTotalCount()),A=B.pageCount>0?(B.currentPage/B.pageCount):0;this.displayItem.updateProgress(A,C,this.animate||this.defaultAnimConfig)}}}})