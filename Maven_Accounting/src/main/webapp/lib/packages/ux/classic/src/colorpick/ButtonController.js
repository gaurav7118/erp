Ext.define("Ext.ux.colorpick.ButtonController",{extend:"Ext.app.ViewController",alias:"controller.colorpick-buttoncontroller",requires:["Ext.window.Window","Ext.layout.container.Fit","Ext.ux.colorpick.Selector","Ext.ux.colorpick.ColorUtils"],afterRender:function(A){A.updateColor(A.getColor())},destroy:function(){var A=this.getView(),B=A.colorPickerWindow;if(B){B.destroy();A.colorPickerWindow=A.colorPicker=null}this.callParent()},getPopup:function(){var C=this.getView(),B=C.colorPickerWindow,A;if(!B){B=Ext.create(C.getPopup());C.colorPickerWindow=B;B.colorPicker=C.colorPicker=A=B.lookupReference("selector");A.setFormat(C.getFormat());A.on({ok:"onColorPickerOK",cancel:"onColorPickerCancel",scope:this});B.on({close:"onColorPickerCancel",scope:this})}return B},onClick:function(){var E=this,C=E.getView(),D=C.getColor(),B=E.getPopup(),A=B.colorPicker;A.setColor(D);A.setPreviousColor(D);B.showBy(C,"tl-br?")},onColorPickerOK:function(C){var A=this.getView(),B=C.getColor(),D=A.colorPickerWindow;D.hide();A.setColor(B)},onColorPickerCancel:function(){var A=this.getView(),B=A.colorPickerWindow;B.hide()},syncColor:function(B){var A=this.getView();Ext.ux.colorpick.ColorUtils.setBackground(A.filterEl,B)}})