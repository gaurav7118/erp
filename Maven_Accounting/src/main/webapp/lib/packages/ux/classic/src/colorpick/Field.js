Ext.define("Ext.ux.colorpick.Field",{extend:"Ext.form.field.Picker",xtype:"colorfield",mixins:["Ext.ux.colorpick.Selection"],requires:["Ext.window.Window","Ext.ux.colorpick.Selector","Ext.ux.colorpick.ColorUtils","Ext.layout.container.Fit"],editable:false,matchFieldWidth:false,beforeBodyEl:['<div class="'+Ext.baseCSSPrefix+'colorpicker-field-swatch"><div id="{id}-swatchEl" data-ref="swatchEl" class="'+Ext.baseCSSPrefix+'colorpicker-field-swatch-inner"></div></div>'],cls:Ext.baseCSSPrefix+"colorpicker-field",childEls:["swatchEl"],config:{popup:{lazy:true,$value:{xtype:"window",closeAction:"hide",referenceHolder:true,minWidth:540,minHeight:200,layout:"fit",header:false,resizable:true,items:{xtype:"colorselector",reference:"selector",showPreviousColor:true,showOkCancelButtons:true}}}},afterRender:function(){this.callParent();this.updateValue(this.value)},createPicker:function(){var C=this,A=C.getPopup(),B;C.colorPickerWindow=A=Ext.create(A);C.colorPicker=B=A.lookupReference("selector");B.setFormat(C.getFormat());B.setColor(C.getColor());B.on({ok:"onColorPickerOK",cancel:"onColorPickerCancel",scope:C});A.on({close:"onColorPickerCancel",scope:C});return C.colorPickerWindow},onColorPickerOK:function(A){this.setColor(A.getColor());this.collapse()},onColorPickerCancel:function(){this.collapse()},onExpand:function(){var A=this.getColor();this.colorPicker.setPreviousColor(A)},setValue:function(A){var B=this,C=B.applyValue(A);B.callParent([C]);B.updateValue(C)},updateFormat:function(B){var A=this.colorPicker;if(A){A.setFormat(B)}},updateValue:function(A){var B=this,C;if(!B.syncing){B.syncing=true;B.setColor(A);B.syncing=false}C=B.getColor();Ext.ux.colorpick.ColorUtils.setBackground(B.swatchEl,C);if(B.colorPicker){B.colorPicker.setColor(C)}}})