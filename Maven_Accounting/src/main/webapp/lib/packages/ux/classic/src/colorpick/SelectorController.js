Ext.define("Ext.ux.colorpick.SelectorController",{extend:"Ext.app.ViewController",alias:"controller.colorpick-selectorcontroller",requires:["Ext.ux.colorpick.ColorUtils"],initViewModel:function(){var B=this,A=B.getView();A.childViewModel.bind("{selectedColor}",function(C){A.setColor(C)})},destroy:function(){var C=this,B=C.getView(),A=B.childViewModel;if(A){A.destroy();B.childViewModel=null}C.callParent()},changeHSV:function(D){var A=this.getView(),B=A.getColor(),C;Ext.applyIf(D,B);C=Ext.ux.colorpick.ColorUtils.hsv2rgb(D.h,D.s,D.v);Ext.apply(D,C);A.setColor(D)},onColorMapHandleDrag:function(B,A){this.changeHSV({s:B,v:1-A})},onValueSliderHandleDrag:function(A){this.changeHSV({v:1-A})},onSaturationSliderHandleDrag:function(A){this.changeHSV({s:1-A})},onHueSliderHandleDrag:function(A){this.changeHSV({h:1-A})},onAlphaSliderHandleDrag:function(C){var A=this.getView(),B=A.getColor(),D=Ext.applyIf({a:1-C},B);A.setColor(D);A.el.repaint()},onPreviousColorSelected:function(C,B){var A=this.getView();A.setColor(B)},onOK:function(){var B=this,A=B.getView();A.fireEvent("ok",A,A.getValue())},onCancel:function(){this.fireViewEvent("cancel",this.getView())},onResize:function(){var H=this,B=H.getView(),G=B.childViewModel,D=H.getReferences(),F,E,C,A;if(!H.hasResizedOnce){H.hasResizedOnce=true;return }F=G.get("hue");E=G.get("saturation");C=G.get("value");A=G.get("alpha");console.log("h="+F);D.colorMap.setPosition(G.getData());D.hueSlider.setHue(F);D.satSlider.setSaturation(E);D.valueSlider.setValue(C);D.alphaSlider.setAlpha(A)}})