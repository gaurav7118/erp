Ext.define("Ext.ux.data.PagingMemoryProxy",{extend:"Ext.data.proxy.Memory",alias:"proxy.pagingmemory",alternateClassName:"Ext.data.PagingMemoryProxy",constructor:function(){Ext.log.warn("Ext.ux.data.PagingMemoryProxy functionality has been merged into Ext.data.proxy.Memory by using the enablePaging flag.");this.callParent(arguments)},read:function(C,G,H){var D=this.getReader(),I=D.read(this.data),E,A,F,B;H=H||this;A=C.filters;if(A.length>0){B=[];Ext.each(I.records,function(J){var O=true,P=A.length,K;for(K=0;K<P;K++){var N=A[K],M=N.filterFn,L=N.scope;O=O&&M.call(L,J)}if(O){B.push(J)}},this);I.records=B;I.totalRecords=I.total=B.length}E=C.sorters;if(E.length>0){F=function(L,K){var J=E[0].sort(L,K),N=E.length,M;for(M=1;M<N;M++){J=J||E[M].sort.call(this,L,K)}return J};I.records.sort(F)}if(C.start!==undefined&&C.limit!==undefined){I.records=I.records.slice(C.start,C.start+C.limit);I.count=I.records.length}Ext.apply(C,{resultSet:I});C.setCompleted();C.setSuccessful();Ext.Function.defer(function(){Ext.callback(G,H,[C])},10)}})