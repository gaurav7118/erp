Ext.define("Ext.ux.desktop.App",{mixins:{observable:"Ext.util.Observable"},requires:["Ext.container.Viewport","Ext.ux.desktop.Desktop"],isReady:false,modules:null,useQuickTips:true,constructor:function(A){var B=this;B.mixins.observable.constructor.call(this,A);if(Ext.isReady){Ext.Function.defer(B.init,10,B)}else{Ext.onReady(B.init,B)}},init:function(){var B=this,A;if(B.useQuickTips){Ext.QuickTips.init()}B.modules=B.getModules();if(B.modules){B.initModules(B.modules)}A=B.getDesktopConfig();B.desktop=new Ext.ux.desktop.Desktop(A);B.viewport=new Ext.container.Viewport({layout:"fit",items:[B.desktop]});Ext.getWin().on("beforeunload",B.onUnload,B);B.isReady=true;B.fireEvent("ready",B)},getDesktopConfig:function(){var B=this,A={app:B,taskbarConfig:B.getTaskbarConfig()};Ext.apply(A,B.desktopConfig);return A},getModules:Ext.emptyFn,getStartConfig:function(){var B=this,A={app:B,menu:[]},C;Ext.apply(A,B.startConfig);Ext.each(B.modules,function(D){C=D.launcher;if(C){C.handler=C.handler||Ext.bind(B.createWindow,B,[D]);A.menu.push(D.launcher)}});return A},createWindow:function(A){var B=A.createWindow();B.show()},getTaskbarConfig:function(){var B=this,A={app:B,startConfig:B.getStartConfig()};Ext.apply(A,B.taskbarConfig);return A},initModules:function(A){var B=this;Ext.each(A,function(C){C.app=B})},getModule:function(D){var C=this.modules;for(var E=0,B=C.length;E<B;E++){var A=C[E];if(A.id==D||A.appType==D){return A}}return null},onReady:function(B,A){if(this.isReady){B.call(A,this)}else{this.on({ready:B,scope:A,single:true})}},getDesktop:function(){return this.desktop},onUnload:function(A){if(this.fireEvent("beforeunload",this)===false){A.stopEvent()}}})