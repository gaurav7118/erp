Ext.define("Ext.ux.grid.SubTable",{extend:"Ext.grid.plugin.RowExpander",alias:"plugin.subtable",rowBodyTpl:['<table class="'+Ext.baseCSSPrefix+'grid-subtable"><tbody>',"{%","this.owner.renderTable(out, values);","%}","</tbody></table>"],init:function(D){var E=this,C=E.columns,A,B,F;E.callParent(arguments);E.columns=[];if(C){for(B=0,A=C.length;B<A;++B){F=Ext.apply({preventRegister:true},C[B]);F.xtype=F.xtype||"gridcolumn";E.columns.push(Ext.widget(F))}}},destroy:function(){var C=this.columns,A,B;if(C){for(B=0,A=C.length;B<A;++B){C[B].destroy()}}this.columns=null;this.callParent()},getRowBodyFeatureData:function(B,A,C){this.callParent(arguments);C.rowBodyCls+=" "+Ext.baseCSSPrefix+"grid-subtable-row"},renderTable:function(G,K){var I=this,D=I.columns,A=D.length,C=I.getAssociatedRecords(K.record),L=C.length,E,B,H,F,J;G.push("<thead>");for(F=0;F<A;F++){G.push('<th class="'+Ext.baseCSSPrefix+'grid-subtable-header">',D[F].text,"</th>")}G.push("</thead>");for(H=0;H<L;H++){E=C[H];G.push("<tr>");for(F=0;F<A;F++){B=D[F];J=E.get(B.dataIndex);if(B.renderer&&B.renderer.call){J=B.renderer.call(B.scope||I,J,{},E)}G.push('<td class="'+Ext.baseCSSPrefix+'grid-subtable-cell"');if(B.width!=null){G.push(' style="width:'+B.width+'px"')}G.push('><div class="'+Ext.baseCSSPrefix+'grid-cell-inner">',J,"</div></td>")}G.push("</tr>")}},getRowBodyContentsFn:function(A){var B=this;return function(C){A.owner=B;return A.applyTemplate(C)}},getAssociatedRecords:function(A){return A[this.association]().getRange()}})