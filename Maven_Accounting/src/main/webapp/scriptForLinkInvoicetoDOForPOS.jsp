<%@page import="java.net.URLEncoder"%>
<%@page import="java.net.URLDecoder"%>
<%@page import="java.net.URLConnection"%>
<%@page import="java.net.URL"%>
<%@ page import="com.krawler.utils.json.base.JSONObject" %>
<%@ page import="com.krawler.utils.json.base.JSONArray" %>
<%@page import="com.krawler.common.util.StringUtil"%>
<%@page contentType="text/html" pageEncoding="UTF-8"%>
<%@page import="java.sql.*"%>
<%@page import="java.util.*"%>
<%@page import="java.io.*"%>
<%@page import="java.util.logging.Level"%>
<%@page import="java.util.logging.Logger"%>


<%
    Connection conn = null;
    try {

        String serverip = request.getParameter("serverip");//"192.168.0.208";                            
        String port = request.getParameter("port");//"3306";
        String dbName = request.getParameter("dbname");//"newstaging";
        String userName = request.getParameter("username");//"krawlersqladmin";
        String password = request.getParameter("password"); //"krawler"
        String filepath = request.getParameter("companyid"); //"krawler"
        String start = request.getParameter("start"); //"krawler"
        String limit = request.getParameter("limit"); //"krawler"
        String driver = "com.mysql.jdbc.Driver";
        String connectString = "jdbc:mysql://" + serverip + ":" + port + "/" + dbName;
        String url = "jdbc:mysql@" + serverip + ":" + port + "/";
        Class.forName(driver).newInstance();
        conn = DriverManager.getConnection(connectString, userName, password);
        System.out.print(url + dbName + userName + password);
        double qtytoUpdate=0;
        int cnt = 0;
        String record = "", currencyid = "";
        

        String companyId ="40b8693c-3bd3-45f3-8566-304317b42747";    //companyid for arklifedpl
        String locationId ="3e27b19b-2845-457a-9cc0-6752dfd257d7";    //default location for arklifedpl
        
        String query1 = "select id,memo,donumber from deliveryorder where company =? and isfrompos=1 and isautogenerateddo='F' "; 
        if(!StringUtil.isNullOrEmpty(start) && !StringUtil.isNullOrEmpty(limit) ){
           query1+=" limit ?,?"; 
        }
        PreparedStatement stmt1 = conn.prepareStatement(query1);
        stmt1.setObject(1, companyId);
         if(!StringUtil.isNullOrEmpty(start) && !StringUtil.isNullOrEmpty(limit) ){
             stmt1.setInt(2, Integer.parseInt(start));
             stmt1.setInt(3, Integer.parseInt(limit));
         }
        ResultSet rs = stmt1.executeQuery();
       // JSONArray jArr=new JSONArray();
        while (rs.next()) {
           //JSONObject j1=new JSONObject();
           String doId=rs.getString("id");
          String donum= rs.getString("donumber");
           //jArr.put(j1);
           
         String storeId="";   
        String storename=rs.getString("memo");
        String storeAbber=storename.substring(0,storename.indexOf("-"));
        String squery3 = " select id from in_storemaster where abbrev =? and company =?"; 
        PreparedStatement stmts3 = conn.prepareStatement(squery3);
        stmts3.setObject(1, storeAbber);
        stmts3.setObject(2, companyId);
        ResultSet rss2 = stmts3.executeQuery();
        if(rss2.next()){
            storeId=rss2.getString("id");
        }
           
        String myquery3 = "select id,product,baseuomdeliveredquantity from dodetails where deliveryorder =? and company = ? ";
        PreparedStatement stmt3 = conn.prepareStatement(myquery3);
        stmt3.setObject(1, doId);
        stmt3.setObject(2, companyId);
        ResultSet rs2 = stmt3.executeQuery();
        String docids="",productids="";
        while(rs2.next()){
            String dodId=rs2.getString("id");
             docids += "'" + dodId + "',";
            String productId=rs2.getString("product");
             qtytoUpdate=Double.parseDouble(rs2.getString("baseuomdeliveredquantity"));
             
                String querySMid = "select id from in_stockmovement where company=? and modulerefid=?";
                PreparedStatement stmtsm = conn.prepareStatement(querySMid);
                stmtsm.setObject(1, companyId);
                stmtsm.setObject(2, doId);

                ResultSet rssm = stmtsm.executeQuery();
                String stmId = "";
                if (rssm.next()) {
                    stmId = rssm.getString("id");
                    String queryForSMDupdate = "delete from in_sm_detail where stockmovement=?";
                    PreparedStatement stmtforSMDUpdate = conn.prepareStatement(queryForSMDupdate);
                    stmtforSMDUpdate.setString(1, stmId);
                    stmtforSMDUpdate.executeUpdate();
                    String queryForupdate = "delete from in_stockmovement  where id=? and company=? ";
                    PreparedStatement stmtforUpdate = conn.prepareStatement(queryForupdate);
                    stmtforUpdate.setString(1, stmId);
                    stmtforUpdate.setString(2, companyId);
                    stmtforUpdate.executeUpdate();
            
        }
        String queryStockid = "select id from in_stock where company=? and product= ?  and store=? and location=? ";
                PreparedStatement stmtstock = conn.prepareStatement(queryStockid);
                stmtstock.setObject(1, companyId);
                stmtstock.setObject(2, productId);
                stmtstock.setObject(3, storeId);
                stmtstock.setObject(4, locationId);
                ResultSet rsstock = stmtstock.executeQuery();
                String stockId = "";
                if (rsstock.next()) {
                    stockId = rsstock.getString("id");
                    String queryForupdate = "update in_stock set quantity=quantity+? where id=? and company=? ";
                    PreparedStatement stmtforUpdate = conn.prepareStatement(queryForupdate);
                    stmtforUpdate.setDouble(1, qtytoUpdate);
                    stmtforUpdate.setString(2, stockId);
                    stmtforUpdate.setString(3, companyId);
                    stmtforUpdate.executeUpdate();
                }
                
              
                    String queryForupdatepaq = "update product set availablequantity=availablequantity+? where id=? and company=? ";
                    PreparedStatement stmtforUpdatepaq = conn.prepareStatement(queryForupdatepaq);
                    stmtforUpdatepaq.setDouble(1, qtytoUpdate);
                    stmtforUpdatepaq.setString(2, productId);
                    stmtforUpdatepaq.setString(3, companyId);
                    stmtforUpdatepaq.executeUpdate(); 
                
     }                    
        if (!StringUtil.isNullOrEmpty(docids)) {
            docids = docids.substring(0, docids.length() - 1);
        }
        
        if (!StringUtil.isNullOrEmpty(docids)) {
            String myquery4 = " select batchmapid,id,quantity from locationbatchdocumentmapping where documentid in (" + docids + ") and isconsignment='F'";
             PreparedStatement stmt4 = conn.prepareStatement(myquery4);
        ResultSet rs4 = stmt4.executeQuery();
       
        while(rs4.next()){
             qtytoUpdate=Double.parseDouble(rs4.getString("quantity"));
             String myquery5 = " update  newproductbatch set quantity=quantity+?,quantitydue=quantitydue+?  where id= ?";
             PreparedStatement stmt5 = conn.prepareStatement(myquery5);
             stmt5.setObject(1, qtytoUpdate);
             stmt5.setObject(2, qtytoUpdate);
             stmt5.setObject(3, rs4.getString("batchmapid"));
             stmt5.executeUpdate();
        }
        String delQuerypb = "delete  from locationbatchdocumentmapping where documentid in (" + docids + ") and isconsignment='F' ";
        PreparedStatement stmtdq1 = conn.prepareStatement(delQuerypb);
         stmtdq1.executeUpdate();
        String delQuerypb2 = "delete from dodetails where deliveryorder =?";
        PreparedStatement stmtdq2 = conn.prepareStatement(delQuerypb2);
        stmtdq2.setObject(1, doId);
         stmtdq2.executeUpdate();
         String updatequery = "delete from inventory  where id in  (" + docids + ")";
                    PreparedStatement stmtquery = conn.prepareStatement(updatequery);
                    stmtquery.executeUpdate();
        String delQuerypb3 = "delete  from deliveryorder where id=? ";
        PreparedStatement stmtdq3 = conn.prepareStatement(delQuerypb3);
        stmtdq3.setObject(1, doId);
         stmtdq3.executeUpdate();
         cnt++;
        }
               }

         out.println("<br>"+cnt+" Do Deleted ");
         out.println("<br> Do linking process start ");
                        
        InputStream iStream = null;
        
        
        
         String compQry = "SELECT  c.currency, ul.username, ul.password,ul.userid FROM company c INNER JOIN users u ON c.creator=u.userid  INNER JOIN userlogin ul ON u.userid=ul.userid where c.subdomain='arklifedpl' and ul.username='admin'";
        out.println("<br><br>Execution Started @ "+new java.util.Date()+"<br><br>");
        PreparedStatement pst1 = conn.prepareStatement(compQry);
        ResultSet rst1 = pst1.executeQuery();
        String username="",pass="",userid="",currency="";
        if (rst1.next()) {
            userid = rst1.getString("userid")!=null ? rst1.getString("userid") : null;
            username = rst1.getString("username")!=null ? rst1.getString("username") : "";
            pass = rst1.getString("password")!=null ? rst1.getString("password") : "";
            
            currency = rst1.getString("currency")!=null ? rst1.getString("currency") : "1";
           

        }
        
         String query2 = "select id,memo,createdon,invoiceNumber from invoice where company =? and isfrompos=1 and memo is not null and isopendo='T'"; 
        PreparedStatement stmt2 = conn.prepareStatement(query2);
        stmt2.setObject(1, companyId);
        ResultSet rs1 = stmt2.executeQuery();
        JSONArray jArr1=new JSONArray();
        while (rs1.next()) {
        String storeId="";   
        String storename=java.net.URLEncoder.encode(rs1.getString("memo"),"UTF-8");
        String invoiceId=rs1.getString("id");
        String createdon=rs1.getString("createdon");
        String invoiceNo=java.net.URLEncoder.encode(rs1.getString("invoiceNumber"),"UTF-8");
        String storeAbber=storename.substring(0,storename.indexOf("-"));
        String query3 = " select id from in_storemaster where abbrev =? and company =?"; 
        PreparedStatement stmt3 = conn.prepareStatement(query3);
        stmt3.setObject(1, storeAbber);
        stmt3.setObject(2, companyId);
        ResultSet rs2 = stmt3.executeQuery();
        if(rs2.next()){
            storeId=rs2.getString("id");
        }
         String myqueryid = "select ivd.id,iv.product,iv.quantity,ivd.rate from invoicedetails ivd inner join inventory iv on (ivd.id=iv.id) where invoice =?  ";
        PreparedStatement stmtid = conn.prepareStatement(myqueryid);
        stmtid.setObject(1, invoiceId);
        
        ResultSet rsid = stmtid.executeQuery();
        JSONArray jArr=new JSONArray();
        while(rsid.next()){
         JSONObject j1=new JSONObject();
         j1.put("productid", rsid.getString("product"));
         j1.put("quantity", rsid.getString("quantity"));
         j1.put("rate", rsid.getString("rate"));
         jArr.put(j1);
        }
        
        //Get Companyid, Subdomain, Userid, Username & Password for Login Verification.
       
       
        
        String uri = request.getRequestURL().toString();
        String servletBase = request.getServletPath();
       // String linkInfo=URLEncoder.encode("Customer Invoice");
        String linkInfo = java.net.URLEncoder.encode("Customer Invoice","UTF-8");
        String requestedURL = uri.substring(0, uri.indexOf(servletBase)) + "/CommonFunctions/linkInvoiceToDOForPOS.do?fromPOS=true&currencyid=6&isIPhone=true&remoteapikey=krawler&incash=true&isAutoCreateDO=true&POSWarehouse="+storename+"&billdate="+ createdon +"&POSwarehouseID="+storeId+"&fromLinkComboAutoDO="+linkInfo; 
        String requestParams = "&companyid="+companyId+"&invoiceid="+invoiceId+"&u="+username+"&p="+pass+"&cdomain=arklifedpl&userid="+userid+"&invoiceno="+invoiceNo;
                    URL u = new URL(requestedURL + requestParams);
                    URLConnection uc = u.openConnection();
                    uc.setDoOutput(true);
        //                uc.setRequestMethod("POST");
                    uc.setRequestProperty("Content-Type", "application/x-www-form-urlencoded");
                    java.io.PrintWriter pw = new java.io.PrintWriter(uc.getOutputStream());
                    pw.print("detail=" + jArr.toString());
                   
                    pw.close();
                    iStream = uc.getInputStream();
                    java.io.BufferedReader in = new java.io.BufferedReader(new java.io.InputStreamReader(iStream));
                    String res = URLDecoder.decode(in.readLine());
                    
                    out.println("<br> delivery order deleted succesfully " +res);
                    out.println("<br> now we create new do linked with  for all existing invoices which is generated from POS succesfully " +res);
         
                    
                    out.println("<br> Do linked for invoice succesfully " +res);
        }               
       


            
            
        

        int count = cnt;
        //StringBuilder result = new StringBuilder("" + count).append(" Records deleted successfully.");
        out.println("All Process executed succesfully");
    } catch (Exception e) {
        e.printStackTrace();
        out.println(e.getMessage());

    } finally {
        conn.close();
    }

%>
