/*
 * Copyright (C) 2012  Krawler Information Systems Pvt Ltd
 * All rights reserved.
 * 
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 */
package com.krawler.common.admin;

import com.krawler.hql.accounting.SequenceFormat;
import java.util.HashMap;
import java.util.Map;
import java.util.Set;

/**
 *
 * @author krawler
 */
public class FieldComboData implements Comparable<FieldComboData> {

    private String id;
    private String value;
    private String fieldid;
    private String projectid;
    private String eclaimid;    //related only for eclaim, refer ticket ERP-17187
    private String taskid;
    private String itemdescription;//Description for custom combo value
    private FieldComboData parent;
    private FieldParams field;
    private Integer oldid;
    private int itemsequence;
    private int deleteflag;
    private boolean activatedeactivatedimensionvalue;
    private Set<FieldComboData> children;
    private String salesCommissionSchemaMaster;//com.krawler.spring.accounting.salescommission.SalesCommissionSchemaMaster
    private FieldComboData propagatedfieldcomboID;//This is used to save propagated parent masteritem id 
    private SequenceFormat seqformat;
    private int seqnumber;//Only to store integer part of sequence format
    private boolean autoGenerated;
    private int valueType;  // Used to specify value type i.e. Product Tax Claas having Exempt Value which is nothing but 1
    public static final String TaxClass_Exempted="Exempted";
    public static final String TaxClass_Non_GST_Product="Non GST Product";
    public static final String TaxClass_Percenatge="Percentage";
    public static final String TaxClass_ZeroPercenatge="Product @ 0%";
    public static final String TaxClass_fivePercenatge="Product @ 5%";
    public static final String TaxClass_twelvePercenatge="Product @ 12%";
    public static final String TaxClass_eighteenPercenatge="Product @ 18%";
    public static final String TaxClass_twentyeightPercenatge="Product @ 28%";

    public int getValueType() {
        return valueType;
    }

    public void setValueType(int valueType) {
        this.valueType = valueType;
    }
    public static final Map<String, Integer> ValueTypeMap = new HashMap<String, Integer>();

    static {
        ValueTypeMap.put(TaxClass_Non_GST_Product, 2);   // Its one of the value of Product tax Class Dimension used for India GST
        ValueTypeMap.put(TaxClass_Exempted, 1);   // Its one of the value of Product tax Class Dimension used for India GST
        ValueTypeMap.put(TaxClass_Percenatge, 0);
        ValueTypeMap.put(TaxClass_ZeroPercenatge, 3);
        ValueTypeMap.put(TaxClass_fivePercenatge, 5);
        ValueTypeMap.put(TaxClass_twelvePercenatge, 12);
        ValueTypeMap.put(TaxClass_eighteenPercenatge, 18);
        ValueTypeMap.put(TaxClass_twentyeightPercenatge, 28);
    }
    
    public FieldComboData getPropagatedfieldcomboID() {
        return propagatedfieldcomboID;
    }

    public void setPropagatedfieldcomboID(FieldComboData propagatedfieldcomboID) {
        this.propagatedfieldcomboID = propagatedfieldcomboID;
    }

    
    public Integer getOldid() {
        return oldid;
    }

    public void setOldid(Integer oldid) {
        this.oldid = oldid;
    }

    public int getDeleteflag() {
        return deleteflag;
    }

    public void setDeleteflag(int deleteflag) {
        this.deleteflag = deleteflag;
    }

    public FieldParams getField() {
        return field;
    }

    public void setField(FieldParams field) {
        this.field = field;
    }

    public String getFieldid() {
        return fieldid;
    }

    public void setFieldid(String fieldid) {
        this.fieldid = fieldid;
    }

    public String getProjectid() {
        return projectid;
    }

    public String getTaskid() {
        return taskid;
    }

    public void setTaskid(String taskid) {
        this.taskid = taskid;
    }

    public void setProjectid(String projectid) {
        this.projectid = projectid;
    }

    public String getId() {
        return id;
    }

    public void setId(String id) {
        this.id = id;
    }

    public String getValue() {
        return value;
    }

    public void setValue(String value) {
        this.value = value;
    }

    public int getItemsequence() {
        return itemsequence;
    }

    public void setItemsequence(int itemsequence) {
        this.itemsequence = itemsequence;
    }

    public FieldComboData getParent() {
        return parent;
    }

    public void setParent(FieldComboData parent) {
        this.parent = parent;
    }

    public Set<FieldComboData> getChildren() {
        return children;
    }

    public void setChildren(Set<FieldComboData> children) {
        this.children = children;
    }

    public String getItemdescription() {
        if(itemdescription!=null) {
            return itemdescription;
        } else { 
            return "";
        }
    }

    public void setItemdescription(String itemdescription) {
        this.itemdescription = itemdescription;
    }

    public String getEclaimid() {
        return eclaimid;
    }

    public void setEclaimid(String eclaimid) {
        this.eclaimid = eclaimid;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final FieldComboData other = (FieldComboData) obj;
        if ((this.value == null) ? (other.value != null) : !this.value.equals(other.value)) {
            return false;
        }
        return true;
    }

    public boolean isActivatedeactivatedimensionvalue() {
        return activatedeactivatedimensionvalue;
    }

    public void setActivatedeactivatedimensionvalue(boolean activatedeactivatedimensionvalue) {
        this.activatedeactivatedimensionvalue = activatedeactivatedimensionvalue;
    }

    public String getSalesCommissionSchemaMaster() {
        return salesCommissionSchemaMaster;
    }

    public void setSalesCommissionSchemaMaster(String salesCommissionSchemaMaster) {
        this.salesCommissionSchemaMaster = salesCommissionSchemaMaster;
    }

    public SequenceFormat getSeqformat() {
        return seqformat;
    }

    public void setSeqformat(SequenceFormat seqformat) {
        this.seqformat = seqformat;
    }

    public int getSeqnumber() {
        return seqnumber;
    }

    public void setSeqnumber(int seqnumber) {
        this.seqnumber = seqnumber;
    }

    public boolean isAutoGenerated() {
        return autoGenerated;
    }

    public void setAutoGenerated(boolean autoGenerated) {
        this.autoGenerated = autoGenerated;
    }
    
    @Override
    public int hashCode() {
        int hash = 7;
        hash = 59 * hash + (this.value != null ? this.value.hashCode() : 0);
        return hash;
    }

    @Override
    public int compareTo(FieldComboData o) {
        if (this.getItemsequence()!=0) {
            return ((Integer) this.getItemsequence()).compareTo(o.getItemsequence());
        } else {
            return this.getValue().compareToIgnoreCase(o.getValue());
        }
    }
}
