/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.krawler.spring.mrp.labormanagement;

import com.krawler.spring.common.KwlReturnObject;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.Set;
import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;
import static org.junit.Assert.*;
import org.junit.FixMethodOrder;
import org.junit.runner.RunWith;
import org.junit.runners.MethodSorters;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;

/**
 *
 * @author krawler
 */
@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration(locations = "classpath*:config/applicationContextList.xml")
@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class accLabourDAOImplTest {

    private final String SUCCESS = "Success";
    private String labourId;
    private String companyId = "cbe8f7e7-32fa-4c8a-8e08-df7dd5fc255b";
    private String entryNumber = "";

    public accLabourDAOImplTest() {
    }
    @Autowired
    private accLabourDAO instance;

    @BeforeClass
    public static void setUpClass() {
    }

    @AfterClass
    public static void tearDownClass() {
    }

    @Before
    public void setUp() {
    }

    @After
    public void tearDown() {
    }

    @Test
    public void test1AddLabour() throws Exception {
        System.out.println("addLabour");
        HashMap<String, Object> requestParams = new HashMap<String, Object>();
        requestParams.put("empcode", "101");
        requestParams.put("fname", "abc");
        requestParams.put("lname", "xyz");
        requestParams.put("dob", new Date());
        requestParams.put("nationality", "Indian");
        requestParams.put("countryorigin", "Ind");
        requestParams.put("residentstatus", "a");
        requestParams.put("race", "b");
        requestParams.put("religion", "hindu");
        requestParams.put("company", companyId);
        requestParams.put("autogenerated", true);

        KwlReturnObject expResult = null;
        KwlReturnObject result = instance.addLabour(requestParams);
        Labour labour = (Labour) result.getEntityList().get(0);
        labourId = labour.getID();
        entryNumber = labour.getEmpcode();
        if (result != null && result.getEntityList() != null) {
            assertEquals(SUCCESS, SUCCESS);
        } else {
            fail("The object returned is null");
        }
    }

    @Test
    public void test2GetLabourWCMapping() throws Exception {
        System.out.println("getLabourWCMapping");
        HashMap<String, Object> requestParams = new HashMap<String, Object>();
        requestParams.put("company", companyId);
        requestParams.put("labourId", labourId);
        Set<LabourWorkCentreMapping> expResult = null;
        Set<LabourWorkCentreMapping> result = instance.getLabourWCMapping(requestParams);
        if (result != null) {
            assertEquals(SUCCESS, SUCCESS);
        } else {
            fail("The object returned is null");
        }
    }

    @Test
    public void test3GetLabour() throws Exception {
        System.out.println("getLabour");
        HashMap<String, Object> requestParams = new HashMap<String, Object>();
        requestParams.put("companyId", companyId);
        KwlReturnObject expResult = null;
        KwlReturnObject result = instance.getLabour(requestParams);
        if (result != null && result.getEntityList() != null) {
            assertEquals(SUCCESS, SUCCESS);
        } else {
            fail("The object returned is null");
        }
    }

    @Test
    public void testDeleteLabour() throws Exception {
        System.out.println("deleteLabour");
        HashMap<String, Object> requestParams = new HashMap<String, Object>();
        requestParams.put("companyId", companyId);
        requestParams.put("billId", labourId);
        KwlReturnObject expResult = null;
//        KwlReturnObject result = instance.deleteLabour(requestParams);
//        if (result != null) {
//            assertEquals(result.getMsg(), SUCCESS);
//        } else {
//            fail("The object returned is null");
//        }
    }

    @Test
    public void test4GetLabourNumberCount() throws Exception {
        System.out.println("getLabourNumberCount");
        HashMap<String, Object> requestParams = new HashMap<String, Object>();
        requestParams.put("entryNumber", entryNumber);
        requestParams.put("companyId", companyId);
        KwlReturnObject expResult = null;
        KwlReturnObject result = instance.getLabourNumberCount(requestParams);
        if (result != null && result.getEntityList() != null) {
            assertEquals(SUCCESS, SUCCESS);
        } else {
            fail("The object returned is null");
        }
    }

    @Test
    public void test5GetLabourCombo() throws Exception {
        System.out.println("getLabourCombo");
        HashMap<String, Object> requestParams = new HashMap<String, Object>();
        requestParams.put("companyId", companyId);
        KwlReturnObject expResult = null;
        KwlReturnObject result = instance.getLabourCombo(requestParams);
        if (result != null && result.getEntityList() != null) {
            assertEquals(SUCCESS, SUCCESS);
        } else {
            fail("The object returned is null");
        }
    }

}
